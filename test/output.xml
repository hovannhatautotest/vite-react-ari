<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.11.4 on win32)" generated="20230801 21:43:01.040" rpa="false" schemaversion="4">
<suite id="s1" name="Test" source="C:\Users\nhats\OneDrive\Desktop\ARI\vite-react-ari\test\testcases\test.robot">
<test id="s1-t1" name="EDU-18 Verify that error message display when edit user with team has been deleted &amp; &quot;Lưu lại&quot; button" line="8">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 21:43:05.463" endtime="20230801 21:43:05.487"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 21:43:05.489" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\test\\browser\\traces\\56a3981f-7fa2-4f81-a0ed-3f7dbf3e700b"}</msg>
<msg timestamp="20230801 21:43:07.140" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\test\\browser\\traces\\56a3981f-7fa2-4f81-a0ed-3f7dbf3e700b"}</msg>
<status status="PASS" starttime="20230801 21:43:05.488" endtime="20230801 21:43:07.140"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 21:43:09.243" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 21:43:09.243" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 21:43:07.140" endtime="20230801 21:43:09.243"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 21:43:09.245" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 21:43:09.245" endtime="20230801 21:43:09.245"/>
</kw>
<status status="PASS" starttime="20230801 21:43:05.463" endtime="20230801 21:43:09.245"/>
</kw>
<kw name="Go to page edit user with the &quot;Manager&quot; role" library="common" sourcename="Go to page ${name} user with the &quot;${role}&quot; role">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:43:09.245" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 21:43:09.245" endtime="20230801 21:43:09.245"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:43:09.245" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 21:43:09.245" endtime="20230801 21:43:09.245"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:43:09.245" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 21:43:09.245" endtime="20230801 21:43:09.245"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:43:09.259" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:43:09.260" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 21:43:09.245" endtime="20230801 21:43:09.260"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:43:09.262" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 21:43:09.261" endtime="20230801 21:43:09.262"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:43:09.263" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:43:09.264" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 21:43:09.263" endtime="20230801 21:43:09.264"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.266" endtime="20230801 21:43:09.266"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.267" endtime="20230801 21:43:09.267"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:09.265" endtime="20230801 21:43:09.267"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.269" endtime="20230801 21:43:09.269"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.270" endtime="20230801 21:43:09.270"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.271" endtime="20230801 21:43:09.271"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:09.268" endtime="20230801 21:43:09.271"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.272" endtime="20230801 21:43:09.273"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.273" endtime="20230801 21:43:09.274"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:09.272" endtime="20230801 21:43:09.274"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.276" endtime="20230801 21:43:09.277"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.282" endtime="20230801 21:43:09.282"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:09.275" endtime="20230801 21:43:09.283"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.284" endtime="20230801 21:43:09.285"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.285" endtime="20230801 21:43:09.285"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:09.283" endtime="20230801 21:43:09.286"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.287" endtime="20230801 21:43:09.288"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.288" endtime="20230801 21:43:09.289"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:09.286" endtime="20230801 21:43:09.289"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.290" endtime="20230801 21:43:09.291"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.291" endtime="20230801 21:43:09.291"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:09.289" endtime="20230801 21:43:09.292"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.294" endtime="20230801 21:43:09.295"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:09.293" endtime="20230801 21:43:09.296"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 21:43:09.297" endtime="20230801 21:43:09.297"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:09.296" endtime="20230801 21:43:09.297"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.299" endtime="20230801 21:43:09.299"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.300" endtime="20230801 21:43:09.300"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:09.298" endtime="20230801 21:43:09.300"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.301" endtime="20230801 21:43:09.302"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:09.300" endtime="20230801 21:43:09.302"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.303" endtime="20230801 21:43:09.303"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:09.302" endtime="20230801 21:43:09.304"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.305" endtime="20230801 21:43:09.305"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:09.304" endtime="20230801 21:43:09.306"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:43:09.306" endtime="20230801 21:43:09.307"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:09.306" endtime="20230801 21:43:09.307"/>
</branch>
<status status="PASS" starttime="20230801 21:43:09.264" endtime="20230801 21:43:09.307"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:43:09.309" level="INFO">Length is 19</msg>
<msg timestamp="20230801 21:43:09.310" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 21:43:09.308" endtime="20230801 21:43:09.310"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 21:43:09.315" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 21:43:09.313" endtime="20230801 21:43:09.315"/>
</kw>
<status status="PASS" starttime="20230801 21:43:09.312" endtime="20230801 21:43:09.315"/>
</branch>
<status status="PASS" starttime="20230801 21:43:09.311" endtime="20230801 21:43:09.316"/>
</if>
<msg timestamp="20230801 21:43:09.316" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 21:43:09.245" endtime="20230801 21:43:09.316"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 21:43:09.319" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 21:43:09.317" endtime="20230801 21:43:09.319"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:43:09.321" endtime="20230801 21:43:11.357"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 21:43:11.358" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230801 21:43:11.357" endtime="20230801 21:43:11.434"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:43:11.434" level="INFO">Length is 19</msg>
<msg timestamp="20230801 21:43:11.434" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 21:43:11.434" endtime="20230801 21:43:11.434"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 21:43:11.434" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 21:43:11.434" endtime="20230801 21:43:11.434"/>
</kw>
<status status="PASS" starttime="20230801 21:43:11.434" endtime="20230801 21:43:11.434"/>
</branch>
<status status="PASS" starttime="20230801 21:43:11.434" endtime="20230801 21:43:11.434"/>
</if>
<status status="PASS" starttime="20230801 21:43:09.245" endtime="20230801 21:43:11.434"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:43:11.445" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 21:43:11.445" endtime="20230801 21:43:11.445"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:43:11.445" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 21:43:11.445" endtime="20230801 21:43:11.445"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:43:11.445" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 21:43:11.445" endtime="20230801 21:43:11.445"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:43:11.445" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:43:11.445" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 21:43:11.445" endtime="20230801 21:43:11.445"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:43:11.445" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 21:43:11.445" endtime="20230801 21:43:11.445"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:43:11.445" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:43:11.445" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 21:43:11.445" endtime="20230801 21:43:11.445"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.445" endtime="20230801 21:43:11.445"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.445" endtime="20230801 21:43:11.445"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:11.445" endtime="20230801 21:43:11.445"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.445" endtime="20230801 21:43:11.445"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.445" endtime="20230801 21:43:11.445"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.445" endtime="20230801 21:43:11.461"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:11.445" endtime="20230801 21:43:11.461"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.461" endtime="20230801 21:43:11.461"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.461" endtime="20230801 21:43:11.461"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:11.461" endtime="20230801 21:43:11.461"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.461" endtime="20230801 21:43:11.461"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.461" endtime="20230801 21:43:11.461"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:11.461" endtime="20230801 21:43:11.461"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.461" endtime="20230801 21:43:11.461"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.461" endtime="20230801 21:43:11.461"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:11.461" endtime="20230801 21:43:11.461"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.461" endtime="20230801 21:43:11.461"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.461" endtime="20230801 21:43:11.461"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:11.461" endtime="20230801 21:43:11.461"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.461" endtime="20230801 21:43:11.461"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.461" endtime="20230801 21:43:11.461"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:11.461" endtime="20230801 21:43:11.461"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.461" endtime="20230801 21:43:11.461"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:11.461" endtime="20230801 21:43:11.461"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 21:43:11.476" endtime="20230801 21:43:11.476"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:11.461" endtime="20230801 21:43:11.476"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.476" endtime="20230801 21:43:11.476"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.476" endtime="20230801 21:43:11.476"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:11.476" endtime="20230801 21:43:11.476"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.476" endtime="20230801 21:43:11.476"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:11.476" endtime="20230801 21:43:11.476"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.476" endtime="20230801 21:43:11.476"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:11.476" endtime="20230801 21:43:11.476"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.476" endtime="20230801 21:43:11.476"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:11.476" endtime="20230801 21:43:11.476"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:43:11.476" endtime="20230801 21:43:11.476"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:11.476" endtime="20230801 21:43:11.476"/>
</branch>
<status status="PASS" starttime="20230801 21:43:11.445" endtime="20230801 21:43:11.476"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:43:11.476" level="INFO">Length is 13</msg>
<msg timestamp="20230801 21:43:11.476" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 21:43:11.476" endtime="20230801 21:43:11.476"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 21:43:11.476" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 21:43:11.476" endtime="20230801 21:43:11.476"/>
</kw>
<status status="PASS" starttime="20230801 21:43:11.476" endtime="20230801 21:43:11.476"/>
</branch>
<status status="PASS" starttime="20230801 21:43:11.476" endtime="20230801 21:43:11.476"/>
</if>
<msg timestamp="20230801 21:43:11.476" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 21:43:11.445" endtime="20230801 21:43:11.476"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 21:43:11.476" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 21:43:11.476" endtime="20230801 21:43:11.492"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:43:11.492" endtime="20230801 21:43:11.638"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 21:43:11.640" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230801 21:43:11.639" endtime="20230801 21:43:11.799"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:43:11.801" level="INFO">Length is 13</msg>
<msg timestamp="20230801 21:43:11.801" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 21:43:11.801" endtime="20230801 21:43:11.802"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 21:43:11.805" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 21:43:11.803" endtime="20230801 21:43:11.805"/>
</kw>
<status status="PASS" starttime="20230801 21:43:11.802" endtime="20230801 21:43:11.805"/>
</branch>
<status status="PASS" starttime="20230801 21:43:11.802" endtime="20230801 21:43:11.805"/>
</if>
<status status="PASS" starttime="20230801 21:43:11.445" endtime="20230801 21:43:11.805"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:43:11.810" endtime="20230801 21:43:12.148"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:43:12.150" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 21:43:12.149" endtime="20230801 21:43:12.150"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:43:12.203" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:43:12.150" endtime="20230801 21:43:12.203"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 21:43:12.203" endtime="20230801 21:43:12.203"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 21:43:12.203" endtime="20230801 21:43:12.203"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:12.203" endtime="20230801 21:43:12.203"/>
</branch>
<status status="PASS" starttime="20230801 21:43:12.203" endtime="20230801 21:43:12.203"/>
</if>
<status status="PASS" starttime="20230801 21:43:12.148" endtime="20230801 21:43:12.203"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 21:43:12.203" endtime="20230801 21:43:12.316"/>
</kw>
<status status="PASS" starttime="20230801 21:43:11.805" endtime="20230801 21:43:12.317"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:43:12.320" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 21:43:12.319" endtime="20230801 21:43:12.320"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:43:12.321" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:43:12.321" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 21:43:12.320" endtime="20230801 21:43:12.321"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 21:43:12.323" endtime="20230801 21:43:12.324"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:12.322" endtime="20230801 21:43:12.324"/>
</branch>
<status status="PASS" starttime="20230801 21:43:12.322" endtime="20230801 21:43:12.326"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 21:43:14.498" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 21:43:12.326" endtime="20230801 21:43:14.498"/>
</kw>
<status status="PASS" starttime="20230801 21:43:12.326" endtime="20230801 21:43:14.498"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:43:14.498" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 21:43:14.498" endtime="20230801 21:43:14.498"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:43:15.014" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 21:43:15.014" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/test/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 21:43:15.014" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 21:43:14.498" endtime="20230801 21:43:15.024"/>
</kw>
<status status="FAIL" starttime="20230801 21:43:14.498" endtime="20230801 21:43:15.025"/>
</kw>
<msg timestamp="20230801 21:43:15.026" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 21:43:14.498" endtime="20230801 21:43:15.026"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 21:43:15.027" endtime="20230801 21:43:15.028"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:15.027" endtime="20230801 21:43:15.028"/>
</branch>
<status status="PASS" starttime="20230801 21:43:15.026" endtime="20230801 21:43:15.028"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:43:17.443" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 21:43:15.031" endtime="20230801 21:43:17.443"/>
</kw>
<status status="PASS" starttime="20230801 21:43:15.029" endtime="20230801 21:43:17.443"/>
</kw>
<status status="PASS" starttime="20230801 21:43:12.317" endtime="20230801 21:43:17.443"/>
</kw>
<status status="PASS" starttime="20230801 21:43:09.245" endtime="20230801 21:43:17.443"/>
</kw>
<kw name="When Click &quot;Người Dùng&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:43:17.458" endtime="20230801 21:43:17.644"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:43:17.644" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:43:17.644" endtime="20230801 21:43:17.644"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:43:17.676" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 21:43:17.644" endtime="20230801 21:43:17.676"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:43:18.285" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 21:43:17.676" endtime="20230801 21:43:18.285"/>
</kw>
<status status="PASS" starttime="20230801 21:43:17.676" endtime="20230801 21:43:18.285"/>
</kw>
<status status="PASS" starttime="20230801 21:43:17.676" endtime="20230801 21:43:18.291"/>
</branch>
<status status="PASS" starttime="20230801 21:43:17.676" endtime="20230801 21:43:18.292"/>
</if>
<status status="PASS" starttime="20230801 21:43:17.644" endtime="20230801 21:43:18.292"/>
</kw>
<status status="PASS" starttime="20230801 21:43:17.443" endtime="20230801 21:43:18.293"/>
</kw>
<if>
<branch type="IF" condition="'${role}' == 'Staff'">
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20230801 21:43:18.296" endtime="20230801 21:43:18.296"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:18.294" endtime="20230801 21:43:18.296"/>
</branch>
<branch type="ELSE IF" condition="'${role}' != 'Staff'">
<kw name="Click list Role with &quot;${role}&quot;" library="common" sourcename="Click list ${name} with &quot;${text}&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//div[contains(@class, 'truncate') and text()='${text}']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:43:18.299" level="INFO">${element} = xpath=//div[contains(@class, 'truncate') and text()='Manager']</msg>
<status status="PASS" starttime="20230801 21:43:18.298" endtime="20230801 21:43:18.299"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:43:20.085" level="INFO">Waited for Element with selector xpath=//div[contains(@class, 'truncate') and text()='Manager'] at state visible</msg>
<status status="PASS" starttime="20230801 21:43:18.303" endtime="20230801 21:43:20.085"/>
</kw>
<status status="PASS" starttime="20230801 21:43:18.300" endtime="20230801 21:43:20.092"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:43:20.093" endtime="20230801 21:43:20.289"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:43:20.292" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:43:20.291" endtime="20230801 21:43:20.292"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:43:20.369" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 21:43:20.292" endtime="20230801 21:43:20.369"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:43:21.763" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 21:43:20.373" endtime="20230801 21:43:21.763"/>
</kw>
<status status="PASS" starttime="20230801 21:43:20.371" endtime="20230801 21:43:21.763"/>
</kw>
<status status="PASS" starttime="20230801 21:43:20.370" endtime="20230801 21:43:21.763"/>
</branch>
<status status="PASS" starttime="20230801 21:43:20.370" endtime="20230801 21:43:21.763"/>
</if>
<status status="PASS" starttime="20230801 21:43:20.289" endtime="20230801 21:43:21.763"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:43:21.763" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:43:21.763" endtime="20230801 21:43:21.763"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:43:21.778" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:43:21.778" endtime="20230801 21:43:21.778"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 21:43:21.778" endtime="20230801 21:43:21.778"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:21.778" endtime="20230801 21:43:21.778"/>
</branch>
<status status="PASS" starttime="20230801 21:43:21.778" endtime="20230801 21:43:21.778"/>
</if>
<status status="PASS" starttime="20230801 21:43:21.763" endtime="20230801 21:43:21.778"/>
</kw>
<status status="PASS" starttime="20230801 21:43:18.297" endtime="20230801 21:43:21.778"/>
</kw>
<status status="PASS" starttime="20230801 21:43:18.296" endtime="20230801 21:43:21.778"/>
</branch>
<status status="PASS" starttime="20230801 21:43:18.293" endtime="20230801 21:43:21.778"/>
</if>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20230801 21:43:21.794" endtime="20230801 21:43:21.794"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:21.794" endtime="20230801 21:43:21.794"/>
</branch>
<status status="PASS" starttime="20230801 21:43:21.794" endtime="20230801 21:43:21.794"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:43:21.794" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:43:21.794" endtime="20230801 21:43:21.794"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:43:21.794" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:43:21.794" endtime="20230801 21:43:21.794"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 21:43:21.809" endtime="20230801 21:43:21.809"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:21.794" endtime="20230801 21:43:21.809"/>
</branch>
<status status="PASS" starttime="20230801 21:43:21.794" endtime="20230801 21:43:21.809"/>
</if>
<status status="PASS" starttime="20230801 21:43:21.794" endtime="20230801 21:43:21.809"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 21:43:21.910" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 21:43:21.809" endtime="20230801 21:43:21.910"/>
</kw>
<status status="PASS" starttime="20230801 21:43:09.245" endtime="20230801 21:43:21.911"/>
</kw>
<kw name="And Select the user &quot;Team has been deleted&quot; to edit" library="common" sourcename="Select the ${text} &quot;${name}&quot; to edit">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:43:21.913" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:43:21.913" endtime="20230801 21:43:21.913"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:43:21.926" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:43:21.913" endtime="20230801 21:43:21.926"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 21:43:21.928" endtime="20230801 21:43:21.928"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:21.927" endtime="20230801 21:43:21.928"/>
</branch>
<status status="PASS" starttime="20230801 21:43:21.926" endtime="20230801 21:43:21.929"/>
</if>
<status status="PASS" starttime="20230801 21:43:21.913" endtime="20230801 21:43:21.929"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 21:43:21.963" level="INFO">Found 3 Locators successfully.</msg>
<msg timestamp="20230801 21:43:21.965" level="INFO">${elements} = ['element=55dbf05a-7bf0-40c5-b13c-4780dbc4c117', 'element=502676c5-58d3-453b-a6ce-d8f1b0c1bdff', 'element=84609652-f1e6-4753-a65b-4dd6bbe87440']</msg>
<status status="PASS" starttime="20230801 21:43:21.929" endtime="20230801 21:43:21.965"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${elementCount}</var>
<arg>${elements}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:43:21.966" level="INFO">Length is 3</msg>
<msg timestamp="20230801 21:43:21.966" level="INFO">${elementCount} = 3</msg>
<status status="PASS" starttime="20230801 21:43:21.965" endtime="20230801 21:43:21.966"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'Team has been deleted'">
<kw name="Evaluate" library="BuiltIn">
<var>${randomIndex}</var>
<arg>${elementCount}-2</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 21:43:21.969" level="INFO">${randomIndex} = 1</msg>
<status status="PASS" starttime="20230801 21:43:21.968" endtime="20230801 21:43:21.969"/>
</kw>
<status status="PASS" starttime="20230801 21:43:21.967" endtime="20230801 21:43:21.969"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'Còn những yêu cầu nghỉ cần duyệt'">
<kw name="Evaluate" library="BuiltIn">
<var>${randomIndex}</var>
<arg>${elementCount}-3</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230801 21:43:21.970" endtime="20230801 21:43:21.970"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:21.970" endtime="20230801 21:43:21.970"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='valid'">
<kw name="Evaluate" library="BuiltIn">
<var>${randomIndex}</var>
<arg>${elementCount}-${elementCount}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230801 21:43:21.970" endtime="20230801 21:43:21.970"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:21.970" endtime="20230801 21:43:21.970"/>
</branch>
<status status="PASS" starttime="20230801 21:43:21.967" endtime="20230801 21:43:21.970"/>
</if>
<kw name="Click" library="Browser">
<arg>${elements}[${randomIndex}]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:43:21.975" endtime="20230801 21:43:22.159"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:43:22.159" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:43:22.159" endtime="20230801 21:43:22.159"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:43:22.177" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 21:43:22.159" endtime="20230801 21:43:22.177"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:43:22.686" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 21:43:22.177" endtime="20230801 21:43:22.686"/>
</kw>
<status status="PASS" starttime="20230801 21:43:22.177" endtime="20230801 21:43:22.687"/>
</kw>
<status status="PASS" starttime="20230801 21:43:22.177" endtime="20230801 21:43:22.687"/>
</branch>
<status status="PASS" starttime="20230801 21:43:22.177" endtime="20230801 21:43:22.687"/>
</if>
<status status="PASS" starttime="20230801 21:43:22.159" endtime="20230801 21:43:22.688"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:43:22.688" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:43:22.688" endtime="20230801 21:43:22.688"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:43:22.756" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 21:43:22.688" endtime="20230801 21:43:22.756"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:43:23.882" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 21:43:22.756" endtime="20230801 21:43:23.882"/>
</kw>
<status status="PASS" starttime="20230801 21:43:22.756" endtime="20230801 21:43:23.882"/>
</kw>
<status status="PASS" starttime="20230801 21:43:22.756" endtime="20230801 21:43:23.882"/>
</branch>
<status status="PASS" starttime="20230801 21:43:22.756" endtime="20230801 21:43:23.882"/>
</if>
<status status="PASS" starttime="20230801 21:43:22.688" endtime="20230801 21:43:23.882"/>
</kw>
<status status="PASS" starttime="20230801 21:43:21.913" endtime="20230801 21:43:23.882"/>
</kw>
<kw name="And Enter &quot;leave date valid&quot; in &quot;Ngày nghỉ&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:43:23.882" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 21:43:23.882" endtime="20230801 21:43:23.882"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:43:23.897" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 21:43:23.882" endtime="20230801 21:43:23.897"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:43:23.897" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 21:43:23.897" endtime="20230801 21:43:23.897"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:43:23.897" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:43:23.897" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 21:43:23.897" endtime="20230801 21:43:23.897"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:43:23.897" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 21:43:23.897" endtime="20230801 21:43:23.897"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:43:23.897" level="INFO">Length is 1</msg>
<msg timestamp="20230801 21:43:23.897" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 21:43:23.897" endtime="20230801 21:43:23.897"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:43:23.897" endtime="20230801 21:43:23.897"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:43:23.897" endtime="20230801 21:43:23.897"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:23.897" endtime="20230801 21:43:23.897"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:43:23.897" endtime="20230801 21:43:23.897"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:23.897" endtime="20230801 21:43:23.897"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:43:23.897" endtime="20230801 21:43:23.897"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:23.897" endtime="20230801 21:43:23.897"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:23.897" endtime="20230801 21:43:23.897"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:23.913" endtime="20230801 21:43:23.913"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:23.897" endtime="20230801 21:43:23.913"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:23.913" endtime="20230801 21:43:23.915"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:23.915" endtime="20230801 21:43:23.915"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:23.913" endtime="20230801 21:43:23.916"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20230801 21:43:23.918" level="INFO">${new_text} = 12</msg>
<status status="PASS" starttime="20230801 21:43:23.917" endtime="20230801 21:43:23.918"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230801 21:43:23.919" level="INFO">${new_text} = 12</msg>
<status status="PASS" starttime="20230801 21:43:23.918" endtime="20230801 21:43:23.919"/>
</kw>
<status status="PASS" starttime="20230801 21:43:23.916" endtime="20230801 21:43:23.919"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:23.920" endtime="20230801 21:43:23.920"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:23.921" endtime="20230801 21:43:23.921"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:23.920" endtime="20230801 21:43:23.921"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:23.922" endtime="20230801 21:43:23.922"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:23.923" endtime="20230801 21:43:23.923"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:23.921" endtime="20230801 21:43:23.923"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 21:43:23.924" endtime="20230801 21:43:23.924"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:23.923" endtime="20230801 21:43:23.925"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 21:43:23.925" endtime="20230801 21:43:23.926"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:23.925" endtime="20230801 21:43:23.926"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:23.927" endtime="20230801 21:43:23.928"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:23.929" endtime="20230801 21:43:23.929"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:23.926" endtime="20230801 21:43:23.930"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 21:43:23.930" endtime="20230801 21:43:23.931"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:23.930" endtime="20230801 21:43:23.931"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 21:43:23.932" endtime="20230801 21:43:23.932"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:23.931" endtime="20230801 21:43:23.933"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:43:23.934" endtime="20230801 21:43:23.934"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:23.933" endtime="20230801 21:43:23.934"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:43:23.935" endtime="20230801 21:43:23.935"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:23.935" endtime="20230801 21:43:23.936"/>
</branch>
<status status="PASS" starttime="20230801 21:43:23.897" endtime="20230801 21:43:23.936"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:43:23.937" level="INFO">Length is 8</msg>
<msg timestamp="20230801 21:43:23.938" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 21:43:23.937" endtime="20230801 21:43:23.938"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 21:43:23.940" level="INFO">${text} = 12</msg>
<status status="PASS" starttime="20230801 21:43:23.939" endtime="20230801 21:43:23.941"/>
</kw>
<status status="PASS" starttime="20230801 21:43:23.938" endtime="20230801 21:43:23.941"/>
</branch>
<status status="PASS" starttime="20230801 21:43:23.938" endtime="20230801 21:43:23.941"/>
</if>
<msg timestamp="20230801 21:43:23.942" level="INFO">${text} = 12</msg>
<status status="PASS" starttime="20230801 21:43:23.882" endtime="20230801 21:43:23.942"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 21:43:23.945" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ngày nghỉ"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 21:43:23.942" endtime="20230801 21:43:23.945"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:43:23.946" endtime="20230801 21:43:24.001"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 21:43:24.001" level="INFO">Fills the text '12' in the given field.</msg>
<status status="PASS" starttime="20230801 21:43:24.001" endtime="20230801 21:43:24.053"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:43:24.058" level="INFO">Length is 2</msg>
<msg timestamp="20230801 21:43:24.058" level="INFO">${cnt} = 2</msg>
<status status="PASS" starttime="20230801 21:43:24.053" endtime="20230801 21:43:24.058"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 21:43:24.062" level="INFO">${STATE["Ngày nghỉ"]} = 12</msg>
<status status="PASS" starttime="20230801 21:43:24.060" endtime="20230801 21:43:24.062"/>
</kw>
<status status="PASS" starttime="20230801 21:43:24.059" endtime="20230801 21:43:24.063"/>
</branch>
<status status="PASS" starttime="20230801 21:43:24.059" endtime="20230801 21:43:24.063"/>
</if>
<status status="PASS" starttime="20230801 21:43:23.882" endtime="20230801 21:43:24.063"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:43:24.065" endtime="20230801 21:43:24.726"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:43:24.728" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 21:43:24.727" endtime="20230801 21:43:24.728"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:43:24.774" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:43:24.729" endtime="20230801 21:43:24.774"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 21:43:24.778" endtime="20230801 21:43:24.779"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 21:43:24.780" endtime="20230801 21:43:24.781"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:24.775" endtime="20230801 21:43:24.781"/>
</branch>
<status status="PASS" starttime="20230801 21:43:24.775" endtime="20230801 21:43:24.781"/>
</if>
<status status="PASS" starttime="20230801 21:43:24.726" endtime="20230801 21:43:24.782"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 21:43:24.782" endtime="20230801 21:43:24.865"/>
</kw>
<status status="PASS" starttime="20230801 21:43:24.064" endtime="20230801 21:43:24.865"/>
</kw>
<kw name="Then User look message &quot;Internal server error&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:43:24.865" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 21:43:24.865" endtime="20230801 21:43:24.865"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:43:24.865" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:43:24.865" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 21:43:24.865" endtime="20230801 21:43:24.865"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 21:43:24.880" endtime="20230801 21:43:24.880"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:24.865" endtime="20230801 21:43:24.880"/>
</branch>
<status status="PASS" starttime="20230801 21:43:24.865" endtime="20230801 21:43:24.880"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 21:43:27.274" level="INFO">Text: 'Internal server error'</msg>
<status status="PASS" starttime="20230801 21:43:24.888" endtime="20230801 21:43:27.274"/>
</kw>
<status status="PASS" starttime="20230801 21:43:24.880" endtime="20230801 21:43:27.274"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:43:27.288" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 21:43:27.274" endtime="20230801 21:43:27.288"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:43:27.862" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 21:43:27.862" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/test/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 21:43:27.863" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 21:43:27.294" endtime="20230801 21:43:27.866"/>
</kw>
<status status="FAIL" starttime="20230801 21:43:27.291" endtime="20230801 21:43:27.867"/>
</kw>
<msg timestamp="20230801 21:43:27.867" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 21:43:27.288" endtime="20230801 21:43:27.867"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 21:43:27.869" endtime="20230801 21:43:27.869"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:27.868" endtime="20230801 21:43:27.870"/>
</branch>
<status status="PASS" starttime="20230801 21:43:27.868" endtime="20230801 21:43:27.870"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:43:33.436" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 21:43:27.873" endtime="20230801 21:43:33.436"/>
</kw>
<status status="PASS" starttime="20230801 21:43:27.870" endtime="20230801 21:43:33.436"/>
</kw>
<status status="PASS" starttime="20230801 21:43:24.865" endtime="20230801 21:43:33.436"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 21:43:53.299" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 21:43:33.452" endtime="20230801 21:43:53.300"/>
</kw>
<status status="PASS" starttime="20230801 21:43:33.436" endtime="20230801 21:43:53.300"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230801 21:43:05.448" endtime="20230801 21:43:53.308"/>
</test>
<test id="s1-t2" name="EDU-19 Verify that error message display when edit user with team has been deleted &amp; &quot;Lưu và tạo mới&quot; button" line="16">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 21:43:53.433" endtime="20230801 21:43:53.434"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 21:43:53.436" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\test\\browser\\traces\\77b35f6a-a1f9-42b9-b719-b6042634cdf3"}</msg>
<msg timestamp="20230801 21:43:55.510" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\test\\browser\\traces\\77b35f6a-a1f9-42b9-b719-b6042634cdf3"}</msg>
<status status="PASS" starttime="20230801 21:43:53.435" endtime="20230801 21:43:55.510"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 21:43:57.801" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 21:43:57.802" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 21:43:55.510" endtime="20230801 21:43:57.802"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 21:43:57.803" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 21:43:57.802" endtime="20230801 21:43:57.803"/>
</kw>
<status status="PASS" starttime="20230801 21:43:53.432" endtime="20230801 21:43:57.804"/>
</kw>
<kw name="Go to page edit user with the &quot;Manager&quot; role" library="common" sourcename="Go to page ${name} user with the &quot;${role}&quot; role">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:43:57.815" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 21:43:57.815" endtime="20230801 21:43:57.815"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:43:57.817" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 21:43:57.816" endtime="20230801 21:43:57.817"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:43:57.818" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 21:43:57.817" endtime="20230801 21:43:57.818"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:43:57.819" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:43:57.819" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 21:43:57.819" endtime="20230801 21:43:57.819"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:43:57.820" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 21:43:57.820" endtime="20230801 21:43:57.821"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:43:57.822" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:43:57.823" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 21:43:57.822" endtime="20230801 21:43:57.823"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.824" endtime="20230801 21:43:57.825"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.825" endtime="20230801 21:43:57.826"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:57.823" endtime="20230801 21:43:57.826"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.827" endtime="20230801 21:43:57.828"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.828" endtime="20230801 21:43:57.829"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.830" endtime="20230801 21:43:57.830"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:57.826" endtime="20230801 21:43:57.830"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.832" endtime="20230801 21:43:57.832"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.833" endtime="20230801 21:43:57.833"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:57.831" endtime="20230801 21:43:57.833"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.834" endtime="20230801 21:43:57.834"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.835" endtime="20230801 21:43:57.835"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:57.833" endtime="20230801 21:43:57.835"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.836" endtime="20230801 21:43:57.836"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.837" endtime="20230801 21:43:57.838"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:57.835" endtime="20230801 21:43:57.838"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.840" endtime="20230801 21:43:57.840"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.843" endtime="20230801 21:43:57.844"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:57.839" endtime="20230801 21:43:57.845"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.847" endtime="20230801 21:43:57.848"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.849" endtime="20230801 21:43:57.849"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:57.845" endtime="20230801 21:43:57.849"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.850" endtime="20230801 21:43:57.850"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:57.849" endtime="20230801 21:43:57.851"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 21:43:57.852" endtime="20230801 21:43:57.852"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:57.851" endtime="20230801 21:43:57.852"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.853" endtime="20230801 21:43:57.854"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.856" endtime="20230801 21:43:57.857"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:57.852" endtime="20230801 21:43:57.858"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.860" endtime="20230801 21:43:57.860"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:57.858" endtime="20230801 21:43:57.861"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.862" endtime="20230801 21:43:57.862"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:57.861" endtime="20230801 21:43:57.863"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.864" endtime="20230801 21:43:57.864"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:57.863" endtime="20230801 21:43:57.864"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:43:57.865" endtime="20230801 21:43:57.865"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:43:57.865" endtime="20230801 21:43:57.866"/>
</branch>
<status status="PASS" starttime="20230801 21:43:57.823" endtime="20230801 21:43:57.866"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:43:57.870" level="INFO">Length is 19</msg>
<msg timestamp="20230801 21:43:57.870" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 21:43:57.866" endtime="20230801 21:43:57.870"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 21:43:57.879" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 21:43:57.876" endtime="20230801 21:43:57.879"/>
</kw>
<status status="PASS" starttime="20230801 21:43:57.874" endtime="20230801 21:43:57.879"/>
</branch>
<status status="PASS" starttime="20230801 21:43:57.874" endtime="20230801 21:43:57.880"/>
</if>
<msg timestamp="20230801 21:43:57.880" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 21:43:57.813" endtime="20230801 21:43:57.880"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 21:43:57.882" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 21:43:57.881" endtime="20230801 21:43:57.882"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:43:57.883" endtime="20230801 21:44:00.400"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 21:44:00.406" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230801 21:44:00.405" endtime="20230801 21:44:00.468"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:00.468" level="INFO">Length is 19</msg>
<msg timestamp="20230801 21:44:00.468" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 21:44:00.468" endtime="20230801 21:44:00.468"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 21:44:00.468" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 21:44:00.468" endtime="20230801 21:44:00.468"/>
</kw>
<status status="PASS" starttime="20230801 21:44:00.468" endtime="20230801 21:44:00.468"/>
</branch>
<status status="PASS" starttime="20230801 21:44:00.468" endtime="20230801 21:44:00.468"/>
</if>
<status status="PASS" starttime="20230801 21:43:57.812" endtime="20230801 21:44:00.468"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:00.468" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 21:44:00.468" endtime="20230801 21:44:00.468"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:00.484" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 21:44:00.468" endtime="20230801 21:44:00.484"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:44:00.484" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 21:44:00.484" endtime="20230801 21:44:00.484"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:00.484" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:44:00.484" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 21:44:00.484" endtime="20230801 21:44:00.484"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:44:00.487" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 21:44:00.487" endtime="20230801 21:44:00.487"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:00.487" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:44:00.487" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 21:44:00.487" endtime="20230801 21:44:00.487"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.487" endtime="20230801 21:44:00.487"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.487" endtime="20230801 21:44:00.487"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:00.487" endtime="20230801 21:44:00.487"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.487" endtime="20230801 21:44:00.487"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.487" endtime="20230801 21:44:00.487"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.487" endtime="20230801 21:44:00.487"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:00.487" endtime="20230801 21:44:00.487"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.487" endtime="20230801 21:44:00.487"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.487" endtime="20230801 21:44:00.487"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:00.487" endtime="20230801 21:44:00.487"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.487" endtime="20230801 21:44:00.487"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.487" endtime="20230801 21:44:00.487"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:00.487" endtime="20230801 21:44:00.487"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:00.487" endtime="20230801 21:44:00.500"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:00.500" endtime="20230801 21:44:00.500"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:44:00.515" endtime="20230801 21:44:00.515"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:00.515" endtime="20230801 21:44:00.515"/>
</branch>
<status status="PASS" starttime="20230801 21:44:00.487" endtime="20230801 21:44:00.515"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:00.515" level="INFO">Length is 13</msg>
<msg timestamp="20230801 21:44:00.515" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 21:44:00.515" endtime="20230801 21:44:00.515"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 21:44:00.515" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 21:44:00.515" endtime="20230801 21:44:00.515"/>
</kw>
<status status="PASS" starttime="20230801 21:44:00.515" endtime="20230801 21:44:00.515"/>
</branch>
<status status="PASS" starttime="20230801 21:44:00.515" endtime="20230801 21:44:00.515"/>
</if>
<msg timestamp="20230801 21:44:00.515" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 21:44:00.468" endtime="20230801 21:44:00.515"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 21:44:00.515" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 21:44:00.515" endtime="20230801 21:44:00.515"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:44:00.515" endtime="20230801 21:44:00.656"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 21:44:00.660" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230801 21:44:00.659" endtime="20230801 21:44:00.754"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:00.754" level="INFO">Length is 13</msg>
<msg timestamp="20230801 21:44:00.754" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 21:44:00.754" endtime="20230801 21:44:00.754"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 21:44:00.754" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 21:44:00.754" endtime="20230801 21:44:00.754"/>
</kw>
<status status="PASS" starttime="20230801 21:44:00.754" endtime="20230801 21:44:00.754"/>
</branch>
<status status="PASS" starttime="20230801 21:44:00.754" endtime="20230801 21:44:00.754"/>
</if>
<status status="PASS" starttime="20230801 21:44:00.468" endtime="20230801 21:44:00.754"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:44:00.769" endtime="20230801 21:44:01.132"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:01.135" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 21:44:01.134" endtime="20230801 21:44:01.135"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:44:01.267" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:44:01.136" endtime="20230801 21:44:01.267"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 21:44:01.267" endtime="20230801 21:44:01.275"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 21:44:01.276" endtime="20230801 21:44:01.276"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:01.267" endtime="20230801 21:44:01.277"/>
</branch>
<status status="PASS" starttime="20230801 21:44:01.267" endtime="20230801 21:44:01.278"/>
</if>
<status status="PASS" starttime="20230801 21:44:01.132" endtime="20230801 21:44:01.278"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 21:44:01.279" endtime="20230801 21:44:01.392"/>
</kw>
<status status="PASS" starttime="20230801 21:44:00.754" endtime="20230801 21:44:01.394"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:44:01.397" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 21:44:01.396" endtime="20230801 21:44:01.397"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:01.398" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:44:01.398" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 21:44:01.398" endtime="20230801 21:44:01.398"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 21:44:01.400" endtime="20230801 21:44:01.400"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:01.399" endtime="20230801 21:44:01.401"/>
</branch>
<status status="PASS" starttime="20230801 21:44:01.399" endtime="20230801 21:44:01.401"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 21:44:03.657" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 21:44:01.409" endtime="20230801 21:44:03.657"/>
</kw>
<status status="PASS" starttime="20230801 21:44:01.401" endtime="20230801 21:44:03.658"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:03.659" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 21:44:03.658" endtime="20230801 21:44:03.659"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:44:04.215" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 21:44:04.216" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/test/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 21:44:04.216" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 21:44:03.663" endtime="20230801 21:44:04.219"/>
</kw>
<status status="FAIL" starttime="20230801 21:44:03.661" endtime="20230801 21:44:04.219"/>
</kw>
<msg timestamp="20230801 21:44:04.220" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 21:44:03.660" endtime="20230801 21:44:04.221"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 21:44:04.224" endtime="20230801 21:44:04.224"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:04.222" endtime="20230801 21:44:04.225"/>
</branch>
<status status="PASS" starttime="20230801 21:44:04.222" endtime="20230801 21:44:04.225"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:44:06.776" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 21:44:04.228" endtime="20230801 21:44:06.776"/>
</kw>
<status status="PASS" starttime="20230801 21:44:04.225" endtime="20230801 21:44:06.776"/>
</kw>
<status status="PASS" starttime="20230801 21:44:01.395" endtime="20230801 21:44:06.776"/>
</kw>
<status status="PASS" starttime="20230801 21:43:57.811" endtime="20230801 21:44:06.776"/>
</kw>
<kw name="When Click &quot;Người Dùng&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:44:06.776" endtime="20230801 21:44:06.943"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:06.946" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:44:06.945" endtime="20230801 21:44:06.946"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:44:06.954" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 21:44:06.946" endtime="20230801 21:44:06.954"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:44:09.718" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 21:44:06.954" endtime="20230801 21:44:09.718"/>
</kw>
<status status="PASS" starttime="20230801 21:44:06.954" endtime="20230801 21:44:09.719"/>
</kw>
<status status="PASS" starttime="20230801 21:44:06.954" endtime="20230801 21:44:09.719"/>
</branch>
<status status="PASS" starttime="20230801 21:44:06.954" endtime="20230801 21:44:09.719"/>
</if>
<status status="PASS" starttime="20230801 21:44:06.944" endtime="20230801 21:44:09.720"/>
</kw>
<status status="PASS" starttime="20230801 21:44:06.776" endtime="20230801 21:44:09.721"/>
</kw>
<if>
<branch type="IF" condition="'${role}' == 'Staff'">
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20230801 21:44:09.725" endtime="20230801 21:44:09.725"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:09.723" endtime="20230801 21:44:09.726"/>
</branch>
<branch type="ELSE IF" condition="'${role}' != 'Staff'">
<kw name="Click list Role with &quot;${role}&quot;" library="common" sourcename="Click list ${name} with &quot;${text}&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//div[contains(@class, 'truncate') and text()='${text}']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:09.729" level="INFO">${element} = xpath=//div[contains(@class, 'truncate') and text()='Manager']</msg>
<status status="PASS" starttime="20230801 21:44:09.729" endtime="20230801 21:44:09.729"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:44:09.744" level="INFO">Waited for Element with selector xpath=//div[contains(@class, 'truncate') and text()='Manager'] at state visible</msg>
<status status="PASS" starttime="20230801 21:44:09.729" endtime="20230801 21:44:09.744"/>
</kw>
<status status="PASS" starttime="20230801 21:44:09.729" endtime="20230801 21:44:09.744"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:44:09.744" endtime="20230801 21:44:09.998"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:09.998" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:44:09.998" endtime="20230801 21:44:09.998"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:44:10.014" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 21:44:09.998" endtime="20230801 21:44:10.014"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:44:11.525" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 21:44:10.014" endtime="20230801 21:44:11.539"/>
</kw>
<status status="PASS" starttime="20230801 21:44:10.014" endtime="20230801 21:44:11.541"/>
</kw>
<status status="PASS" starttime="20230801 21:44:10.014" endtime="20230801 21:44:11.541"/>
</branch>
<status status="PASS" starttime="20230801 21:44:10.014" endtime="20230801 21:44:11.542"/>
</if>
<status status="PASS" starttime="20230801 21:44:09.998" endtime="20230801 21:44:11.542"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:11.544" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:44:11.543" endtime="20230801 21:44:11.544"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:44:11.549" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:44:11.544" endtime="20230801 21:44:11.549"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 21:44:11.549" endtime="20230801 21:44:11.549"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:11.549" endtime="20230801 21:44:11.549"/>
</branch>
<status status="PASS" starttime="20230801 21:44:11.549" endtime="20230801 21:44:11.549"/>
</if>
<status status="PASS" starttime="20230801 21:44:11.542" endtime="20230801 21:44:11.549"/>
</kw>
<status status="PASS" starttime="20230801 21:44:09.727" endtime="20230801 21:44:11.549"/>
</kw>
<status status="PASS" starttime="20230801 21:44:09.726" endtime="20230801 21:44:11.549"/>
</branch>
<status status="PASS" starttime="20230801 21:44:09.722" endtime="20230801 21:44:11.549"/>
</if>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20230801 21:44:11.549" endtime="20230801 21:44:11.549"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:11.549" endtime="20230801 21:44:11.549"/>
</branch>
<status status="PASS" starttime="20230801 21:44:11.549" endtime="20230801 21:44:11.549"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:11.564" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:44:11.549" endtime="20230801 21:44:11.564"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:44:11.564" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:44:11.564" endtime="20230801 21:44:11.564"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 21:44:11.564" endtime="20230801 21:44:11.564"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:11.564" endtime="20230801 21:44:11.564"/>
</branch>
<status status="PASS" starttime="20230801 21:44:11.564" endtime="20230801 21:44:11.564"/>
</if>
<status status="PASS" starttime="20230801 21:44:11.549" endtime="20230801 21:44:11.564"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 21:44:11.681" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 21:44:11.564" endtime="20230801 21:44:11.681"/>
</kw>
<status status="PASS" starttime="20230801 21:43:57.810" endtime="20230801 21:44:11.681"/>
</kw>
<kw name="And Select the user &quot;Team has been deleted&quot; to edit" library="common" sourcename="Select the ${text} &quot;${name}&quot; to edit">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:11.681" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:44:11.681" endtime="20230801 21:44:11.681"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:44:11.697" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:44:11.681" endtime="20230801 21:44:11.698"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 21:44:11.699" endtime="20230801 21:44:11.699"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:11.698" endtime="20230801 21:44:11.699"/>
</branch>
<status status="PASS" starttime="20230801 21:44:11.698" endtime="20230801 21:44:11.699"/>
</if>
<status status="PASS" starttime="20230801 21:44:11.681" endtime="20230801 21:44:11.700"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 21:44:11.726" level="INFO">Found 3 Locators successfully.</msg>
<msg timestamp="20230801 21:44:11.727" level="INFO">${elements} = ['element=1c64fdd1-7aa3-4fe8-8493-5e01aca60851', 'element=3d3c94c0-27a2-496e-a2b9-2c8a8286a42e', 'element=501e9400-bcd5-4dda-9c5e-a4614528274e']</msg>
<status status="PASS" starttime="20230801 21:44:11.700" endtime="20230801 21:44:11.728"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${elementCount}</var>
<arg>${elements}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:11.730" level="INFO">Length is 3</msg>
<msg timestamp="20230801 21:44:11.730" level="INFO">${elementCount} = 3</msg>
<status status="PASS" starttime="20230801 21:44:11.729" endtime="20230801 21:44:11.730"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'Team has been deleted'">
<kw name="Evaluate" library="BuiltIn">
<var>${randomIndex}</var>
<arg>${elementCount}-2</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 21:44:11.732" level="INFO">${randomIndex} = 1</msg>
<status status="PASS" starttime="20230801 21:44:11.732" endtime="20230801 21:44:11.733"/>
</kw>
<status status="PASS" starttime="20230801 21:44:11.731" endtime="20230801 21:44:11.733"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'Còn những yêu cầu nghỉ cần duyệt'">
<kw name="Evaluate" library="BuiltIn">
<var>${randomIndex}</var>
<arg>${elementCount}-3</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230801 21:44:11.734" endtime="20230801 21:44:11.734"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:11.733" endtime="20230801 21:44:11.734"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='valid'">
<kw name="Evaluate" library="BuiltIn">
<var>${randomIndex}</var>
<arg>${elementCount}-${elementCount}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230801 21:44:11.735" endtime="20230801 21:44:11.735"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:11.735" endtime="20230801 21:44:11.736"/>
</branch>
<status status="PASS" starttime="20230801 21:44:11.731" endtime="20230801 21:44:11.736"/>
</if>
<kw name="Click" library="Browser">
<arg>${elements}[${randomIndex}]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:44:11.737" endtime="20230801 21:44:12.074"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:12.075" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:44:12.075" endtime="20230801 21:44:12.075"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:44:12.075" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 21:44:12.075" endtime="20230801 21:44:12.075"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:44:13.376" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 21:44:12.090" endtime="20230801 21:44:13.376"/>
</kw>
<status status="PASS" starttime="20230801 21:44:12.075" endtime="20230801 21:44:13.376"/>
</kw>
<status status="PASS" starttime="20230801 21:44:12.075" endtime="20230801 21:44:13.377"/>
</branch>
<status status="PASS" starttime="20230801 21:44:12.075" endtime="20230801 21:44:13.377"/>
</if>
<status status="PASS" starttime="20230801 21:44:12.075" endtime="20230801 21:44:13.377"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:13.379" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:44:13.379" endtime="20230801 21:44:13.379"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:44:13.396" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:44:13.380" endtime="20230801 21:44:13.396"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 21:44:13.396" endtime="20230801 21:44:13.396"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:13.396" endtime="20230801 21:44:13.396"/>
</branch>
<status status="PASS" starttime="20230801 21:44:13.396" endtime="20230801 21:44:13.396"/>
</if>
<status status="PASS" starttime="20230801 21:44:13.378" endtime="20230801 21:44:13.396"/>
</kw>
<status status="PASS" starttime="20230801 21:44:11.681" endtime="20230801 21:44:13.396"/>
</kw>
<kw name="And Enter &quot;leave date valid&quot; in &quot;Ngày nghỉ&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:13.406" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 21:44:13.405" endtime="20230801 21:44:13.406"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:13.407" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 21:44:13.407" endtime="20230801 21:44:13.407"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:44:13.409" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 21:44:13.408" endtime="20230801 21:44:13.409"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:13.410" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:44:13.410" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 21:44:13.409" endtime="20230801 21:44:13.410"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:44:13.411" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 21:44:13.410" endtime="20230801 21:44:13.411"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:13.412" level="INFO">Length is 1</msg>
<msg timestamp="20230801 21:44:13.413" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 21:44:13.412" endtime="20230801 21:44:13.413"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:44:13.414" endtime="20230801 21:44:13.414"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:44:13.415" endtime="20230801 21:44:13.415"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:13.413" endtime="20230801 21:44:13.415"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:44:13.416" endtime="20230801 21:44:13.416"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:13.417" endtime="20230801 21:44:13.417"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:44:13.417" endtime="20230801 21:44:13.418"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:13.415" endtime="20230801 21:44:13.418"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:13.419" endtime="20230801 21:44:13.419"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:13.421" endtime="20230801 21:44:13.421"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:13.418" endtime="20230801 21:44:13.421"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:13.423" endtime="20230801 21:44:13.423"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:13.423" endtime="20230801 21:44:13.424"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:13.422" endtime="20230801 21:44:13.424"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20230801 21:44:13.426" level="INFO">${new_text} = 14</msg>
<status status="PASS" starttime="20230801 21:44:13.425" endtime="20230801 21:44:13.426"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230801 21:44:13.428" level="INFO">${new_text} = 14</msg>
<status status="PASS" starttime="20230801 21:44:13.427" endtime="20230801 21:44:13.428"/>
</kw>
<status status="PASS" starttime="20230801 21:44:13.424" endtime="20230801 21:44:13.428"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:13.429" endtime="20230801 21:44:13.429"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:13.430" endtime="20230801 21:44:13.430"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:13.428" endtime="20230801 21:44:13.430"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:13.431" endtime="20230801 21:44:13.432"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:13.432" endtime="20230801 21:44:13.433"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:13.430" endtime="20230801 21:44:13.433"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 21:44:13.435" endtime="20230801 21:44:13.435"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:13.434" endtime="20230801 21:44:13.436"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 21:44:13.436" endtime="20230801 21:44:13.438"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:13.436" endtime="20230801 21:44:13.438"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:13.439" endtime="20230801 21:44:13.439"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:13.440" endtime="20230801 21:44:13.440"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:13.438" endtime="20230801 21:44:13.441"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 21:44:13.443" endtime="20230801 21:44:13.443"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:13.441" endtime="20230801 21:44:13.443"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 21:44:13.444" endtime="20230801 21:44:13.445"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:13.444" endtime="20230801 21:44:13.446"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:44:13.447" endtime="20230801 21:44:13.448"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:13.447" endtime="20230801 21:44:13.448"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:44:13.449" endtime="20230801 21:44:13.449"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:13.448" endtime="20230801 21:44:13.449"/>
</branch>
<status status="PASS" starttime="20230801 21:44:13.413" endtime="20230801 21:44:13.449"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:13.451" level="INFO">Length is 8</msg>
<msg timestamp="20230801 21:44:13.451" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 21:44:13.450" endtime="20230801 21:44:13.451"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 21:44:13.454" level="INFO">${text} = 14</msg>
<status status="PASS" starttime="20230801 21:44:13.452" endtime="20230801 21:44:13.454"/>
</kw>
<status status="PASS" starttime="20230801 21:44:13.451" endtime="20230801 21:44:13.454"/>
</branch>
<status status="PASS" starttime="20230801 21:44:13.451" endtime="20230801 21:44:13.455"/>
</if>
<msg timestamp="20230801 21:44:13.455" level="INFO">${text} = 14</msg>
<status status="PASS" starttime="20230801 21:44:13.404" endtime="20230801 21:44:13.455"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 21:44:13.457" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ngày nghỉ"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 21:44:13.456" endtime="20230801 21:44:13.458"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:44:13.459" endtime="20230801 21:44:13.596"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 21:44:13.596" level="INFO">Fills the text '14' in the given field.</msg>
<status status="PASS" starttime="20230801 21:44:13.596" endtime="20230801 21:44:13.652"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:13.656" level="INFO">Length is 2</msg>
<msg timestamp="20230801 21:44:13.657" level="INFO">${cnt} = 2</msg>
<status status="PASS" starttime="20230801 21:44:13.656" endtime="20230801 21:44:13.657"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 21:44:13.659" level="INFO">${STATE["Ngày nghỉ"]} = 14</msg>
<status status="PASS" starttime="20230801 21:44:13.658" endtime="20230801 21:44:13.659"/>
</kw>
<status status="PASS" starttime="20230801 21:44:13.657" endtime="20230801 21:44:13.660"/>
</branch>
<status status="PASS" starttime="20230801 21:44:13.657" endtime="20230801 21:44:13.660"/>
</if>
<status status="PASS" starttime="20230801 21:44:13.396" endtime="20230801 21:44:13.660"/>
</kw>
<kw name="And Click &quot;Lưu và tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:44:13.662" endtime="20230801 21:44:14.338"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:14.340" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 21:44:14.340" endtime="20230801 21:44:14.340"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:44:14.377" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:44:14.341" endtime="20230801 21:44:14.377"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 21:44:14.379" endtime="20230801 21:44:14.379"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 21:44:14.380" endtime="20230801 21:44:14.380"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:14.378" endtime="20230801 21:44:14.380"/>
</branch>
<status status="PASS" starttime="20230801 21:44:14.378" endtime="20230801 21:44:14.380"/>
</if>
<status status="PASS" starttime="20230801 21:44:14.339" endtime="20230801 21:44:14.381"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 21:44:14.382" endtime="20230801 21:44:14.453"/>
</kw>
<status status="PASS" starttime="20230801 21:44:13.661" endtime="20230801 21:44:14.453"/>
</kw>
<kw name="Then User look message &quot;Internal server error&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:44:14.469" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 21:44:14.453" endtime="20230801 21:44:14.469"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:14.469" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:44:14.469" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 21:44:14.469" endtime="20230801 21:44:14.469"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 21:44:14.477" endtime="20230801 21:44:14.478"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:14.476" endtime="20230801 21:44:14.478"/>
</branch>
<status status="PASS" starttime="20230801 21:44:14.471" endtime="20230801 21:44:14.478"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 21:44:16.946" level="INFO">Text: 'Internal server error'</msg>
<status status="PASS" starttime="20230801 21:44:14.478" endtime="20230801 21:44:16.946"/>
</kw>
<status status="PASS" starttime="20230801 21:44:14.478" endtime="20230801 21:44:16.946"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:16.946" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 21:44:16.946" endtime="20230801 21:44:16.946"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:44:17.478" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-4.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-4.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 21:44:17.478" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/test/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 21:44:17.478" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 21:44:16.946" endtime="20230801 21:44:17.481"/>
</kw>
<status status="FAIL" starttime="20230801 21:44:16.946" endtime="20230801 21:44:17.482"/>
</kw>
<msg timestamp="20230801 21:44:17.482" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 21:44:16.946" endtime="20230801 21:44:17.482"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 21:44:17.484" endtime="20230801 21:44:17.484"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:17.483" endtime="20230801 21:44:17.484"/>
</branch>
<status status="PASS" starttime="20230801 21:44:17.483" endtime="20230801 21:44:17.485"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:44:23.080" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 21:44:17.488" endtime="20230801 21:44:23.096"/>
</kw>
<status status="PASS" starttime="20230801 21:44:17.485" endtime="20230801 21:44:23.096"/>
</kw>
<status status="PASS" starttime="20230801 21:44:14.453" endtime="20230801 21:44:23.096"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 21:44:33.461" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 21:44:23.112" endtime="20230801 21:44:33.461"/>
</kw>
<status status="PASS" starttime="20230801 21:44:23.112" endtime="20230801 21:44:33.461"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230801 21:43:53.424" endtime="20230801 21:44:33.461"/>
</test>
<test id="s1-t3" name="EDU-20 Verify that the error message displayed when editing a user with an existing Manager still has other leave requests that need approval &amp; &quot;Lưu lại&quot; button" line="24">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 21:44:33.534" endtime="20230801 21:44:33.535"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 21:44:33.537" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\test\\browser\\traces\\f9d2909c-3da4-411d-97b8-c4cc28f65317"}</msg>
<msg timestamp="20230801 21:44:35.092" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\test\\browser\\traces\\f9d2909c-3da4-411d-97b8-c4cc28f65317"}</msg>
<status status="PASS" starttime="20230801 21:44:33.535" endtime="20230801 21:44:35.092"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 21:44:37.977" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 21:44:37.978" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 21:44:35.092" endtime="20230801 21:44:37.978"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 21:44:37.980" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 21:44:37.979" endtime="20230801 21:44:37.980"/>
</kw>
<status status="PASS" starttime="20230801 21:44:33.533" endtime="20230801 21:44:37.980"/>
</kw>
<kw name="Go to page edit user with the &quot;Staff&quot; role" library="common" sourcename="Go to page ${name} user with the &quot;${role}&quot; role">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:38.031" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 21:44:38.030" endtime="20230801 21:44:38.031"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:38.032" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 21:44:38.032" endtime="20230801 21:44:38.032"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:44:38.033" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 21:44:38.033" endtime="20230801 21:44:38.034"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:38.035" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:44:38.035" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 21:44:38.034" endtime="20230801 21:44:38.035"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:44:38.037" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 21:44:38.036" endtime="20230801 21:44:38.037"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:38.038" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:44:38.038" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 21:44:38.037" endtime="20230801 21:44:38.038"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.040" endtime="20230801 21:44:38.040"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.041" endtime="20230801 21:44:38.041"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:38.039" endtime="20230801 21:44:38.041"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.042" endtime="20230801 21:44:38.042"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.043" endtime="20230801 21:44:38.043"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.044" endtime="20230801 21:44:38.044"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:38.041" endtime="20230801 21:44:38.044"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.045" endtime="20230801 21:44:38.046"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.046" endtime="20230801 21:44:38.046"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:38.045" endtime="20230801 21:44:38.047"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.048" endtime="20230801 21:44:38.048"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.048" endtime="20230801 21:44:38.048"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:38.047" endtime="20230801 21:44:38.049"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.050" endtime="20230801 21:44:38.050"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.050" endtime="20230801 21:44:38.051"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:38.049" endtime="20230801 21:44:38.051"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.052" endtime="20230801 21:44:38.052"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.053" endtime="20230801 21:44:38.053"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:38.051" endtime="20230801 21:44:38.053"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.053" endtime="20230801 21:44:38.068"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.068" endtime="20230801 21:44:38.068"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:38.053" endtime="20230801 21:44:38.068"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.068" endtime="20230801 21:44:38.068"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:38.068" endtime="20230801 21:44:38.068"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 21:44:38.068" endtime="20230801 21:44:38.068"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:38.068" endtime="20230801 21:44:38.068"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.068" endtime="20230801 21:44:38.068"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.068" endtime="20230801 21:44:38.068"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:38.068" endtime="20230801 21:44:38.068"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.068" endtime="20230801 21:44:38.068"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:38.068" endtime="20230801 21:44:38.068"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.068" endtime="20230801 21:44:38.083"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:38.068" endtime="20230801 21:44:38.083"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.083" endtime="20230801 21:44:38.083"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:38.083" endtime="20230801 21:44:38.083"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:44:38.083" endtime="20230801 21:44:38.083"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:38.083" endtime="20230801 21:44:38.083"/>
</branch>
<status status="PASS" starttime="20230801 21:44:38.039" endtime="20230801 21:44:38.083"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:38.083" level="INFO">Length is 19</msg>
<msg timestamp="20230801 21:44:38.083" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 21:44:38.083" endtime="20230801 21:44:38.083"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 21:44:38.083" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 21:44:38.083" endtime="20230801 21:44:38.083"/>
</kw>
<status status="PASS" starttime="20230801 21:44:38.083" endtime="20230801 21:44:38.083"/>
</branch>
<status status="PASS" starttime="20230801 21:44:38.083" endtime="20230801 21:44:38.083"/>
</if>
<msg timestamp="20230801 21:44:38.083" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 21:44:38.029" endtime="20230801 21:44:38.083"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 21:44:38.083" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 21:44:38.083" endtime="20230801 21:44:38.083"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:44:38.083" endtime="20230801 21:44:40.229"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 21:44:40.229" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230801 21:44:40.229" endtime="20230801 21:44:40.300"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:40.300" level="INFO">Length is 19</msg>
<msg timestamp="20230801 21:44:40.300" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 21:44:40.300" endtime="20230801 21:44:40.300"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 21:44:40.300" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 21:44:40.300" endtime="20230801 21:44:40.300"/>
</kw>
<status status="PASS" starttime="20230801 21:44:40.300" endtime="20230801 21:44:40.300"/>
</branch>
<status status="PASS" starttime="20230801 21:44:40.300" endtime="20230801 21:44:40.300"/>
</if>
<status status="PASS" starttime="20230801 21:44:38.028" endtime="20230801 21:44:40.300"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:40.315" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 21:44:40.300" endtime="20230801 21:44:40.315"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:40.315" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 21:44:40.315" endtime="20230801 21:44:40.315"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:44:40.315" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 21:44:40.315" endtime="20230801 21:44:40.315"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:40.315" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:44:40.315" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 21:44:40.315" endtime="20230801 21:44:40.315"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:44:40.315" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 21:44:40.315" endtime="20230801 21:44:40.315"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:40.315" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:44:40.315" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 21:44:40.315" endtime="20230801 21:44:40.315"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.315" endtime="20230801 21:44:40.315"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.315" endtime="20230801 21:44:40.315"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:40.315" endtime="20230801 21:44:40.315"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.315" endtime="20230801 21:44:40.315"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.315" endtime="20230801 21:44:40.315"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.315" endtime="20230801 21:44:40.315"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:40.315" endtime="20230801 21:44:40.328"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.328" endtime="20230801 21:44:40.328"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.328" endtime="20230801 21:44:40.328"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:40.328" endtime="20230801 21:44:40.328"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.328" endtime="20230801 21:44:40.331"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.331" endtime="20230801 21:44:40.331"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:40.328" endtime="20230801 21:44:40.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.331" endtime="20230801 21:44:40.331"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.331" endtime="20230801 21:44:40.331"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:40.331" endtime="20230801 21:44:40.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.331" endtime="20230801 21:44:40.331"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.331" endtime="20230801 21:44:40.331"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:40.331" endtime="20230801 21:44:40.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.331" endtime="20230801 21:44:40.331"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.331" endtime="20230801 21:44:40.331"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:40.331" endtime="20230801 21:44:40.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.331" endtime="20230801 21:44:40.331"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:40.331" endtime="20230801 21:44:40.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 21:44:40.331" endtime="20230801 21:44:40.331"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:40.331" endtime="20230801 21:44:40.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.331" endtime="20230801 21:44:40.331"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.331" endtime="20230801 21:44:40.331"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:40.331" endtime="20230801 21:44:40.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.331" endtime="20230801 21:44:40.331"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:40.331" endtime="20230801 21:44:40.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.347" endtime="20230801 21:44:40.347"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:40.331" endtime="20230801 21:44:40.347"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.347" endtime="20230801 21:44:40.347"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:40.347" endtime="20230801 21:44:40.347"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.347" endtime="20230801 21:44:40.347"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:40.347" endtime="20230801 21:44:40.347"/>
</branch>
<status status="PASS" starttime="20230801 21:44:40.315" endtime="20230801 21:44:40.347"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:40.347" level="INFO">Length is 13</msg>
<msg timestamp="20230801 21:44:40.347" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 21:44:40.347" endtime="20230801 21:44:40.347"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 21:44:40.347" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 21:44:40.347" endtime="20230801 21:44:40.347"/>
</kw>
<status status="PASS" starttime="20230801 21:44:40.347" endtime="20230801 21:44:40.347"/>
</branch>
<status status="PASS" starttime="20230801 21:44:40.347" endtime="20230801 21:44:40.347"/>
</if>
<msg timestamp="20230801 21:44:40.347" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 21:44:40.300" endtime="20230801 21:44:40.347"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 21:44:40.347" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 21:44:40.347" endtime="20230801 21:44:40.347"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:44:40.347" endtime="20230801 21:44:40.421"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 21:44:40.422" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230801 21:44:40.422" endtime="20230801 21:44:40.506"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:40.508" level="INFO">Length is 13</msg>
<msg timestamp="20230801 21:44:40.509" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 21:44:40.507" endtime="20230801 21:44:40.509"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 21:44:40.512" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 21:44:40.511" endtime="20230801 21:44:40.512"/>
</kw>
<status status="PASS" starttime="20230801 21:44:40.510" endtime="20230801 21:44:40.512"/>
</branch>
<status status="PASS" starttime="20230801 21:44:40.510" endtime="20230801 21:44:40.512"/>
</if>
<status status="PASS" starttime="20230801 21:44:40.300" endtime="20230801 21:44:40.512"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:44:40.512" endtime="20230801 21:44:40.776"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:40.778" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 21:44:40.777" endtime="20230801 21:44:40.778"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:44:40.808" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:44:40.779" endtime="20230801 21:44:40.808"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.810" endtime="20230801 21:44:40.810"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.811" endtime="20230801 21:44:40.811"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:40.809" endtime="20230801 21:44:40.811"/>
</branch>
<status status="PASS" starttime="20230801 21:44:40.809" endtime="20230801 21:44:40.811"/>
</if>
<status status="PASS" starttime="20230801 21:44:40.776" endtime="20230801 21:44:40.812"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 21:44:40.812" endtime="20230801 21:44:40.895"/>
</kw>
<status status="PASS" starttime="20230801 21:44:40.512" endtime="20230801 21:44:40.895"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:44:40.895" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 21:44:40.895" endtime="20230801 21:44:40.895"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:40.895" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:44:40.895" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 21:44:40.895" endtime="20230801 21:44:40.895"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 21:44:40.908" endtime="20230801 21:44:40.908"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:40.895" endtime="20230801 21:44:40.908"/>
</branch>
<status status="PASS" starttime="20230801 21:44:40.895" endtime="20230801 21:44:40.909"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 21:44:43.779" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 21:44:40.909" endtime="20230801 21:44:43.779"/>
</kw>
<status status="PASS" starttime="20230801 21:44:40.909" endtime="20230801 21:44:43.780"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:43.781" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 21:44:43.780" endtime="20230801 21:44:43.781"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:44:44.293" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-5.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-5.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 21:44:44.294" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/test/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 21:44:44.294" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 21:44:43.784" endtime="20230801 21:44:44.297"/>
</kw>
<status status="FAIL" starttime="20230801 21:44:43.782" endtime="20230801 21:44:44.297"/>
</kw>
<msg timestamp="20230801 21:44:44.298" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 21:44:43.782" endtime="20230801 21:44:44.299"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 21:44:44.302" endtime="20230801 21:44:44.303"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:44.300" endtime="20230801 21:44:44.303"/>
</branch>
<status status="PASS" starttime="20230801 21:44:44.300" endtime="20230801 21:44:44.304"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:44:46.785" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 21:44:44.307" endtime="20230801 21:44:46.786"/>
</kw>
<status status="PASS" starttime="20230801 21:44:44.304" endtime="20230801 21:44:46.786"/>
</kw>
<status status="PASS" starttime="20230801 21:44:40.895" endtime="20230801 21:44:46.787"/>
</kw>
<status status="PASS" starttime="20230801 21:44:38.027" endtime="20230801 21:44:46.787"/>
</kw>
<kw name="When Click &quot;Người Dùng&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:44:46.789" endtime="20230801 21:44:47.005"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:47.005" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:44:47.005" endtime="20230801 21:44:47.005"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:44:47.020" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 21:44:47.005" endtime="20230801 21:44:47.020"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:44:47.702" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 21:44:47.036" endtime="20230801 21:44:47.702"/>
</kw>
<status status="PASS" starttime="20230801 21:44:47.034" endtime="20230801 21:44:47.703"/>
</kw>
<status status="PASS" starttime="20230801 21:44:47.020" endtime="20230801 21:44:47.703"/>
</branch>
<status status="PASS" starttime="20230801 21:44:47.020" endtime="20230801 21:44:47.704"/>
</if>
<status status="PASS" starttime="20230801 21:44:47.005" endtime="20230801 21:44:47.704"/>
</kw>
<status status="PASS" starttime="20230801 21:44:46.788" endtime="20230801 21:44:47.704"/>
</kw>
<if>
<branch type="IF" condition="'${role}' == 'Staff'">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:47.708" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:44:47.707" endtime="20230801 21:44:47.708"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:44:47.724" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230801 21:44:47.710" endtime="20230801 21:44:47.724"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:44:49.336" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 21:44:47.724" endtime="20230801 21:44:49.336"/>
</kw>
<status status="PASS" starttime="20230801 21:44:47.724" endtime="20230801 21:44:49.337"/>
</kw>
<status status="PASS" starttime="20230801 21:44:47.724" endtime="20230801 21:44:49.337"/>
</branch>
<status status="PASS" starttime="20230801 21:44:47.724" endtime="20230801 21:44:49.337"/>
</if>
<status status="PASS" starttime="20230801 21:44:47.706" endtime="20230801 21:44:49.339"/>
</kw>
<status status="PASS" starttime="20230801 21:44:47.705" endtime="20230801 21:44:49.340"/>
</branch>
<branch type="ELSE IF" condition="'${role}' != 'Staff'">
<kw name="Click list Role with &quot;${role}&quot;" library="common" sourcename="Click list ${name} with &quot;${text}&quot;">
<status status="NOT RUN" starttime="20230801 21:44:49.342" endtime="20230801 21:44:49.342"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:49.341" endtime="20230801 21:44:49.342"/>
</branch>
<status status="PASS" starttime="20230801 21:44:47.705" endtime="20230801 21:44:49.343"/>
</if>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20230801 21:44:49.343" endtime="20230801 21:44:49.343"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:49.343" endtime="20230801 21:44:49.343"/>
</branch>
<status status="PASS" starttime="20230801 21:44:49.343" endtime="20230801 21:44:49.343"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:49.343" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:44:49.343" endtime="20230801 21:44:49.343"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:44:49.359" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:44:49.343" endtime="20230801 21:44:49.359"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 21:44:49.359" endtime="20230801 21:44:49.359"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:49.359" endtime="20230801 21:44:49.359"/>
</branch>
<status status="PASS" starttime="20230801 21:44:49.359" endtime="20230801 21:44:49.359"/>
</if>
<status status="PASS" starttime="20230801 21:44:49.343" endtime="20230801 21:44:49.359"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 21:44:49.459" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 21:44:49.359" endtime="20230801 21:44:49.459"/>
</kw>
<status status="PASS" starttime="20230801 21:44:38.026" endtime="20230801 21:44:49.459"/>
</kw>
<kw name="And Select the user &quot;Còn những yêu cầu nghỉ cần duyệt&quot; to edit" library="common" sourcename="Select the ${text} &quot;${name}&quot; to edit">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:49.481" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:44:49.481" endtime="20230801 21:44:49.481"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:44:49.497" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:44:49.481" endtime="20230801 21:44:49.497"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 21:44:49.497" endtime="20230801 21:44:49.497"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:49.497" endtime="20230801 21:44:49.497"/>
</branch>
<status status="PASS" starttime="20230801 21:44:49.497" endtime="20230801 21:44:49.497"/>
</if>
<status status="PASS" starttime="20230801 21:44:49.481" endtime="20230801 21:44:49.497"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 21:44:49.528" level="INFO">Found 4 Locators successfully.</msg>
<msg timestamp="20230801 21:44:49.529" level="INFO">${elements} = ['element=8075d67b-f706-4f7b-8b77-1683846193bd', 'element=b9a6796b-dd15-43ea-83fa-155c0ad088a1', 'element=66259bbc-c494-45ce-aa51-0a9b918af1f5', 'element=759ac9ae-1cd3-4c86-af68-429c88182245']</msg>
<status status="PASS" starttime="20230801 21:44:49.497" endtime="20230801 21:44:49.529"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${elementCount}</var>
<arg>${elements}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:49.532" level="INFO">Length is 4</msg>
<msg timestamp="20230801 21:44:49.532" level="INFO">${elementCount} = 4</msg>
<status status="PASS" starttime="20230801 21:44:49.530" endtime="20230801 21:44:49.532"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'Team has been deleted'">
<kw name="Evaluate" library="BuiltIn">
<var>${randomIndex}</var>
<arg>${elementCount}-2</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230801 21:44:49.533" endtime="20230801 21:44:49.534"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:49.532" endtime="20230801 21:44:49.534"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'Còn những yêu cầu nghỉ cần duyệt'">
<kw name="Evaluate" library="BuiltIn">
<var>${randomIndex}</var>
<arg>${elementCount}-3</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 21:44:49.538" level="INFO">${randomIndex} = 1</msg>
<status status="PASS" starttime="20230801 21:44:49.536" endtime="20230801 21:44:49.538"/>
</kw>
<status status="PASS" starttime="20230801 21:44:49.534" endtime="20230801 21:44:49.538"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='valid'">
<kw name="Evaluate" library="BuiltIn">
<var>${randomIndex}</var>
<arg>${elementCount}-${elementCount}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230801 21:44:49.539" endtime="20230801 21:44:49.540"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:49.538" endtime="20230801 21:44:49.540"/>
</branch>
<status status="PASS" starttime="20230801 21:44:49.532" endtime="20230801 21:44:49.540"/>
</if>
<kw name="Click" library="Browser">
<arg>${elements}[${randomIndex}]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:44:49.541" endtime="20230801 21:44:49.770"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:49.770" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:44:49.770" endtime="20230801 21:44:49.770"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:44:49.788" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 21:44:49.770" endtime="20230801 21:44:49.788"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:44:50.390" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 21:44:49.788" endtime="20230801 21:44:50.391"/>
</kw>
<status status="PASS" starttime="20230801 21:44:49.788" endtime="20230801 21:44:50.391"/>
</kw>
<status status="PASS" starttime="20230801 21:44:49.788" endtime="20230801 21:44:50.391"/>
</branch>
<status status="PASS" starttime="20230801 21:44:49.788" endtime="20230801 21:44:50.391"/>
</if>
<status status="PASS" starttime="20230801 21:44:49.770" endtime="20230801 21:44:50.392"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:50.394" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:44:50.393" endtime="20230801 21:44:50.394"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:44:50.472" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 21:44:50.394" endtime="20230801 21:44:50.472"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:44:50.983" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 21:44:50.475" endtime="20230801 21:44:50.983"/>
</kw>
<status status="PASS" starttime="20230801 21:44:50.473" endtime="20230801 21:44:50.983"/>
</kw>
<status status="PASS" starttime="20230801 21:44:50.473" endtime="20230801 21:44:50.984"/>
</branch>
<status status="PASS" starttime="20230801 21:44:50.472" endtime="20230801 21:44:50.984"/>
</if>
<status status="PASS" starttime="20230801 21:44:50.392" endtime="20230801 21:44:50.985"/>
</kw>
<status status="PASS" starttime="20230801 21:44:49.481" endtime="20230801 21:44:50.985"/>
</kw>
<kw name="And Click select Quản lý with &quot;Hồ Văn Nhật&quot;" library="common" sourcename="Click select ${manager} with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:51.001" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 21:44:51.000" endtime="20230801 21:44:51.001"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:51.001" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 21:44:51.001" endtime="20230801 21:44:51.001"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:44:51.001" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 21:44:51.001" endtime="20230801 21:44:51.001"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:51.001" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:44:51.001" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 21:44:51.001" endtime="20230801 21:44:51.001"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:44:51.001" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 21:44:51.001" endtime="20230801 21:44:51.001"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:51.001" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:44:51.001" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 21:44:51.001" endtime="20230801 21:44:51.001"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.001" endtime="20230801 21:44:51.001"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.001" endtime="20230801 21:44:51.001"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:51.001" endtime="20230801 21:44:51.001"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.001" endtime="20230801 21:44:51.001"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.001" endtime="20230801 21:44:51.001"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.001" endtime="20230801 21:44:51.001"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:51.001" endtime="20230801 21:44:51.001"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.001" endtime="20230801 21:44:51.001"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.001" endtime="20230801 21:44:51.017"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:51.001" endtime="20230801 21:44:51.017"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.017" endtime="20230801 21:44:51.017"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.017" endtime="20230801 21:44:51.020"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:51.017" endtime="20230801 21:44:51.020"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.021" endtime="20230801 21:44:51.021"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.022" endtime="20230801 21:44:51.022"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:51.020" endtime="20230801 21:44:51.022"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.023" endtime="20230801 21:44:51.024"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.024" endtime="20230801 21:44:51.024"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:51.023" endtime="20230801 21:44:51.025"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.026" endtime="20230801 21:44:51.026"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.027" endtime="20230801 21:44:51.027"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:51.025" endtime="20230801 21:44:51.027"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.028" endtime="20230801 21:44:51.028"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:51.027" endtime="20230801 21:44:51.029"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 21:44:51.030" endtime="20230801 21:44:51.030"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:51.029" endtime="20230801 21:44:51.030"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.032" endtime="20230801 21:44:51.033"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.034" endtime="20230801 21:44:51.034"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:51.031" endtime="20230801 21:44:51.035"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.037" endtime="20230801 21:44:51.037"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:51.035" endtime="20230801 21:44:51.038"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.039" endtime="20230801 21:44:51.039"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:51.038" endtime="20230801 21:44:51.040"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.042" endtime="20230801 21:44:51.042"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:51.040" endtime="20230801 21:44:51.042"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:44:51.043" endtime="20230801 21:44:51.044"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:51.043" endtime="20230801 21:44:51.044"/>
</branch>
<status status="PASS" starttime="20230801 21:44:51.001" endtime="20230801 21:44:51.044"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:51.045" level="INFO">Length is 11</msg>
<msg timestamp="20230801 21:44:51.045" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20230801 21:44:51.045" endtime="20230801 21:44:51.045"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 21:44:51.047" level="INFO">${text} = Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230801 21:44:51.047" endtime="20230801 21:44:51.048"/>
</kw>
<status status="PASS" starttime="20230801 21:44:51.046" endtime="20230801 21:44:51.048"/>
</branch>
<status status="PASS" starttime="20230801 21:44:51.046" endtime="20230801 21:44:51.048"/>
</if>
<msg timestamp="20230801 21:44:51.049" level="INFO">${text} = Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230801 21:44:50.999" endtime="20230801 21:44:51.049"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${manager}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 21:44:51.050" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 21:44:51.049" endtime="20230801 21:44:51.050"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:44:51.073" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 21:44:51.054" endtime="20230801 21:44:51.074"/>
</kw>
<status status="PASS" starttime="20230801 21:44:51.050" endtime="20230801 21:44:51.074"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:44:51.075" endtime="20230801 21:44:51.304"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${manager}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 21:44:51.320" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 21:44:51.318" endtime="20230801 21:44:51.320"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 21:44:51.320" level="INFO">Fills the text 'Hồ Văn Nhật' in the given field.</msg>
<status status="PASS" starttime="20230801 21:44:51.320" endtime="20230801 21:44:51.400"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>xpath=//span[contains(text(),'${text}')]</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:44:52.802" level="INFO">Waited for Element with selector xpath=//span[contains(text(),'Hồ Văn Nhật')] at state visible</msg>
<status status="PASS" starttime="20230801 21:44:51.400" endtime="20230801 21:44:52.802"/>
</kw>
<status status="PASS" starttime="20230801 21:44:51.400" endtime="20230801 21:44:52.802"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//span[contains(text(),'${text}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:44:52.802" endtime="20230801 21:44:52.939"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:52.939" level="INFO">Length is 11</msg>
<msg timestamp="20230801 21:44:52.939" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20230801 21:44:52.939" endtime="20230801 21:44:52.939"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${manager}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 21:44:52.953" level="INFO">${STATE["Quản lý"]} = Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230801 21:44:52.939" endtime="20230801 21:44:52.953"/>
</kw>
<status status="PASS" starttime="20230801 21:44:52.939" endtime="20230801 21:44:52.953"/>
</branch>
<status status="PASS" starttime="20230801 21:44:52.939" endtime="20230801 21:44:52.953"/>
</if>
<status status="PASS" starttime="20230801 21:44:50.998" endtime="20230801 21:44:52.953"/>
</kw>
<kw name="And Enter &quot;leave date valid&quot; in &quot;Ngày nghỉ&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:52.953" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 21:44:52.953" endtime="20230801 21:44:52.953"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:52.953" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 21:44:52.953" endtime="20230801 21:44:52.953"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:44:52.969" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 21:44:52.953" endtime="20230801 21:44:52.969"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:52.969" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:44:52.969" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 21:44:52.969" endtime="20230801 21:44:52.969"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:44:52.969" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 21:44:52.969" endtime="20230801 21:44:52.969"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:52.969" level="INFO">Length is 1</msg>
<msg timestamp="20230801 21:44:52.969" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 21:44:52.969" endtime="20230801 21:44:52.969"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:44:52.969" endtime="20230801 21:44:52.978"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:44:52.978" endtime="20230801 21:44:52.979"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:52.969" endtime="20230801 21:44:52.979"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:44:52.980" endtime="20230801 21:44:52.981"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:52.981" endtime="20230801 21:44:52.982"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:44:52.982" endtime="20230801 21:44:52.982"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:52.979" endtime="20230801 21:44:52.983"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:52.984" endtime="20230801 21:44:52.984"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:52.988" endtime="20230801 21:44:52.988"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:52.983" endtime="20230801 21:44:52.989"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:52.990" endtime="20230801 21:44:52.990"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:52.991" endtime="20230801 21:44:52.991"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:52.989" endtime="20230801 21:44:52.992"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20230801 21:44:52.994" level="INFO">${new_text} = 5</msg>
<status status="PASS" starttime="20230801 21:44:52.993" endtime="20230801 21:44:52.994"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230801 21:44:52.997" level="INFO">${new_text} = 5</msg>
<status status="PASS" starttime="20230801 21:44:52.995" endtime="20230801 21:44:52.997"/>
</kw>
<status status="PASS" starttime="20230801 21:44:52.992" endtime="20230801 21:44:52.997"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:52.998" endtime="20230801 21:44:52.998"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:52.999" endtime="20230801 21:44:52.999"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:52.998" endtime="20230801 21:44:52.999"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:53.000" endtime="20230801 21:44:53.000"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:53.005" endtime="20230801 21:44:53.005"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:53.000" endtime="20230801 21:44:53.006"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 21:44:53.009" endtime="20230801 21:44:53.009"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:53.008" endtime="20230801 21:44:53.010"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 21:44:53.010" endtime="20230801 21:44:53.011"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:53.010" endtime="20230801 21:44:53.011"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:44:53.011" endtime="20230801 21:44:53.012"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:44:53.012" endtime="20230801 21:44:53.013"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:53.011" endtime="20230801 21:44:53.013"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 21:44:53.013" endtime="20230801 21:44:53.014"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:53.013" endtime="20230801 21:44:53.014"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 21:44:53.014" endtime="20230801 21:44:53.014"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:53.014" endtime="20230801 21:44:53.014"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:44:53.014" endtime="20230801 21:44:53.014"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:53.014" endtime="20230801 21:44:53.014"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:44:53.014" endtime="20230801 21:44:53.014"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:53.014" endtime="20230801 21:44:53.014"/>
</branch>
<status status="PASS" starttime="20230801 21:44:52.969" endtime="20230801 21:44:53.019"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:53.022" level="INFO">Length is 8</msg>
<msg timestamp="20230801 21:44:53.022" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 21:44:53.020" endtime="20230801 21:44:53.022"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 21:44:53.025" level="INFO">${text} = 5</msg>
<status status="PASS" starttime="20230801 21:44:53.024" endtime="20230801 21:44:53.025"/>
</kw>
<status status="PASS" starttime="20230801 21:44:53.023" endtime="20230801 21:44:53.025"/>
</branch>
<status status="PASS" starttime="20230801 21:44:53.023" endtime="20230801 21:44:53.025"/>
</if>
<msg timestamp="20230801 21:44:53.026" level="INFO">${text} = 5</msg>
<status status="PASS" starttime="20230801 21:44:52.953" endtime="20230801 21:44:53.026"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 21:44:53.028" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ngày nghỉ"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 21:44:53.026" endtime="20230801 21:44:53.028"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:44:53.028" endtime="20230801 21:44:53.146"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 21:44:53.146" level="INFO">Fills the text '5' in the given field.</msg>
<status status="PASS" starttime="20230801 21:44:53.146" endtime="20230801 21:44:53.224"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:53.224" level="INFO">Length is 1</msg>
<msg timestamp="20230801 21:44:53.224" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 21:44:53.224" endtime="20230801 21:44:53.224"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 21:44:53.237" level="INFO">${STATE["Ngày nghỉ"]} = 5</msg>
<status status="PASS" starttime="20230801 21:44:53.236" endtime="20230801 21:44:53.237"/>
</kw>
<status status="PASS" starttime="20230801 21:44:53.235" endtime="20230801 21:44:53.237"/>
</branch>
<status status="PASS" starttime="20230801 21:44:53.224" endtime="20230801 21:44:53.237"/>
</if>
<status status="PASS" starttime="20230801 21:44:52.953" endtime="20230801 21:44:53.239"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:44:53.241" endtime="20230801 21:44:53.873"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:53.873" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 21:44:53.873" endtime="20230801 21:44:53.873"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:44:53.901" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:44:53.873" endtime="20230801 21:44:53.901"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 21:44:53.903" endtime="20230801 21:44:53.903"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 21:44:53.904" endtime="20230801 21:44:53.904"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:53.902" endtime="20230801 21:44:53.905"/>
</branch>
<status status="PASS" starttime="20230801 21:44:53.902" endtime="20230801 21:44:53.905"/>
</if>
<status status="PASS" starttime="20230801 21:44:53.873" endtime="20230801 21:44:53.906"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 21:44:53.906" endtime="20230801 21:44:53.966"/>
</kw>
<status status="PASS" starttime="20230801 21:44:53.241" endtime="20230801 21:44:53.967"/>
</kw>
<kw name="Then User look message &quot;Còn những yêu cầu nghỉ cần duyệt&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:44:53.986" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 21:44:53.986" endtime="20230801 21:44:53.986"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:44:53.986" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:44:53.986" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 21:44:53.986" endtime="20230801 21:44:53.986"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 21:44:53.986" endtime="20230801 21:44:53.986"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:53.986" endtime="20230801 21:44:53.986"/>
</branch>
<status status="PASS" starttime="20230801 21:44:53.986" endtime="20230801 21:44:54.001"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 21:44:55.211" level="INFO">Text: 'Còn những yêu cầu nghỉ cần duyệt'</msg>
<status status="PASS" starttime="20230801 21:44:54.003" endtime="20230801 21:44:55.212"/>
</kw>
<status status="PASS" starttime="20230801 21:44:54.002" endtime="20230801 21:44:55.212"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:44:55.213" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 21:44:55.213" endtime="20230801 21:44:55.214"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:44:55.730" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-6.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-6.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 21:44:55.730" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/test/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 21:44:55.730" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 21:44:55.223" endtime="20230801 21:44:55.742"/>
</kw>
<status status="FAIL" starttime="20230801 21:44:55.220" endtime="20230801 21:44:55.742"/>
</kw>
<msg timestamp="20230801 21:44:55.742" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 21:44:55.219" endtime="20230801 21:44:55.742"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 21:44:55.746" endtime="20230801 21:44:55.746"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:44:55.742" endtime="20230801 21:44:55.746"/>
</branch>
<status status="PASS" starttime="20230801 21:44:55.742" endtime="20230801 21:44:55.746"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:45:01.413" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 21:44:55.746" endtime="20230801 21:45:01.413"/>
</kw>
<status status="PASS" starttime="20230801 21:44:55.746" endtime="20230801 21:45:01.413"/>
</kw>
<status status="PASS" starttime="20230801 21:44:53.986" endtime="20230801 21:45:01.413"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 21:45:02.728" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 21:45:01.413" endtime="20230801 21:45:02.728"/>
</kw>
<status status="PASS" starttime="20230801 21:45:01.413" endtime="20230801 21:45:02.728"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230801 21:44:33.516" endtime="20230801 21:45:02.728"/>
</test>
<test id="s1-t4" name="EDU-21 Verify that the error message displayed when editing a user with an existing Manager still has other leave requests that need approval &amp; &quot;Lưu và tạo mới&quot; button" line="33">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 21:45:02.751" endtime="20230801 21:45:02.752"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 21:45:02.754" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\test\\browser\\traces\\50a8fec7-6ef9-4f2a-b98e-cf4cc0e6900b"}</msg>
<msg timestamp="20230801 21:45:04.264" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\test\\browser\\traces\\50a8fec7-6ef9-4f2a-b98e-cf4cc0e6900b"}</msg>
<status status="PASS" starttime="20230801 21:45:02.752" endtime="20230801 21:45:04.264"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 21:45:06.181" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 21:45:06.182" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 21:45:04.264" endtime="20230801 21:45:06.182"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 21:45:06.184" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 21:45:06.182" endtime="20230801 21:45:06.184"/>
</kw>
<status status="PASS" starttime="20230801 21:45:02.750" endtime="20230801 21:45:06.185"/>
</kw>
<kw name="Go to page edit user with the &quot;Staff&quot; role" library="common" sourcename="Go to page ${name} user with the &quot;${role}&quot; role">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:45:06.190" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 21:45:06.190" endtime="20230801 21:45:06.191"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:45:06.192" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 21:45:06.191" endtime="20230801 21:45:06.192"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:45:06.193" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 21:45:06.192" endtime="20230801 21:45:06.193"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:45:06.194" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:45:06.195" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 21:45:06.194" endtime="20230801 21:45:06.195"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:45:06.196" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 21:45:06.195" endtime="20230801 21:45:06.196"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:45:06.198" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:45:06.198" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 21:45:06.197" endtime="20230801 21:45:06.198"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.200" endtime="20230801 21:45:06.200"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.201" endtime="20230801 21:45:06.201"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:06.199" endtime="20230801 21:45:06.202"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.202" endtime="20230801 21:45:06.203"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.203" endtime="20230801 21:45:06.203"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.204" endtime="20230801 21:45:06.204"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:06.202" endtime="20230801 21:45:06.204"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.205" endtime="20230801 21:45:06.206"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.206" endtime="20230801 21:45:06.206"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:06.205" endtime="20230801 21:45:06.207"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.207" endtime="20230801 21:45:06.208"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.208" endtime="20230801 21:45:06.209"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:06.207" endtime="20230801 21:45:06.209"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.210" endtime="20230801 21:45:06.210"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.211" endtime="20230801 21:45:06.211"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:06.209" endtime="20230801 21:45:06.211"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.212" endtime="20230801 21:45:06.213"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.213" endtime="20230801 21:45:06.214"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:06.212" endtime="20230801 21:45:06.214"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.215" endtime="20230801 21:45:06.215"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.217" endtime="20230801 21:45:06.217"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:06.214" endtime="20230801 21:45:06.218"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.219" endtime="20230801 21:45:06.219"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:06.218" endtime="20230801 21:45:06.220"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 21:45:06.221" endtime="20230801 21:45:06.221"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:06.220" endtime="20230801 21:45:06.222"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.223" endtime="20230801 21:45:06.223"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.224" endtime="20230801 21:45:06.224"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:06.222" endtime="20230801 21:45:06.225"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.226" endtime="20230801 21:45:06.226"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:06.225" endtime="20230801 21:45:06.227"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.228" endtime="20230801 21:45:06.228"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:06.227" endtime="20230801 21:45:06.230"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.232" endtime="20230801 21:45:06.232"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:06.230" endtime="20230801 21:45:06.233"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:45:06.236" endtime="20230801 21:45:06.236"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:06.234" endtime="20230801 21:45:06.236"/>
</branch>
<status status="PASS" starttime="20230801 21:45:06.198" endtime="20230801 21:45:06.237"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:45:06.244" level="INFO">Length is 19</msg>
<msg timestamp="20230801 21:45:06.245" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 21:45:06.238" endtime="20230801 21:45:06.245"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 21:45:06.248" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 21:45:06.247" endtime="20230801 21:45:06.248"/>
</kw>
<status status="PASS" starttime="20230801 21:45:06.246" endtime="20230801 21:45:06.249"/>
</branch>
<status status="PASS" starttime="20230801 21:45:06.246" endtime="20230801 21:45:06.249"/>
</if>
<msg timestamp="20230801 21:45:06.252" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 21:45:06.189" endtime="20230801 21:45:06.254"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 21:45:06.256" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 21:45:06.255" endtime="20230801 21:45:06.256"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:45:06.257" endtime="20230801 21:45:08.313"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 21:45:08.318" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230801 21:45:08.313" endtime="20230801 21:45:08.393"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:45:08.394" level="INFO">Length is 19</msg>
<msg timestamp="20230801 21:45:08.395" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 21:45:08.394" endtime="20230801 21:45:08.395"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 21:45:08.397" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 21:45:08.396" endtime="20230801 21:45:08.397"/>
</kw>
<status status="PASS" starttime="20230801 21:45:08.395" endtime="20230801 21:45:08.398"/>
</branch>
<status status="PASS" starttime="20230801 21:45:08.395" endtime="20230801 21:45:08.398"/>
</if>
<status status="PASS" starttime="20230801 21:45:06.188" endtime="20230801 21:45:08.398"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:45:08.401" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 21:45:08.401" endtime="20230801 21:45:08.402"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:45:08.403" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 21:45:08.402" endtime="20230801 21:45:08.403"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:45:08.404" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 21:45:08.403" endtime="20230801 21:45:08.404"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:45:08.405" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:45:08.405" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 21:45:08.404" endtime="20230801 21:45:08.405"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:45:08.406" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 21:45:08.406" endtime="20230801 21:45:08.406"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:45:08.408" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:45:08.408" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 21:45:08.407" endtime="20230801 21:45:08.408"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.409" endtime="20230801 21:45:08.409"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.410" endtime="20230801 21:45:08.410"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:08.408" endtime="20230801 21:45:08.411"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.412" endtime="20230801 21:45:08.412"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.413" endtime="20230801 21:45:08.413"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.414" endtime="20230801 21:45:08.414"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:08.411" endtime="20230801 21:45:08.414"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.415" endtime="20230801 21:45:08.416"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.416" endtime="20230801 21:45:08.417"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:08.415" endtime="20230801 21:45:08.417"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.418" endtime="20230801 21:45:08.418"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.419" endtime="20230801 21:45:08.419"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:08.417" endtime="20230801 21:45:08.419"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.420" endtime="20230801 21:45:08.421"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.421" endtime="20230801 21:45:08.421"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:08.420" endtime="20230801 21:45:08.422"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.423" endtime="20230801 21:45:08.423"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.423" endtime="20230801 21:45:08.424"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:08.422" endtime="20230801 21:45:08.424"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.425" endtime="20230801 21:45:08.425"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.426" endtime="20230801 21:45:08.426"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:08.424" endtime="20230801 21:45:08.426"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.427" endtime="20230801 21:45:08.428"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:08.426" endtime="20230801 21:45:08.428"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 21:45:08.429" endtime="20230801 21:45:08.429"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:08.428" endtime="20230801 21:45:08.429"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.430" endtime="20230801 21:45:08.430"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.430" endtime="20230801 21:45:08.430"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:08.430" endtime="20230801 21:45:08.430"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.430" endtime="20230801 21:45:08.430"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:08.430" endtime="20230801 21:45:08.430"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.430" endtime="20230801 21:45:08.430"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:08.430" endtime="20230801 21:45:08.430"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.430" endtime="20230801 21:45:08.430"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:08.430" endtime="20230801 21:45:08.430"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.430" endtime="20230801 21:45:08.430"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:08.430" endtime="20230801 21:45:08.430"/>
</branch>
<status status="PASS" starttime="20230801 21:45:08.408" endtime="20230801 21:45:08.430"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:45:08.430" level="INFO">Length is 13</msg>
<msg timestamp="20230801 21:45:08.430" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 21:45:08.430" endtime="20230801 21:45:08.430"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 21:45:08.430" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 21:45:08.430" endtime="20230801 21:45:08.430"/>
</kw>
<status status="PASS" starttime="20230801 21:45:08.430" endtime="20230801 21:45:08.430"/>
</branch>
<status status="PASS" starttime="20230801 21:45:08.430" endtime="20230801 21:45:08.430"/>
</if>
<msg timestamp="20230801 21:45:08.430" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 21:45:08.400" endtime="20230801 21:45:08.430"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 21:45:08.445" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 21:45:08.430" endtime="20230801 21:45:08.445"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:45:08.445" endtime="20230801 21:45:08.590"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 21:45:08.593" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230801 21:45:08.590" endtime="20230801 21:45:08.657"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:45:08.657" level="INFO">Length is 13</msg>
<msg timestamp="20230801 21:45:08.657" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 21:45:08.657" endtime="20230801 21:45:08.657"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 21:45:08.657" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 21:45:08.657" endtime="20230801 21:45:08.657"/>
</kw>
<status status="PASS" starttime="20230801 21:45:08.657" endtime="20230801 21:45:08.657"/>
</branch>
<status status="PASS" starttime="20230801 21:45:08.657" endtime="20230801 21:45:08.663"/>
</if>
<status status="PASS" starttime="20230801 21:45:08.399" endtime="20230801 21:45:08.663"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:45:08.663" endtime="20230801 21:45:08.932"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:45:08.937" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 21:45:08.936" endtime="20230801 21:45:08.938"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:45:08.962" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:45:08.938" endtime="20230801 21:45:08.962"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.963" endtime="20230801 21:45:08.964"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 21:45:08.965" endtime="20230801 21:45:08.967"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:08.963" endtime="20230801 21:45:08.968"/>
</branch>
<status status="PASS" starttime="20230801 21:45:08.962" endtime="20230801 21:45:08.968"/>
</if>
<status status="PASS" starttime="20230801 21:45:08.933" endtime="20230801 21:45:08.970"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 21:45:08.972" endtime="20230801 21:45:09.024"/>
</kw>
<status status="PASS" starttime="20230801 21:45:08.663" endtime="20230801 21:45:09.024"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:45:09.024" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 21:45:09.024" endtime="20230801 21:45:09.024"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:45:09.024" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:45:09.024" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 21:45:09.024" endtime="20230801 21:45:09.024"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 21:45:09.039" endtime="20230801 21:45:09.039"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:09.024" endtime="20230801 21:45:09.039"/>
</branch>
<status status="PASS" starttime="20230801 21:45:09.024" endtime="20230801 21:45:09.039"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 21:45:11.295" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 21:45:09.039" endtime="20230801 21:45:11.296"/>
</kw>
<status status="PASS" starttime="20230801 21:45:09.039" endtime="20230801 21:45:11.296"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:45:11.297" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 21:45:11.297" endtime="20230801 21:45:11.297"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:45:11.722" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-7.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-7.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 21:45:11.722" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/test/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 21:45:11.722" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 21:45:11.298" endtime="20230801 21:45:11.725"/>
</kw>
<status status="FAIL" starttime="20230801 21:45:11.298" endtime="20230801 21:45:11.726"/>
</kw>
<msg timestamp="20230801 21:45:11.726" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 21:45:11.298" endtime="20230801 21:45:11.726"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 21:45:11.728" endtime="20230801 21:45:11.728"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:11.727" endtime="20230801 21:45:11.728"/>
</branch>
<status status="PASS" starttime="20230801 21:45:11.727" endtime="20230801 21:45:11.729"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:45:14.262" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 21:45:11.734" endtime="20230801 21:45:14.262"/>
</kw>
<status status="PASS" starttime="20230801 21:45:11.730" endtime="20230801 21:45:14.262"/>
</kw>
<status status="PASS" starttime="20230801 21:45:09.024" endtime="20230801 21:45:14.262"/>
</kw>
<status status="PASS" starttime="20230801 21:45:06.187" endtime="20230801 21:45:14.262"/>
</kw>
<kw name="When Click &quot;Người Dùng&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:45:14.262" endtime="20230801 21:45:14.468"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:45:14.468" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:45:14.468" endtime="20230801 21:45:14.468"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:45:14.485" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 21:45:14.468" endtime="20230801 21:45:14.485"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:45:17.260" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 21:45:14.485" endtime="20230801 21:45:17.260"/>
</kw>
<status status="PASS" starttime="20230801 21:45:14.485" endtime="20230801 21:45:17.261"/>
</kw>
<status status="PASS" starttime="20230801 21:45:14.485" endtime="20230801 21:45:17.261"/>
</branch>
<status status="PASS" starttime="20230801 21:45:14.485" endtime="20230801 21:45:17.261"/>
</if>
<status status="PASS" starttime="20230801 21:45:14.468" endtime="20230801 21:45:17.261"/>
</kw>
<status status="PASS" starttime="20230801 21:45:14.262" endtime="20230801 21:45:17.263"/>
</kw>
<if>
<branch type="IF" condition="'${role}' == 'Staff'">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:45:17.265" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:45:17.265" endtime="20230801 21:45:17.265"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:45:17.280" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:45:17.265" endtime="20230801 21:45:17.280"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 21:45:17.280" endtime="20230801 21:45:17.280"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:17.280" endtime="20230801 21:45:17.280"/>
</branch>
<status status="PASS" starttime="20230801 21:45:17.280" endtime="20230801 21:45:17.280"/>
</if>
<status status="PASS" starttime="20230801 21:45:17.264" endtime="20230801 21:45:17.280"/>
</kw>
<status status="PASS" starttime="20230801 21:45:17.263" endtime="20230801 21:45:17.280"/>
</branch>
<branch type="ELSE IF" condition="'${role}' != 'Staff'">
<kw name="Click list Role with &quot;${role}&quot;" library="common" sourcename="Click list ${name} with &quot;${text}&quot;">
<status status="NOT RUN" starttime="20230801 21:45:17.280" endtime="20230801 21:45:17.280"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:17.280" endtime="20230801 21:45:17.280"/>
</branch>
<status status="PASS" starttime="20230801 21:45:17.263" endtime="20230801 21:45:17.280"/>
</if>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20230801 21:45:17.295" endtime="20230801 21:45:17.295"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:17.280" endtime="20230801 21:45:17.295"/>
</branch>
<status status="PASS" starttime="20230801 21:45:17.280" endtime="20230801 21:45:17.295"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:45:17.295" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:45:17.295" endtime="20230801 21:45:17.295"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:45:17.311" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:45:17.295" endtime="20230801 21:45:17.311"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 21:45:17.327" endtime="20230801 21:45:17.327"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:17.311" endtime="20230801 21:45:17.327"/>
</branch>
<status status="PASS" starttime="20230801 21:45:17.311" endtime="20230801 21:45:17.327"/>
</if>
<status status="PASS" starttime="20230801 21:45:17.295" endtime="20230801 21:45:17.327"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 21:45:17.427" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 21:45:17.327" endtime="20230801 21:45:17.427"/>
</kw>
<status status="PASS" starttime="20230801 21:45:06.186" endtime="20230801 21:45:17.427"/>
</kw>
<kw name="And Select the user &quot;Còn những yêu cầu nghỉ cần duyệt&quot; to edit" library="common" sourcename="Select the ${text} &quot;${name}&quot; to edit">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:45:17.427" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:45:17.427" endtime="20230801 21:45:17.427"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:45:17.466" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:45:17.427" endtime="20230801 21:45:17.466"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 21:45:17.469" endtime="20230801 21:45:17.469"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:17.467" endtime="20230801 21:45:17.470"/>
</branch>
<status status="PASS" starttime="20230801 21:45:17.467" endtime="20230801 21:45:17.470"/>
</if>
<status status="PASS" starttime="20230801 21:45:17.427" endtime="20230801 21:45:17.471"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 21:45:17.495" level="INFO">Found 4 Locators successfully.</msg>
<msg timestamp="20230801 21:45:17.495" level="INFO">${elements} = ['element=ff026605-0a97-4b5b-8674-a240d3c70895', 'element=a79b4d17-4792-4247-9d84-41096281d629', 'element=a84847c0-5511-46bb-9e85-efe360b0e34c', 'element=167918e7-0101-487b-b149-424bb8cbafd6']</msg>
<status status="PASS" starttime="20230801 21:45:17.472" endtime="20230801 21:45:17.495"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${elementCount}</var>
<arg>${elements}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:45:17.495" level="INFO">Length is 4</msg>
<msg timestamp="20230801 21:45:17.495" level="INFO">${elementCount} = 4</msg>
<status status="PASS" starttime="20230801 21:45:17.495" endtime="20230801 21:45:17.495"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'Team has been deleted'">
<kw name="Evaluate" library="BuiltIn">
<var>${randomIndex}</var>
<arg>${elementCount}-2</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230801 21:45:17.507" endtime="20230801 21:45:17.508"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:17.495" endtime="20230801 21:45:17.508"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'Còn những yêu cầu nghỉ cần duyệt'">
<kw name="Evaluate" library="BuiltIn">
<var>${randomIndex}</var>
<arg>${elementCount}-3</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 21:45:17.511" level="INFO">${randomIndex} = 1</msg>
<status status="PASS" starttime="20230801 21:45:17.510" endtime="20230801 21:45:17.511"/>
</kw>
<status status="PASS" starttime="20230801 21:45:17.508" endtime="20230801 21:45:17.511"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='valid'">
<kw name="Evaluate" library="BuiltIn">
<var>${randomIndex}</var>
<arg>${elementCount}-${elementCount}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230801 21:45:17.511" endtime="20230801 21:45:17.511"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:17.511" endtime="20230801 21:45:17.511"/>
</branch>
<status status="PASS" starttime="20230801 21:45:17.495" endtime="20230801 21:45:17.511"/>
</if>
<kw name="Click" library="Browser">
<arg>${elements}[${randomIndex}]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:45:17.511" endtime="20230801 21:45:18.015"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:45:18.021" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:45:18.020" endtime="20230801 21:45:18.021"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:45:18.688" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 21:45:18.022" endtime="20230801 21:45:18.688"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:45:19.290" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 21:45:18.692" endtime="20230801 21:45:19.291"/>
</kw>
<status status="PASS" starttime="20230801 21:45:18.689" endtime="20230801 21:45:19.291"/>
</kw>
<status status="PASS" starttime="20230801 21:45:18.689" endtime="20230801 21:45:19.291"/>
</branch>
<status status="PASS" starttime="20230801 21:45:18.688" endtime="20230801 21:45:19.292"/>
</if>
<status status="PASS" starttime="20230801 21:45:18.017" endtime="20230801 21:45:19.292"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:45:19.295" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 21:45:19.294" endtime="20230801 21:45:19.295"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:45:19.353" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:45:19.296" endtime="20230801 21:45:19.353"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 21:45:19.353" endtime="20230801 21:45:19.363"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:19.353" endtime="20230801 21:45:19.363"/>
</branch>
<status status="PASS" starttime="20230801 21:45:19.353" endtime="20230801 21:45:19.363"/>
</if>
<status status="PASS" starttime="20230801 21:45:19.293" endtime="20230801 21:45:19.363"/>
</kw>
<status status="PASS" starttime="20230801 21:45:17.427" endtime="20230801 21:45:19.363"/>
</kw>
<kw name="And Click select Quản lý with &quot;Hồ Văn Nhật&quot;" library="common" sourcename="Click select ${manager} with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:45:19.369" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 21:45:19.368" endtime="20230801 21:45:19.369"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:45:19.371" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 21:45:19.370" endtime="20230801 21:45:19.371"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:45:19.371" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 21:45:19.371" endtime="20230801 21:45:19.371"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:45:19.371" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:45:19.371" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 21:45:19.371" endtime="20230801 21:45:19.371"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:45:19.371" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 21:45:19.371" endtime="20230801 21:45:19.371"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:45:19.371" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:45:19.371" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 21:45:19.371" endtime="20230801 21:45:19.371"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.371" endtime="20230801 21:45:19.371"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.371" endtime="20230801 21:45:19.371"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:19.371" endtime="20230801 21:45:19.371"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.371" endtime="20230801 21:45:19.371"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.385" endtime="20230801 21:45:19.386"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.386" endtime="20230801 21:45:19.387"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:19.371" endtime="20230801 21:45:19.387"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.388" endtime="20230801 21:45:19.388"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.389" endtime="20230801 21:45:19.389"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:19.387" endtime="20230801 21:45:19.389"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.391" endtime="20230801 21:45:19.391"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.392" endtime="20230801 21:45:19.392"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:19.390" endtime="20230801 21:45:19.392"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.394" endtime="20230801 21:45:19.394"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.394" endtime="20230801 21:45:19.395"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:19.393" endtime="20230801 21:45:19.395"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.396" endtime="20230801 21:45:19.396"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.397" endtime="20230801 21:45:19.397"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:19.395" endtime="20230801 21:45:19.401"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.403" endtime="20230801 21:45:19.403"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.404" endtime="20230801 21:45:19.404"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:19.402" endtime="20230801 21:45:19.405"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.408" endtime="20230801 21:45:19.408"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:19.405" endtime="20230801 21:45:19.408"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 21:45:19.408" endtime="20230801 21:45:19.408"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:19.408" endtime="20230801 21:45:19.408"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.408" endtime="20230801 21:45:19.408"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.408" endtime="20230801 21:45:19.408"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:19.408" endtime="20230801 21:45:19.408"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.408" endtime="20230801 21:45:19.408"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:19.408" endtime="20230801 21:45:19.408"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.418" endtime="20230801 21:45:19.418"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:19.408" endtime="20230801 21:45:19.418"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.420" endtime="20230801 21:45:19.420"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:19.419" endtime="20230801 21:45:19.420"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:45:19.422" endtime="20230801 21:45:19.424"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:19.421" endtime="20230801 21:45:19.424"/>
</branch>
<status status="PASS" starttime="20230801 21:45:19.371" endtime="20230801 21:45:19.424"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:45:19.426" level="INFO">Length is 11</msg>
<msg timestamp="20230801 21:45:19.426" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20230801 21:45:19.425" endtime="20230801 21:45:19.426"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 21:45:19.429" level="INFO">${text} = Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230801 21:45:19.429" endtime="20230801 21:45:19.429"/>
</kw>
<status status="PASS" starttime="20230801 21:45:19.427" endtime="20230801 21:45:19.429"/>
</branch>
<status status="PASS" starttime="20230801 21:45:19.427" endtime="20230801 21:45:19.429"/>
</if>
<msg timestamp="20230801 21:45:19.429" level="INFO">${text} = Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230801 21:45:19.363" endtime="20230801 21:45:19.429"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${manager}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 21:45:19.436" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 21:45:19.429" endtime="20230801 21:45:19.436"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:45:19.451" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 21:45:19.436" endtime="20230801 21:45:19.451"/>
</kw>
<status status="PASS" starttime="20230801 21:45:19.436" endtime="20230801 21:45:19.463"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:45:19.463" endtime="20230801 21:45:19.778"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${manager}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 21:45:19.780" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 21:45:19.779" endtime="20230801 21:45:19.780"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 21:45:19.782" level="INFO">Fills the text 'Hồ Văn Nhật' in the given field.</msg>
<status status="PASS" starttime="20230801 21:45:19.781" endtime="20230801 21:45:19.858"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>xpath=//span[contains(text(),'${text}')]</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:45:21.315" level="INFO">Waited for Element with selector xpath=//span[contains(text(),'Hồ Văn Nhật')] at state visible</msg>
<status status="PASS" starttime="20230801 21:45:19.861" endtime="20230801 21:45:21.316"/>
</kw>
<status status="PASS" starttime="20230801 21:45:19.859" endtime="20230801 21:45:21.317"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//span[contains(text(),'${text}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:45:21.318" endtime="20230801 21:45:21.467"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:45:21.469" level="INFO">Length is 11</msg>
<msg timestamp="20230801 21:45:21.469" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20230801 21:45:21.468" endtime="20230801 21:45:21.469"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${manager}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 21:45:21.472" level="INFO">${STATE["Quản lý"]} = Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230801 21:45:21.470" endtime="20230801 21:45:21.472"/>
</kw>
<status status="PASS" starttime="20230801 21:45:21.469" endtime="20230801 21:45:21.472"/>
</branch>
<status status="PASS" starttime="20230801 21:45:21.469" endtime="20230801 21:45:21.472"/>
</if>
<status status="PASS" starttime="20230801 21:45:19.363" endtime="20230801 21:45:21.473"/>
</kw>
<kw name="And Enter &quot;leave date valid&quot; in &quot;Ngày nghỉ&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:45:21.479" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 21:45:21.478" endtime="20230801 21:45:21.479"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:45:21.480" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 21:45:21.479" endtime="20230801 21:45:21.480"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:45:21.481" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 21:45:21.481" endtime="20230801 21:45:21.481"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:45:21.483" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:45:21.483" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 21:45:21.483" endtime="20230801 21:45:21.484"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:45:21.485" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 21:45:21.484" endtime="20230801 21:45:21.485"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:45:21.488" level="INFO">Length is 1</msg>
<msg timestamp="20230801 21:45:21.488" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 21:45:21.487" endtime="20230801 21:45:21.488"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:45:21.489" endtime="20230801 21:45:21.490"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:45:21.490" endtime="20230801 21:45:21.491"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:21.489" endtime="20230801 21:45:21.491"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:45:21.492" endtime="20230801 21:45:21.492"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:21.493" endtime="20230801 21:45:21.493"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 21:45:21.494" endtime="20230801 21:45:21.494"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:21.491" endtime="20230801 21:45:21.495"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:21.496" endtime="20230801 21:45:21.496"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:21.497" endtime="20230801 21:45:21.497"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:21.495" endtime="20230801 21:45:21.498"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:21.499" endtime="20230801 21:45:21.500"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:21.500" endtime="20230801 21:45:21.500"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:21.498" endtime="20230801 21:45:21.501"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20230801 21:45:21.503" level="INFO">${new_text} = 11</msg>
<status status="PASS" starttime="20230801 21:45:21.502" endtime="20230801 21:45:21.503"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230801 21:45:21.504" level="INFO">${new_text} = 11</msg>
<status status="PASS" starttime="20230801 21:45:21.503" endtime="20230801 21:45:21.504"/>
</kw>
<status status="PASS" starttime="20230801 21:45:21.501" endtime="20230801 21:45:21.504"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:21.506" endtime="20230801 21:45:21.507"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:21.508" endtime="20230801 21:45:21.509"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:21.505" endtime="20230801 21:45:21.510"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:21.510" endtime="20230801 21:45:21.511"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:21.511" endtime="20230801 21:45:21.512"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:21.510" endtime="20230801 21:45:21.512"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 21:45:21.513" endtime="20230801 21:45:21.513"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:21.512" endtime="20230801 21:45:21.513"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 21:45:21.514" endtime="20230801 21:45:21.514"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:21.513" endtime="20230801 21:45:21.514"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 21:45:21.515" endtime="20230801 21:45:21.515"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 21:45:21.518" endtime="20230801 21:45:21.519"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:21.515" endtime="20230801 21:45:21.519"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 21:45:21.521" endtime="20230801 21:45:21.521"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:21.520" endtime="20230801 21:45:21.521"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 21:45:21.522" endtime="20230801 21:45:21.523"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:21.522" endtime="20230801 21:45:21.523"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:45:21.524" endtime="20230801 21:45:21.525"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:21.523" endtime="20230801 21:45:21.525"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 21:45:21.526" endtime="20230801 21:45:21.526"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:21.525" endtime="20230801 21:45:21.526"/>
</branch>
<status status="PASS" starttime="20230801 21:45:21.488" endtime="20230801 21:45:21.527"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:45:21.528" level="INFO">Length is 8</msg>
<msg timestamp="20230801 21:45:21.528" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 21:45:21.527" endtime="20230801 21:45:21.528"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 21:45:21.531" level="INFO">${text} = 11</msg>
<status status="PASS" starttime="20230801 21:45:21.530" endtime="20230801 21:45:21.531"/>
</kw>
<status status="PASS" starttime="20230801 21:45:21.529" endtime="20230801 21:45:21.531"/>
</branch>
<status status="PASS" starttime="20230801 21:45:21.529" endtime="20230801 21:45:21.532"/>
</if>
<msg timestamp="20230801 21:45:21.533" level="INFO">${text} = 11</msg>
<status status="PASS" starttime="20230801 21:45:21.477" endtime="20230801 21:45:21.533"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 21:45:21.537" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ngày nghỉ"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 21:45:21.534" endtime="20230801 21:45:21.537"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:45:21.538" endtime="20230801 21:45:21.703"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 21:45:21.704" level="INFO">Fills the text '11' in the given field.</msg>
<status status="PASS" starttime="20230801 21:45:21.703" endtime="20230801 21:45:21.783"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:45:21.784" level="INFO">Length is 2</msg>
<msg timestamp="20230801 21:45:21.784" level="INFO">${cnt} = 2</msg>
<status status="PASS" starttime="20230801 21:45:21.783" endtime="20230801 21:45:21.784"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 21:45:21.787" level="INFO">${STATE["Ngày nghỉ"]} = 11</msg>
<status status="PASS" starttime="20230801 21:45:21.786" endtime="20230801 21:45:21.787"/>
</kw>
<status status="PASS" starttime="20230801 21:45:21.785" endtime="20230801 21:45:21.788"/>
</branch>
<status status="PASS" starttime="20230801 21:45:21.785" endtime="20230801 21:45:21.788"/>
</if>
<status status="PASS" starttime="20230801 21:45:21.476" endtime="20230801 21:45:21.789"/>
</kw>
<kw name="And Click &quot;Lưu và tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 21:45:21.791" endtime="20230801 21:45:22.449"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:45:22.452" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 21:45:22.451" endtime="20230801 21:45:22.452"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 21:45:22.463" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 21:45:22.452" endtime="20230801 21:45:22.463"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 21:45:22.465" endtime="20230801 21:45:22.465"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 21:45:22.466" endtime="20230801 21:45:22.466"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:22.464" endtime="20230801 21:45:22.467"/>
</branch>
<status status="PASS" starttime="20230801 21:45:22.464" endtime="20230801 21:45:22.467"/>
</if>
<status status="PASS" starttime="20230801 21:45:22.450" endtime="20230801 21:45:22.470"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 21:45:22.471" endtime="20230801 21:45:22.533"/>
</kw>
<status status="PASS" starttime="20230801 21:45:21.790" endtime="20230801 21:45:22.534"/>
</kw>
<kw name="Then User look message &quot;Còn những yêu cầu nghỉ cần duyệt&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 21:45:22.543" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 21:45:22.542" endtime="20230801 21:45:22.543"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 21:45:22.544" level="INFO">Length is 0</msg>
<msg timestamp="20230801 21:45:22.544" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 21:45:22.544" endtime="20230801 21:45:22.544"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 21:45:22.546" endtime="20230801 21:45:22.546"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:22.545" endtime="20230801 21:45:22.546"/>
</branch>
<status status="PASS" starttime="20230801 21:45:22.545" endtime="20230801 21:45:22.546"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 21:45:23.947" level="INFO">Text: 'Còn những yêu cầu nghỉ cần duyệt'</msg>
<status status="PASS" starttime="20230801 21:45:22.555" endtime="20230801 21:45:23.947"/>
</kw>
<status status="PASS" starttime="20230801 21:45:22.547" endtime="20230801 21:45:23.947"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 21:45:23.950" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 21:45:23.948" endtime="20230801 21:45:23.950"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:45:24.455" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-8.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-8.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 21:45:24.455" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/test/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 21:45:24.456" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 21:45:23.959" endtime="20230801 21:45:24.458"/>
</kw>
<status status="FAIL" starttime="20230801 21:45:23.956" endtime="20230801 21:45:24.459"/>
</kw>
<msg timestamp="20230801 21:45:24.459" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 21:45:23.955" endtime="20230801 21:45:24.459"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 21:45:24.461" endtime="20230801 21:45:24.461"/>
</kw>
<status status="NOT RUN" starttime="20230801 21:45:24.460" endtime="20230801 21:45:24.461"/>
</branch>
<status status="PASS" starttime="20230801 21:45:24.460" endtime="20230801 21:45:24.461"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 21:45:30.124" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 21:45:24.464" endtime="20230801 21:45:30.125"/>
</kw>
<status status="PASS" starttime="20230801 21:45:24.462" endtime="20230801 21:45:30.125"/>
</kw>
<status status="PASS" starttime="20230801 21:45:22.541" endtime="20230801 21:45:30.125"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 21:45:31.249" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 21:45:30.128" endtime="20230801 21:45:31.249"/>
</kw>
<status status="PASS" starttime="20230801 21:45:30.127" endtime="20230801 21:45:31.249"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230801 21:45:02.728" endtime="20230801 21:45:31.252"/>
</test>
<status status="PASS" starttime="20230801 21:43:01.056" endtime="20230801 21:45:31.275"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="0" skip="0">@regression</stat>
<stat pass="4" fail="0" skip="0">@smoketest</stat>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="Test">Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.11.4 on win32)" generated="20230719 20:59:39.144" rpa="false" schemaversion="4">
<suite id="s1" name="Vite-React-Ari" source="C:\Users\nhats\OneDrive\Desktop\ARI\vite-react-ari">
<suite id="s1-s1" name="Test" source="C:\Users\nhats\OneDrive\Desktop\ARI\vite-react-ari\test">
<suite id="s1-s1-s1" name="Testcases" source="C:\Users\nhats\OneDrive\Desktop\ARI\vite-react-ari\test\testcases">
<suite id="s1-s1-s1-s1" name="Teeee" source="C:\Users\nhats\OneDrive\Desktop\ARI\vite-react-ari\test\testcases\teeee.robot">
<test id="s1-s1-s1-s1-t1" name="STA-16 Verify that staff can view the list of rejected leave date successfully" line="9">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230719 20:59:45.480" endtime="20230719 20:59:45.503"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230719 20:59:45.509" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\results\\browser\\traces\\670bfd30-0d1a-444b-a3d6-899ed757080b"}</msg>
<msg timestamp="20230719 20:59:47.984" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\results\\browser\\traces\\670bfd30-0d1a-444b-a3d6-899ed757080b"}</msg>
<status status="PASS" starttime="20230719 20:59:45.506" endtime="20230719 20:59:47.985"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230719 20:59:51.478" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230719 20:59:51.479" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230719 20:59:47.986" endtime="20230719 20:59:51.481"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230719 20:59:51.485" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230719 20:59:51.482" endtime="20230719 20:59:51.486"/>
</kw>
<status status="PASS" starttime="20230719 20:59:45.478" endtime="20230719 20:59:51.488"/>
</kw>
<kw name="Login to Staff" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat_staff@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230719 20:59:51.513" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230719 20:59:51.511" endtime="20230719 20:59:51.514"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230719 20:59:51.517" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230719 20:59:51.515" endtime="20230719 20:59:51.518"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230719 20:59:51.526" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230719 20:59:51.519" endtime="20230719 20:59:51.526"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230719 20:59:51.528" level="INFO">Length is 0</msg>
<msg timestamp="20230719 20:59:51.530" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230719 20:59:51.527" endtime="20230719 20:59:51.531"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230719 20:59:51.535" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230719 20:59:51.532" endtime="20230719 20:59:51.544"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230719 20:59:51.547" level="INFO">Length is 0</msg>
<msg timestamp="20230719 20:59:51.549" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230719 20:59:51.545" endtime="20230719 20:59:51.551"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230719 20:59:51.556" endtime="20230719 20:59:51.557"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230719 20:59:51.558" endtime="20230719 20:59:51.559"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:51.552" endtime="20230719 20:59:51.560"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230719 20:59:51.562" endtime="20230719 20:59:51.563"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230719 20:59:51.564" endtime="20230719 20:59:51.565"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230719 20:59:51.566" endtime="20230719 20:59:51.567"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:51.560" endtime="20230719 20:59:51.569"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230719 20:59:51.573" endtime="20230719 20:59:51.574"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230719 20:59:51.576" endtime="20230719 20:59:51.577"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:51.569" endtime="20230719 20:59:51.577"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230719 20:59:51.579" endtime="20230719 20:59:51.580"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230719 20:59:51.581" endtime="20230719 20:59:51.582"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:51.578" endtime="20230719 20:59:51.583"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230719 20:59:51.596" endtime="20230719 20:59:51.598"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230719 20:59:51.599" endtime="20230719 20:59:51.600"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:51.584" endtime="20230719 20:59:51.602"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230719 20:59:51.610" endtime="20230719 20:59:51.611"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:51.603" endtime="20230719 20:59:51.613"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230719 20:59:51.615" endtime="20230719 20:59:51.616"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:51.613" endtime="20230719 20:59:51.616"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230719 20:59:51.618" endtime="20230719 20:59:51.628"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230719 20:59:51.629" endtime="20230719 20:59:51.630"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:51.617" endtime="20230719 20:59:51.630"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230719 20:59:51.632" endtime="20230719 20:59:51.633"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:51.631" endtime="20230719 20:59:51.635"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230719 20:59:51.637" endtime="20230719 20:59:51.642"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:51.635" endtime="20230719 20:59:51.643"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230719 20:59:51.645" endtime="20230719 20:59:51.647"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:51.644" endtime="20230719 20:59:51.648"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230719 20:59:51.650" endtime="20230719 20:59:51.651"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:51.649" endtime="20230719 20:59:51.652"/>
</branch>
<status status="PASS" starttime="20230719 20:59:51.551" endtime="20230719 20:59:51.653"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230719 20:59:51.659" level="INFO">Length is 25</msg>
<msg timestamp="20230719 20:59:51.661" level="INFO">${cnt} = 25</msg>
<status status="PASS" starttime="20230719 20:59:51.653" endtime="20230719 20:59:51.661"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230719 20:59:51.668" level="INFO">${text} = hovannhat_staff@gmail.com</msg>
<status status="PASS" starttime="20230719 20:59:51.666" endtime="20230719 20:59:51.668"/>
</kw>
<status status="PASS" starttime="20230719 20:59:51.663" endtime="20230719 20:59:51.669"/>
</branch>
<status status="PASS" starttime="20230719 20:59:51.662" endtime="20230719 20:59:51.673"/>
</if>
<msg timestamp="20230719 20:59:51.674" level="INFO">${text} = hovannhat_staff@gmail.com</msg>
<status status="PASS" starttime="20230719 20:59:51.509" endtime="20230719 20:59:51.677"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230719 20:59:51.681" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230719 20:59:51.677" endtime="20230719 20:59:51.681"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230719 20:59:51.682" endtime="20230719 20:59:55.761"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230719 20:59:55.765" level="INFO">Fills the text 'hovannhat_staff@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230719 20:59:55.763" endtime="20230719 20:59:55.867"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230719 20:59:55.869" level="INFO">Length is 25</msg>
<msg timestamp="20230719 20:59:55.871" level="INFO">${cnt} = 25</msg>
<status status="PASS" starttime="20230719 20:59:55.868" endtime="20230719 20:59:55.871"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230719 20:59:55.878" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat_staff@gmail.com</msg>
<status status="PASS" starttime="20230719 20:59:55.875" endtime="20230719 20:59:55.879"/>
</kw>
<status status="PASS" starttime="20230719 20:59:55.873" endtime="20230719 20:59:55.881"/>
</branch>
<status status="PASS" starttime="20230719 20:59:55.872" endtime="20230719 20:59:55.881"/>
</if>
<status status="PASS" starttime="20230719 20:59:51.505" endtime="20230719 20:59:55.882"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230719 20:59:55.891" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230719 20:59:55.890" endtime="20230719 20:59:55.893"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230719 20:59:55.895" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230719 20:59:55.894" endtime="20230719 20:59:55.896"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230719 20:59:55.898" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230719 20:59:55.897" endtime="20230719 20:59:55.899"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230719 20:59:55.901" level="INFO">Length is 0</msg>
<msg timestamp="20230719 20:59:55.901" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230719 20:59:55.900" endtime="20230719 20:59:55.902"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230719 20:59:55.909" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230719 20:59:55.902" endtime="20230719 20:59:55.909"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230719 20:59:55.912" level="INFO">Length is 0</msg>
<msg timestamp="20230719 20:59:55.930" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230719 20:59:55.910" endtime="20230719 20:59:55.940"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230719 20:59:55.944" endtime="20230719 20:59:55.946"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230719 20:59:55.951" endtime="20230719 20:59:55.952"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:55.943" endtime="20230719 20:59:55.955"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230719 20:59:55.959" endtime="20230719 20:59:55.961"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230719 20:59:55.963" endtime="20230719 20:59:55.964"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230719 20:59:55.966" endtime="20230719 20:59:55.967"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:55.957" endtime="20230719 20:59:55.968"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230719 20:59:55.976" endtime="20230719 20:59:55.977"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230719 20:59:55.978" endtime="20230719 20:59:55.981"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:55.969" endtime="20230719 20:59:55.983"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230719 20:59:55.986" endtime="20230719 20:59:56.026"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230719 20:59:56.028" endtime="20230719 20:59:56.029"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:55.983" endtime="20230719 20:59:56.030"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230719 20:59:56.031" endtime="20230719 20:59:56.032"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230719 20:59:56.033" endtime="20230719 20:59:56.034"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:56.031" endtime="20230719 20:59:56.034"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230719 20:59:56.036" endtime="20230719 20:59:56.041"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:56.035" endtime="20230719 20:59:56.042"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230719 20:59:56.048" endtime="20230719 20:59:56.051"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:56.045" endtime="20230719 20:59:56.052"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230719 20:59:56.064" endtime="20230719 20:59:56.065"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230719 20:59:56.066" endtime="20230719 20:59:56.066"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:56.060" endtime="20230719 20:59:56.066"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230719 20:59:56.067" endtime="20230719 20:59:56.068"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:56.067" endtime="20230719 20:59:56.068"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230719 20:59:56.069" endtime="20230719 20:59:56.069"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:56.068" endtime="20230719 20:59:56.079"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230719 20:59:56.081" endtime="20230719 20:59:56.082"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:56.080" endtime="20230719 20:59:56.082"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230719 20:59:56.084" endtime="20230719 20:59:56.084"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:56.083" endtime="20230719 20:59:56.084"/>
</branch>
<status status="PASS" starttime="20230719 20:59:55.942" endtime="20230719 20:59:56.085"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230719 20:59:56.086" level="INFO">Length is 13</msg>
<msg timestamp="20230719 20:59:56.088" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230719 20:59:56.085" endtime="20230719 20:59:56.099"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230719 20:59:56.107" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230719 20:59:56.101" endtime="20230719 20:59:56.111"/>
</kw>
<status status="PASS" starttime="20230719 20:59:56.100" endtime="20230719 20:59:56.111"/>
</branch>
<status status="PASS" starttime="20230719 20:59:56.100" endtime="20230719 20:59:56.112"/>
</if>
<msg timestamp="20230719 20:59:56.114" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230719 20:59:55.887" endtime="20230719 20:59:56.116"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230719 20:59:56.125" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230719 20:59:56.117" endtime="20230719 20:59:56.128"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230719 20:59:56.129" endtime="20230719 20:59:56.293"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230719 20:59:56.296" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230719 20:59:56.294" endtime="20230719 20:59:56.374"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230719 20:59:56.377" level="INFO">Length is 13</msg>
<msg timestamp="20230719 20:59:56.377" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230719 20:59:56.375" endtime="20230719 20:59:56.380"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230719 20:59:56.386" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230719 20:59:56.381" endtime="20230719 20:59:56.387"/>
</kw>
<status status="PASS" starttime="20230719 20:59:56.381" endtime="20230719 20:59:56.388"/>
</branch>
<status status="PASS" starttime="20230719 20:59:56.380" endtime="20230719 20:59:56.389"/>
</if>
<status status="PASS" starttime="20230719 20:59:55.883" endtime="20230719 20:59:56.389"/>
</kw>
<kw name="Enter at &quot;Mật khẩu&quot; field to Login" library="common" sourcename="Enter at &quot;${name}&quot; field to Login">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230719 20:59:56.399" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230719 20:59:56.396" endtime="20230719 20:59:56.401"/>
</kw>
<kw name="Press Keys" library="Browser">
<arg>${element}</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given key combination into element found by ``selector``.</doc>
<status status="PASS" starttime="20230719 20:59:56.401" endtime="20230719 20:59:56.700"/>
</kw>
<status status="PASS" starttime="20230719 20:59:56.391" endtime="20230719 20:59:56.700"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230719 20:59:56.709" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230719 20:59:56.705" endtime="20230719 20:59:56.709"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230719 20:59:56.713" level="INFO">Length is 0</msg>
<msg timestamp="20230719 20:59:56.713" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230719 20:59:56.711" endtime="20230719 20:59:56.714"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230719 20:59:56.719" endtime="20230719 20:59:56.721"/>
</kw>
<status status="NOT RUN" starttime="20230719 20:59:56.715" endtime="20230719 20:59:56.722"/>
</branch>
<status status="PASS" starttime="20230719 20:59:56.715" endtime="20230719 20:59:56.724"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230719 20:59:59.538" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230719 20:59:56.731" endtime="20230719 20:59:59.538"/>
</kw>
<status status="PASS" starttime="20230719 20:59:56.725" endtime="20230719 20:59:59.541"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230719 20:59:59.546" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230719 20:59:59.543" endtime="20230719 20:59:59.547"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230719 21:00:00.515" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230719 21:00:00.516" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/results/playwright-log.txt for additional details.</msg>
<msg timestamp="20230719 21:00:00.517" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230719 20:59:59.552" endtime="20230719 21:00:00.534"/>
</kw>
<status status="FAIL" starttime="20230719 20:59:59.550" endtime="20230719 21:00:00.535"/>
</kw>
<msg timestamp="20230719 21:00:00.536" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230719 20:59:59.548" endtime="20230719 21:00:00.537"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230719 21:00:00.542" endtime="20230719 21:00:00.543"/>
</kw>
<status status="NOT RUN" starttime="20230719 21:00:00.540" endtime="20230719 21:00:00.544"/>
</branch>
<status status="PASS" starttime="20230719 21:00:00.538" endtime="20230719 21:00:00.545"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230719 21:00:02.927" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230719 21:00:00.549" endtime="20230719 21:00:02.928"/>
</kw>
<status status="PASS" starttime="20230719 21:00:00.545" endtime="20230719 21:00:02.929"/>
</kw>
<status status="PASS" starttime="20230719 20:59:56.701" endtime="20230719 21:00:02.929"/>
</kw>
<status status="PASS" starttime="20230719 20:59:51.501" endtime="20230719 21:00:02.930"/>
</kw>
<kw name="Show list of &quot;created&quot; leave date" library="common" sourcename="Show list of &quot;${name}&quot; leave date">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230719 21:00:02.937" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230719 21:00:02.935" endtime="20230719 21:00:02.937"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230719 21:00:02.957" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230719 21:00:02.939" endtime="20230719 21:00:02.958"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230719 21:00:08.551" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230719 21:00:02.965" endtime="20230719 21:00:08.551"/>
</kw>
<status status="PASS" starttime="20230719 21:00:02.961" endtime="20230719 21:00:08.552"/>
</kw>
<status status="PASS" starttime="20230719 21:00:02.959" endtime="20230719 21:00:08.554"/>
</branch>
<status status="PASS" starttime="20230719 21:00:02.959" endtime="20230719 21:00:08.555"/>
</if>
<status status="PASS" starttime="20230719 21:00:02.933" endtime="20230719 21:00:08.555"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230719 21:00:08.560" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230719 21:00:08.559" endtime="20230719 21:00:08.561"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230719 21:00:08.576" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230719 21:00:08.563" endtime="20230719 21:00:08.576"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230719 21:00:08.580" endtime="20230719 21:00:08.580"/>
</kw>
<status status="NOT RUN" starttime="20230719 21:00:08.578" endtime="20230719 21:00:08.581"/>
</branch>
<status status="PASS" starttime="20230719 21:00:08.577" endtime="20230719 21:00:08.581"/>
</if>
<status status="PASS" starttime="20230719 21:00:08.556" endtime="20230719 21:00:08.582"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//tr[@class="ant-table-row ant-table-row-level-0"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230719 21:00:08.604" level="INFO">Found 4 Locators successfully.</msg>
<msg timestamp="20230719 21:00:08.605" level="INFO">${elements} = ['element=7d9c8462-453d-4363-a0cb-88e8b0a29795', 'element=29a78322-8148-4a56-88db-6f8c44de3a3b', 'element=0c82987d-524f-4fe1-a076-4ad0994feb94', 'element=bcf66a16-1338-45cd-afd2-2b8b27a592fa']</msg>
<status status="PASS" starttime="20230719 21:00:08.583" endtime="20230719 21:00:08.606"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_count}</var>
<arg>2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230719 21:00:08.610" level="INFO">${user_count} = 2</msg>
<status status="PASS" starttime="20230719 21:00:08.607" endtime="20230719 21:00:08.610"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${stt}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230719 21:00:08.612" level="INFO">${stt} = 1</msg>
<status status="PASS" starttime="20230719 21:00:08.611" endtime="20230719 21:00:08.613"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{elements}</value>
<iter>
<var name="${item}">element=7d9c8462-453d-4363-a0cb-88e8b0a29795</var>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>//tbody/tr[${user_count}]/td[1]/div[1]/span[1]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230719 21:00:08.667" level="INFO">Text: 'Hồ Văn Nhật'</msg>
<msg timestamp="20230719 21:00:08.667" level="INFO">${username} = Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230719 21:00:08.617" endtime="20230719 21:00:08.669"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${manager}</var>
<arg>//tbody/tr[${user_count}]/td[2]/div[1]/span[1]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230719 21:00:08.711" level="INFO">Text: 'Hồ Văn Nhật'</msg>
<msg timestamp="20230719 21:00:08.712" level="INFO">${manager} = Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230719 21:00:08.670" endtime="20230719 21:00:08.713"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${type}</var>
<arg>//tbody/tr[${user_count}]/td[3]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230719 21:00:08.754" level="INFO">Text: 'Nghỉ phép có lương'</msg>
<msg timestamp="20230719 21:00:08.755" level="INFO">${type} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230719 21:00:08.714" endtime="20230719 21:00:08.757"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${time}</var>
<arg>//tbody/tr[${user_count}]/td[4]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230719 21:00:08.796" level="INFO">Text: 'Cả ngày'</msg>
<msg timestamp="20230719 21:00:08.797" level="INFO">${time} = Cả ngày</msg>
<status status="PASS" starttime="20230719 21:00:08.758" endtime="20230719 21:00:08.798"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${leave_date}</var>
<arg>//tbody/tr[${user_count}]/td[5]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230719 21:00:08.842" level="INFO">Text: '28-07-2023'</msg>
<msg timestamp="20230719 21:00:08.843" level="INFO">${leave_date} = 28-07-2023</msg>
<status status="PASS" starttime="20230719 21:00:08.799" endtime="20230719 21:00:08.844"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${status}</var>
<arg>//tbody/tr[${user_count}]/td[6]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230719 21:00:08.887" level="INFO">Text: ''</msg>
<msg timestamp="20230719 21:00:08.888" level="INFO">${status} = </msg>
<status status="PASS" starttime="20230719 21:00:08.845" endtime="20230719 21:00:08.889"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_date}</var>
<arg>//tbody/tr[${user_count}]/td[7]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230719 21:00:08.933" level="INFO">Text: '18-07-2023'</msg>
<msg timestamp="20230719 21:00:08.934" level="INFO">${approvated_date} = 18-07-2023</msg>
<status status="PASS" starttime="20230719 21:00:08.891" endtime="20230719 21:00:08.935"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_by}</var>
<arg>//tbody/tr[${user_count}]/td[8]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230719 21:00:08.977" level="INFO">Text: 'H\nHồ Văn Nhật'</msg>
<msg timestamp="20230719 21:00:08.977" level="INFO">${approvated_by} = H
Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230719 21:00:08.937" endtime="20230719 21:00:08.978"/>
</kw>
<kw name="Get Element" library="Browser">
<var>${status_leave_path}</var>
<arg>//tbody/tr[${user_count}]/td[6]/*[1]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to a Playwright [https://playwright.dev/docs/api/class-locator|Locator].</doc>
<msg timestamp="20230719 21:00:09.010" level="INFO">Locator found successfully.</msg>
<msg timestamp="20230719 21:00:09.011" level="INFO">${status_leave_path} = element=61cd471a-b933-40a0-837b-b9c5691dc91e</msg>
<status status="PASS" starttime="20230719 21:00:08.979" endtime="20230719 21:00:09.013"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${status_leave_path} is not found</arg>
<arg>continue</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230719 21:00:09.016" level="FAIL">Evaluating expression 'element=61cd471a-b933-40a0-837b-b9c5691dc91e is not found' failed: SyntaxError: invalid decimal literal (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230719 21:00:09.014" endtime="20230719 21:00:09.020"/>
</kw>
<kw name="Get Attribute" library="Browser">
<var>${status_leave}</var>
<arg>${status_leave_path}</arg>
<arg>class</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the HTML ``attribute`` of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230719 21:00:09.022" endtime="20230719 21:00:09.024"/>
</kw>
<if>
<branch type="IF" condition="'${approvated_date}' == ''">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230719 21:00:09.027" endtime="20230719 21:00:09.028"/>
</kw>
<status status="NOT RUN" starttime="20230719 21:00:09.025" endtime="20230719 21:00:09.028"/>
</branch>
<status status="NOT RUN" starttime="20230719 21:00:09.025" endtime="20230719 21:00:09.029"/>
</if>
<if>
<branch type="IF" condition="'${status_leave}' == '${class_rejected}'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Không được phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230719 21:00:09.031" endtime="20230719 21:00:09.032"/>
</kw>
<status status="NOT RUN" starttime="20230719 21:00:09.029" endtime="20230719 21:00:09.032"/>
</branch>
<branch type="ELSE IF" condition="'${status_leave}' == '${class_approved}'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đã phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230719 21:00:09.034" endtime="20230719 21:00:09.035"/>
</kw>
<status status="NOT RUN" starttime="20230719 21:00:09.033" endtime="20230719 21:00:09.035"/>
</branch>
<status status="NOT RUN" starttime="20230719 21:00:09.029" endtime="20230719 21:00:09.037"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${stt}. Họ và tên: ${username} | Quản lý: ${manager} | Loại phép: ${type} | Thời gian: ${time} | Ngày nghỉ: ${leave_date} | Trạng thái: ${status} | Ngày phê duyệt: ${approvated_date} | Người phê duyệt: ${approvated_by}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230719 21:00:09.038" endtime="20230719 21:00:09.040"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>================================================================================================================================================================================================================================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230719 21:00:09.040" endtime="20230719 21:00:09.041"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${user_count}</var>
<arg>${user_count} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230719 21:00:09.042" endtime="20230719 21:00:09.042"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${stt}</var>
<arg>${stt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230719 21:00:09.044" endtime="20230719 21:00:09.044"/>
</kw>
<status status="FAIL" starttime="20230719 21:00:08.616" endtime="20230719 21:00:09.045"/>
</iter>
<status status="FAIL" starttime="20230719 21:00:08.614" endtime="20230719 21:00:09.046"/>
</for>
<kw name="Evaluate" library="BuiltIn">
<var>${total}</var>
<arg>${user_count} - 2</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230719 21:00:09.046" endtime="20230719 21:00:09.047"/>
</kw>
<if>
<branch type="IF" condition="'${name}'=='created'">
<kw name="Log To Console" library="BuiltIn">
<arg>Total number of holidays ${name}: ${total}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230719 21:00:09.049" endtime="20230719 21:00:09.049"/>
</kw>
<status status="NOT RUN" starttime="20230719 21:00:09.048" endtime="20230719 21:00:09.050"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='approved'">
<kw name="Log To Console" library="BuiltIn">
<arg>Total number of ${name} holidays: ${total}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230719 21:00:09.052" endtime="20230719 21:00:09.054"/>
</kw>
<status status="NOT RUN" starttime="20230719 21:00:09.051" endtime="20230719 21:00:09.055"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='pending'">
<kw name="Log To Console" library="BuiltIn">
<arg>Total number of days off ${name} approval: ${total}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230719 21:00:09.057" endtime="20230719 21:00:09.057"/>
</kw>
<status status="NOT RUN" starttime="20230719 21:00:09.056" endtime="20230719 21:00:09.058"/>
</branch>
<status status="NOT RUN" starttime="20230719 21:00:09.048" endtime="20230719 21:00:09.058"/>
</if>
<status status="FAIL" starttime="20230719 21:00:02.931" endtime="20230719 21:00:09.059"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230719 21:00:12.525" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230719 21:00:09.063" endtime="20230719 21:00:12.526"/>
</kw>
<status status="PASS" starttime="20230719 21:00:09.061" endtime="20230719 21:00:12.526"/>
</kw>
<status status="FAIL" starttime="20230719 20:59:45.233" endtime="20230719 21:00:12.529">Evaluating expression 'element=61cd471a-b933-40a0-837b-b9c5691dc91e is not found' failed: SyntaxError: invalid decimal literal (&lt;string&gt;, line 1)</status>
</test>
<status status="FAIL" starttime="20230719 20:59:40.148" endtime="20230719 21:00:12.581"/>
</suite>
<status status="FAIL" starttime="20230719 20:59:40.131" endtime="20230719 21:00:12.603"/>
</suite>
<status status="FAIL" starttime="20230719 20:59:40.114" endtime="20230719 21:00:12.611"/>
</suite>
<status status="FAIL" starttime="20230719 20:59:39.966" endtime="20230719 21:00:12.641"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Vite-React-Ari">Vite-React-Ari</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1" name="Test">Vite-React-Ari.Test</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s1" name="Testcases">Vite-React-Ari.Test.Testcases</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s1-s1" name="Teeee">Vite-React-Ari.Test.Testcases.Teeee</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

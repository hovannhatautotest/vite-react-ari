<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.11.4 on win32)" generated="20230722 12:55:38.542" rpa="false" schemaversion="4">
<suite id="s1" name="Vite-React-Ari" source="C:\Users\nhats\OneDrive\Desktop\ARI\vite-react-ari">
<suite id="s1-s1" name="Test" source="C:\Users\nhats\OneDrive\Desktop\ARI\vite-react-ari\test">
<suite id="s1-s1-s1" name="Testcases" source="C:\Users\nhats\OneDrive\Desktop\ARI\vite-react-ari\test\testcases">
<suite id="s1-s1-s1-s1" name="Edit user" source="C:\Users\nhats\OneDrive\Desktop\ARI\vite-react-ari\test\testcases\Edit_user.robot">
<test id="s1-s1-s1-s1-t1" name="EDU-27 Verify that account edit successfully when change Manager" line="263">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230722 12:55:43.381" endtime="20230722 12:55:43.394"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230722 12:55:43.396" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\results\\browser\\traces\\9f26a6ad-a216-4950-b83b-f55b96ba1f12"}</msg>
<msg timestamp="20230722 12:55:45.126" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\results\\browser\\traces\\9f26a6ad-a216-4950-b83b-f55b96ba1f12"}</msg>
<status status="PASS" starttime="20230722 12:55:43.395" endtime="20230722 12:55:45.127"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230722 12:55:47.561" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230722 12:55:47.561" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230722 12:55:45.128" endtime="20230722 12:55:47.562"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230722 12:55:47.566" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230722 12:55:47.563" endtime="20230722 12:55:47.567"/>
</kw>
<status status="PASS" starttime="20230722 12:55:43.380" endtime="20230722 12:55:47.568"/>
</kw>
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;admin@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230722 12:55:47.588" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230722 12:55:47.584" endtime="20230722 12:55:47.589"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230722 12:55:47.592" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230722 12:55:47.590" endtime="20230722 12:55:47.593"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230722 12:55:47.596" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230722 12:55:47.594" endtime="20230722 12:55:47.597"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230722 12:55:47.600" level="INFO">Length is 0</msg>
<msg timestamp="20230722 12:55:47.601" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230722 12:55:47.598" endtime="20230722 12:55:47.605"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230722 12:55:47.608" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230722 12:55:47.606" endtime="20230722 12:55:47.609"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230722 12:55:47.611" level="INFO">Length is 0</msg>
<msg timestamp="20230722 12:55:47.614" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230722 12:55:47.610" endtime="20230722 12:55:47.615"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230722 12:55:47.621" endtime="20230722 12:55:47.622"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230722 12:55:47.623" endtime="20230722 12:55:47.624"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:47.616" endtime="20230722 12:55:47.625"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230722 12:55:47.628" endtime="20230722 12:55:47.629"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230722 12:55:47.630" endtime="20230722 12:55:47.631"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230722 12:55:47.632" endtime="20230722 12:55:47.633"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:47.626" endtime="20230722 12:55:47.634"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230722 12:55:47.639" endtime="20230722 12:55:47.640"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230722 12:55:47.641" endtime="20230722 12:55:47.642"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:47.634" endtime="20230722 12:55:47.642"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230722 12:55:47.645" endtime="20230722 12:55:47.646"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230722 12:55:47.647" endtime="20230722 12:55:47.648"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:47.643" endtime="20230722 12:55:47.649"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230722 12:55:47.653" endtime="20230722 12:55:47.657"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230722 12:55:47.658" endtime="20230722 12:55:47.666"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:47.649" endtime="20230722 12:55:47.672"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230722 12:55:47.675" endtime="20230722 12:55:47.676"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:47.673" endtime="20230722 12:55:47.676"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230722 12:55:47.678" endtime="20230722 12:55:47.679"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:47.677" endtime="20230722 12:55:47.680"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230722 12:55:47.681" endtime="20230722 12:55:47.682"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230722 12:55:47.683" endtime="20230722 12:55:47.684"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:47.680" endtime="20230722 12:55:47.689"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230722 12:55:47.691" endtime="20230722 12:55:47.692"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:47.690" endtime="20230722 12:55:47.693"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230722 12:55:47.695" endtime="20230722 12:55:47.698"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:47.694" endtime="20230722 12:55:47.698"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230722 12:55:47.706" endtime="20230722 12:55:47.707"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:47.698" endtime="20230722 12:55:47.708"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230722 12:55:47.710" endtime="20230722 12:55:47.712"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:47.709" endtime="20230722 12:55:47.712"/>
</branch>
<status status="PASS" starttime="20230722 12:55:47.616" endtime="20230722 12:55:47.715"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230722 12:55:47.728" level="INFO">Length is 15</msg>
<msg timestamp="20230722 12:55:47.730" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230722 12:55:47.717" endtime="20230722 12:55:47.733"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230722 12:55:47.742" level="INFO">${text} = admin@admin.com</msg>
<status status="PASS" starttime="20230722 12:55:47.740" endtime="20230722 12:55:47.750"/>
</kw>
<status status="PASS" starttime="20230722 12:55:47.734" endtime="20230722 12:55:47.755"/>
</branch>
<status status="PASS" starttime="20230722 12:55:47.734" endtime="20230722 12:55:47.756"/>
</if>
<msg timestamp="20230722 12:55:47.756" level="INFO">${text} = admin@admin.com</msg>
<status status="PASS" starttime="20230722 12:55:47.582" endtime="20230722 12:55:47.757"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230722 12:55:47.760" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230722 12:55:47.758" endtime="20230722 12:55:47.761"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230722 12:55:47.762" endtime="20230722 12:55:49.776"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230722 12:55:49.778" level="INFO">Fills the text 'admin@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230722 12:55:49.777" endtime="20230722 12:55:49.855"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230722 12:55:49.858" level="INFO">Length is 15</msg>
<msg timestamp="20230722 12:55:49.859" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230722 12:55:49.856" endtime="20230722 12:55:49.860"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230722 12:55:49.863" level="INFO">${STATE["Tên đăng nhập"]} = admin@admin.com</msg>
<status status="PASS" starttime="20230722 12:55:49.863" endtime="20230722 12:55:49.863"/>
</kw>
<status status="PASS" starttime="20230722 12:55:49.861" endtime="20230722 12:55:49.863"/>
</branch>
<status status="PASS" starttime="20230722 12:55:49.860" endtime="20230722 12:55:49.868"/>
</if>
<status status="PASS" starttime="20230722 12:55:47.580" endtime="20230722 12:55:49.869"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Password1!&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230722 12:55:49.876" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230722 12:55:49.875" endtime="20230722 12:55:49.877"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230722 12:55:49.879" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230722 12:55:49.878" endtime="20230722 12:55:49.879"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230722 12:55:49.879" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230722 12:55:49.879" endtime="20230722 12:55:49.879"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230722 12:55:49.887" level="INFO">Length is 0</msg>
<msg timestamp="20230722 12:55:49.887" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230722 12:55:49.886" endtime="20230722 12:55:49.888"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230722 12:55:49.890" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230722 12:55:49.888" endtime="20230722 12:55:49.891"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230722 12:55:49.894" level="INFO">Length is 0</msg>
<msg timestamp="20230722 12:55:49.895" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230722 12:55:49.892" endtime="20230722 12:55:49.897"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230722 12:55:49.904" endtime="20230722 12:55:49.905"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230722 12:55:49.906" endtime="20230722 12:55:49.907"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:49.897" endtime="20230722 12:55:49.908"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230722 12:55:49.910" endtime="20230722 12:55:49.911"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230722 12:55:49.912" endtime="20230722 12:55:49.914"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230722 12:55:49.914" endtime="20230722 12:55:49.914"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:49.909" endtime="20230722 12:55:49.914"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230722 12:55:49.920" endtime="20230722 12:55:49.920"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230722 12:55:49.921" endtime="20230722 12:55:49.924"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:49.914" endtime="20230722 12:55:49.925"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230722 12:55:49.927" endtime="20230722 12:55:49.928"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230722 12:55:49.928" endtime="20230722 12:55:49.929"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:49.926" endtime="20230722 12:55:49.929"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230722 12:55:49.929" endtime="20230722 12:55:49.929"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230722 12:55:49.929" endtime="20230722 12:55:49.929"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:49.929" endtime="20230722 12:55:49.937"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230722 12:55:49.939" endtime="20230722 12:55:49.941"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:49.938" endtime="20230722 12:55:49.941"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230722 12:55:49.943" endtime="20230722 12:55:49.945"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:49.942" endtime="20230722 12:55:49.946"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230722 12:55:49.947" endtime="20230722 12:55:49.948"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230722 12:55:49.948" endtime="20230722 12:55:49.948"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:49.946" endtime="20230722 12:55:49.948"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230722 12:55:49.958" endtime="20230722 12:55:49.959"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:49.957" endtime="20230722 12:55:49.960"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230722 12:55:49.962" endtime="20230722 12:55:49.962"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:49.960" endtime="20230722 12:55:49.963"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230722 12:55:49.964" endtime="20230722 12:55:49.964"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:49.964" endtime="20230722 12:55:49.971"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230722 12:55:49.972" endtime="20230722 12:55:49.973"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:49.971" endtime="20230722 12:55:49.974"/>
</branch>
<status status="PASS" starttime="20230722 12:55:49.897" endtime="20230722 12:55:49.974"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230722 12:55:49.976" level="INFO">Length is 10</msg>
<msg timestamp="20230722 12:55:49.977" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230722 12:55:49.975" endtime="20230722 12:55:49.977"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230722 12:55:49.994" level="INFO">${text} = Password1!</msg>
<status status="PASS" starttime="20230722 12:55:49.981" endtime="20230722 12:55:49.996"/>
</kw>
<status status="PASS" starttime="20230722 12:55:49.978" endtime="20230722 12:55:49.997"/>
</branch>
<status status="PASS" starttime="20230722 12:55:49.978" endtime="20230722 12:55:49.997"/>
</if>
<msg timestamp="20230722 12:55:49.998" level="INFO">${text} = Password1!</msg>
<status status="PASS" starttime="20230722 12:55:49.873" endtime="20230722 12:55:50.012"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230722 12:55:50.026" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230722 12:55:50.012" endtime="20230722 12:55:50.027"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230722 12:55:50.028" endtime="20230722 12:55:50.142"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230722 12:55:50.145" level="INFO">Fills the text 'Password1!' in the given field.</msg>
<status status="PASS" starttime="20230722 12:55:50.143" endtime="20230722 12:55:50.214"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230722 12:55:50.219" level="INFO">Length is 10</msg>
<msg timestamp="20230722 12:55:50.221" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230722 12:55:50.214" endtime="20230722 12:55:50.224"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230722 12:55:50.229" level="INFO">${STATE["Mật khẩu"]} = Password1!</msg>
<status status="PASS" starttime="20230722 12:55:50.226" endtime="20230722 12:55:50.229"/>
</kw>
<status status="PASS" starttime="20230722 12:55:50.225" endtime="20230722 12:55:50.229"/>
</branch>
<status status="PASS" starttime="20230722 12:55:50.225" endtime="20230722 12:55:50.229"/>
</if>
<status status="PASS" starttime="20230722 12:55:49.870" endtime="20230722 12:55:50.229"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230722 12:55:50.238" endtime="20230722 12:55:50.553"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230722 12:55:50.560" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230722 12:55:50.558" endtime="20230722 12:55:50.560"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230722 12:55:50.596" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230722 12:55:50.562" endtime="20230722 12:55:50.596"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230722 12:55:50.605" endtime="20230722 12:55:50.609"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230722 12:55:50.610" endtime="20230722 12:55:50.611"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:50.596" endtime="20230722 12:55:50.612"/>
</branch>
<status status="PASS" starttime="20230722 12:55:50.596" endtime="20230722 12:55:50.613"/>
</if>
<status status="PASS" starttime="20230722 12:55:50.554" endtime="20230722 12:55:50.613"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230722 12:55:50.614" endtime="20230722 12:55:50.712"/>
</kw>
<status status="PASS" starttime="20230722 12:55:50.229" endtime="20230722 12:55:50.713"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230722 12:55:50.713" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230722 12:55:50.713" endtime="20230722 12:55:50.713"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230722 12:55:50.725" level="INFO">Length is 0</msg>
<msg timestamp="20230722 12:55:50.726" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230722 12:55:50.722" endtime="20230722 12:55:50.726"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230722 12:55:50.729" endtime="20230722 12:55:50.731"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:50.728" endtime="20230722 12:55:50.732"/>
</branch>
<status status="PASS" starttime="20230722 12:55:50.727" endtime="20230722 12:55:50.732"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230722 12:55:53.094" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230722 12:55:50.745" endtime="20230722 12:55:53.095"/>
</kw>
<status status="PASS" starttime="20230722 12:55:50.733" endtime="20230722 12:55:53.097"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230722 12:55:53.099" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230722 12:55:53.097" endtime="20230722 12:55:53.100"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230722 12:55:54.508" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230722 12:55:54.508" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/results/playwright-log.txt for additional details.</msg>
<msg timestamp="20230722 12:55:54.510" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230722 12:55:53.110" endtime="20230722 12:55:54.525"/>
</kw>
<status status="FAIL" starttime="20230722 12:55:53.105" endtime="20230722 12:55:54.526"/>
</kw>
<msg timestamp="20230722 12:55:54.526" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230722 12:55:53.102" endtime="20230722 12:55:54.527"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230722 12:55:54.530" endtime="20230722 12:55:54.530"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:54.528" endtime="20230722 12:55:54.530"/>
</branch>
<status status="PASS" starttime="20230722 12:55:54.528" endtime="20230722 12:55:54.530"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230722 12:55:55.979" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230722 12:55:54.537" endtime="20230722 12:55:55.985"/>
</kw>
<status status="PASS" starttime="20230722 12:55:54.530" endtime="20230722 12:55:55.988"/>
</kw>
<status status="PASS" starttime="20230722 12:55:50.713" endtime="20230722 12:55:55.989"/>
</kw>
<status status="PASS" starttime="20230722 12:55:47.579" endtime="20230722 12:55:55.991"/>
</kw>
<kw name="When Click &quot;Người Dùng&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230722 12:55:56.029" endtime="20230722 12:55:56.273"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230722 12:55:56.277" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230722 12:55:56.276" endtime="20230722 12:55:56.278"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230722 12:55:56.309" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230722 12:55:56.279" endtime="20230722 12:55:56.310"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230722 12:55:57.042" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230722 12:55:56.314" endtime="20230722 12:55:57.044"/>
</kw>
<status status="PASS" starttime="20230722 12:55:56.313" endtime="20230722 12:55:57.045"/>
</kw>
<status status="PASS" starttime="20230722 12:55:56.311" endtime="20230722 12:55:57.046"/>
</branch>
<status status="PASS" starttime="20230722 12:55:56.311" endtime="20230722 12:55:57.046"/>
</if>
<status status="PASS" starttime="20230722 12:55:56.274" endtime="20230722 12:55:57.046"/>
</kw>
<status status="PASS" starttime="20230722 12:55:55.994" endtime="20230722 12:55:57.053"/>
</kw>
<kw name="And Select the user with &quot;invalid&quot; to edit" library="common" sourcename="Select the ${text} with &quot;${name}&quot; to edit">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230722 12:55:57.300" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230722 12:55:57.295" endtime="20230722 12:55:57.344"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230722 12:55:57.405" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230722 12:55:57.347" endtime="20230722 12:55:57.406"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230722 12:55:59.549" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230722 12:55:57.412" endtime="20230722 12:55:59.549"/>
</kw>
<status status="PASS" starttime="20230722 12:55:57.409" endtime="20230722 12:55:59.552"/>
</kw>
<status status="PASS" starttime="20230722 12:55:57.407" endtime="20230722 12:55:59.552"/>
</branch>
<status status="PASS" starttime="20230722 12:55:57.406" endtime="20230722 12:55:59.553"/>
</if>
<status status="PASS" starttime="20230722 12:55:57.224" endtime="20230722 12:55:59.554"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230722 12:55:59.596" level="INFO">Found 9 Locators successfully.</msg>
<msg timestamp="20230722 12:55:59.596" level="INFO">${elements} = ['element=013c285a-c4b5-4b3e-93cd-a8b0f4dd87ec', 'element=eced25cd-4dd4-4f80-868b-5797ac2c4b30', 'element=6b747f72-39ba-4856-a99f-30adea35835a', 'element=525535ae-3784-4fd8-9ce9-ae20f9ef3d7a', 'elemen...</msg>
<status status="PASS" starttime="20230722 12:55:59.555" endtime="20230722 12:55:59.596"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${elementCount}</var>
<arg>${elements}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230722 12:55:59.596" level="INFO">Length is 9</msg>
<msg timestamp="20230722 12:55:59.596" level="INFO">${elementCount} = 9</msg>
<status status="PASS" starttime="20230722 12:55:59.596" endtime="20230722 12:55:59.596"/>
</kw>
<if>
<branch type="IF" condition="'${name}'=='team has been deleted'">
<kw name="Evaluate" library="BuiltIn">
<var>${randomIndex}</var>
<arg>${elementCount}-3</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230722 12:55:59.596" endtime="20230722 12:55:59.613"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:59.596" endtime="20230722 12:55:59.613"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='Còn những yêu cầu nghỉ cần duyệt'">
<kw name="Evaluate" library="BuiltIn">
<var>${randomIndex}</var>
<arg>${elementCount}-8</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230722 12:55:59.613" endtime="20230722 12:55:59.619"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:55:59.613" endtime="20230722 12:55:59.621"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='invalid'">
<kw name="Evaluate" library="BuiltIn">
<var>${randomIndex}</var>
<arg>${elementCount}-5</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230722 12:55:59.624" level="INFO">${randomIndex} = 4</msg>
<status status="PASS" starttime="20230722 12:55:59.622" endtime="20230722 12:55:59.627"/>
</kw>
<status status="PASS" starttime="20230722 12:55:59.621" endtime="20230722 12:55:59.628"/>
</branch>
<status status="PASS" starttime="20230722 12:55:59.596" endtime="20230722 12:55:59.629"/>
</if>
<kw name="Click" library="Browser">
<arg>${elements}[${randomIndex}]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230722 12:55:59.629" endtime="20230722 12:55:59.905"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230722 12:55:59.910" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230722 12:55:59.908" endtime="20230722 12:55:59.910"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230722 12:55:59.940" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230722 12:55:59.911" endtime="20230722 12:55:59.940"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230722 12:56:00.487" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230722 12:55:59.946" endtime="20230722 12:56:00.490"/>
</kw>
<status status="PASS" starttime="20230722 12:55:59.943" endtime="20230722 12:56:00.490"/>
</kw>
<status status="PASS" starttime="20230722 12:55:59.941" endtime="20230722 12:56:00.491"/>
</branch>
<status status="PASS" starttime="20230722 12:55:59.941" endtime="20230722 12:56:00.492"/>
</if>
<status status="PASS" starttime="20230722 12:55:59.906" endtime="20230722 12:56:00.493"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230722 12:56:00.498" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230722 12:56:00.496" endtime="20230722 12:56:00.498"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230722 12:56:00.576" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230722 12:56:00.501" endtime="20230722 12:56:00.578"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230722 12:56:01.288" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230722 12:56:00.582" endtime="20230722 12:56:01.289"/>
</kw>
<status status="PASS" starttime="20230722 12:56:00.580" endtime="20230722 12:56:01.290"/>
</kw>
<status status="PASS" starttime="20230722 12:56:00.579" endtime="20230722 12:56:01.291"/>
</branch>
<status status="PASS" starttime="20230722 12:56:00.578" endtime="20230722 12:56:01.294"/>
</if>
<status status="PASS" starttime="20230722 12:56:00.494" endtime="20230722 12:56:01.294"/>
</kw>
<status status="PASS" starttime="20230722 12:55:57.132" endtime="20230722 12:56:01.295"/>
</kw>
<kw name="And Click select Quản lý with &quot;Hoàng Diệu&quot;" library="common" sourcename="Click select ${manager} with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230722 12:56:01.415" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230722 12:56:01.397" endtime="20230722 12:56:01.415"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230722 12:56:01.430" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230722 12:56:01.430" endtime="20230722 12:56:01.430"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230722 12:56:01.450" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230722 12:56:01.430" endtime="20230722 12:56:01.450"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230722 12:56:01.450" level="INFO">Length is 0</msg>
<msg timestamp="20230722 12:56:01.462" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230722 12:56:01.450" endtime="20230722 12:56:01.464"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230722 12:56:01.474" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230722 12:56:01.466" endtime="20230722 12:56:01.476"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230722 12:56:01.491" level="INFO">Length is 0</msg>
<msg timestamp="20230722 12:56:01.494" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230722 12:56:01.478" endtime="20230722 12:56:01.495"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230722 12:56:01.498" endtime="20230722 12:56:01.498"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230722 12:56:01.499" endtime="20230722 12:56:01.502"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:01.496" endtime="20230722 12:56:01.503"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230722 12:56:01.506" endtime="20230722 12:56:01.507"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230722 12:56:01.507" endtime="20230722 12:56:01.509"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230722 12:56:01.510" endtime="20230722 12:56:01.512"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:01.504" endtime="20230722 12:56:01.512"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230722 12:56:01.514" endtime="20230722 12:56:01.514"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230722 12:56:01.514" endtime="20230722 12:56:01.514"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:01.512" endtime="20230722 12:56:01.514"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230722 12:56:01.514" endtime="20230722 12:56:01.514"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230722 12:56:01.514" endtime="20230722 12:56:01.524"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:01.514" endtime="20230722 12:56:01.525"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230722 12:56:01.527" endtime="20230722 12:56:01.528"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230722 12:56:01.528" endtime="20230722 12:56:01.529"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:01.525" endtime="20230722 12:56:01.530"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230722 12:56:01.531" endtime="20230722 12:56:01.532"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:01.530" endtime="20230722 12:56:01.532"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230722 12:56:01.537" endtime="20230722 12:56:01.538"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:01.533" endtime="20230722 12:56:01.538"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230722 12:56:01.540" endtime="20230722 12:56:01.540"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230722 12:56:01.541" endtime="20230722 12:56:01.542"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:01.539" endtime="20230722 12:56:01.542"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230722 12:56:01.543" endtime="20230722 12:56:01.544"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:01.543" endtime="20230722 12:56:01.545"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230722 12:56:01.547" endtime="20230722 12:56:01.547"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:01.545" endtime="20230722 12:56:01.547"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230722 12:56:01.550" endtime="20230722 12:56:01.553"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:01.549" endtime="20230722 12:56:01.554"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230722 12:56:01.556" endtime="20230722 12:56:01.556"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:01.555" endtime="20230722 12:56:01.557"/>
</branch>
<status status="PASS" starttime="20230722 12:56:01.496" endtime="20230722 12:56:01.557"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230722 12:56:01.558" level="INFO">Length is 10</msg>
<msg timestamp="20230722 12:56:01.559" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230722 12:56:01.558" endtime="20230722 12:56:01.560"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230722 12:56:01.564" level="INFO">${text} = Hoàng Diệu</msg>
<status status="PASS" starttime="20230722 12:56:01.562" endtime="20230722 12:56:01.565"/>
</kw>
<status status="PASS" starttime="20230722 12:56:01.561" endtime="20230722 12:56:01.565"/>
</branch>
<status status="PASS" starttime="20230722 12:56:01.561" endtime="20230722 12:56:01.565"/>
</if>
<msg timestamp="20230722 12:56:01.567" level="INFO">${text} = Hoàng Diệu</msg>
<status status="PASS" starttime="20230722 12:56:01.397" endtime="20230722 12:56:01.571"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${manager}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230722 12:56:01.573" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230722 12:56:01.572" endtime="20230722 12:56:01.574"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230722 12:56:01.597" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230722 12:56:01.580" endtime="20230722 12:56:01.597"/>
</kw>
<status status="PASS" starttime="20230722 12:56:01.575" endtime="20230722 12:56:01.601"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230722 12:56:01.602" endtime="20230722 12:56:01.822"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${manager}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230722 12:56:01.824" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230722 12:56:01.823" endtime="20230722 12:56:01.826"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230722 12:56:01.830" level="INFO">Fills the text 'Hoàng Diệu' in the given field.</msg>
<status status="PASS" starttime="20230722 12:56:01.827" endtime="20230722 12:56:01.993"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>xpath=//span[contains(text(),'${text}')]</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230722 12:56:03.389" level="INFO">Waited for Element with selector xpath=//span[contains(text(),'Hoàng Diệu')] at state visible</msg>
<status status="PASS" starttime="20230722 12:56:01.997" endtime="20230722 12:56:03.390"/>
</kw>
<status status="PASS" starttime="20230722 12:56:01.995" endtime="20230722 12:56:03.391"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//span[contains(text(),'${text}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230722 12:56:03.392" endtime="20230722 12:56:03.514"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230722 12:56:03.520" level="INFO">Length is 10</msg>
<msg timestamp="20230722 12:56:03.523" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230722 12:56:03.517" endtime="20230722 12:56:03.524"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${manager}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230722 12:56:03.531" level="INFO">${STATE["Quản lý"]} = Hoàng Diệu</msg>
<status status="PASS" starttime="20230722 12:56:03.527" endtime="20230722 12:56:03.531"/>
</kw>
<status status="PASS" starttime="20230722 12:56:03.525" endtime="20230722 12:56:03.531"/>
</branch>
<status status="PASS" starttime="20230722 12:56:03.524" endtime="20230722 12:56:03.531"/>
</if>
<status status="PASS" starttime="20230722 12:56:01.337" endtime="20230722 12:56:03.531"/>
</kw>
<kw name="And Enter &quot;leave date&quot; in &quot;Ngày nghỉ&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230722 12:56:03.606" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230722 12:56:03.605" endtime="20230722 12:56:03.626"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230722 12:56:03.629" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230722 12:56:03.627" endtime="20230722 12:56:03.630"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230722 12:56:03.634" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230722 12:56:03.631" endtime="20230722 12:56:03.637"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230722 12:56:03.639" level="INFO">Length is 0</msg>
<msg timestamp="20230722 12:56:03.640" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230722 12:56:03.638" endtime="20230722 12:56:03.641"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230722 12:56:03.644" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230722 12:56:03.642" endtime="20230722 12:56:03.645"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230722 12:56:03.646" level="INFO">Length is 1</msg>
<msg timestamp="20230722 12:56:03.646" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230722 12:56:03.646" endtime="20230722 12:56:03.650"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230722 12:56:03.655" endtime="20230722 12:56:03.656"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230722 12:56:03.657" endtime="20230722 12:56:03.659"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:03.652" endtime="20230722 12:56:03.660"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230722 12:56:03.662" endtime="20230722 12:56:03.664"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230722 12:56:03.666" endtime="20230722 12:56:03.666"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230722 12:56:03.671" endtime="20230722 12:56:03.673"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:03.660" endtime="20230722 12:56:03.674"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230722 12:56:03.695" endtime="20230722 12:56:03.696"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230722 12:56:03.696" endtime="20230722 12:56:03.696"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:03.675" endtime="20230722 12:56:03.696"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20230722 12:56:03.708" level="INFO">${new_text} = 4</msg>
<status status="PASS" starttime="20230722 12:56:03.696" endtime="20230722 12:56:03.710"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230722 12:56:03.712" level="INFO">${new_text} = 4</msg>
<status status="PASS" starttime="20230722 12:56:03.711" endtime="20230722 12:56:03.713"/>
</kw>
<status status="PASS" starttime="20230722 12:56:03.696" endtime="20230722 12:56:03.713"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230722 12:56:03.716" endtime="20230722 12:56:03.717"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230722 12:56:03.723" endtime="20230722 12:56:03.724"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:03.714" endtime="20230722 12:56:03.725"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230722 12:56:03.726" endtime="20230722 12:56:03.727"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:03.726" endtime="20230722 12:56:03.728"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230722 12:56:03.729" endtime="20230722 12:56:03.729"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:03.728" endtime="20230722 12:56:03.730"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230722 12:56:03.731" endtime="20230722 12:56:03.732"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230722 12:56:03.733" endtime="20230722 12:56:03.733"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:03.730" endtime="20230722 12:56:03.735"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230722 12:56:03.738" endtime="20230722 12:56:03.739"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:03.736" endtime="20230722 12:56:03.740"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230722 12:56:03.741" endtime="20230722 12:56:03.742"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:03.740" endtime="20230722 12:56:03.743"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230722 12:56:03.744" endtime="20230722 12:56:03.745"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:03.743" endtime="20230722 12:56:03.746"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230722 12:56:03.747" endtime="20230722 12:56:03.748"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:03.746" endtime="20230722 12:56:03.748"/>
</branch>
<status status="PASS" starttime="20230722 12:56:03.651" endtime="20230722 12:56:03.749"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230722 12:56:03.755" level="INFO">Length is 8</msg>
<msg timestamp="20230722 12:56:03.756" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230722 12:56:03.749" endtime="20230722 12:56:03.757"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230722 12:56:03.761" level="INFO">${text} = 4</msg>
<status status="PASS" starttime="20230722 12:56:03.759" endtime="20230722 12:56:03.763"/>
</kw>
<status status="PASS" starttime="20230722 12:56:03.758" endtime="20230722 12:56:03.763"/>
</branch>
<status status="PASS" starttime="20230722 12:56:03.758" endtime="20230722 12:56:03.764"/>
</if>
<msg timestamp="20230722 12:56:03.764" level="INFO">${text} = 4</msg>
<status status="PASS" starttime="20230722 12:56:03.598" endtime="20230722 12:56:03.765"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230722 12:56:03.769" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ngày nghỉ"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230722 12:56:03.766" endtime="20230722 12:56:03.773"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230722 12:56:03.774" endtime="20230722 12:56:03.855"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230722 12:56:03.858" level="INFO">Fills the text '4' in the given field.</msg>
<status status="PASS" starttime="20230722 12:56:03.856" endtime="20230722 12:56:03.926"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230722 12:56:03.928" level="INFO">Length is 1</msg>
<msg timestamp="20230722 12:56:03.928" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230722 12:56:03.926" endtime="20230722 12:56:03.929"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230722 12:56:03.940" level="INFO">${STATE["Ngày nghỉ"]} = 4</msg>
<status status="PASS" starttime="20230722 12:56:03.932" endtime="20230722 12:56:03.941"/>
</kw>
<status status="PASS" starttime="20230722 12:56:03.930" endtime="20230722 12:56:03.941"/>
</branch>
<status status="PASS" starttime="20230722 12:56:03.930" endtime="20230722 12:56:03.942"/>
</if>
<status status="PASS" starttime="20230722 12:56:03.574" endtime="20230722 12:56:03.942"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230722 12:56:04.013" endtime="20230722 12:56:04.696"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230722 12:56:04.705" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230722 12:56:04.699" endtime="20230722 12:56:04.706"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230722 12:56:04.731" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230722 12:56:04.707" endtime="20230722 12:56:04.731"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230722 12:56:04.743" endtime="20230722 12:56:04.744"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230722 12:56:04.745" endtime="20230722 12:56:04.746"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:04.738" endtime="20230722 12:56:04.746"/>
</branch>
<status status="PASS" starttime="20230722 12:56:04.737" endtime="20230722 12:56:04.747"/>
</if>
<status status="PASS" starttime="20230722 12:56:04.697" endtime="20230722 12:56:04.748"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230722 12:56:04.749" endtime="20230722 12:56:04.829"/>
</kw>
<status status="PASS" starttime="20230722 12:56:03.976" endtime="20230722 12:56:04.829"/>
</kw>
<kw name="Then User look message &quot;Cập nhật thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230722 12:56:04.913" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230722 12:56:04.912" endtime="20230722 12:56:04.914"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230722 12:56:04.924" level="INFO">Length is 0</msg>
<msg timestamp="20230722 12:56:04.929" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230722 12:56:04.915" endtime="20230722 12:56:04.932"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230722 12:56:04.943" endtime="20230722 12:56:04.945"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:04.940" endtime="20230722 12:56:04.946"/>
</branch>
<status status="PASS" starttime="20230722 12:56:04.935" endtime="20230722 12:56:04.947"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230722 12:56:09.169" level="INFO">Text: 'Cập nhật thành công'</msg>
<status status="PASS" starttime="20230722 12:56:04.955" endtime="20230722 12:56:09.172"/>
</kw>
<status status="PASS" starttime="20230722 12:56:04.947" endtime="20230722 12:56:09.174"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230722 12:56:09.177" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230722 12:56:09.175" endtime="20230722 12:56:09.177"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230722 12:56:09.821" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230722 12:56:09.822" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/results/playwright-log.txt for additional details.</msg>
<msg timestamp="20230722 12:56:09.824" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230722 12:56:09.177" endtime="20230722 12:56:09.831"/>
</kw>
<status status="FAIL" starttime="20230722 12:56:09.177" endtime="20230722 12:56:09.832"/>
</kw>
<msg timestamp="20230722 12:56:09.832" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230722 12:56:09.177" endtime="20230722 12:56:09.833"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230722 12:56:09.837" endtime="20230722 12:56:09.838"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:09.835" endtime="20230722 12:56:09.838"/>
</branch>
<status status="PASS" starttime="20230722 12:56:09.834" endtime="20230722 12:56:09.839"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230722 12:56:11.512" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230722 12:56:09.845" endtime="20230722 12:56:11.513"/>
</kw>
<status status="PASS" starttime="20230722 12:56:09.839" endtime="20230722 12:56:11.514"/>
</kw>
<status status="PASS" starttime="20230722 12:56:04.878" endtime="20230722 12:56:11.514"/>
</kw>
<kw name="And User look title &quot;Danh sách Người dùng&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230722 12:56:11.557" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230722 12:56:11.556" endtime="20230722 12:56:11.558"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230722 12:56:11.571" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230722 12:56:11.558" endtime="20230722 12:56:11.572"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230722 12:56:11.575" endtime="20230722 12:56:11.576"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:11.573" endtime="20230722 12:56:11.577"/>
</branch>
<status status="PASS" starttime="20230722 12:56:11.573" endtime="20230722 12:56:11.577"/>
</if>
<status status="PASS" starttime="20230722 12:56:11.554" endtime="20230722 12:56:11.578"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230722 12:56:11.583" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230722 12:56:11.581" endtime="20230722 12:56:11.584"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230722 12:56:11.600" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230722 12:56:11.585" endtime="20230722 12:56:11.601"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230722 12:56:11.604" endtime="20230722 12:56:11.605"/>
</kw>
<status status="NOT RUN" starttime="20230722 12:56:11.602" endtime="20230722 12:56:11.606"/>
</branch>
<status status="PASS" starttime="20230722 12:56:11.602" endtime="20230722 12:56:11.607"/>
</if>
<status status="PASS" starttime="20230722 12:56:11.580" endtime="20230722 12:56:11.607"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230722 12:56:11.619" level="INFO">Title: 'Danh sách Người dùng'</msg>
<msg timestamp="20230722 12:56:11.620" level="INFO">${actualTitle} = Danh sách Người dùng</msg>
<status status="PASS" starttime="20230722 12:56:11.608" endtime="20230722 12:56:11.621"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230722 12:56:11.622" endtime="20230722 12:56:11.624"/>
</kw>
<status status="PASS" starttime="20230722 12:56:11.578" endtime="20230722 12:56:11.625"/>
</kw>
<status status="PASS" starttime="20230722 12:56:11.532" endtime="20230722 12:56:11.625"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230722 12:56:13.064" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230722 12:56:11.656" endtime="20230722 12:56:13.068"/>
</kw>
<status status="PASS" starttime="20230722 12:56:11.654" endtime="20230722 12:56:13.070"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230722 12:55:43.370" endtime="20230722 12:56:13.072"/>
</test>
<status status="PASS" starttime="20230722 12:55:39.325" endtime="20230722 12:56:13.088"/>
</suite>
<status status="PASS" starttime="20230722 12:55:39.311" endtime="20230722 12:56:13.104"/>
</suite>
<status status="PASS" starttime="20230722 12:55:39.299" endtime="20230722 12:56:13.109"/>
</suite>
<status status="PASS" starttime="20230722 12:55:39.206" endtime="20230722 12:56:13.114"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">@regression</stat>
<stat pass="1" fail="0" skip="0">@smoketest</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Vite-React-Ari">Vite-React-Ari</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Test">Vite-React-Ari.Test</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Testcases">Vite-React-Ari.Test.Testcases</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s1" name="Edit user">Vite-React-Ari.Test.Testcases.Edit user</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

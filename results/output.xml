<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.11.4 on win32)" generated="20230712 11:45:57.231" rpa="false" schemaversion="4">
<suite id="s1" name="Vite-React-Ari" source="D:\DEMO2\vite-react-ari">
<suite id="s1-s1" name="Test" source="D:\DEMO2\vite-react-ari\test">
<suite id="s1-s1-s1" name="Testcases" source="D:\DEMO2\vite-react-ari\test\testcases">
<suite id="s1-s1-s1-s1" name="Staff Leave Management" source="D:\DEMO2\vite-react-ari\test\testcases\staff_leave_management.robot">
<test id="s1-s1-s1-s1-t1" name="STA-13 Verify that staff leave approval by Manager" line="155">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230712 11:46:04.547" endtime="20230712 11:46:04.565"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230712 11:46:04.568" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "D:\\DEMO2\\vite-react-ari\\results\\browser\\traces\\6fb0e4be-5ecf-4f47-9fd4-6e51611d3998"}</msg>
<msg timestamp="20230712 11:46:06.246" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"D:\\DEMO2\\vite-react-ari\\results\\browser\\traces\\6fb0e4be-5ecf-4f47-9fd4-6e51611d3998"}</msg>
<status status="PASS" starttime="20230712 11:46:04.566" endtime="20230712 11:46:06.247"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230712 11:46:09.815" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230712 11:46:09.816" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230712 11:46:06.248" endtime="20230712 11:46:09.818"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230712 11:46:09.822" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230712 11:46:09.819" endtime="20230712 11:46:09.822"/>
</kw>
<status status="PASS" starttime="20230712 11:46:04.546" endtime="20230712 11:46:09.823"/>
</kw>
<kw name="When Login to Manager" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hodutali_manager@husc.edu.vn&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230712 11:46:09.873" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230712 11:46:09.872" endtime="20230712 11:46:09.874"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230712 11:46:09.880" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230712 11:46:09.875" endtime="20230712 11:46:09.882"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230712 11:46:09.885" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230712 11:46:09.883" endtime="20230712 11:46:09.886"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230712 11:46:09.888" level="INFO">Length is 0</msg>
<msg timestamp="20230712 11:46:09.890" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230712 11:46:09.887" endtime="20230712 11:46:09.891"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230712 11:46:09.896" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230712 11:46:09.894" endtime="20230712 11:46:09.897"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230712 11:46:09.900" level="INFO">Length is 0</msg>
<msg timestamp="20230712 11:46:09.901" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230712 11:46:09.898" endtime="20230712 11:46:09.901"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230712 11:46:09.904" endtime="20230712 11:46:09.905"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230712 11:46:09.906" endtime="20230712 11:46:09.907"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:09.902" endtime="20230712 11:46:09.908"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230712 11:46:09.913" endtime="20230712 11:46:09.914"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230712 11:46:09.915" endtime="20230712 11:46:09.916"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230712 11:46:09.917" endtime="20230712 11:46:09.918"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:09.912" endtime="20230712 11:46:09.919"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230712 11:46:09.932" endtime="20230712 11:46:09.933"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230712 11:46:09.934" endtime="20230712 11:46:09.935"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:09.925" endtime="20230712 11:46:09.935"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230712 11:46:09.937" endtime="20230712 11:46:09.940"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230712 11:46:09.941" endtime="20230712 11:46:09.943"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:09.936" endtime="20230712 11:46:09.944"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230712 11:46:09.946" endtime="20230712 11:46:09.947"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:09.945" endtime="20230712 11:46:09.947"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230712 11:46:09.949" endtime="20230712 11:46:09.950"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:09.948" endtime="20230712 11:46:09.951"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230712 11:46:09.953" endtime="20230712 11:46:09.953"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230712 11:46:09.955" endtime="20230712 11:46:09.956"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:09.951" endtime="20230712 11:46:09.957"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230712 11:46:09.960" endtime="20230712 11:46:09.962"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:09.958" endtime="20230712 11:46:09.963"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230712 11:46:09.964" endtime="20230712 11:46:09.965"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:09.963" endtime="20230712 11:46:09.966"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230712 11:46:09.970" endtime="20230712 11:46:09.971"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:09.966" endtime="20230712 11:46:09.973"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230712 11:46:09.978" endtime="20230712 11:46:09.979"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:09.974" endtime="20230712 11:46:09.980"/>
</branch>
<status status="PASS" starttime="20230712 11:46:09.902" endtime="20230712 11:46:09.981"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230712 11:46:09.985" level="INFO">Length is 28</msg>
<msg timestamp="20230712 11:46:09.986" level="INFO">${cnt} = 28</msg>
<status status="PASS" starttime="20230712 11:46:09.982" endtime="20230712 11:46:09.987"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230712 11:46:09.995" level="INFO">${text} = hodutali_manager@husc.edu.vn</msg>
<status status="PASS" starttime="20230712 11:46:09.991" endtime="20230712 11:46:09.995"/>
</kw>
<status status="PASS" starttime="20230712 11:46:09.988" endtime="20230712 11:46:09.996"/>
</branch>
<status status="PASS" starttime="20230712 11:46:09.988" endtime="20230712 11:46:09.996"/>
</if>
<msg timestamp="20230712 11:46:09.997" level="INFO">${text} = hodutali_manager@husc.edu.vn</msg>
<status status="PASS" starttime="20230712 11:46:09.871" endtime="20230712 11:46:09.998"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230712 11:46:10.001" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230712 11:46:09.999" endtime="20230712 11:46:10.003"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230712 11:46:10.004" endtime="20230712 11:46:14.219"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230712 11:46:14.221" level="INFO">Fills the text 'hodutali_manager@husc.edu.vn' in the given field.</msg>
<status status="PASS" starttime="20230712 11:46:14.219" endtime="20230712 11:46:14.361"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230712 11:46:14.367" level="INFO">Length is 28</msg>
<msg timestamp="20230712 11:46:14.368" level="INFO">${cnt} = 28</msg>
<status status="PASS" starttime="20230712 11:46:14.364" endtime="20230712 11:46:14.368"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230712 11:46:14.375" level="INFO">${STATE["Tên đăng nhập"]} = hodutali_manager@husc.edu.vn</msg>
<status status="PASS" starttime="20230712 11:46:14.371" endtime="20230712 11:46:14.377"/>
</kw>
<status status="PASS" starttime="20230712 11:46:14.369" endtime="20230712 11:46:14.377"/>
</branch>
<status status="PASS" starttime="20230712 11:46:14.369" endtime="20230712 11:46:14.379"/>
</if>
<status status="PASS" starttime="20230712 11:46:09.869" endtime="20230712 11:46:14.379"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230712 11:46:14.388" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230712 11:46:14.385" endtime="20230712 11:46:14.389"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230712 11:46:14.396" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230712 11:46:14.390" endtime="20230712 11:46:14.397"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230712 11:46:14.400" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230712 11:46:14.398" endtime="20230712 11:46:14.400"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230712 11:46:14.402" level="INFO">Length is 0</msg>
<msg timestamp="20230712 11:46:14.403" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230712 11:46:14.401" endtime="20230712 11:46:14.403"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230712 11:46:14.418" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230712 11:46:14.410" endtime="20230712 11:46:14.422"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230712 11:46:14.432" level="INFO">Length is 0</msg>
<msg timestamp="20230712 11:46:14.451" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230712 11:46:14.430" endtime="20230712 11:46:14.451"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230712 11:46:14.460" endtime="20230712 11:46:14.461"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230712 11:46:14.462" endtime="20230712 11:46:14.463"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:14.452" endtime="20230712 11:46:14.464"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230712 11:46:14.469" endtime="20230712 11:46:14.470"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230712 11:46:14.472" endtime="20230712 11:46:14.473"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230712 11:46:14.474" endtime="20230712 11:46:14.476"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:14.465" endtime="20230712 11:46:14.476"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230712 11:46:14.478" endtime="20230712 11:46:14.479"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230712 11:46:14.480" endtime="20230712 11:46:14.480"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:14.477" endtime="20230712 11:46:14.481"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230712 11:46:14.483" endtime="20230712 11:46:14.484"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230712 11:46:14.485" endtime="20230712 11:46:14.541"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:14.481" endtime="20230712 11:46:14.543"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230712 11:46:14.546" endtime="20230712 11:46:14.547"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:14.544" endtime="20230712 11:46:14.548"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230712 11:46:14.551" endtime="20230712 11:46:14.553"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:14.549" endtime="20230712 11:46:14.554"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230712 11:46:14.569" endtime="20230712 11:46:14.570"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230712 11:46:14.573" endtime="20230712 11:46:14.579"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:14.556" endtime="20230712 11:46:14.580"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230712 11:46:14.581" endtime="20230712 11:46:14.582"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:14.580" endtime="20230712 11:46:14.584"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230712 11:46:14.587" endtime="20230712 11:46:14.589"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:14.585" endtime="20230712 11:46:14.590"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230712 11:46:14.597" endtime="20230712 11:46:14.598"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:14.590" endtime="20230712 11:46:14.598"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230712 11:46:14.600" endtime="20230712 11:46:14.601"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:14.599" endtime="20230712 11:46:14.602"/>
</branch>
<status status="PASS" starttime="20230712 11:46:14.452" endtime="20230712 11:46:14.603"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230712 11:46:14.607" level="INFO">Length is 13</msg>
<msg timestamp="20230712 11:46:14.613" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230712 11:46:14.605" endtime="20230712 11:46:14.615"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230712 11:46:14.619" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230712 11:46:14.617" endtime="20230712 11:46:14.621"/>
</kw>
<status status="PASS" starttime="20230712 11:46:14.616" endtime="20230712 11:46:14.622"/>
</branch>
<status status="PASS" starttime="20230712 11:46:14.616" endtime="20230712 11:46:14.622"/>
</if>
<msg timestamp="20230712 11:46:14.623" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230712 11:46:14.383" endtime="20230712 11:46:14.624"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230712 11:46:14.631" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230712 11:46:14.625" endtime="20230712 11:46:14.632"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230712 11:46:14.633" endtime="20230712 11:46:15.093"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230712 11:46:15.098" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230712 11:46:15.096" endtime="20230712 11:46:15.185"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230712 11:46:15.188" level="INFO">Length is 13</msg>
<msg timestamp="20230712 11:46:15.189" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230712 11:46:15.186" endtime="20230712 11:46:15.191"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230712 11:46:15.199" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230712 11:46:15.195" endtime="20230712 11:46:15.200"/>
</kw>
<status status="PASS" starttime="20230712 11:46:15.193" endtime="20230712 11:46:15.200"/>
</branch>
<status status="PASS" starttime="20230712 11:46:15.193" endtime="20230712 11:46:15.201"/>
</if>
<status status="PASS" starttime="20230712 11:46:14.381" endtime="20230712 11:46:15.201"/>
</kw>
<kw name="Enter at &quot;Mật khẩu&quot; field to Login" library="common" sourcename="Enter at &quot;${name}&quot; field to Login">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230712 11:46:15.210" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230712 11:46:15.204" endtime="20230712 11:46:15.211"/>
</kw>
<kw name="Press Keys" library="Browser">
<arg>${element}</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given key combination into element found by ``selector``.</doc>
<status status="PASS" starttime="20230712 11:46:15.212" endtime="20230712 11:46:15.576"/>
</kw>
<status status="PASS" starttime="20230712 11:46:15.202" endtime="20230712 11:46:15.578"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230712 11:46:15.584" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230712 11:46:15.582" endtime="20230712 11:46:15.584"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230712 11:46:15.587" level="INFO">Length is 0</msg>
<msg timestamp="20230712 11:46:15.588" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230712 11:46:15.585" endtime="20230712 11:46:15.590"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230712 11:46:15.595" endtime="20230712 11:46:15.597"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:15.590" endtime="20230712 11:46:15.598"/>
</branch>
<status status="PASS" starttime="20230712 11:46:15.590" endtime="20230712 11:46:15.598"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230712 11:46:18.176" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230712 11:46:15.604" endtime="20230712 11:46:18.176"/>
</kw>
<status status="PASS" starttime="20230712 11:46:15.599" endtime="20230712 11:46:18.177"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230712 11:46:18.181" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230712 11:46:18.179" endtime="20230712 11:46:18.181"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230712 11:46:18.718" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230712 11:46:18.719" level="INFO">See also file:///D:/DEMO2/vite-react-ari/results/playwright-log.txt for additional details.</msg>
<msg timestamp="20230712 11:46:18.721" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230712 11:46:18.186" endtime="20230712 11:46:18.738"/>
</kw>
<status status="FAIL" starttime="20230712 11:46:18.183" endtime="20230712 11:46:18.739"/>
</kw>
<msg timestamp="20230712 11:46:18.740" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230712 11:46:18.182" endtime="20230712 11:46:18.740"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230712 11:46:18.745" endtime="20230712 11:46:18.747"/>
</kw>
<status status="NOT RUN" starttime="20230712 11:46:18.743" endtime="20230712 11:46:18.748"/>
</branch>
<status status="PASS" starttime="20230712 11:46:18.742" endtime="20230712 11:46:18.748"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${notify}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230712 11:46:21.513" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230712 11:46:18.752" endtime="20230712 11:46:21.515"/>
</kw>
<status status="PASS" starttime="20230712 11:46:18.749" endtime="20230712 11:46:21.516"/>
</kw>
<status status="PASS" starttime="20230712 11:46:15.580" endtime="20230712 11:46:21.517"/>
</kw>
<status status="PASS" starttime="20230712 11:46:09.839" endtime="20230712 11:46:21.518"/>
</kw>
<kw name="And Reload Page" library="common">
<kw name="Reload" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Reloads current active page.</doc>
<msg timestamp="20230712 11:46:23.179" level="INFO">Reloaded page</msg>
<status status="PASS" starttime="20230712 11:46:21.578" endtime="20230712 11:46:23.180"/>
</kw>
<status status="PASS" starttime="20230712 11:46:21.547" endtime="20230712 11:46:23.182"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230712 11:46:58.639" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230712 11:46:23.217" endtime="20230712 11:46:58.642"/>
</kw>
<status status="PASS" starttime="20230712 11:46:23.216" endtime="20230712 11:46:58.643"/>
</kw>
<status status="PASS" starttime="20230712 11:46:04.536" endtime="20230712 11:46:58.647"/>
</test>
<status status="PASS" starttime="20230712 11:45:58.620" endtime="20230712 11:46:58.677"/>
</suite>
<status status="PASS" starttime="20230712 11:45:58.581" endtime="20230712 11:46:58.693"/>
</suite>
<status status="PASS" starttime="20230712 11:45:58.566" endtime="20230712 11:46:58.698"/>
</suite>
<status status="PASS" starttime="20230712 11:45:58.297" endtime="20230712 11:46:58.705"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Vite-React-Ari">Vite-React-Ari</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Test">Vite-React-Ari.Test</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Testcases">Vite-React-Ari.Test.Testcases</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s1" name="Staff Leave Management">Vite-React-Ari.Test.Testcases.Staff Leave Management</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

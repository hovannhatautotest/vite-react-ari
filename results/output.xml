<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.11.4 on win32)" generated="20230713 10:53:41.035" rpa="false" schemaversion="4">
<suite id="s1" name="Vite-React-Ari" source="D:\DEMO2\vite-react-ari">
<suite id="s1-s1" name="Test" source="D:\DEMO2\vite-react-ari\test">
<suite id="s1-s1-s1" name="Testcases" source="D:\DEMO2\vite-react-ari\test\testcases">
<suite id="s1-s1-s1-s1" name="Hovannhat Login" source="D:\DEMO2\vite-react-ari\test\testcases\hovannhat_login.robot">
<test id="s1-s1-s1-s1-t1" name="DN-06 Verify that Đăng nhập unsuccessfully because enter incorrect password" line="43">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230713 10:53:45.346" endtime="20230713 10:53:45.363"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230713 10:53:45.365" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "D:\\DEMO2\\vite-react-ari\\results\\browser\\traces\\3a8fdcf3-2cfb-4926-a514-842aea2eee4b"}</msg>
<msg timestamp="20230713 10:53:47.076" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"D:\\DEMO2\\vite-react-ari\\results\\browser\\traces\\3a8fdcf3-2cfb-4926-a514-842aea2eee4b"}</msg>
<status status="PASS" starttime="20230713 10:53:45.364" endtime="20230713 10:53:47.077"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230713 10:53:50.022" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230713 10:53:50.022" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230713 10:53:47.078" endtime="20230713 10:53:50.023"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230713 10:53:50.028" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230713 10:53:50.026" endtime="20230713 10:53:50.029"/>
</kw>
<status status="PASS" starttime="20230713 10:53:45.343" endtime="20230713 10:53:50.030"/>
</kw>
<kw name="When Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;admin@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230713 10:53:50.068" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230713 10:53:50.067" endtime="20230713 10:53:50.069"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230713 10:53:50.072" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230713 10:53:50.070" endtime="20230713 10:53:50.072"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230713 10:53:50.079" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230713 10:53:50.072" endtime="20230713 10:53:50.080"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230713 10:53:50.083" level="INFO">Length is 0</msg>
<msg timestamp="20230713 10:53:50.083" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230713 10:53:50.081" endtime="20230713 10:53:50.087"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230713 10:53:50.094" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230713 10:53:50.088" endtime="20230713 10:53:50.096"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230713 10:53:50.099" level="INFO">Length is 0</msg>
<msg timestamp="20230713 10:53:50.099" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230713 10:53:50.097" endtime="20230713 10:53:50.100"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230713 10:53:50.103" endtime="20230713 10:53:50.106"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230713 10:53:50.109" endtime="20230713 10:53:50.110"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:50.101" endtime="20230713 10:53:50.110"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230713 10:53:50.112" endtime="20230713 10:53:50.113"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230713 10:53:50.114" endtime="20230713 10:53:50.114"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230713 10:53:50.115" endtime="20230713 10:53:50.116"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:50.111" endtime="20230713 10:53:50.116"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230713 10:53:50.118" endtime="20230713 10:53:50.128"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230713 10:53:50.129" endtime="20230713 10:53:50.130"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:50.117" endtime="20230713 10:53:50.130"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230713 10:53:50.132" endtime="20230713 10:53:50.133"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230713 10:53:50.133" endtime="20230713 10:53:50.134"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:50.131" endtime="20230713 10:53:50.135"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230713 10:53:50.137" endtime="20230713 10:53:50.138"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:50.135" endtime="20230713 10:53:50.139"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230713 10:53:50.142" endtime="20230713 10:53:50.143"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:50.139" endtime="20230713 10:53:50.144"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230713 10:53:50.146" endtime="20230713 10:53:50.146"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230713 10:53:50.147" endtime="20230713 10:53:50.148"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:50.144" endtime="20230713 10:53:50.149"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230713 10:53:50.150" endtime="20230713 10:53:50.151"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:50.149" endtime="20230713 10:53:50.152"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230713 10:53:50.154" endtime="20230713 10:53:50.154"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:50.152" endtime="20230713 10:53:50.155"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230713 10:53:50.158" endtime="20230713 10:53:50.159"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:50.155" endtime="20230713 10:53:50.160"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230713 10:53:50.161" endtime="20230713 10:53:50.162"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:50.160" endtime="20230713 10:53:50.163"/>
</branch>
<status status="PASS" starttime="20230713 10:53:50.101" endtime="20230713 10:53:50.163"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230713 10:53:50.165" level="INFO">Length is 15</msg>
<msg timestamp="20230713 10:53:50.201" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230713 10:53:50.164" endtime="20230713 10:53:50.202"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230713 10:53:50.213" level="INFO">${text} = admin@admin.com</msg>
<status status="PASS" starttime="20230713 10:53:50.210" endtime="20230713 10:53:50.214"/>
</kw>
<status status="PASS" starttime="20230713 10:53:50.203" endtime="20230713 10:53:50.215"/>
</branch>
<status status="PASS" starttime="20230713 10:53:50.202" endtime="20230713 10:53:50.215"/>
</if>
<msg timestamp="20230713 10:53:50.216" level="INFO">${text} = admin@admin.com</msg>
<status status="PASS" starttime="20230713 10:53:50.065" endtime="20230713 10:53:50.217"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230713 10:53:50.227" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230713 10:53:50.218" endtime="20230713 10:53:50.228"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230713 10:53:50.229" endtime="20230713 10:53:53.544"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230713 10:53:53.547" level="INFO">Fills the text 'admin@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230713 10:53:53.545" endtime="20230713 10:53:53.630"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230713 10:53:53.632" level="INFO">Length is 15</msg>
<msg timestamp="20230713 10:53:53.633" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230713 10:53:53.631" endtime="20230713 10:53:53.634"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230713 10:53:53.642" level="INFO">${STATE["Tên đăng nhập"]} = admin@admin.com</msg>
<status status="PASS" starttime="20230713 10:53:53.638" endtime="20230713 10:53:53.643"/>
</kw>
<status status="PASS" starttime="20230713 10:53:53.635" endtime="20230713 10:53:53.644"/>
</branch>
<status status="PASS" starttime="20230713 10:53:53.635" endtime="20230713 10:53:53.645"/>
</if>
<status status="PASS" starttime="20230713 10:53:50.038" endtime="20230713 10:53:53.645"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230713 10:53:53.720" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230713 10:53:53.704" endtime="20230713 10:53:53.730"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230713 10:53:53.735" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230713 10:53:53.731" endtime="20230713 10:53:53.735"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230713 10:53:53.738" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230713 10:53:53.736" endtime="20230713 10:53:53.743"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230713 10:53:53.745" level="INFO">Length is 0</msg>
<msg timestamp="20230713 10:53:53.751" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230713 10:53:53.744" endtime="20230713 10:53:53.756"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230713 10:53:53.765" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230713 10:53:53.756" endtime="20230713 10:53:53.766"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230713 10:53:53.771" level="INFO">Length is 1</msg>
<msg timestamp="20230713 10:53:53.771" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230713 10:53:53.767" endtime="20230713 10:53:53.777"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230713 10:53:53.781" endtime="20230713 10:53:53.781"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230713 10:53:53.782" endtime="20230713 10:53:53.783"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:53.779" endtime="20230713 10:53:53.783"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230713 10:53:53.785" endtime="20230713 10:53:53.788"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230713 10:53:53.788" endtime="20230713 10:53:53.788"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230713 10:53:53.792" endtime="20230713 10:53:53.793"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:53.784" endtime="20230713 10:53:53.793"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230713 10:53:53.795" endtime="20230713 10:53:53.796"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230713 10:53:53.797" endtime="20230713 10:53:53.798"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:53.794" endtime="20230713 10:53:53.798"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230713 10:53:53.800" endtime="20230713 10:53:53.801"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230713 10:53:53.805" endtime="20230713 10:53:53.806"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:53.799" endtime="20230713 10:53:53.807"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230713 10:53:53.811" endtime="20230713 10:53:53.811"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:53.809" endtime="20230713 10:53:53.812"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230713 10:53:53.814" endtime="20230713 10:53:53.814"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:53.812" endtime="20230713 10:53:53.815"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230713 10:53:53.816" endtime="20230713 10:53:53.818"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230713 10:53:53.822" endtime="20230713 10:53:53.827"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:53.815" endtime="20230713 10:53:53.828"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230713 10:53:53.834" endtime="20230713 10:53:53.836"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:53.830" endtime="20230713 10:53:53.837"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230713 10:53:53.837" endtime="20230713 10:53:53.845"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:53.837" endtime="20230713 10:53:53.846"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230713 10:53:53.847" endtime="20230713 10:53:53.848"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:53.846" endtime="20230713 10:53:53.849"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230713 10:53:53.852" level="INFO">${new_text} = Necessitatibus qui molestiae omnis accusantium neque error.</msg>
<status status="PASS" starttime="20230713 10:53:53.850" endtime="20230713 10:53:53.853"/>
</kw>
<status status="PASS" starttime="20230713 10:53:53.849" endtime="20230713 10:53:53.854"/>
</branch>
<status status="PASS" starttime="20230713 10:53:53.779" endtime="20230713 10:53:53.854"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230713 10:53:53.859" level="INFO">Length is 8</msg>
<msg timestamp="20230713 10:53:53.870" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230713 10:53:53.854" endtime="20230713 10:53:53.876"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230713 10:53:53.881" level="INFO">${text} = Necessitatibus qui molestiae omnis accusantium neque error.</msg>
<status status="PASS" starttime="20230713 10:53:53.880" endtime="20230713 10:53:53.882"/>
</kw>
<status status="PASS" starttime="20230713 10:53:53.877" endtime="20230713 10:53:53.882"/>
</branch>
<status status="PASS" starttime="20230713 10:53:53.877" endtime="20230713 10:53:53.883"/>
</if>
<msg timestamp="20230713 10:53:53.885" level="INFO">${text} = Necessitatibus qui molestiae omnis accusantium neque error.</msg>
<status status="PASS" starttime="20230713 10:53:53.704" endtime="20230713 10:53:53.888"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230713 10:53:53.895" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230713 10:53:53.889" endtime="20230713 10:53:53.896"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230713 10:53:53.896" endtime="20230713 10:53:54.020"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230713 10:53:54.025" level="INFO">Fills the text 'Necessitatibus qui molestiae omnis accusantium neque error.' in the given field.</msg>
<status status="PASS" starttime="20230713 10:53:54.021" endtime="20230713 10:53:54.097"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230713 10:53:54.100" level="INFO">Length is 59</msg>
<msg timestamp="20230713 10:53:54.100" level="INFO">${cnt} = 59</msg>
<status status="PASS" starttime="20230713 10:53:54.098" endtime="20230713 10:53:54.101"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230713 10:53:54.103" level="INFO">${STATE["Mật khẩu"]} = Necessitatibus qui molestiae omnis accusantium neque error.</msg>
<status status="PASS" starttime="20230713 10:53:54.103" endtime="20230713 10:53:54.103"/>
</kw>
<status status="PASS" starttime="20230713 10:53:54.102" endtime="20230713 10:53:54.109"/>
</branch>
<status status="PASS" starttime="20230713 10:53:54.102" endtime="20230713 10:53:54.110"/>
</if>
<status status="PASS" starttime="20230713 10:53:53.672" endtime="20230713 10:53:54.111"/>
</kw>
<kw name="And Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230713 10:53:54.153" endtime="20230713 10:53:54.474"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230713 10:53:54.480" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230713 10:53:54.479" endtime="20230713 10:53:54.481"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230713 10:53:54.518" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230713 10:53:54.482" endtime="20230713 10:53:54.519"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230713 10:53:54.523" endtime="20230713 10:53:54.532"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230713 10:53:54.534" endtime="20230713 10:53:54.535"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:54.520" endtime="20230713 10:53:54.535"/>
</branch>
<status status="PASS" starttime="20230713 10:53:54.520" endtime="20230713 10:53:54.536"/>
</if>
<status status="PASS" starttime="20230713 10:53:54.475" endtime="20230713 10:53:54.536"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230713 10:53:54.537" endtime="20230713 10:53:54.653"/>
</kw>
<status status="PASS" starttime="20230713 10:53:54.132" endtime="20230713 10:53:54.654"/>
</kw>
<kw name="Then User look message &quot;Thông tin đăng nhập không hợp lệ cho người dùng _@Tên đăng nhập@_&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230713 10:53:54.736" level="INFO">${contains} = ['Tên đăng nhập']</msg>
<status status="PASS" starttime="20230713 10:53:54.734" endtime="20230713 10:53:54.737"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230713 10:53:54.747" level="INFO">Length is 1</msg>
<msg timestamp="20230713 10:53:54.749" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230713 10:53:54.738" endtime="20230713 10:53:54.749"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230713 10:53:54.764" level="INFO">${message} = Thông tin đăng nhập không hợp lệ cho người dùng admin@admin.com</msg>
<status status="PASS" starttime="20230713 10:53:54.752" endtime="20230713 10:53:54.766"/>
</kw>
<status status="PASS" starttime="20230713 10:53:54.750" endtime="20230713 10:53:54.766"/>
</branch>
<status status="PASS" starttime="20230713 10:53:54.750" endtime="20230713 10:53:54.767"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230713 10:53:56.318" level="INFO">Text: 'Thông tin đăng nhập không hợp lệ cho người dùng admin@admin.com'</msg>
<status status="PASS" starttime="20230713 10:53:54.769" endtime="20230713 10:53:56.318"/>
</kw>
<status status="PASS" starttime="20230713 10:53:54.768" endtime="20230713 10:53:56.318"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230713 10:53:56.318" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230713 10:53:56.318" endtime="20230713 10:53:56.318"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230713 10:53:56.972" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230713 10:53:56.973" level="INFO">See also file:///D:/DEMO2/vite-react-ari/results/playwright-log.txt for additional details.</msg>
<msg timestamp="20230713 10:53:56.979" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230713 10:53:56.335" endtime="20230713 10:53:56.994"/>
</kw>
<status status="FAIL" starttime="20230713 10:53:56.335" endtime="20230713 10:53:56.996"/>
</kw>
<msg timestamp="20230713 10:53:56.997" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230713 10:53:56.318" endtime="20230713 10:53:56.997"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230713 10:53:57.000" endtime="20230713 10:53:57.001"/>
</kw>
<status status="NOT RUN" starttime="20230713 10:53:56.998" endtime="20230713 10:53:57.002"/>
</branch>
<status status="PASS" starttime="20230713 10:53:56.998" endtime="20230713 10:53:57.002"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${notify}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230713 10:54:02.602" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230713 10:53:57.012" endtime="20230713 10:54:02.603"/>
</kw>
<status status="PASS" starttime="20230713 10:53:57.003" endtime="20230713 10:54:02.604"/>
</kw>
<status status="PASS" starttime="20230713 10:53:54.704" endtime="20230713 10:54:02.604"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230713 10:54:04.595" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230713 10:54:02.635" endtime="20230713 10:54:04.596"/>
</kw>
<status status="PASS" starttime="20230713 10:54:02.634" endtime="20230713 10:54:04.596"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230713 10:53:45.335" endtime="20230713 10:54:04.598"/>
</test>
<status status="PASS" starttime="20230713 10:53:41.787" endtime="20230713 10:54:04.614"/>
</suite>
<status status="PASS" starttime="20230713 10:53:41.778" endtime="20230713 10:54:04.631"/>
</suite>
<status status="PASS" starttime="20230713 10:53:41.767" endtime="20230713 10:54:04.636"/>
</suite>
<status status="PASS" starttime="20230713 10:53:41.683" endtime="20230713 10:54:04.642"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">@regression</stat>
<stat pass="1" fail="0" skip="0">@smoketest</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Vite-React-Ari">Vite-React-Ari</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Test">Vite-React-Ari.Test</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Testcases">Vite-React-Ari.Test.Testcases</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s1" name="Hovannhat Login">Vite-React-Ari.Test.Testcases.Hovannhat Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

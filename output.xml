<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.11.4 on win32)" generated="20230801 16:08:58.296" rpa="false" schemaversion="4">
<suite id="s1" name="Admin Create team" source="C:\Users\nhats\OneDrive\Desktop\ARI\vite-react-ari\test\testcases\Admin_Create_team.robot">
<test id="s1-t1" name="CRT-01 Verify that it is possible to navigate to the page for creating a new team" line="10">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 16:09:03.363" endtime="20230801 16:09:03.380"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 16:09:03.384" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\2c42f608-8770-44f8-b10d-47e71c89176b"}</msg>
<msg timestamp="20230801 16:09:05.517" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\2c42f608-8770-44f8-b10d-47e71c89176b"}</msg>
<status status="PASS" starttime="20230801 16:09:03.380" endtime="20230801 16:09:05.518"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 16:09:09.012" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 16:09:09.012" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 16:09:05.519" endtime="20230801 16:09:09.014"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 16:09:09.016" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 16:09:09.015" endtime="20230801 16:09:09.016"/>
</kw>
<status status="PASS" starttime="20230801 16:09:03.361" endtime="20230801 16:09:09.016"/>
</kw>
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:09.070" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:09:09.070" endtime="20230801 16:09:09.071"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:09.071" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:09:09.071" endtime="20230801 16:09:09.071"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:09:09.073" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:09:09.072" endtime="20230801 16:09:09.074"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:09.075" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:09:09.075" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:09:09.074" endtime="20230801 16:09:09.075"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:09:09.077" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:09:09.076" endtime="20230801 16:09:09.077"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:09.079" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:09:09.079" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:09:09.078" endtime="20230801 16:09:09.079"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.082" endtime="20230801 16:09:09.083"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.083" endtime="20230801 16:09:09.084"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:09.080" endtime="20230801 16:09:09.084"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.086" endtime="20230801 16:09:09.086"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.087" endtime="20230801 16:09:09.087"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.133" endtime="20230801 16:09:09.134"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:09.085" endtime="20230801 16:09:09.134"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.135" endtime="20230801 16:09:09.135"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.136" endtime="20230801 16:09:09.136"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:09.134" endtime="20230801 16:09:09.136"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.137" endtime="20230801 16:09:09.138"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.138" endtime="20230801 16:09:09.139"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:09.136" endtime="20230801 16:09:09.139"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.140" endtime="20230801 16:09:09.140"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.140" endtime="20230801 16:09:09.140"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:09.139" endtime="20230801 16:09:09.142"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.143" endtime="20230801 16:09:09.143"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.144" endtime="20230801 16:09:09.147"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:09.142" endtime="20230801 16:09:09.149"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.151" endtime="20230801 16:09:09.151"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.152" endtime="20230801 16:09:09.152"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:09.150" endtime="20230801 16:09:09.152"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.154" endtime="20230801 16:09:09.154"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:09.153" endtime="20230801 16:09:09.154"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:09:09.155" endtime="20230801 16:09:09.156"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:09.154" endtime="20230801 16:09:09.156"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.158" endtime="20230801 16:09:09.158"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.159" endtime="20230801 16:09:09.159"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:09.157" endtime="20230801 16:09:09.160"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.166" endtime="20230801 16:09:09.166"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:09.163" endtime="20230801 16:09:09.166"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.168" endtime="20230801 16:09:09.168"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:09.167" endtime="20230801 16:09:09.168"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.169" endtime="20230801 16:09:09.170"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:09.168" endtime="20230801 16:09:09.170"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:09:09.174" endtime="20230801 16:09:09.174"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:09.171" endtime="20230801 16:09:09.174"/>
</branch>
<status status="PASS" starttime="20230801 16:09:09.080" endtime="20230801 16:09:09.175"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:09.176" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:09:09.179" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:09:09.175" endtime="20230801 16:09:09.179"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:09:09.206" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:09:09.205" endtime="20230801 16:09:09.206"/>
</kw>
<status status="PASS" starttime="20230801 16:09:09.204" endtime="20230801 16:09:09.206"/>
</branch>
<status status="PASS" starttime="20230801 16:09:09.203" endtime="20230801 16:09:09.206"/>
</if>
<msg timestamp="20230801 16:09:09.207" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:09:09.069" endtime="20230801 16:09:09.207"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:09:09.210" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:09:09.207" endtime="20230801 16:09:09.217"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:09:09.218" endtime="20230801 16:09:11.960"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:09:11.965" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230801 16:09:11.964" endtime="20230801 16:09:12.134"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:12.136" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:09:12.136" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:09:12.135" endtime="20230801 16:09:12.136"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:09:12.140" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:09:12.137" endtime="20230801 16:09:12.140"/>
</kw>
<status status="PASS" starttime="20230801 16:09:12.136" endtime="20230801 16:09:12.140"/>
</branch>
<status status="PASS" starttime="20230801 16:09:12.136" endtime="20230801 16:09:12.140"/>
</if>
<status status="PASS" starttime="20230801 16:09:09.067" endtime="20230801 16:09:12.142"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:12.151" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:09:12.150" endtime="20230801 16:09:12.151"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:12.154" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:09:12.151" endtime="20230801 16:09:12.155"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:09:12.158" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:09:12.156" endtime="20230801 16:09:12.158"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:12.160" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:09:12.162" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:09:12.159" endtime="20230801 16:09:12.163"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:09:12.167" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:09:12.164" endtime="20230801 16:09:12.167"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:12.169" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:09:12.169" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:09:12.168" endtime="20230801 16:09:12.169"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.172" endtime="20230801 16:09:12.172"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.173" endtime="20230801 16:09:12.173"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:12.170" endtime="20230801 16:09:12.174"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.175" endtime="20230801 16:09:12.175"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.176" endtime="20230801 16:09:12.176"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.183" endtime="20230801 16:09:12.183"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:12.174" endtime="20230801 16:09:12.184"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.185" endtime="20230801 16:09:12.185"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.186" endtime="20230801 16:09:12.186"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:12.184" endtime="20230801 16:09:12.186"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.188" endtime="20230801 16:09:12.188"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.189" endtime="20230801 16:09:12.189"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:12.187" endtime="20230801 16:09:12.189"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.190" endtime="20230801 16:09:12.191"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.191" endtime="20230801 16:09:12.192"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:12.190" endtime="20230801 16:09:12.192"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.199" endtime="20230801 16:09:12.199"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.200" endtime="20230801 16:09:12.200"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:12.192" endtime="20230801 16:09:12.200"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.201" endtime="20230801 16:09:12.201"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.203" endtime="20230801 16:09:12.203"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:12.200" endtime="20230801 16:09:12.203"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.204" endtime="20230801 16:09:12.205"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:12.203" endtime="20230801 16:09:12.205"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:09:12.206" endtime="20230801 16:09:12.206"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:12.205" endtime="20230801 16:09:12.207"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.208" endtime="20230801 16:09:12.208"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.209" endtime="20230801 16:09:12.209"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:12.207" endtime="20230801 16:09:12.215"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.216" endtime="20230801 16:09:12.217"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:12.215" endtime="20230801 16:09:12.217"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.219" endtime="20230801 16:09:12.219"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:12.218" endtime="20230801 16:09:12.219"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.220" endtime="20230801 16:09:12.220"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:12.219" endtime="20230801 16:09:12.220"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.222" endtime="20230801 16:09:12.222"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:12.220" endtime="20230801 16:09:12.222"/>
</branch>
<status status="PASS" starttime="20230801 16:09:12.170" endtime="20230801 16:09:12.222"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:12.224" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:09:12.224" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:09:12.223" endtime="20230801 16:09:12.224"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:09:12.257" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:09:12.225" endtime="20230801 16:09:12.257"/>
</kw>
<status status="PASS" starttime="20230801 16:09:12.225" endtime="20230801 16:09:12.257"/>
</branch>
<status status="PASS" starttime="20230801 16:09:12.224" endtime="20230801 16:09:12.257"/>
</if>
<msg timestamp="20230801 16:09:12.258" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:09:12.147" endtime="20230801 16:09:12.258"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:09:12.260" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:09:12.258" endtime="20230801 16:09:12.265"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:09:12.266" endtime="20230801 16:09:12.446"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:09:12.449" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230801 16:09:12.448" endtime="20230801 16:09:12.537"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:12.538" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:09:12.539" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:09:12.538" endtime="20230801 16:09:12.539"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:09:12.543" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:09:12.540" endtime="20230801 16:09:12.544"/>
</kw>
<status status="PASS" starttime="20230801 16:09:12.539" endtime="20230801 16:09:12.545"/>
</branch>
<status status="PASS" starttime="20230801 16:09:12.539" endtime="20230801 16:09:12.545"/>
</if>
<status status="PASS" starttime="20230801 16:09:12.142" endtime="20230801 16:09:12.546"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:09:12.548" endtime="20230801 16:09:12.949"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:12.952" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:09:12.951" endtime="20230801 16:09:12.952"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:12.984" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:09:12.953" endtime="20230801 16:09:12.984"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.986" endtime="20230801 16:09:12.986"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:09:12.986" endtime="20230801 16:09:12.987"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:12.985" endtime="20230801 16:09:12.987"/>
</branch>
<status status="PASS" starttime="20230801 16:09:12.985" endtime="20230801 16:09:12.987"/>
</if>
<status status="PASS" starttime="20230801 16:09:12.950" endtime="20230801 16:09:12.989"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:09:12.990" endtime="20230801 16:09:13.086"/>
</kw>
<status status="PASS" starttime="20230801 16:09:12.547" endtime="20230801 16:09:13.087"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:09:13.089" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:09:13.088" endtime="20230801 16:09:13.089"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:13.090" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:09:13.090" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:09:13.090" endtime="20230801 16:09:13.091"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 16:09:13.092" endtime="20230801 16:09:13.092"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:13.091" endtime="20230801 16:09:13.093"/>
</branch>
<status status="PASS" starttime="20230801 16:09:13.091" endtime="20230801 16:09:13.095"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:09:15.399" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 16:09:13.103" endtime="20230801 16:09:15.399"/>
</kw>
<status status="PASS" starttime="20230801 16:09:13.097" endtime="20230801 16:09:15.400"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:15.401" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 16:09:15.400" endtime="20230801 16:09:15.401"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:09:16.082" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 16:09:16.082" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 16:09:16.083" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 16:09:15.405" endtime="20230801 16:09:16.092"/>
</kw>
<status status="FAIL" starttime="20230801 16:09:15.402" endtime="20230801 16:09:16.093"/>
</kw>
<msg timestamp="20230801 16:09:16.093" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 16:09:15.401" endtime="20230801 16:09:16.096"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:09:16.098" endtime="20230801 16:09:16.099"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:16.097" endtime="20230801 16:09:16.099"/>
</branch>
<status status="PASS" starttime="20230801 16:09:16.097" endtime="20230801 16:09:16.099"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:09:17.566" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 16:09:16.104" endtime="20230801 16:09:17.566"/>
</kw>
<status status="PASS" starttime="20230801 16:09:16.100" endtime="20230801 16:09:17.567"/>
</kw>
<status status="PASS" starttime="20230801 16:09:13.087" endtime="20230801 16:09:17.567"/>
</kw>
<status status="PASS" starttime="20230801 16:09:09.066" endtime="20230801 16:09:17.567"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:09:17.573" endtime="20230801 16:09:17.749"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:17.751" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:09:17.750" endtime="20230801 16:09:17.751"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:17.767" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:09:17.751" endtime="20230801 16:09:17.767"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:09:17.768" endtime="20230801 16:09:17.768"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:17.767" endtime="20230801 16:09:17.768"/>
</branch>
<status status="PASS" starttime="20230801 16:09:17.767" endtime="20230801 16:09:17.769"/>
</if>
<status status="PASS" starttime="20230801 16:09:17.749" endtime="20230801 16:09:17.769"/>
</kw>
<status status="PASS" starttime="20230801 16:09:17.572" endtime="20230801 16:09:17.769"/>
</kw>
<kw name="And Click &quot;Nhóm&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:17.773" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:09:17.772" endtime="20230801 16:09:17.773"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:17.791" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:09:17.774" endtime="20230801 16:09:17.791"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:09:17.794" endtime="20230801 16:09:17.795"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:17.793" endtime="20230801 16:09:17.795"/>
</branch>
<status status="PASS" starttime="20230801 16:09:17.793" endtime="20230801 16:09:17.796"/>
</if>
<status status="PASS" starttime="20230801 16:09:17.772" endtime="20230801 16:09:17.796"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:09:17.798" endtime="20230801 16:09:18.056"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:18.058" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:09:18.057" endtime="20230801 16:09:18.058"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:18.074" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:09:18.059" endtime="20230801 16:09:18.074"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:09:20.551" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 16:09:18.079" endtime="20230801 16:09:20.551"/>
</kw>
<status status="PASS" starttime="20230801 16:09:18.075" endtime="20230801 16:09:20.552"/>
</kw>
<status status="PASS" starttime="20230801 16:09:18.075" endtime="20230801 16:09:20.552"/>
</branch>
<status status="PASS" starttime="20230801 16:09:18.074" endtime="20230801 16:09:20.553"/>
</if>
<status status="PASS" starttime="20230801 16:09:18.056" endtime="20230801 16:09:20.553"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:20.555" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:09:20.554" endtime="20230801 16:09:20.555"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:20.566" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:09:20.555" endtime="20230801 16:09:20.566"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:09:20.566" endtime="20230801 16:09:20.566"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:20.566" endtime="20230801 16:09:20.567"/>
</branch>
<status status="PASS" starttime="20230801 16:09:20.566" endtime="20230801 16:09:20.567"/>
</if>
<status status="PASS" starttime="20230801 16:09:20.553" endtime="20230801 16:09:20.567"/>
</kw>
<status status="PASS" starttime="20230801 16:09:17.771" endtime="20230801 16:09:20.567"/>
</kw>
<kw name="And Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:09:20.569" endtime="20230801 16:09:20.740"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:20.744" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:09:20.743" endtime="20230801 16:09:20.745"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:20.771" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:09:20.745" endtime="20230801 16:09:20.771"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:09:20.772" endtime="20230801 16:09:20.773"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:09:20.773" endtime="20230801 16:09:20.773"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:20.772" endtime="20230801 16:09:20.774"/>
</branch>
<status status="PASS" starttime="20230801 16:09:20.772" endtime="20230801 16:09:20.774"/>
</if>
<status status="PASS" starttime="20230801 16:09:20.742" endtime="20230801 16:09:20.774"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:09:20.775" endtime="20230801 16:09:21.146"/>
</kw>
<status status="PASS" starttime="20230801 16:09:20.568" endtime="20230801 16:09:21.147"/>
</kw>
<kw name="Then User look title &quot;Thêm mới nhóm&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:21.153" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:09:21.152" endtime="20230801 16:09:21.153"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:21.167" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:09:21.153" endtime="20230801 16:09:21.167"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:09:21.169" endtime="20230801 16:09:21.169"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:21.168" endtime="20230801 16:09:21.169"/>
</branch>
<status status="PASS" starttime="20230801 16:09:21.168" endtime="20230801 16:09:21.169"/>
</if>
<status status="PASS" starttime="20230801 16:09:21.151" endtime="20230801 16:09:21.170"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:21.173" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:09:21.172" endtime="20230801 16:09:21.173"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:21.208" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:09:21.173" endtime="20230801 16:09:21.208"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:09:21.209" endtime="20230801 16:09:21.210"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:21.209" endtime="20230801 16:09:21.210"/>
</branch>
<status status="PASS" starttime="20230801 16:09:21.208" endtime="20230801 16:09:21.211"/>
</if>
<status status="PASS" starttime="20230801 16:09:21.171" endtime="20230801 16:09:21.212"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230801 16:09:21.224" level="INFO">Title: 'Thêm mới nhóm'</msg>
<msg timestamp="20230801 16:09:21.224" level="INFO">${actualTitle} = Thêm mới nhóm</msg>
<status status="PASS" starttime="20230801 16:09:21.212" endtime="20230801 16:09:21.224"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230801 16:09:21.225" endtime="20230801 16:09:21.226"/>
</kw>
<status status="PASS" starttime="20230801 16:09:21.170" endtime="20230801 16:09:21.226"/>
</kw>
<status status="PASS" starttime="20230801 16:09:21.150" endtime="20230801 16:09:21.227"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 16:09:22.202" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 16:09:21.233" endtime="20230801 16:09:22.203"/>
</kw>
<status status="PASS" starttime="20230801 16:09:21.232" endtime="20230801 16:09:22.203"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230801 16:09:03.354" endtime="20230801 16:09:22.205"/>
</test>
<test id="s1-t2" name="CRT-02 Verify that create team unsuccessfull because blank all field &amp; &quot;Lưu lại&quot; button" line="19">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 16:09:22.233" endtime="20230801 16:09:22.234"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 16:09:22.236" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\38844cfc-3cbc-491e-857e-a7e12a913ae8"}</msg>
<msg timestamp="20230801 16:09:23.739" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\38844cfc-3cbc-491e-857e-a7e12a913ae8"}</msg>
<status status="PASS" starttime="20230801 16:09:22.234" endtime="20230801 16:09:23.740"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 16:09:25.985" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 16:09:25.985" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 16:09:23.740" endtime="20230801 16:09:25.985"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 16:09:25.987" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 16:09:25.986" endtime="20230801 16:09:25.987"/>
</kw>
<status status="PASS" starttime="20230801 16:09:22.232" endtime="20230801 16:09:25.988"/>
</kw>
<kw name="When Go to page create team" library="common" sourcename="Go to page ${name} team">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:26.013" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:09:26.011" endtime="20230801 16:09:26.013"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:26.015" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:09:26.014" endtime="20230801 16:09:26.015"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:09:26.017" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:09:26.016" endtime="20230801 16:09:26.017"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:26.018" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:09:26.018" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:09:26.017" endtime="20230801 16:09:26.018"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:09:26.020" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:09:26.019" endtime="20230801 16:09:26.020"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:26.022" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:09:26.022" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:09:26.021" endtime="20230801 16:09:26.022"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.023" endtime="20230801 16:09:26.024"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.024" endtime="20230801 16:09:26.025"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:26.022" endtime="20230801 16:09:26.025"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.027" endtime="20230801 16:09:26.027"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.028" endtime="20230801 16:09:26.028"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.029" endtime="20230801 16:09:26.029"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:26.025" endtime="20230801 16:09:26.029"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.030" endtime="20230801 16:09:26.032"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.032" endtime="20230801 16:09:26.032"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:26.030" endtime="20230801 16:09:26.033"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.034" endtime="20230801 16:09:26.034"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.037" endtime="20230801 16:09:26.037"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:26.033" endtime="20230801 16:09:26.037"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.052" endtime="20230801 16:09:26.053"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.054" endtime="20230801 16:09:26.056"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:26.038" endtime="20230801 16:09:26.056"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.057" endtime="20230801 16:09:26.058"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.058" endtime="20230801 16:09:26.058"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:26.056" endtime="20230801 16:09:26.059"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.061" endtime="20230801 16:09:26.062"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.063" endtime="20230801 16:09:26.063"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:26.059" endtime="20230801 16:09:26.063"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.065" endtime="20230801 16:09:26.065"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:26.064" endtime="20230801 16:09:26.065"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:09:26.067" endtime="20230801 16:09:26.068"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:26.066" endtime="20230801 16:09:26.068"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.070" endtime="20230801 16:09:26.070"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.072" endtime="20230801 16:09:26.074"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:26.070" endtime="20230801 16:09:26.075"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.078" endtime="20230801 16:09:26.079"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:26.075" endtime="20230801 16:09:26.079"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.081" endtime="20230801 16:09:26.082"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:26.080" endtime="20230801 16:09:26.082"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.083" endtime="20230801 16:09:26.083"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:26.082" endtime="20230801 16:09:26.084"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:09:26.085" endtime="20230801 16:09:26.085"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:26.084" endtime="20230801 16:09:26.085"/>
</branch>
<status status="PASS" starttime="20230801 16:09:26.022" endtime="20230801 16:09:26.086"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:26.087" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:09:26.087" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:09:26.086" endtime="20230801 16:09:26.087"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:09:26.089" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:09:26.088" endtime="20230801 16:09:26.089"/>
</kw>
<status status="PASS" starttime="20230801 16:09:26.087" endtime="20230801 16:09:26.089"/>
</branch>
<status status="PASS" starttime="20230801 16:09:26.087" endtime="20230801 16:09:26.090"/>
</if>
<msg timestamp="20230801 16:09:26.090" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:09:26.010" endtime="20230801 16:09:26.090"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:09:26.092" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:09:26.090" endtime="20230801 16:09:26.092"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:09:26.097" endtime="20230801 16:09:28.713"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:09:28.715" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230801 16:09:28.714" endtime="20230801 16:09:28.842"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:28.844" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:09:28.844" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:09:28.843" endtime="20230801 16:09:28.844"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:09:28.847" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:09:28.846" endtime="20230801 16:09:28.847"/>
</kw>
<status status="PASS" starttime="20230801 16:09:28.845" endtime="20230801 16:09:28.848"/>
</branch>
<status status="PASS" starttime="20230801 16:09:28.845" endtime="20230801 16:09:28.848"/>
</if>
<status status="PASS" starttime="20230801 16:09:26.008" endtime="20230801 16:09:28.848"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:28.852" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:09:28.852" endtime="20230801 16:09:28.852"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:28.853" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:09:28.852" endtime="20230801 16:09:28.853"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:09:28.855" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:09:28.854" endtime="20230801 16:09:28.855"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:28.856" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:09:28.856" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:09:28.855" endtime="20230801 16:09:28.856"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:09:28.857" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:09:28.857" endtime="20230801 16:09:28.858"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:28.859" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:09:28.859" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:09:28.858" endtime="20230801 16:09:28.860"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.860" endtime="20230801 16:09:28.862"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.862" endtime="20230801 16:09:28.863"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:28.860" endtime="20230801 16:09:28.863"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.864" endtime="20230801 16:09:28.864"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.865" endtime="20230801 16:09:28.865"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.866" endtime="20230801 16:09:28.866"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:28.863" endtime="20230801 16:09:28.866"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.867" endtime="20230801 16:09:28.868"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.868" endtime="20230801 16:09:28.868"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:28.866" endtime="20230801 16:09:28.869"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.870" endtime="20230801 16:09:28.870"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.872" endtime="20230801 16:09:28.872"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:28.869" endtime="20230801 16:09:28.872"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.874" endtime="20230801 16:09:28.874"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.875" endtime="20230801 16:09:28.878"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:28.873" endtime="20230801 16:09:28.878"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.880" endtime="20230801 16:09:28.880"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.881" endtime="20230801 16:09:28.882"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:28.879" endtime="20230801 16:09:28.883"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.887" endtime="20230801 16:09:28.887"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.889" endtime="20230801 16:09:28.890"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:28.886" endtime="20230801 16:09:28.892"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.893" endtime="20230801 16:09:28.895"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:28.892" endtime="20230801 16:09:28.897"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:09:28.900" endtime="20230801 16:09:28.900"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:28.898" endtime="20230801 16:09:28.900"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.904" endtime="20230801 16:09:28.904"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.905" endtime="20230801 16:09:28.905"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:28.900" endtime="20230801 16:09:28.905"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.908" endtime="20230801 16:09:28.908"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:28.906" endtime="20230801 16:09:28.909"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.913" endtime="20230801 16:09:28.913"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:28.909" endtime="20230801 16:09:28.914"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.917" endtime="20230801 16:09:28.918"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:28.914" endtime="20230801 16:09:28.919"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:09:28.920" endtime="20230801 16:09:28.921"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:28.920" endtime="20230801 16:09:28.921"/>
</branch>
<status status="PASS" starttime="20230801 16:09:28.860" endtime="20230801 16:09:28.922"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:28.923" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:09:28.923" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:09:28.923" endtime="20230801 16:09:28.924"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:09:28.930" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:09:28.925" endtime="20230801 16:09:28.930"/>
</kw>
<status status="PASS" starttime="20230801 16:09:28.924" endtime="20230801 16:09:28.930"/>
</branch>
<status status="PASS" starttime="20230801 16:09:28.924" endtime="20230801 16:09:28.931"/>
</if>
<msg timestamp="20230801 16:09:28.931" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:09:28.850" endtime="20230801 16:09:28.931"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:09:28.934" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:09:28.932" endtime="20230801 16:09:28.934"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:09:28.935" endtime="20230801 16:09:29.057"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:09:29.058" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230801 16:09:29.057" endtime="20230801 16:09:29.130"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:29.132" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:09:29.132" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:09:29.131" endtime="20230801 16:09:29.132"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:09:29.135" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:09:29.134" endtime="20230801 16:09:29.136"/>
</kw>
<status status="PASS" starttime="20230801 16:09:29.133" endtime="20230801 16:09:29.136"/>
</branch>
<status status="PASS" starttime="20230801 16:09:29.133" endtime="20230801 16:09:29.136"/>
</if>
<status status="PASS" starttime="20230801 16:09:28.849" endtime="20230801 16:09:29.137"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:09:29.139" endtime="20230801 16:09:29.385"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:29.387" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:09:29.386" endtime="20230801 16:09:29.387"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:29.419" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:09:29.388" endtime="20230801 16:09:29.419"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:09:29.420" endtime="20230801 16:09:29.422"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:09:29.422" endtime="20230801 16:09:29.422"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:29.420" endtime="20230801 16:09:29.422"/>
</branch>
<status status="PASS" starttime="20230801 16:09:29.420" endtime="20230801 16:09:29.422"/>
</if>
<status status="PASS" starttime="20230801 16:09:29.385" endtime="20230801 16:09:29.423"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:09:29.423" endtime="20230801 16:09:29.485"/>
</kw>
<status status="PASS" starttime="20230801 16:09:29.138" endtime="20230801 16:09:29.485"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:09:29.487" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:09:29.486" endtime="20230801 16:09:29.487"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:29.488" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:09:29.488" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:09:29.488" endtime="20230801 16:09:29.489"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 16:09:29.490" endtime="20230801 16:09:29.490"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:29.489" endtime="20230801 16:09:29.490"/>
</branch>
<status status="PASS" starttime="20230801 16:09:29.489" endtime="20230801 16:09:29.490"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:09:30.950" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 16:09:29.497" endtime="20230801 16:09:30.950"/>
</kw>
<status status="PASS" starttime="20230801 16:09:29.490" endtime="20230801 16:09:30.952"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:30.953" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 16:09:30.952" endtime="20230801 16:09:30.953"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:09:31.543" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 16:09:31.544" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 16:09:31.544" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 16:09:30.956" endtime="20230801 16:09:31.548"/>
</kw>
<status status="FAIL" starttime="20230801 16:09:30.954" endtime="20230801 16:09:31.548"/>
</kw>
<msg timestamp="20230801 16:09:31.549" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 16:09:30.954" endtime="20230801 16:09:31.549"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:09:31.550" endtime="20230801 16:09:31.550"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:31.550" endtime="20230801 16:09:31.552"/>
</branch>
<status status="PASS" starttime="20230801 16:09:31.550" endtime="20230801 16:09:31.552"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:09:34.187" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 16:09:31.555" endtime="20230801 16:09:34.187"/>
</kw>
<status status="PASS" starttime="20230801 16:09:31.552" endtime="20230801 16:09:34.188"/>
</kw>
<status status="PASS" starttime="20230801 16:09:29.486" endtime="20230801 16:09:34.188"/>
</kw>
<status status="PASS" starttime="20230801 16:09:26.007" endtime="20230801 16:09:34.188"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:09:34.190" endtime="20230801 16:09:34.473"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:34.476" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:09:34.475" endtime="20230801 16:09:34.476"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:34.492" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:09:34.477" endtime="20230801 16:09:34.492"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:09:34.495" endtime="20230801 16:09:34.495"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:34.493" endtime="20230801 16:09:34.495"/>
</branch>
<status status="PASS" starttime="20230801 16:09:34.493" endtime="20230801 16:09:34.496"/>
</if>
<status status="PASS" starttime="20230801 16:09:34.474" endtime="20230801 16:09:34.497"/>
</kw>
<status status="PASS" starttime="20230801 16:09:34.189" endtime="20230801 16:09:34.498"/>
</kw>
<kw name="And Click &quot;Nhóm&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:34.502" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:09:34.501" endtime="20230801 16:09:34.502"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:34.518" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:09:34.502" endtime="20230801 16:09:34.519"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:09:34.520" endtime="20230801 16:09:34.520"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:34.519" endtime="20230801 16:09:34.520"/>
</branch>
<status status="PASS" starttime="20230801 16:09:34.519" endtime="20230801 16:09:34.520"/>
</if>
<status status="PASS" starttime="20230801 16:09:34.500" endtime="20230801 16:09:34.521"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:09:34.521" endtime="20230801 16:09:34.831"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:34.834" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:09:34.833" endtime="20230801 16:09:34.834"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:34.850" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:09:34.835" endtime="20230801 16:09:34.850"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:09:37.283" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 16:09:34.855" endtime="20230801 16:09:37.284"/>
</kw>
<status status="PASS" starttime="20230801 16:09:34.852" endtime="20230801 16:09:37.284"/>
</kw>
<status status="PASS" starttime="20230801 16:09:34.850" endtime="20230801 16:09:37.284"/>
</branch>
<status status="PASS" starttime="20230801 16:09:34.850" endtime="20230801 16:09:37.285"/>
</if>
<status status="PASS" starttime="20230801 16:09:34.831" endtime="20230801 16:09:37.285"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:37.287" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:09:37.286" endtime="20230801 16:09:37.287"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:37.297" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:09:37.287" endtime="20230801 16:09:37.297"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:09:37.299" endtime="20230801 16:09:37.299"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:37.298" endtime="20230801 16:09:37.299"/>
</branch>
<status status="PASS" starttime="20230801 16:09:37.298" endtime="20230801 16:09:37.299"/>
</if>
<status status="PASS" starttime="20230801 16:09:37.285" endtime="20230801 16:09:37.300"/>
</kw>
<status status="PASS" starttime="20230801 16:09:34.499" endtime="20230801 16:09:37.300"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:09:37.303" endtime="20230801 16:09:37.491"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:37.494" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:09:37.493" endtime="20230801 16:09:37.494"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:37.836" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:09:37.494" endtime="20230801 16:09:37.836"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:09:37.838" endtime="20230801 16:09:37.838"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:09:37.839" endtime="20230801 16:09:37.839"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:37.837" endtime="20230801 16:09:37.839"/>
</branch>
<status status="PASS" starttime="20230801 16:09:37.837" endtime="20230801 16:09:37.839"/>
</if>
<status status="PASS" starttime="20230801 16:09:37.492" endtime="20230801 16:09:37.840"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:09:37.840" endtime="20230801 16:09:37.967"/>
</kw>
<status status="PASS" starttime="20230801 16:09:37.302" endtime="20230801 16:09:37.967"/>
</kw>
<status status="PASS" starttime="20230801 16:09:37.300" endtime="20230801 16:09:37.967"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'edit'">
<kw name="Select team need to edit" library="common" sourcename="Select ${name} need to edit">
<status status="NOT RUN" starttime="20230801 16:09:37.969" endtime="20230801 16:09:37.969"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:37.968" endtime="20230801 16:09:37.969"/>
</branch>
<status status="PASS" starttime="20230801 16:09:37.300" endtime="20230801 16:09:37.970"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:37.972" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:09:37.972" endtime="20230801 16:09:37.972"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:37.990" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:09:37.973" endtime="20230801 16:09:37.990"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:09:37.992" endtime="20230801 16:09:37.993"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:37.990" endtime="20230801 16:09:37.993"/>
</branch>
<status status="PASS" starttime="20230801 16:09:37.990" endtime="20230801 16:09:37.993"/>
</if>
<status status="PASS" starttime="20230801 16:09:37.970" endtime="20230801 16:09:37.994"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 16:09:38.094" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 16:09:37.994" endtime="20230801 16:09:38.094"/>
</kw>
<status status="PASS" starttime="20230801 16:09:26.006" endtime="20230801 16:09:38.095"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:09:38.135" endtime="20230801 16:09:38.647"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:38.649" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:09:38.649" endtime="20230801 16:09:38.649"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:38.715" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:09:38.650" endtime="20230801 16:09:38.715"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:09:38.717" endtime="20230801 16:09:38.717"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:09:38.718" endtime="20230801 16:09:38.718"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:38.715" endtime="20230801 16:09:38.719"/>
</branch>
<status status="PASS" starttime="20230801 16:09:38.715" endtime="20230801 16:09:38.719"/>
</if>
<status status="PASS" starttime="20230801 16:09:38.647" endtime="20230801 16:09:38.719"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:09:38.720" endtime="20230801 16:09:38.907"/>
</kw>
<status status="PASS" starttime="20230801 16:09:38.134" endtime="20230801 16:09:38.907"/>
</kw>
<kw name="Then Required message &quot;Tên Nhóm&quot; displayed under &quot;Xin vui lòng nhập tên nhóm&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230801 16:09:38.924" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên Nhóm"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230801 16:09:38.923" endtime="20230801 16:09:38.925"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:09:39.008" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên Nhóm"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230801 16:09:38.929" endtime="20230801 16:09:39.011"/>
</kw>
<status status="PASS" starttime="20230801 16:09:38.926" endtime="20230801 16:09:39.011"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:09:39.115" level="INFO">Text: 'Xin vui lòng nhập tên nhóm'</msg>
<status status="PASS" starttime="20230801 16:09:39.018" endtime="20230801 16:09:39.116"/>
</kw>
<status status="PASS" starttime="20230801 16:09:39.012" endtime="20230801 16:09:39.116"/>
</kw>
<status status="PASS" starttime="20230801 16:09:38.922" endtime="20230801 16:09:39.116"/>
</kw>
<kw name="And Required message &quot;Quản lý&quot; displayed under &quot;Xin vui lòng chọn quản lý&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230801 16:09:39.120" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230801 16:09:39.119" endtime="20230801 16:09:39.120"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:09:39.139" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230801 16:09:39.124" endtime="20230801 16:09:39.139"/>
</kw>
<status status="PASS" starttime="20230801 16:09:39.120" endtime="20230801 16:09:39.139"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:09:39.220" level="INFO">Text: 'Xin vui lòng chọn quản lý'</msg>
<status status="PASS" starttime="20230801 16:09:39.144" endtime="20230801 16:09:39.220"/>
</kw>
<status status="PASS" starttime="20230801 16:09:39.139" endtime="20230801 16:09:39.222"/>
</kw>
<status status="PASS" starttime="20230801 16:09:39.118" endtime="20230801 16:09:39.222"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 16:09:40.418" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 16:09:39.238" endtime="20230801 16:09:40.419"/>
</kw>
<status status="PASS" starttime="20230801 16:09:39.237" endtime="20230801 16:09:40.419"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230801 16:09:22.223" endtime="20230801 16:09:40.420"/>
</test>
<test id="s1-t3" name="CRT-03 Verify that create team unsuccessfull because blank all field &amp; &quot;Lưu và tạo mới&quot; button" line="26">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 16:09:40.443" endtime="20230801 16:09:40.444"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 16:09:40.446" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\2378c1b0-6efd-47ed-a546-376643be1c1f"}</msg>
<msg timestamp="20230801 16:09:42.575" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\2378c1b0-6efd-47ed-a546-376643be1c1f"}</msg>
<status status="PASS" starttime="20230801 16:09:40.444" endtime="20230801 16:09:42.576"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 16:09:44.517" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 16:09:44.517" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 16:09:42.576" endtime="20230801 16:09:44.518"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 16:09:44.519" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 16:09:44.518" endtime="20230801 16:09:44.519"/>
</kw>
<status status="PASS" starttime="20230801 16:09:40.442" endtime="20230801 16:09:44.520"/>
</kw>
<kw name="When Go to page create team" library="common" sourcename="Go to page ${name} team">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:44.528" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:09:44.527" endtime="20230801 16:09:44.528"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:44.529" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:09:44.528" endtime="20230801 16:09:44.529"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:09:44.530" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:09:44.530" endtime="20230801 16:09:44.530"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:44.532" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:09:44.532" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:09:44.531" endtime="20230801 16:09:44.532"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:09:44.533" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:09:44.532" endtime="20230801 16:09:44.533"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:44.534" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:09:44.534" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:09:44.533" endtime="20230801 16:09:44.534"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.536" endtime="20230801 16:09:44.536"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.536" endtime="20230801 16:09:44.537"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:44.535" endtime="20230801 16:09:44.537"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.539" endtime="20230801 16:09:44.539"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.540" endtime="20230801 16:09:44.540"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.540" endtime="20230801 16:09:44.542"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:44.538" endtime="20230801 16:09:44.543"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.544" endtime="20230801 16:09:44.544"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.545" endtime="20230801 16:09:44.545"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:44.543" endtime="20230801 16:09:44.545"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.547" endtime="20230801 16:09:44.547"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.548" endtime="20230801 16:09:44.548"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:44.546" endtime="20230801 16:09:44.548"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.549" endtime="20230801 16:09:44.550"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.550" endtime="20230801 16:09:44.551"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:44.548" endtime="20230801 16:09:44.551"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.555" endtime="20230801 16:09:44.555"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.556" endtime="20230801 16:09:44.556"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:44.551" endtime="20230801 16:09:44.557"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.560" endtime="20230801 16:09:44.562"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.565" endtime="20230801 16:09:44.566"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:44.557" endtime="20230801 16:09:44.566"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.568" endtime="20230801 16:09:44.569"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:44.566" endtime="20230801 16:09:44.569"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:09:44.572" endtime="20230801 16:09:44.574"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:44.570" endtime="20230801 16:09:44.576"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.578" endtime="20230801 16:09:44.578"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.579" endtime="20230801 16:09:44.580"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:44.576" endtime="20230801 16:09:44.583"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.585" endtime="20230801 16:09:44.586"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:44.583" endtime="20230801 16:09:44.586"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.587" endtime="20230801 16:09:44.587"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:44.586" endtime="20230801 16:09:44.588"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.589" endtime="20230801 16:09:44.589"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:44.588" endtime="20230801 16:09:44.589"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:09:44.590" endtime="20230801 16:09:44.590"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:44.589" endtime="20230801 16:09:44.590"/>
</branch>
<status status="PASS" starttime="20230801 16:09:44.535" endtime="20230801 16:09:44.593"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:44.595" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:09:44.595" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:09:44.594" endtime="20230801 16:09:44.595"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:09:44.597" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:09:44.596" endtime="20230801 16:09:44.597"/>
</kw>
<status status="PASS" starttime="20230801 16:09:44.595" endtime="20230801 16:09:44.598"/>
</branch>
<status status="PASS" starttime="20230801 16:09:44.595" endtime="20230801 16:09:44.598"/>
</if>
<msg timestamp="20230801 16:09:44.599" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:09:44.524" endtime="20230801 16:09:44.600"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:09:44.615" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:09:44.600" endtime="20230801 16:09:44.615"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:09:44.616" endtime="20230801 16:09:46.807"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:09:46.810" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230801 16:09:46.807" endtime="20230801 16:09:46.993"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:46.998" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:09:46.998" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:09:46.994" endtime="20230801 16:09:46.998"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:09:47.001" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:09:47.000" endtime="20230801 16:09:47.001"/>
</kw>
<status status="PASS" starttime="20230801 16:09:46.999" endtime="20230801 16:09:47.002"/>
</branch>
<status status="PASS" starttime="20230801 16:09:46.999" endtime="20230801 16:09:47.002"/>
</if>
<status status="PASS" starttime="20230801 16:09:44.523" endtime="20230801 16:09:47.002"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:47.006" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:09:47.005" endtime="20230801 16:09:47.006"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:47.009" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:09:47.007" endtime="20230801 16:09:47.009"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:09:47.010" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:09:47.009" endtime="20230801 16:09:47.010"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:47.014" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:09:47.014" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:09:47.012" endtime="20230801 16:09:47.014"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:09:47.016" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:09:47.015" endtime="20230801 16:09:47.016"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:47.020" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:09:47.020" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:09:47.017" endtime="20230801 16:09:47.020"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.023" endtime="20230801 16:09:47.023"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.024" endtime="20230801 16:09:47.024"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:47.022" endtime="20230801 16:09:47.024"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.026" endtime="20230801 16:09:47.027"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.029" endtime="20230801 16:09:47.030"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.030" endtime="20230801 16:09:47.031"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:47.025" endtime="20230801 16:09:47.031"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.032" endtime="20230801 16:09:47.034"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.034" endtime="20230801 16:09:47.035"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:47.031" endtime="20230801 16:09:47.035"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.036" endtime="20230801 16:09:47.036"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.037" endtime="20230801 16:09:47.037"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:47.035" endtime="20230801 16:09:47.038"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.039" endtime="20230801 16:09:47.039"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.040" endtime="20230801 16:09:47.040"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:47.038" endtime="20230801 16:09:47.040"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.045" endtime="20230801 16:09:47.045"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.046" endtime="20230801 16:09:47.047"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:47.044" endtime="20230801 16:09:47.047"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.048" endtime="20230801 16:09:47.048"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.048" endtime="20230801 16:09:47.049"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:47.047" endtime="20230801 16:09:47.049"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.050" endtime="20230801 16:09:47.050"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:47.049" endtime="20230801 16:09:47.050"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:09:47.051" endtime="20230801 16:09:47.051"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:47.051" endtime="20230801 16:09:47.052"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.052" endtime="20230801 16:09:47.053"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.053" endtime="20230801 16:09:47.053"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:47.052" endtime="20230801 16:09:47.054"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.055" endtime="20230801 16:09:47.056"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:47.054" endtime="20230801 16:09:47.056"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.057" endtime="20230801 16:09:47.058"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:47.056" endtime="20230801 16:09:47.059"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.060" endtime="20230801 16:09:47.060"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:47.059" endtime="20230801 16:09:47.060"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.062" endtime="20230801 16:09:47.062"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:47.060" endtime="20230801 16:09:47.062"/>
</branch>
<status status="PASS" starttime="20230801 16:09:47.020" endtime="20230801 16:09:47.063"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:47.064" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:09:47.064" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:09:47.063" endtime="20230801 16:09:47.064"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:09:47.067" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:09:47.066" endtime="20230801 16:09:47.067"/>
</kw>
<status status="PASS" starttime="20230801 16:09:47.065" endtime="20230801 16:09:47.068"/>
</branch>
<status status="PASS" starttime="20230801 16:09:47.065" endtime="20230801 16:09:47.068"/>
</if>
<msg timestamp="20230801 16:09:47.087" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:09:47.004" endtime="20230801 16:09:47.087"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:09:47.089" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:09:47.088" endtime="20230801 16:09:47.089"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:09:47.090" endtime="20230801 16:09:47.202"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:09:47.204" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230801 16:09:47.203" endtime="20230801 16:09:47.290"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:47.293" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:09:47.293" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:09:47.290" endtime="20230801 16:09:47.293"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:09:47.296" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:09:47.294" endtime="20230801 16:09:47.297"/>
</kw>
<status status="PASS" starttime="20230801 16:09:47.294" endtime="20230801 16:09:47.297"/>
</branch>
<status status="PASS" starttime="20230801 16:09:47.293" endtime="20230801 16:09:47.297"/>
</if>
<status status="PASS" starttime="20230801 16:09:47.003" endtime="20230801 16:09:47.298"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:09:47.300" endtime="20230801 16:09:47.671"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:47.673" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:09:47.673" endtime="20230801 16:09:47.674"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:47.722" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:09:47.675" endtime="20230801 16:09:47.722"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.725" endtime="20230801 16:09:47.725"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.726" endtime="20230801 16:09:47.727"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:47.723" endtime="20230801 16:09:47.728"/>
</branch>
<status status="PASS" starttime="20230801 16:09:47.722" endtime="20230801 16:09:47.728"/>
</if>
<status status="PASS" starttime="20230801 16:09:47.672" endtime="20230801 16:09:47.729"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:09:47.730" endtime="20230801 16:09:47.812"/>
</kw>
<status status="PASS" starttime="20230801 16:09:47.299" endtime="20230801 16:09:47.813"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:09:47.817" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:09:47.816" endtime="20230801 16:09:47.817"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:09:47.818" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:09:47.818" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:09:47.817" endtime="20230801 16:09:47.818"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 16:09:47.820" endtime="20230801 16:09:47.820"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:47.819" endtime="20230801 16:09:47.820"/>
</branch>
<status status="PASS" starttime="20230801 16:09:47.818" endtime="20230801 16:09:47.820"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:09:50.686" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 16:09:47.825" endtime="20230801 16:09:50.686"/>
</kw>
<status status="PASS" starttime="20230801 16:09:47.821" endtime="20230801 16:09:50.686"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:50.688" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 16:09:50.687" endtime="20230801 16:09:50.688"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:09:51.513" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 16:09:51.514" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 16:09:51.514" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 16:09:50.692" endtime="20230801 16:09:51.518"/>
</kw>
<status status="FAIL" starttime="20230801 16:09:50.689" endtime="20230801 16:09:51.519"/>
</kw>
<msg timestamp="20230801 16:09:51.519" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 16:09:50.689" endtime="20230801 16:09:51.519"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:09:51.520" endtime="20230801 16:09:51.522"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:51.520" endtime="20230801 16:09:51.522"/>
</branch>
<status status="PASS" starttime="20230801 16:09:51.520" endtime="20230801 16:09:51.522"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:09:53.686" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 16:09:51.530" endtime="20230801 16:09:53.687"/>
</kw>
<status status="PASS" starttime="20230801 16:09:51.522" endtime="20230801 16:09:53.687"/>
</kw>
<status status="PASS" starttime="20230801 16:09:47.814" endtime="20230801 16:09:53.687"/>
</kw>
<status status="PASS" starttime="20230801 16:09:44.522" endtime="20230801 16:09:53.688"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:09:53.690" endtime="20230801 16:09:53.952"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:53.954" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:09:53.954" endtime="20230801 16:09:53.954"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:53.973" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:09:53.955" endtime="20230801 16:09:53.973"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:09:53.979" endtime="20230801 16:09:53.979"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:53.974" endtime="20230801 16:09:53.979"/>
</branch>
<status status="PASS" starttime="20230801 16:09:53.973" endtime="20230801 16:09:53.980"/>
</if>
<status status="PASS" starttime="20230801 16:09:53.952" endtime="20230801 16:09:53.980"/>
</kw>
<status status="PASS" starttime="20230801 16:09:53.689" endtime="20230801 16:09:53.980"/>
</kw>
<kw name="And Click &quot;Nhóm&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:53.983" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:09:53.983" endtime="20230801 16:09:53.983"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:54.028" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:09:53.984" endtime="20230801 16:09:54.028"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:09:54.030" endtime="20230801 16:09:54.030"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:54.029" endtime="20230801 16:09:54.030"/>
</branch>
<status status="PASS" starttime="20230801 16:09:54.029" endtime="20230801 16:09:54.030"/>
</if>
<status status="PASS" starttime="20230801 16:09:53.982" endtime="20230801 16:09:54.030"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:09:54.031" endtime="20230801 16:09:54.467"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:54.469" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:09:54.469" endtime="20230801 16:09:54.470"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:54.503" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:09:54.470" endtime="20230801 16:09:54.503"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:09:55.020" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 16:09:54.507" endtime="20230801 16:09:55.020"/>
</kw>
<status status="PASS" starttime="20230801 16:09:54.504" endtime="20230801 16:09:55.020"/>
</kw>
<status status="PASS" starttime="20230801 16:09:54.504" endtime="20230801 16:09:55.022"/>
</branch>
<status status="PASS" starttime="20230801 16:09:54.503" endtime="20230801 16:09:55.022"/>
</if>
<status status="PASS" starttime="20230801 16:09:54.467" endtime="20230801 16:09:55.022"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:55.029" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:09:55.025" endtime="20230801 16:09:55.029"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:55.062" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:09:55.030" endtime="20230801 16:09:55.062"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:09:56.555" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 16:09:55.067" endtime="20230801 16:09:56.555"/>
</kw>
<status status="PASS" starttime="20230801 16:09:55.065" endtime="20230801 16:09:56.556"/>
</kw>
<status status="PASS" starttime="20230801 16:09:55.064" endtime="20230801 16:09:56.556"/>
</branch>
<status status="PASS" starttime="20230801 16:09:55.063" endtime="20230801 16:09:56.556"/>
</if>
<status status="PASS" starttime="20230801 16:09:55.023" endtime="20230801 16:09:56.556"/>
</kw>
<status status="PASS" starttime="20230801 16:09:53.981" endtime="20230801 16:09:56.559"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:09:56.563" endtime="20230801 16:09:56.769"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:56.771" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:09:56.771" endtime="20230801 16:09:56.771"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:56.870" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:09:56.772" endtime="20230801 16:09:56.871"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:09:56.872" endtime="20230801 16:09:56.873"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:09:56.873" endtime="20230801 16:09:56.874"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:56.872" endtime="20230801 16:09:56.875"/>
</branch>
<status status="PASS" starttime="20230801 16:09:56.871" endtime="20230801 16:09:56.875"/>
</if>
<status status="PASS" starttime="20230801 16:09:56.770" endtime="20230801 16:09:56.876"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:09:56.876" endtime="20230801 16:09:57.197"/>
</kw>
<status status="PASS" starttime="20230801 16:09:56.562" endtime="20230801 16:09:57.197"/>
</kw>
<status status="PASS" starttime="20230801 16:09:56.560" endtime="20230801 16:09:57.197"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'edit'">
<kw name="Select team need to edit" library="common" sourcename="Select ${name} need to edit">
<status status="NOT RUN" starttime="20230801 16:09:57.198" endtime="20230801 16:09:57.198"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:57.198" endtime="20230801 16:09:57.199"/>
</branch>
<status status="PASS" starttime="20230801 16:09:56.560" endtime="20230801 16:09:57.199"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:57.200" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:09:57.200" endtime="20230801 16:09:57.200"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:57.241" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:09:57.202" endtime="20230801 16:09:57.241"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:09:57.243" endtime="20230801 16:09:57.244"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:57.242" endtime="20230801 16:09:57.244"/>
</branch>
<status status="PASS" starttime="20230801 16:09:57.242" endtime="20230801 16:09:57.244"/>
</if>
<status status="PASS" starttime="20230801 16:09:57.199" endtime="20230801 16:09:57.245"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 16:09:57.346" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 16:09:57.245" endtime="20230801 16:09:57.346"/>
</kw>
<status status="PASS" starttime="20230801 16:09:44.520" endtime="20230801 16:09:57.346"/>
</kw>
<kw name="And Click &quot;Lưu và tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:09:57.366" endtime="20230801 16:09:57.706"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:09:57.710" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:09:57.709" endtime="20230801 16:09:57.710"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:09:57.739" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:09:57.711" endtime="20230801 16:09:57.739"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:09:57.743" endtime="20230801 16:09:57.743"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:09:57.744" endtime="20230801 16:09:57.744"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:09:57.740" endtime="20230801 16:09:57.745"/>
</branch>
<status status="PASS" starttime="20230801 16:09:57.740" endtime="20230801 16:09:57.745"/>
</if>
<status status="PASS" starttime="20230801 16:09:57.706" endtime="20230801 16:09:57.745"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:09:57.747" endtime="20230801 16:09:57.886"/>
</kw>
<status status="PASS" starttime="20230801 16:09:57.365" endtime="20230801 16:09:57.887"/>
</kw>
<kw name="Then Required message &quot;Tên Nhóm&quot; displayed under &quot;Xin vui lòng nhập tên nhóm&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230801 16:09:57.985" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên Nhóm"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230801 16:09:57.984" endtime="20230801 16:09:57.985"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:09:58.126" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên Nhóm"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230801 16:09:57.988" endtime="20230801 16:09:58.127"/>
</kw>
<status status="PASS" starttime="20230801 16:09:57.985" endtime="20230801 16:09:58.127"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:09:58.221" level="INFO">Text: 'Xin vui lòng nhập tên nhóm'</msg>
<status status="PASS" starttime="20230801 16:09:58.133" endtime="20230801 16:09:58.222"/>
</kw>
<status status="PASS" starttime="20230801 16:09:58.128" endtime="20230801 16:09:58.222"/>
</kw>
<status status="PASS" starttime="20230801 16:09:57.983" endtime="20230801 16:09:58.223"/>
</kw>
<kw name="And Required message &quot;Quản lý&quot; displayed under &quot;Xin vui lòng chọn quản lý&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230801 16:09:58.236" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230801 16:09:58.235" endtime="20230801 16:09:58.236"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:09:58.266" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230801 16:09:58.239" endtime="20230801 16:09:58.266"/>
</kw>
<status status="PASS" starttime="20230801 16:09:58.237" endtime="20230801 16:09:58.267"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:09:58.335" level="INFO">Text: 'Xin vui lòng chọn quản lý'</msg>
<status status="PASS" starttime="20230801 16:09:58.271" endtime="20230801 16:09:58.335"/>
</kw>
<status status="PASS" starttime="20230801 16:09:58.267" endtime="20230801 16:09:58.336"/>
</kw>
<status status="PASS" starttime="20230801 16:09:58.234" endtime="20230801 16:09:58.336"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 16:09:59.826" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 16:09:58.339" endtime="20230801 16:09:59.826"/>
</kw>
<status status="PASS" starttime="20230801 16:09:58.338" endtime="20230801 16:09:59.827"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230801 16:09:40.434" endtime="20230801 16:09:59.830"/>
</test>
<test id="s1-t4" name="CRT-04 Verify that create team unsuccessfull because no enter &quot;Tên Nhóm&quot; field &amp; &quot;Lưu lại&quot; button" line="33">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 16:09:59.853" endtime="20230801 16:09:59.854"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 16:09:59.856" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\508fe6ba-351f-49e9-998d-914cc26c1396"}</msg>
<msg timestamp="20230801 16:10:01.638" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\508fe6ba-351f-49e9-998d-914cc26c1396"}</msg>
<status status="PASS" starttime="20230801 16:09:59.854" endtime="20230801 16:10:01.638"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 16:10:03.920" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 16:10:03.920" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 16:10:01.639" endtime="20230801 16:10:03.920"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 16:10:03.924" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 16:10:03.922" endtime="20230801 16:10:03.924"/>
</kw>
<status status="PASS" starttime="20230801 16:09:59.852" endtime="20230801 16:10:03.925"/>
</kw>
<kw name="When Go to page create team" library="common" sourcename="Go to page ${name} team">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:03.937" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:10:03.936" endtime="20230801 16:10:03.937"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:03.938" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:10:03.938" endtime="20230801 16:10:03.938"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:03.940" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:10:03.939" endtime="20230801 16:10:03.940"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:03.943" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:10:03.943" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:10:03.942" endtime="20230801 16:10:03.943"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:03.945" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:10:03.944" endtime="20230801 16:10:03.945"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:03.947" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:10:03.947" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:10:03.946" endtime="20230801 16:10:03.947"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:03.949" endtime="20230801 16:10:03.949"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:03.949" endtime="20230801 16:10:03.950"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:03.948" endtime="20230801 16:10:03.950"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:03.951" endtime="20230801 16:10:03.951"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:03.951" endtime="20230801 16:10:03.952"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:03.952" endtime="20230801 16:10:03.952"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:03.950" endtime="20230801 16:10:03.953"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:03.954" endtime="20230801 16:10:03.954"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:03.955" endtime="20230801 16:10:03.955"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:03.953" endtime="20230801 16:10:03.955"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:03.958" endtime="20230801 16:10:03.958"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:03.959" endtime="20230801 16:10:03.959"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:03.956" endtime="20230801 16:10:03.959"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:03.960" endtime="20230801 16:10:03.961"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:03.962" endtime="20230801 16:10:03.962"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:03.960" endtime="20230801 16:10:03.979"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:03.981" endtime="20230801 16:10:03.982"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:03.982" endtime="20230801 16:10:03.982"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:03.980" endtime="20230801 16:10:03.983"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:03.986" endtime="20230801 16:10:03.986"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:03.987" endtime="20230801 16:10:03.988"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:03.983" endtime="20230801 16:10:03.988"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:10:03.989" endtime="20230801 16:10:03.990"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:03.988" endtime="20230801 16:10:03.992"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:10:03.994" endtime="20230801 16:10:03.994"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:03.992" endtime="20230801 16:10:03.994"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:03.997" endtime="20230801 16:10:03.998"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:03.998" endtime="20230801 16:10:03.999"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:03.995" endtime="20230801 16:10:03.999"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:10:04.002" endtime="20230801 16:10:04.002"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:04.000" endtime="20230801 16:10:04.003"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:10:04.005" endtime="20230801 16:10:04.005"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:04.003" endtime="20230801 16:10:04.005"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:04.014" endtime="20230801 16:10:04.014"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:04.011" endtime="20230801 16:10:04.015"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:04.017" endtime="20230801 16:10:04.017"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:04.015" endtime="20230801 16:10:04.017"/>
</branch>
<status status="PASS" starttime="20230801 16:10:03.948" endtime="20230801 16:10:04.018"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:04.019" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:10:04.019" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:10:04.018" endtime="20230801 16:10:04.019"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:10:04.028" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:10:04.022" endtime="20230801 16:10:04.028"/>
</kw>
<status status="PASS" starttime="20230801 16:10:04.020" endtime="20230801 16:10:04.028"/>
</branch>
<status status="PASS" starttime="20230801 16:10:04.020" endtime="20230801 16:10:04.046"/>
</if>
<msg timestamp="20230801 16:10:04.047" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:10:03.934" endtime="20230801 16:10:04.047"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:10:04.048" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:10:04.047" endtime="20230801 16:10:04.048"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:04.049" endtime="20230801 16:10:07.448"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:10:07.449" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230801 16:10:07.448" endtime="20230801 16:10:07.529"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:07.530" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:10:07.530" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:10:07.530" endtime="20230801 16:10:07.530"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:10:07.533" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:10:07.532" endtime="20230801 16:10:07.534"/>
</kw>
<status status="PASS" starttime="20230801 16:10:07.532" endtime="20230801 16:10:07.534"/>
</branch>
<status status="PASS" starttime="20230801 16:10:07.530" endtime="20230801 16:10:07.534"/>
</if>
<status status="PASS" starttime="20230801 16:10:03.934" endtime="20230801 16:10:07.534"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:07.537" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:10:07.537" endtime="20230801 16:10:07.537"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:07.539" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:10:07.538" endtime="20230801 16:10:07.539"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:07.540" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:10:07.539" endtime="20230801 16:10:07.540"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:07.542" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:10:07.542" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:10:07.541" endtime="20230801 16:10:07.542"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:07.543" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:10:07.542" endtime="20230801 16:10:07.543"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:07.545" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:10:07.545" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:10:07.544" endtime="20230801 16:10:07.545"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.546" endtime="20230801 16:10:07.547"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.547" endtime="20230801 16:10:07.548"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:07.546" endtime="20230801 16:10:07.548"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.549" endtime="20230801 16:10:07.549"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.550" endtime="20230801 16:10:07.550"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.550" endtime="20230801 16:10:07.550"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:07.548" endtime="20230801 16:10:07.552"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.553" endtime="20230801 16:10:07.553"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.553" endtime="20230801 16:10:07.554"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:07.552" endtime="20230801 16:10:07.554"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.555" endtime="20230801 16:10:07.555"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.556" endtime="20230801 16:10:07.556"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:07.554" endtime="20230801 16:10:07.556"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.567" endtime="20230801 16:10:07.567"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.567" endtime="20230801 16:10:07.568"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:07.566" endtime="20230801 16:10:07.568"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.569" endtime="20230801 16:10:07.569"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.570" endtime="20230801 16:10:07.570"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:07.568" endtime="20230801 16:10:07.570"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.572" endtime="20230801 16:10:07.573"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.575" endtime="20230801 16:10:07.575"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:07.570" endtime="20230801 16:10:07.576"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.589" endtime="20230801 16:10:07.590"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:07.588" endtime="20230801 16:10:07.590"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:10:07.592" endtime="20230801 16:10:07.593"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:07.590" endtime="20230801 16:10:07.593"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.594" endtime="20230801 16:10:07.595"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.595" endtime="20230801 16:10:07.595"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:07.593" endtime="20230801 16:10:07.595"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.596" endtime="20230801 16:10:07.597"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:07.595" endtime="20230801 16:10:07.597"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.598" endtime="20230801 16:10:07.598"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:07.597" endtime="20230801 16:10:07.598"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.600" endtime="20230801 16:10:07.600"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:07.599" endtime="20230801 16:10:07.600"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:07.602" endtime="20230801 16:10:07.602"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:07.600" endtime="20230801 16:10:07.602"/>
</branch>
<status status="PASS" starttime="20230801 16:10:07.545" endtime="20230801 16:10:07.603"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:07.604" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:10:07.604" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:10:07.603" endtime="20230801 16:10:07.604"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:10:07.609" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:10:07.608" endtime="20230801 16:10:07.609"/>
</kw>
<status status="PASS" starttime="20230801 16:10:07.605" endtime="20230801 16:10:07.610"/>
</branch>
<status status="PASS" starttime="20230801 16:10:07.605" endtime="20230801 16:10:07.610"/>
</if>
<msg timestamp="20230801 16:10:07.612" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:10:07.536" endtime="20230801 16:10:07.622"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:10:07.628" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:10:07.627" endtime="20230801 16:10:07.628"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:07.629" endtime="20230801 16:10:07.742"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:10:07.744" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230801 16:10:07.743" endtime="20230801 16:10:07.811"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:07.813" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:10:07.813" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:10:07.812" endtime="20230801 16:10:07.813"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:10:07.815" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:10:07.814" endtime="20230801 16:10:07.815"/>
</kw>
<status status="PASS" starttime="20230801 16:10:07.813" endtime="20230801 16:10:07.816"/>
</branch>
<status status="PASS" starttime="20230801 16:10:07.813" endtime="20230801 16:10:07.816"/>
</if>
<status status="PASS" starttime="20230801 16:10:07.535" endtime="20230801 16:10:07.816"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:07.818" endtime="20230801 16:10:08.095"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:08.096" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:10:08.096" endtime="20230801 16:10:08.096"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:08.129" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:10:08.097" endtime="20230801 16:10:08.129"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:10:08.130" endtime="20230801 16:10:08.131"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:10:08.134" endtime="20230801 16:10:08.134"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:08.130" endtime="20230801 16:10:08.135"/>
</branch>
<status status="PASS" starttime="20230801 16:10:08.130" endtime="20230801 16:10:08.135"/>
</if>
<status status="PASS" starttime="20230801 16:10:08.095" endtime="20230801 16:10:08.135"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:10:08.136" endtime="20230801 16:10:08.236"/>
</kw>
<status status="PASS" starttime="20230801 16:10:07.817" endtime="20230801 16:10:08.236"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:08.239" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:10:08.238" endtime="20230801 16:10:08.239"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:08.242" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:10:08.243" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:10:08.241" endtime="20230801 16:10:08.244"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 16:10:08.246" endtime="20230801 16:10:08.246"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:08.245" endtime="20230801 16:10:08.246"/>
</branch>
<status status="PASS" starttime="20230801 16:10:08.245" endtime="20230801 16:10:08.247"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:10:11.630" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 16:10:08.252" endtime="20230801 16:10:11.631"/>
</kw>
<status status="PASS" starttime="20230801 16:10:08.247" endtime="20230801 16:10:11.631"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:11.632" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 16:10:11.632" endtime="20230801 16:10:11.632"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:10:12.142" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-4.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-4.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 16:10:12.142" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 16:10:12.143" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 16:10:11.636" endtime="20230801 16:10:12.146"/>
</kw>
<status status="FAIL" starttime="20230801 16:10:11.634" endtime="20230801 16:10:12.146"/>
</kw>
<msg timestamp="20230801 16:10:12.147" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 16:10:11.633" endtime="20230801 16:10:12.147"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:10:12.149" endtime="20230801 16:10:12.149"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:12.148" endtime="20230801 16:10:12.149"/>
</branch>
<status status="PASS" starttime="20230801 16:10:12.147" endtime="20230801 16:10:12.150"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:10:13.377" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 16:10:12.153" endtime="20230801 16:10:13.378"/>
</kw>
<status status="PASS" starttime="20230801 16:10:12.150" endtime="20230801 16:10:13.378"/>
</kw>
<status status="PASS" starttime="20230801 16:10:08.237" endtime="20230801 16:10:13.379"/>
</kw>
<status status="PASS" starttime="20230801 16:10:03.933" endtime="20230801 16:10:13.379"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:13.381" endtime="20230801 16:10:13.590"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:13.593" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:10:13.592" endtime="20230801 16:10:13.593"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:13.607" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:10:13.594" endtime="20230801 16:10:13.607"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:10:13.608" endtime="20230801 16:10:13.609"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:13.608" endtime="20230801 16:10:13.609"/>
</branch>
<status status="PASS" starttime="20230801 16:10:13.608" endtime="20230801 16:10:13.609"/>
</if>
<status status="PASS" starttime="20230801 16:10:13.590" endtime="20230801 16:10:13.610"/>
</kw>
<status status="PASS" starttime="20230801 16:10:13.380" endtime="20230801 16:10:13.610"/>
</kw>
<kw name="And Click &quot;Nhóm&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:13.613" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:10:13.612" endtime="20230801 16:10:13.613"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:13.629" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:10:13.613" endtime="20230801 16:10:13.629"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:10:13.630" endtime="20230801 16:10:13.630"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:13.629" endtime="20230801 16:10:13.630"/>
</branch>
<status status="PASS" starttime="20230801 16:10:13.629" endtime="20230801 16:10:13.630"/>
</if>
<status status="PASS" starttime="20230801 16:10:13.611" endtime="20230801 16:10:13.632"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:13.632" endtime="20230801 16:10:13.921"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:13.923" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:10:13.922" endtime="20230801 16:10:13.923"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:13.942" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:10:13.923" endtime="20230801 16:10:13.942"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:10:14.312" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 16:10:13.946" endtime="20230801 16:10:14.313"/>
</kw>
<status status="PASS" starttime="20230801 16:10:13.943" endtime="20230801 16:10:14.314"/>
</kw>
<status status="PASS" starttime="20230801 16:10:13.943" endtime="20230801 16:10:14.314"/>
</branch>
<status status="PASS" starttime="20230801 16:10:13.942" endtime="20230801 16:10:14.315"/>
</if>
<status status="PASS" starttime="20230801 16:10:13.921" endtime="20230801 16:10:14.315"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:14.317" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:10:14.316" endtime="20230801 16:10:14.317"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:14.336" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:10:14.318" endtime="20230801 16:10:14.336"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:10:15.855" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 16:10:14.340" endtime="20230801 16:10:15.856"/>
</kw>
<status status="PASS" starttime="20230801 16:10:14.337" endtime="20230801 16:10:15.857"/>
</kw>
<status status="PASS" starttime="20230801 16:10:14.336" endtime="20230801 16:10:15.857"/>
</branch>
<status status="PASS" starttime="20230801 16:10:14.336" endtime="20230801 16:10:15.859"/>
</if>
<status status="PASS" starttime="20230801 16:10:14.315" endtime="20230801 16:10:15.860"/>
</kw>
<status status="PASS" starttime="20230801 16:10:13.610" endtime="20230801 16:10:15.860"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:15.863" endtime="20230801 16:10:16.053"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:16.055" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:10:16.054" endtime="20230801 16:10:16.055"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:16.086" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:10:16.056" endtime="20230801 16:10:16.086"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.087" endtime="20230801 16:10:16.087"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.088" endtime="20230801 16:10:16.088"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:16.086" endtime="20230801 16:10:16.088"/>
</branch>
<status status="PASS" starttime="20230801 16:10:16.086" endtime="20230801 16:10:16.089"/>
</if>
<status status="PASS" starttime="20230801 16:10:16.053" endtime="20230801 16:10:16.090"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:10:16.090" endtime="20230801 16:10:16.492"/>
</kw>
<status status="PASS" starttime="20230801 16:10:15.862" endtime="20230801 16:10:16.492"/>
</kw>
<status status="PASS" starttime="20230801 16:10:15.860" endtime="20230801 16:10:16.492"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'edit'">
<kw name="Select team need to edit" library="common" sourcename="Select ${name} need to edit">
<status status="NOT RUN" starttime="20230801 16:10:16.493" endtime="20230801 16:10:16.493"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:16.493" endtime="20230801 16:10:16.494"/>
</branch>
<status status="PASS" starttime="20230801 16:10:15.860" endtime="20230801 16:10:16.494"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:16.496" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:10:16.495" endtime="20230801 16:10:16.496"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:16.505" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:10:16.496" endtime="20230801 16:10:16.506"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:10:16.507" endtime="20230801 16:10:16.507"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:16.506" endtime="20230801 16:10:16.507"/>
</branch>
<status status="PASS" starttime="20230801 16:10:16.506" endtime="20230801 16:10:16.508"/>
</if>
<status status="PASS" starttime="20230801 16:10:16.494" endtime="20230801 16:10:16.508"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 16:10:16.610" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 16:10:16.508" endtime="20230801 16:10:16.610"/>
</kw>
<status status="PASS" starttime="20230801 16:10:03.932" endtime="20230801 16:10:16.610"/>
</kw>
<kw name="And Click select &quot;Quản lý&quot; with &quot;Hồ Văn Nhật&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:16.615" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:10:16.614" endtime="20230801 16:10:16.615"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:16.616" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:10:16.615" endtime="20230801 16:10:16.616"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:16.617" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:10:16.616" endtime="20230801 16:10:16.617"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:16.618" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:10:16.618" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:10:16.617" endtime="20230801 16:10:16.618"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:16.620" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:10:16.619" endtime="20230801 16:10:16.620"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:16.622" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:10:16.622" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:10:16.620" endtime="20230801 16:10:16.622"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.624" endtime="20230801 16:10:16.624"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.625" endtime="20230801 16:10:16.625"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:16.623" endtime="20230801 16:10:16.625"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.626" endtime="20230801 16:10:16.626"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.627" endtime="20230801 16:10:16.627"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.627" endtime="20230801 16:10:16.627"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:16.625" endtime="20230801 16:10:16.628"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.629" endtime="20230801 16:10:16.629"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.629" endtime="20230801 16:10:16.629"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:16.628" endtime="20230801 16:10:16.630"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.630" endtime="20230801 16:10:16.630"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.631" endtime="20230801 16:10:16.631"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:16.630" endtime="20230801 16:10:16.631"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.632" endtime="20230801 16:10:16.632"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.633" endtime="20230801 16:10:16.634"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:16.631" endtime="20230801 16:10:16.634"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.635" endtime="20230801 16:10:16.636"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.636" endtime="20230801 16:10:16.636"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:16.634" endtime="20230801 16:10:16.637"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.638" endtime="20230801 16:10:16.638"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.639" endtime="20230801 16:10:16.639"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:16.637" endtime="20230801 16:10:16.640"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.640" endtime="20230801 16:10:16.641"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:16.640" endtime="20230801 16:10:16.641"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:10:16.642" endtime="20230801 16:10:16.642"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:16.641" endtime="20230801 16:10:16.643"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.644" endtime="20230801 16:10:16.644"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.644" endtime="20230801 16:10:16.645"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:16.643" endtime="20230801 16:10:16.645"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.646" endtime="20230801 16:10:16.647"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:16.645" endtime="20230801 16:10:16.647"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.648" endtime="20230801 16:10:16.648"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:16.647" endtime="20230801 16:10:16.649"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.650" endtime="20230801 16:10:16.650"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:16.649" endtime="20230801 16:10:16.650"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:16.652" endtime="20230801 16:10:16.654"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:16.651" endtime="20230801 16:10:16.654"/>
</branch>
<status status="PASS" starttime="20230801 16:10:16.622" endtime="20230801 16:10:16.654"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:16.656" level="INFO">Length is 11</msg>
<msg timestamp="20230801 16:10:16.657" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20230801 16:10:16.655" endtime="20230801 16:10:16.657"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:10:16.660" level="INFO">${text} = Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230801 16:10:16.658" endtime="20230801 16:10:16.660"/>
</kw>
<status status="PASS" starttime="20230801 16:10:16.657" endtime="20230801 16:10:16.660"/>
</branch>
<status status="PASS" starttime="20230801 16:10:16.657" endtime="20230801 16:10:16.661"/>
</if>
<msg timestamp="20230801 16:10:16.662" level="INFO">${text} = Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230801 16:10:16.614" endtime="20230801 16:10:16.662"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 16:10:16.663" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 16:10:16.662" endtime="20230801 16:10:16.663"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:10:16.699" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 16:10:16.667" endtime="20230801 16:10:16.700"/>
</kw>
<status status="PASS" starttime="20230801 16:10:16.664" endtime="20230801 16:10:16.700"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:16.700" endtime="20230801 16:10:16.986"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 16:10:16.987" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 16:10:16.986" endtime="20230801 16:10:16.987"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:10:16.989" level="INFO">Fills the text 'Hồ Văn Nhật' in the given field.</msg>
<status status="PASS" starttime="20230801 16:10:16.988" endtime="20230801 16:10:17.093"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:17.094" endtime="20230801 16:10:18.783"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:18.785" level="INFO">Length is 11</msg>
<msg timestamp="20230801 16:10:18.785" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20230801 16:10:18.784" endtime="20230801 16:10:18.785"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:10:18.790" level="INFO">${STATE["Quản lý"]} = Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230801 16:10:18.786" endtime="20230801 16:10:18.790"/>
</kw>
<status status="PASS" starttime="20230801 16:10:18.785" endtime="20230801 16:10:18.792"/>
</branch>
<status status="PASS" starttime="20230801 16:10:18.785" endtime="20230801 16:10:18.792"/>
</if>
<status status="PASS" starttime="20230801 16:10:16.613" endtime="20230801 16:10:18.792"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:18.810" endtime="20230801 16:10:19.515"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:19.517" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:10:19.516" endtime="20230801 16:10:19.517"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:19.548" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:10:19.517" endtime="20230801 16:10:19.548"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:10:19.549" endtime="20230801 16:10:19.549"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:10:19.550" endtime="20230801 16:10:19.550"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:19.548" endtime="20230801 16:10:19.550"/>
</branch>
<status status="PASS" starttime="20230801 16:10:19.548" endtime="20230801 16:10:19.551"/>
</if>
<status status="PASS" starttime="20230801 16:10:19.516" endtime="20230801 16:10:19.551"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:10:19.552" endtime="20230801 16:10:19.653"/>
</kw>
<status status="PASS" starttime="20230801 16:10:18.809" endtime="20230801 16:10:19.653"/>
</kw>
<kw name="Then Required message &quot;Tên Nhóm&quot; displayed under &quot;Xin vui lòng nhập tên nhóm&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230801 16:10:19.693" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên Nhóm"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230801 16:10:19.690" endtime="20230801 16:10:19.693"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:10:19.769" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên Nhóm"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230801 16:10:19.696" endtime="20230801 16:10:19.770"/>
</kw>
<status status="PASS" starttime="20230801 16:10:19.693" endtime="20230801 16:10:19.770"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:10:19.863" level="INFO">Text: 'Xin vui lòng nhập tên nhóm'</msg>
<status status="PASS" starttime="20230801 16:10:19.776" endtime="20230801 16:10:19.864"/>
</kw>
<status status="PASS" starttime="20230801 16:10:19.770" endtime="20230801 16:10:19.864"/>
</kw>
<status status="PASS" starttime="20230801 16:10:19.689" endtime="20230801 16:10:19.864"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 16:10:22.093" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 16:10:19.892" endtime="20230801 16:10:22.094"/>
</kw>
<status status="PASS" starttime="20230801 16:10:19.890" endtime="20230801 16:10:22.094"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230801 16:09:59.843" endtime="20230801 16:10:22.167"/>
</test>
<test id="s1-t5" name="CRT-05 Verify that create team unsuccessfull because no enter &quot;Tên Nhóm&quot; field &amp; &quot;Lưu và tạo mới&quot; button" line="40">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 16:10:22.258" endtime="20230801 16:10:22.259"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 16:10:22.264" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\2364d2fc-035c-4559-b517-bb1318f33e8b"}</msg>
<msg timestamp="20230801 16:10:24.430" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\2364d2fc-035c-4559-b517-bb1318f33e8b"}</msg>
<status status="PASS" starttime="20230801 16:10:22.260" endtime="20230801 16:10:24.430"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 16:10:26.469" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 16:10:26.469" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 16:10:24.430" endtime="20230801 16:10:26.469"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 16:10:26.470" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 16:10:26.470" endtime="20230801 16:10:26.470"/>
</kw>
<status status="PASS" starttime="20230801 16:10:22.257" endtime="20230801 16:10:26.470"/>
</kw>
<kw name="When Go to page create team" library="common" sourcename="Go to page ${name} team">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:26.483" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:10:26.483" endtime="20230801 16:10:26.483"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:26.485" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:10:26.484" endtime="20230801 16:10:26.485"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:26.486" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:10:26.485" endtime="20230801 16:10:26.486"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:26.487" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:10:26.488" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:10:26.487" endtime="20230801 16:10:26.488"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:26.490" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:10:26.489" endtime="20230801 16:10:26.490"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:26.492" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:10:26.492" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:10:26.492" endtime="20230801 16:10:26.493"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.494" endtime="20230801 16:10:26.494"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.494" endtime="20230801 16:10:26.495"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:26.493" endtime="20230801 16:10:26.495"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.496" endtime="20230801 16:10:26.496"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.497" endtime="20230801 16:10:26.497"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.497" endtime="20230801 16:10:26.497"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:26.495" endtime="20230801 16:10:26.498"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.499" endtime="20230801 16:10:26.499"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.499" endtime="20230801 16:10:26.500"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:26.498" endtime="20230801 16:10:26.500"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.501" endtime="20230801 16:10:26.501"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.502" endtime="20230801 16:10:26.502"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:26.500" endtime="20230801 16:10:26.502"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.503" endtime="20230801 16:10:26.503"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.504" endtime="20230801 16:10:26.504"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:26.502" endtime="20230801 16:10:26.505"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.507" endtime="20230801 16:10:26.507"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.508" endtime="20230801 16:10:26.508"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:26.506" endtime="20230801 16:10:26.508"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.510" endtime="20230801 16:10:26.510"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.510" endtime="20230801 16:10:26.512"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:26.509" endtime="20230801 16:10:26.512"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.513" endtime="20230801 16:10:26.513"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:26.512" endtime="20230801 16:10:26.514"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:10:26.515" endtime="20230801 16:10:26.516"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:26.514" endtime="20230801 16:10:26.516"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.518" endtime="20230801 16:10:26.518"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.519" endtime="20230801 16:10:26.519"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:26.517" endtime="20230801 16:10:26.519"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.520" endtime="20230801 16:10:26.521"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:26.519" endtime="20230801 16:10:26.523"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.524" endtime="20230801 16:10:26.524"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:26.523" endtime="20230801 16:10:26.526"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.530" endtime="20230801 16:10:26.530"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:26.527" endtime="20230801 16:10:26.532"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:26.534" endtime="20230801 16:10:26.535"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:26.533" endtime="20230801 16:10:26.535"/>
</branch>
<status status="PASS" starttime="20230801 16:10:26.493" endtime="20230801 16:10:26.535"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:26.543" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:10:26.544" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:10:26.538" endtime="20230801 16:10:26.544"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:10:26.548" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:10:26.547" endtime="20230801 16:10:26.548"/>
</kw>
<status status="PASS" starttime="20230801 16:10:26.546" endtime="20230801 16:10:26.548"/>
</branch>
<status status="PASS" starttime="20230801 16:10:26.546" endtime="20230801 16:10:26.549"/>
</if>
<msg timestamp="20230801 16:10:26.549" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:10:26.482" endtime="20230801 16:10:26.549"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:10:26.550" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:10:26.550" endtime="20230801 16:10:26.550"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:26.552" endtime="20230801 16:10:29.054"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:10:29.058" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230801 16:10:29.057" endtime="20230801 16:10:29.140"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:29.141" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:10:29.141" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:10:29.141" endtime="20230801 16:10:29.142"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:10:29.144" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:10:29.143" endtime="20230801 16:10:29.144"/>
</kw>
<status status="PASS" starttime="20230801 16:10:29.142" endtime="20230801 16:10:29.144"/>
</branch>
<status status="PASS" starttime="20230801 16:10:29.142" endtime="20230801 16:10:29.144"/>
</if>
<status status="PASS" starttime="20230801 16:10:26.481" endtime="20230801 16:10:29.145"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:29.148" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:10:29.147" endtime="20230801 16:10:29.148"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:29.149" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:10:29.149" endtime="20230801 16:10:29.149"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:29.150" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:10:29.150" endtime="20230801 16:10:29.150"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:29.152" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:10:29.153" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:10:29.152" endtime="20230801 16:10:29.153"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:29.154" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:10:29.153" endtime="20230801 16:10:29.154"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:29.156" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:10:29.156" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:10:29.154" endtime="20230801 16:10:29.156"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.158" endtime="20230801 16:10:29.158"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.159" endtime="20230801 16:10:29.159"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:29.157" endtime="20230801 16:10:29.160"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.161" endtime="20230801 16:10:29.161"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.161" endtime="20230801 16:10:29.162"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.162" endtime="20230801 16:10:29.162"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:29.160" endtime="20230801 16:10:29.163"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.164" endtime="20230801 16:10:29.164"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.165" endtime="20230801 16:10:29.165"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:29.163" endtime="20230801 16:10:29.165"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.166" endtime="20230801 16:10:29.166"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.167" endtime="20230801 16:10:29.167"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:29.165" endtime="20230801 16:10:29.167"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.168" endtime="20230801 16:10:29.169"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.169" endtime="20230801 16:10:29.170"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:29.168" endtime="20230801 16:10:29.170"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.172" endtime="20230801 16:10:29.172"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.173" endtime="20230801 16:10:29.177"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:29.170" endtime="20230801 16:10:29.177"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.178" endtime="20230801 16:10:29.178"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.179" endtime="20230801 16:10:29.180"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:29.177" endtime="20230801 16:10:29.180"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.181" endtime="20230801 16:10:29.181"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:29.180" endtime="20230801 16:10:29.182"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:10:29.182" endtime="20230801 16:10:29.183"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:29.182" endtime="20230801 16:10:29.183"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.184" endtime="20230801 16:10:29.184"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.184" endtime="20230801 16:10:29.185"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:29.183" endtime="20230801 16:10:29.185"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.186" endtime="20230801 16:10:29.186"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:29.185" endtime="20230801 16:10:29.186"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.187" endtime="20230801 16:10:29.190"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:29.186" endtime="20230801 16:10:29.190"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.192" endtime="20230801 16:10:29.192"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:29.190" endtime="20230801 16:10:29.192"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.194" endtime="20230801 16:10:29.194"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:29.193" endtime="20230801 16:10:29.194"/>
</branch>
<status status="PASS" starttime="20230801 16:10:29.157" endtime="20230801 16:10:29.195"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:29.196" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:10:29.196" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:10:29.195" endtime="20230801 16:10:29.196"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:10:29.198" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:10:29.197" endtime="20230801 16:10:29.198"/>
</kw>
<status status="PASS" starttime="20230801 16:10:29.197" endtime="20230801 16:10:29.199"/>
</branch>
<status status="PASS" starttime="20230801 16:10:29.196" endtime="20230801 16:10:29.199"/>
</if>
<msg timestamp="20230801 16:10:29.199" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:10:29.146" endtime="20230801 16:10:29.200"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:10:29.200" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:10:29.200" endtime="20230801 16:10:29.201"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:29.201" endtime="20230801 16:10:29.350"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:10:29.352" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230801 16:10:29.350" endtime="20230801 16:10:29.430"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:29.432" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:10:29.432" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:10:29.430" endtime="20230801 16:10:29.432"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:10:29.434" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:10:29.433" endtime="20230801 16:10:29.434"/>
</kw>
<status status="PASS" starttime="20230801 16:10:29.432" endtime="20230801 16:10:29.434"/>
</branch>
<status status="PASS" starttime="20230801 16:10:29.432" endtime="20230801 16:10:29.435"/>
</if>
<status status="PASS" starttime="20230801 16:10:29.145" endtime="20230801 16:10:29.435"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:29.436" endtime="20230801 16:10:29.797"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:29.799" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:10:29.799" endtime="20230801 16:10:29.799"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:29.836" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:10:29.800" endtime="20230801 16:10:29.836"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.840" endtime="20230801 16:10:29.840"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.844" endtime="20230801 16:10:29.846"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:29.837" endtime="20230801 16:10:29.846"/>
</branch>
<status status="PASS" starttime="20230801 16:10:29.837" endtime="20230801 16:10:29.848"/>
</if>
<status status="PASS" starttime="20230801 16:10:29.798" endtime="20230801 16:10:29.849"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:10:29.850" endtime="20230801 16:10:29.968"/>
</kw>
<status status="PASS" starttime="20230801 16:10:29.436" endtime="20230801 16:10:29.969"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:29.979" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:10:29.977" endtime="20230801 16:10:29.979"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:29.980" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:10:29.980" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:10:29.979" endtime="20230801 16:10:29.980"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 16:10:29.981" endtime="20230801 16:10:29.981"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:29.980" endtime="20230801 16:10:29.982"/>
</branch>
<status status="PASS" starttime="20230801 16:10:29.980" endtime="20230801 16:10:29.982"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:10:33.610" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 16:10:29.986" endtime="20230801 16:10:33.610"/>
</kw>
<status status="PASS" starttime="20230801 16:10:29.982" endtime="20230801 16:10:33.610"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:33.614" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 16:10:33.612" endtime="20230801 16:10:33.614"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:10:34.380" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-5.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-5.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 16:10:34.380" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 16:10:34.380" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 16:10:33.628" endtime="20230801 16:10:34.385"/>
</kw>
<status status="FAIL" starttime="20230801 16:10:33.616" endtime="20230801 16:10:34.385"/>
</kw>
<msg timestamp="20230801 16:10:34.386" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 16:10:33.615" endtime="20230801 16:10:34.386"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:10:34.387" endtime="20230801 16:10:34.387"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:34.386" endtime="20230801 16:10:34.389"/>
</branch>
<status status="PASS" starttime="20230801 16:10:34.386" endtime="20230801 16:10:34.390"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:10:35.469" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 16:10:34.392" endtime="20230801 16:10:35.470"/>
</kw>
<status status="PASS" starttime="20230801 16:10:34.390" endtime="20230801 16:10:35.470"/>
</kw>
<status status="PASS" starttime="20230801 16:10:29.970" endtime="20230801 16:10:35.472"/>
</kw>
<status status="PASS" starttime="20230801 16:10:26.480" endtime="20230801 16:10:35.473"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:35.477" endtime="20230801 16:10:35.636"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:35.640" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:10:35.639" endtime="20230801 16:10:35.640"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:35.653" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:10:35.642" endtime="20230801 16:10:35.653"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:10:35.657" endtime="20230801 16:10:35.658"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:35.655" endtime="20230801 16:10:35.658"/>
</branch>
<status status="PASS" starttime="20230801 16:10:35.655" endtime="20230801 16:10:35.662"/>
</if>
<status status="PASS" starttime="20230801 16:10:35.637" endtime="20230801 16:10:35.662"/>
</kw>
<status status="PASS" starttime="20230801 16:10:35.474" endtime="20230801 16:10:35.663"/>
</kw>
<kw name="And Click &quot;Nhóm&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:35.667" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:10:35.666" endtime="20230801 16:10:35.667"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:35.733" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:10:35.668" endtime="20230801 16:10:35.733"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:10:35.734" endtime="20230801 16:10:35.734"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:35.733" endtime="20230801 16:10:35.735"/>
</branch>
<status status="PASS" starttime="20230801 16:10:35.733" endtime="20230801 16:10:35.735"/>
</if>
<status status="PASS" starttime="20230801 16:10:35.665" endtime="20230801 16:10:35.735"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:35.736" endtime="20230801 16:10:36.094"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:36.098" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:10:36.097" endtime="20230801 16:10:36.098"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:36.133" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:10:36.099" endtime="20230801 16:10:36.133"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:10:36.400" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 16:10:36.137" endtime="20230801 16:10:36.402"/>
</kw>
<status status="PASS" starttime="20230801 16:10:36.134" endtime="20230801 16:10:36.402"/>
</kw>
<status status="PASS" starttime="20230801 16:10:36.133" endtime="20230801 16:10:36.403"/>
</branch>
<status status="PASS" starttime="20230801 16:10:36.133" endtime="20230801 16:10:36.403"/>
</if>
<status status="PASS" starttime="20230801 16:10:36.095" endtime="20230801 16:10:36.403"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:36.407" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:10:36.406" endtime="20230801 16:10:36.407"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:36.420" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:10:36.409" endtime="20230801 16:10:36.420"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:10:37.917" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 16:10:36.426" endtime="20230801 16:10:37.918"/>
</kw>
<status status="PASS" starttime="20230801 16:10:36.423" endtime="20230801 16:10:37.918"/>
</kw>
<status status="PASS" starttime="20230801 16:10:36.422" endtime="20230801 16:10:37.919"/>
</branch>
<status status="PASS" starttime="20230801 16:10:36.422" endtime="20230801 16:10:37.919"/>
</if>
<status status="PASS" starttime="20230801 16:10:36.404" endtime="20230801 16:10:37.919"/>
</kw>
<status status="PASS" starttime="20230801 16:10:35.664" endtime="20230801 16:10:37.920"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:37.925" endtime="20230801 16:10:38.146"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:38.148" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:10:38.147" endtime="20230801 16:10:38.148"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:38.177" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:10:38.149" endtime="20230801 16:10:38.177"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.178" endtime="20230801 16:10:38.178"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.179" endtime="20230801 16:10:38.179"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:38.177" endtime="20230801 16:10:38.179"/>
</branch>
<status status="PASS" starttime="20230801 16:10:38.177" endtime="20230801 16:10:38.180"/>
</if>
<status status="PASS" starttime="20230801 16:10:38.146" endtime="20230801 16:10:38.180"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:10:38.180" endtime="20230801 16:10:38.468"/>
</kw>
<status status="PASS" starttime="20230801 16:10:37.924" endtime="20230801 16:10:38.469"/>
</kw>
<status status="PASS" starttime="20230801 16:10:37.920" endtime="20230801 16:10:38.469"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'edit'">
<kw name="Select team need to edit" library="common" sourcename="Select ${name} need to edit">
<status status="NOT RUN" starttime="20230801 16:10:38.470" endtime="20230801 16:10:38.470"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:38.469" endtime="20230801 16:10:38.470"/>
</branch>
<status status="PASS" starttime="20230801 16:10:37.920" endtime="20230801 16:10:38.471"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:38.473" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:10:38.473" endtime="20230801 16:10:38.473"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:38.483" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:10:38.474" endtime="20230801 16:10:38.484"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:10:38.485" endtime="20230801 16:10:38.485"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:38.484" endtime="20230801 16:10:38.485"/>
</branch>
<status status="PASS" starttime="20230801 16:10:38.484" endtime="20230801 16:10:38.486"/>
</if>
<status status="PASS" starttime="20230801 16:10:38.471" endtime="20230801 16:10:38.486"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 16:10:38.588" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 16:10:38.487" endtime="20230801 16:10:38.588"/>
</kw>
<status status="PASS" starttime="20230801 16:10:26.480" endtime="20230801 16:10:38.588"/>
</kw>
<kw name="And Click select &quot;Quản lý&quot; with &quot;Hồ Văn Nhật&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:38.621" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:10:38.620" endtime="20230801 16:10:38.621"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:38.623" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:10:38.622" endtime="20230801 16:10:38.623"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:38.624" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:10:38.623" endtime="20230801 16:10:38.624"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:38.626" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:10:38.626" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:10:38.625" endtime="20230801 16:10:38.626"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:38.628" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:10:38.627" endtime="20230801 16:10:38.628"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:38.629" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:10:38.629" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:10:38.628" endtime="20230801 16:10:38.629"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.631" endtime="20230801 16:10:38.631"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.631" endtime="20230801 16:10:38.632"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:38.630" endtime="20230801 16:10:38.632"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.632" endtime="20230801 16:10:38.633"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.633" endtime="20230801 16:10:38.634"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.634" endtime="20230801 16:10:38.634"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:38.632" endtime="20230801 16:10:38.635"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.636" endtime="20230801 16:10:38.636"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.637" endtime="20230801 16:10:38.638"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:38.635" endtime="20230801 16:10:38.638"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.639" endtime="20230801 16:10:38.639"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.640" endtime="20230801 16:10:38.640"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:38.638" endtime="20230801 16:10:38.640"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.642" endtime="20230801 16:10:38.643"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.643" endtime="20230801 16:10:38.643"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:38.641" endtime="20230801 16:10:38.644"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.645" endtime="20230801 16:10:38.645"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.646" endtime="20230801 16:10:38.646"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:38.644" endtime="20230801 16:10:38.646"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.647" endtime="20230801 16:10:38.648"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.648" endtime="20230801 16:10:38.649"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:38.646" endtime="20230801 16:10:38.649"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.651" endtime="20230801 16:10:38.668"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:38.649" endtime="20230801 16:10:38.669"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:10:38.670" endtime="20230801 16:10:38.670"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:38.669" endtime="20230801 16:10:38.670"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.678" endtime="20230801 16:10:38.678"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.678" endtime="20230801 16:10:38.679"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:38.675" endtime="20230801 16:10:38.679"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.680" endtime="20230801 16:10:38.680"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:38.679" endtime="20230801 16:10:38.681"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.682" endtime="20230801 16:10:38.683"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:38.681" endtime="20230801 16:10:38.683"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.684" endtime="20230801 16:10:38.684"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:38.683" endtime="20230801 16:10:38.684"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:38.685" endtime="20230801 16:10:38.686"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:38.685" endtime="20230801 16:10:38.686"/>
</branch>
<status status="PASS" starttime="20230801 16:10:38.630" endtime="20230801 16:10:38.686"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:38.691" level="INFO">Length is 11</msg>
<msg timestamp="20230801 16:10:38.693" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20230801 16:10:38.687" endtime="20230801 16:10:38.693"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:10:38.696" level="INFO">${text} = Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230801 16:10:38.695" endtime="20230801 16:10:38.696"/>
</kw>
<status status="PASS" starttime="20230801 16:10:38.694" endtime="20230801 16:10:38.696"/>
</branch>
<status status="PASS" starttime="20230801 16:10:38.694" endtime="20230801 16:10:38.696"/>
</if>
<msg timestamp="20230801 16:10:38.697" level="INFO">${text} = Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230801 16:10:38.619" endtime="20230801 16:10:38.697"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 16:10:38.698" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 16:10:38.697" endtime="20230801 16:10:38.698"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:10:38.718" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 16:10:38.701" endtime="20230801 16:10:38.719"/>
</kw>
<status status="PASS" starttime="20230801 16:10:38.699" endtime="20230801 16:10:38.719"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:38.720" endtime="20230801 16:10:38.919"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 16:10:38.921" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 16:10:38.920" endtime="20230801 16:10:38.921"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:10:38.924" level="INFO">Fills the text 'Hồ Văn Nhật' in the given field.</msg>
<status status="PASS" starttime="20230801 16:10:38.921" endtime="20230801 16:10:39.014"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:39.014" endtime="20230801 16:10:40.554"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:40.556" level="INFO">Length is 11</msg>
<msg timestamp="20230801 16:10:40.557" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20230801 16:10:40.555" endtime="20230801 16:10:40.557"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:10:40.561" level="INFO">${STATE["Quản lý"]} = Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230801 16:10:40.560" endtime="20230801 16:10:40.561"/>
</kw>
<status status="PASS" starttime="20230801 16:10:40.559" endtime="20230801 16:10:40.561"/>
</branch>
<status status="PASS" starttime="20230801 16:10:40.558" endtime="20230801 16:10:40.561"/>
</if>
<status status="PASS" starttime="20230801 16:10:38.618" endtime="20230801 16:10:40.562"/>
</kw>
<kw name="And Click &quot;Lưu và tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:40.565" endtime="20230801 16:10:40.859"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:40.860" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:10:40.860" endtime="20230801 16:10:40.860"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:40.872" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:10:40.861" endtime="20230801 16:10:40.872"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:10:40.875" endtime="20230801 16:10:40.875"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:10:40.876" endtime="20230801 16:10:40.876"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:40.873" endtime="20230801 16:10:40.876"/>
</branch>
<status status="PASS" starttime="20230801 16:10:40.873" endtime="20230801 16:10:40.877"/>
</if>
<status status="PASS" starttime="20230801 16:10:40.859" endtime="20230801 16:10:40.877"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:10:40.877" endtime="20230801 16:10:40.932"/>
</kw>
<status status="PASS" starttime="20230801 16:10:40.564" endtime="20230801 16:10:40.932"/>
</kw>
<kw name="Then Required message &quot;Tên Nhóm&quot; displayed under &quot;Xin vui lòng nhập tên nhóm&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230801 16:10:40.936" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên Nhóm"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230801 16:10:40.934" endtime="20230801 16:10:40.936"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:10:40.959" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên Nhóm"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230801 16:10:40.942" endtime="20230801 16:10:40.959"/>
</kw>
<status status="PASS" starttime="20230801 16:10:40.936" endtime="20230801 16:10:40.960"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:10:41.036" level="INFO">Text: 'Xin vui lòng nhập tên nhóm'</msg>
<status status="PASS" starttime="20230801 16:10:40.965" endtime="20230801 16:10:41.036"/>
</kw>
<status status="PASS" starttime="20230801 16:10:40.960" endtime="20230801 16:10:41.038"/>
</kw>
<status status="PASS" starttime="20230801 16:10:40.934" endtime="20230801 16:10:41.038"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 16:10:41.836" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 16:10:41.062" endtime="20230801 16:10:41.837"/>
</kw>
<status status="PASS" starttime="20230801 16:10:41.060" endtime="20230801 16:10:41.837"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230801 16:10:22.244" endtime="20230801 16:10:41.844"/>
</test>
<test id="s1-t6" name="CRT-06 Verify that create team unsuccessfull because no enter &quot;Quản lý&quot; field &amp; &quot;Lưu lại&quot; button" line="47">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 16:10:41.940" endtime="20230801 16:10:41.942"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 16:10:41.945" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\fdfa8565-d9f7-462e-91ca-dcbbde79bb71"}</msg>
<msg timestamp="20230801 16:10:43.718" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\fdfa8565-d9f7-462e-91ca-dcbbde79bb71"}</msg>
<status status="PASS" starttime="20230801 16:10:41.943" endtime="20230801 16:10:43.718"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 16:10:45.605" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 16:10:45.605" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 16:10:43.719" endtime="20230801 16:10:45.606"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 16:10:45.607" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 16:10:45.606" endtime="20230801 16:10:45.607"/>
</kw>
<status status="PASS" starttime="20230801 16:10:41.939" endtime="20230801 16:10:45.608"/>
</kw>
<kw name="When Go to page create team" library="common" sourcename="Go to page ${name} team">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:45.614" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:10:45.613" endtime="20230801 16:10:45.614"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:45.615" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:10:45.614" endtime="20230801 16:10:45.615"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:45.616" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:10:45.616" endtime="20230801 16:10:45.616"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:45.618" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:10:45.618" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:10:45.617" endtime="20230801 16:10:45.618"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:45.619" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:10:45.618" endtime="20230801 16:10:45.619"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:45.622" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:10:45.622" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:10:45.620" endtime="20230801 16:10:45.622"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.624" endtime="20230801 16:10:45.624"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.624" endtime="20230801 16:10:45.624"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:45.623" endtime="20230801 16:10:45.624"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.625" endtime="20230801 16:10:45.625"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.626" endtime="20230801 16:10:45.626"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.626" endtime="20230801 16:10:45.627"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:45.624" endtime="20230801 16:10:45.627"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.628" endtime="20230801 16:10:45.628"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.629" endtime="20230801 16:10:45.629"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:45.627" endtime="20230801 16:10:45.629"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.630" endtime="20230801 16:10:45.630"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.632" endtime="20230801 16:10:45.632"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:45.629" endtime="20230801 16:10:45.632"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.633" endtime="20230801 16:10:45.634"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.634" endtime="20230801 16:10:45.635"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:45.633" endtime="20230801 16:10:45.635"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.636" endtime="20230801 16:10:45.638"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.639" endtime="20230801 16:10:45.639"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:45.635" endtime="20230801 16:10:45.639"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.640" endtime="20230801 16:10:45.640"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.641" endtime="20230801 16:10:45.641"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:45.640" endtime="20230801 16:10:45.641"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.642" endtime="20230801 16:10:45.643"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:45.641" endtime="20230801 16:10:45.643"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:10:45.644" endtime="20230801 16:10:45.644"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:45.643" endtime="20230801 16:10:45.644"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.647" endtime="20230801 16:10:45.647"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.650" endtime="20230801 16:10:45.650"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:45.645" endtime="20230801 16:10:45.650"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.652" endtime="20230801 16:10:45.652"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:45.651" endtime="20230801 16:10:45.653"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.657" endtime="20230801 16:10:45.657"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:45.656" endtime="20230801 16:10:45.658"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.659" endtime="20230801 16:10:45.659"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:45.658" endtime="20230801 16:10:45.659"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:45.660" endtime="20230801 16:10:45.660"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:45.660" endtime="20230801 16:10:45.660"/>
</branch>
<status status="PASS" starttime="20230801 16:10:45.623" endtime="20230801 16:10:45.662"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:45.663" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:10:45.663" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:10:45.662" endtime="20230801 16:10:45.663"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:10:45.665" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:10:45.664" endtime="20230801 16:10:45.665"/>
</kw>
<status status="PASS" starttime="20230801 16:10:45.663" endtime="20230801 16:10:45.665"/>
</branch>
<status status="PASS" starttime="20230801 16:10:45.663" endtime="20230801 16:10:45.666"/>
</if>
<msg timestamp="20230801 16:10:45.666" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:10:45.612" endtime="20230801 16:10:45.666"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:10:45.668" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:10:45.667" endtime="20230801 16:10:45.668"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:45.668" endtime="20230801 16:10:47.879"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:10:47.880" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230801 16:10:47.879" endtime="20230801 16:10:47.945"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:47.946" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:10:47.947" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:10:47.946" endtime="20230801 16:10:47.947"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:10:47.949" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:10:47.948" endtime="20230801 16:10:47.949"/>
</kw>
<status status="PASS" starttime="20230801 16:10:47.947" endtime="20230801 16:10:47.949"/>
</branch>
<status status="PASS" starttime="20230801 16:10:47.947" endtime="20230801 16:10:47.949"/>
</if>
<status status="PASS" starttime="20230801 16:10:45.611" endtime="20230801 16:10:47.950"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:47.952" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:10:47.952" endtime="20230801 16:10:47.952"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:47.954" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:10:47.953" endtime="20230801 16:10:47.954"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:47.956" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:10:47.955" endtime="20230801 16:10:47.956"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:47.957" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:10:47.957" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:10:47.956" endtime="20230801 16:10:47.957"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:47.959" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:10:47.958" endtime="20230801 16:10:47.959"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:47.960" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:10:47.960" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:10:47.959" endtime="20230801 16:10:47.960"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.962" endtime="20230801 16:10:47.962"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.963" endtime="20230801 16:10:47.963"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:47.960" endtime="20230801 16:10:47.963"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.964" endtime="20230801 16:10:47.965"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.965" endtime="20230801 16:10:47.966"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.966" endtime="20230801 16:10:47.966"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:47.964" endtime="20230801 16:10:47.966"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.967" endtime="20230801 16:10:47.968"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.968" endtime="20230801 16:10:47.968"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:47.967" endtime="20230801 16:10:47.969"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.970" endtime="20230801 16:10:47.971"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.972" endtime="20230801 16:10:47.972"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:47.969" endtime="20230801 16:10:47.972"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.973" endtime="20230801 16:10:47.973"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.974" endtime="20230801 16:10:47.974"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:47.972" endtime="20230801 16:10:47.975"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.976" endtime="20230801 16:10:47.976"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.977" endtime="20230801 16:10:47.977"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:47.975" endtime="20230801 16:10:47.977"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.979" endtime="20230801 16:10:47.979"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.979" endtime="20230801 16:10:47.980"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:47.978" endtime="20230801 16:10:47.980"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.980" endtime="20230801 16:10:47.982"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:47.980" endtime="20230801 16:10:47.982"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:10:47.983" endtime="20230801 16:10:47.983"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:47.982" endtime="20230801 16:10:47.983"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.984" endtime="20230801 16:10:47.985"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.985" endtime="20230801 16:10:47.985"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:47.984" endtime="20230801 16:10:47.986"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.987" endtime="20230801 16:10:47.987"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:47.986" endtime="20230801 16:10:47.988"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.990" endtime="20230801 16:10:47.990"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:47.988" endtime="20230801 16:10:47.990"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.991" endtime="20230801 16:10:47.991"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:47.990" endtime="20230801 16:10:47.992"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:47.992" endtime="20230801 16:10:47.992"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:47.992" endtime="20230801 16:10:47.993"/>
</branch>
<status status="PASS" starttime="20230801 16:10:47.960" endtime="20230801 16:10:47.993"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:47.994" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:10:47.994" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:10:47.994" endtime="20230801 16:10:47.994"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:10:47.996" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:10:47.996" endtime="20230801 16:10:47.996"/>
</kw>
<status status="PASS" starttime="20230801 16:10:47.995" endtime="20230801 16:10:47.997"/>
</branch>
<status status="PASS" starttime="20230801 16:10:47.995" endtime="20230801 16:10:47.997"/>
</if>
<msg timestamp="20230801 16:10:47.997" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:10:47.951" endtime="20230801 16:10:47.997"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:10:47.999" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:10:47.998" endtime="20230801 16:10:47.999"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:48.000" endtime="20230801 16:10:48.163"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:10:48.165" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230801 16:10:48.164" endtime="20230801 16:10:48.240"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:48.243" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:10:48.243" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:10:48.240" endtime="20230801 16:10:48.243"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:10:48.247" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:10:48.245" endtime="20230801 16:10:48.247"/>
</kw>
<status status="PASS" starttime="20230801 16:10:48.244" endtime="20230801 16:10:48.248"/>
</branch>
<status status="PASS" starttime="20230801 16:10:48.244" endtime="20230801 16:10:48.248"/>
</if>
<status status="PASS" starttime="20230801 16:10:47.950" endtime="20230801 16:10:48.248"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:48.250" endtime="20230801 16:10:48.469"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:48.473" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:10:48.472" endtime="20230801 16:10:48.474"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:48.502" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:10:48.475" endtime="20230801 16:10:48.502"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:10:48.504" endtime="20230801 16:10:48.505"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:10:48.507" endtime="20230801 16:10:48.509"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:48.503" endtime="20230801 16:10:48.509"/>
</branch>
<status status="PASS" starttime="20230801 16:10:48.502" endtime="20230801 16:10:48.509"/>
</if>
<status status="PASS" starttime="20230801 16:10:48.469" endtime="20230801 16:10:48.510"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:10:48.510" endtime="20230801 16:10:48.581"/>
</kw>
<status status="PASS" starttime="20230801 16:10:48.249" endtime="20230801 16:10:48.581"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:48.582" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:10:48.582" endtime="20230801 16:10:48.582"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:48.583" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:10:48.583" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:10:48.583" endtime="20230801 16:10:48.583"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 16:10:48.584" endtime="20230801 16:10:48.584"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:48.584" endtime="20230801 16:10:48.584"/>
</branch>
<status status="PASS" starttime="20230801 16:10:48.583" endtime="20230801 16:10:48.585"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:10:50.698" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 16:10:48.592" endtime="20230801 16:10:50.698"/>
</kw>
<status status="PASS" starttime="20230801 16:10:48.585" endtime="20230801 16:10:50.698"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:50.699" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 16:10:50.699" endtime="20230801 16:10:50.699"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:10:51.515" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-6.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-6.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 16:10:51.516" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 16:10:51.516" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 16:10:50.706" endtime="20230801 16:10:51.518"/>
</kw>
<status status="FAIL" starttime="20230801 16:10:50.700" endtime="20230801 16:10:51.519"/>
</kw>
<msg timestamp="20230801 16:10:51.519" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 16:10:50.700" endtime="20230801 16:10:51.519"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:10:51.521" endtime="20230801 16:10:51.522"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:51.520" endtime="20230801 16:10:51.522"/>
</branch>
<status status="PASS" starttime="20230801 16:10:51.520" endtime="20230801 16:10:51.522"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:10:53.452" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 16:10:51.525" endtime="20230801 16:10:53.452"/>
</kw>
<status status="PASS" starttime="20230801 16:10:51.522" endtime="20230801 16:10:53.453"/>
</kw>
<status status="PASS" starttime="20230801 16:10:48.581" endtime="20230801 16:10:53.454"/>
</kw>
<status status="PASS" starttime="20230801 16:10:45.610" endtime="20230801 16:10:53.454"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:53.457" endtime="20230801 16:10:53.667"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:53.670" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:10:53.669" endtime="20230801 16:10:53.670"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:53.704" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:10:53.670" endtime="20230801 16:10:53.704"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:10:53.706" endtime="20230801 16:10:53.707"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:53.705" endtime="20230801 16:10:53.707"/>
</branch>
<status status="PASS" starttime="20230801 16:10:53.705" endtime="20230801 16:10:53.707"/>
</if>
<status status="PASS" starttime="20230801 16:10:53.668" endtime="20230801 16:10:53.708"/>
</kw>
<status status="PASS" starttime="20230801 16:10:53.456" endtime="20230801 16:10:53.708"/>
</kw>
<kw name="And Click &quot;Nhóm&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:53.711" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:10:53.710" endtime="20230801 16:10:53.711"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:53.728" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:10:53.711" endtime="20230801 16:10:53.728"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:10:53.729" endtime="20230801 16:10:53.730"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:53.729" endtime="20230801 16:10:53.730"/>
</branch>
<status status="PASS" starttime="20230801 16:10:53.729" endtime="20230801 16:10:53.730"/>
</if>
<status status="PASS" starttime="20230801 16:10:53.709" endtime="20230801 16:10:53.730"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:53.730" endtime="20230801 16:10:53.951"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:53.952" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:10:53.952" endtime="20230801 16:10:53.952"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:53.972" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:10:53.953" endtime="20230801 16:10:53.972"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:10:54.348" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 16:10:53.976" endtime="20230801 16:10:54.348"/>
</kw>
<status status="PASS" starttime="20230801 16:10:53.974" endtime="20230801 16:10:54.349"/>
</kw>
<status status="PASS" starttime="20230801 16:10:53.973" endtime="20230801 16:10:54.349"/>
</branch>
<status status="PASS" starttime="20230801 16:10:53.973" endtime="20230801 16:10:54.349"/>
</if>
<status status="PASS" starttime="20230801 16:10:53.951" endtime="20230801 16:10:54.349"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:54.352" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:10:54.350" endtime="20230801 16:10:54.352"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:54.368" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:10:54.352" endtime="20230801 16:10:54.368"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:10:55.844" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 16:10:54.374" endtime="20230801 16:10:55.844"/>
</kw>
<status status="PASS" starttime="20230801 16:10:54.370" endtime="20230801 16:10:55.844"/>
</kw>
<status status="PASS" starttime="20230801 16:10:54.369" endtime="20230801 16:10:55.845"/>
</branch>
<status status="PASS" starttime="20230801 16:10:54.368" endtime="20230801 16:10:55.845"/>
</if>
<status status="PASS" starttime="20230801 16:10:54.350" endtime="20230801 16:10:55.845"/>
</kw>
<status status="PASS" starttime="20230801 16:10:53.709" endtime="20230801 16:10:55.846"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:55.848" endtime="20230801 16:10:56.068"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:56.072" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:10:56.069" endtime="20230801 16:10:56.072"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:56.099" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:10:56.072" endtime="20230801 16:10:56.099"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.100" endtime="20230801 16:10:56.100"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.102" endtime="20230801 16:10:56.102"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:56.100" endtime="20230801 16:10:56.102"/>
</branch>
<status status="PASS" starttime="20230801 16:10:56.100" endtime="20230801 16:10:56.103"/>
</if>
<status status="PASS" starttime="20230801 16:10:56.068" endtime="20230801 16:10:56.104"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:10:56.105" endtime="20230801 16:10:56.432"/>
</kw>
<status status="PASS" starttime="20230801 16:10:55.847" endtime="20230801 16:10:56.432"/>
</kw>
<status status="PASS" starttime="20230801 16:10:55.846" endtime="20230801 16:10:56.433"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'edit'">
<kw name="Select team need to edit" library="common" sourcename="Select ${name} need to edit">
<status status="NOT RUN" starttime="20230801 16:10:56.433" endtime="20230801 16:10:56.434"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:56.433" endtime="20230801 16:10:56.434"/>
</branch>
<status status="PASS" starttime="20230801 16:10:55.846" endtime="20230801 16:10:56.434"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:56.436" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:10:56.435" endtime="20230801 16:10:56.436"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:56.446" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:10:56.437" endtime="20230801 16:10:56.446"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:10:56.447" endtime="20230801 16:10:56.447"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:56.447" endtime="20230801 16:10:56.448"/>
</branch>
<status status="PASS" starttime="20230801 16:10:56.446" endtime="20230801 16:10:56.448"/>
</if>
<status status="PASS" starttime="20230801 16:10:56.434" endtime="20230801 16:10:56.448"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 16:10:56.550" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 16:10:56.449" endtime="20230801 16:10:56.550"/>
</kw>
<status status="PASS" starttime="20230801 16:10:45.609" endtime="20230801 16:10:56.550"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Tên Nhóm&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:56.583" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:10:56.582" endtime="20230801 16:10:56.583"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:56.584" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:10:56.584" endtime="20230801 16:10:56.584"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:56.586" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:10:56.585" endtime="20230801 16:10:56.586"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:56.587" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:10:56.588" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:10:56.587" endtime="20230801 16:10:56.588"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:10:56.589" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 16:10:56.588" endtime="20230801 16:10:56.589"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:56.590" level="INFO">Length is 1</msg>
<msg timestamp="20230801 16:10:56.590" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 16:10:56.589" endtime="20230801 16:10:56.590"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.592" endtime="20230801 16:10:56.593"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.593" endtime="20230801 16:10:56.594"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:56.591" endtime="20230801 16:10:56.594"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.595" endtime="20230801 16:10:56.595"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.595" endtime="20230801 16:10:56.596"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.596" endtime="20230801 16:10:56.596"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:56.594" endtime="20230801 16:10:56.596"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.597" endtime="20230801 16:10:56.598"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.598" endtime="20230801 16:10:56.598"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:56.597" endtime="20230801 16:10:56.598"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.599" endtime="20230801 16:10:56.600"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.600" endtime="20230801 16:10:56.600"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:56.599" endtime="20230801 16:10:56.600"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.604" endtime="20230801 16:10:56.604"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.605" endtime="20230801 16:10:56.605"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:56.601" endtime="20230801 16:10:56.605"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.607" endtime="20230801 16:10:56.607"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.608" endtime="20230801 16:10:56.608"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:56.606" endtime="20230801 16:10:56.608"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.610" endtime="20230801 16:10:56.610"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.612" endtime="20230801 16:10:56.612"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:56.609" endtime="20230801 16:10:56.612"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.613" endtime="20230801 16:10:56.613"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:56.612" endtime="20230801 16:10:56.614"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:10:56.615" endtime="20230801 16:10:56.615"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:56.614" endtime="20230801 16:10:56.615"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.616" endtime="20230801 16:10:56.616"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.617" endtime="20230801 16:10:56.617"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:56.615" endtime="20230801 16:10:56.617"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.634" endtime="20230801 16:10:56.634"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:56.618" endtime="20230801 16:10:56.634"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.635" endtime="20230801 16:10:56.635"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:56.634" endtime="20230801 16:10:56.635"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:10:56.638" endtime="20230801 16:10:56.638"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:56.636" endtime="20230801 16:10:56.640"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230801 16:10:56.642" level="INFO">${new_text} = Tenetur enim soluta error.</msg>
<status status="PASS" starttime="20230801 16:10:56.641" endtime="20230801 16:10:56.642"/>
</kw>
<status status="PASS" starttime="20230801 16:10:56.640" endtime="20230801 16:10:56.642"/>
</branch>
<status status="PASS" starttime="20230801 16:10:56.591" endtime="20230801 16:10:56.642"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:56.643" level="INFO">Length is 8</msg>
<msg timestamp="20230801 16:10:56.644" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 16:10:56.643" endtime="20230801 16:10:56.644"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:10:56.646" level="INFO">${text} = Tenetur enim soluta error.</msg>
<status status="PASS" starttime="20230801 16:10:56.645" endtime="20230801 16:10:56.646"/>
</kw>
<status status="PASS" starttime="20230801 16:10:56.644" endtime="20230801 16:10:56.646"/>
</branch>
<status status="PASS" starttime="20230801 16:10:56.644" endtime="20230801 16:10:56.646"/>
</if>
<msg timestamp="20230801 16:10:56.647" level="INFO">${text} = Tenetur enim soluta error.</msg>
<status status="PASS" starttime="20230801 16:10:56.581" endtime="20230801 16:10:56.647"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:10:56.648" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên Nhóm"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:10:56.647" endtime="20230801 16:10:56.648"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:56.649" endtime="20230801 16:10:56.684"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:10:56.685" level="INFO">Fills the text 'Tenetur enim soluta error.' in the given field.</msg>
<status status="PASS" starttime="20230801 16:10:56.684" endtime="20230801 16:10:56.727"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:10:56.728" level="INFO">Length is 26</msg>
<msg timestamp="20230801 16:10:56.728" level="INFO">${cnt} = 26</msg>
<status status="PASS" starttime="20230801 16:10:56.727" endtime="20230801 16:10:56.728"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:10:56.732" level="INFO">${STATE["Tên Nhóm"]} = Tenetur enim soluta error.</msg>
<status status="PASS" starttime="20230801 16:10:56.730" endtime="20230801 16:10:56.733"/>
</kw>
<status status="PASS" starttime="20230801 16:10:56.729" endtime="20230801 16:10:56.733"/>
</branch>
<status status="PASS" starttime="20230801 16:10:56.729" endtime="20230801 16:10:56.733"/>
</if>
<status status="PASS" starttime="20230801 16:10:56.580" endtime="20230801 16:10:56.734"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:10:56.763" endtime="20230801 16:10:57.051"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:10:57.053" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:10:57.052" endtime="20230801 16:10:57.054"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:10:57.071" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:10:57.054" endtime="20230801 16:10:57.071"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:10:57.072" endtime="20230801 16:10:57.073"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:10:57.073" endtime="20230801 16:10:57.074"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:10:57.072" endtime="20230801 16:10:57.074"/>
</branch>
<status status="PASS" starttime="20230801 16:10:57.071" endtime="20230801 16:10:57.074"/>
</if>
<status status="PASS" starttime="20230801 16:10:57.051" endtime="20230801 16:10:57.074"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:10:57.075" endtime="20230801 16:10:57.118"/>
</kw>
<status status="PASS" starttime="20230801 16:10:56.762" endtime="20230801 16:10:57.119"/>
</kw>
<kw name="Then Required message &quot;Quản lý&quot; displayed under &quot;Xin vui lòng chọn quản lý&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230801 16:10:57.132" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230801 16:10:57.131" endtime="20230801 16:10:57.132"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:10:57.151" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230801 16:10:57.134" endtime="20230801 16:10:57.151"/>
</kw>
<status status="PASS" starttime="20230801 16:10:57.132" endtime="20230801 16:10:57.151"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:10:57.209" level="INFO">Text: 'Xin vui lòng chọn quản lý'</msg>
<status status="PASS" starttime="20230801 16:10:57.156" endtime="20230801 16:10:57.209"/>
</kw>
<status status="PASS" starttime="20230801 16:10:57.152" endtime="20230801 16:10:57.210"/>
</kw>
<status status="PASS" starttime="20230801 16:10:57.130" endtime="20230801 16:10:57.210"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 16:10:58.944" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 16:10:57.215" endtime="20230801 16:10:58.944"/>
</kw>
<status status="PASS" starttime="20230801 16:10:57.214" endtime="20230801 16:10:58.944"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230801 16:10:41.931" endtime="20230801 16:10:58.945"/>
</test>
<test id="s1-t7" name="CRT-07 Verify that create team unsuccessfull because no enter &quot;Quản lý&quot; field &amp; &quot;Lưu và tạo mới&quot; button" line="54">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 16:10:58.965" endtime="20230801 16:10:58.966"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 16:10:58.970" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\d014f396-6af5-4438-9b83-8eb12153121e"}</msg>
<msg timestamp="20230801 16:11:00.612" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\d014f396-6af5-4438-9b83-8eb12153121e"}</msg>
<status status="PASS" starttime="20230801 16:10:58.967" endtime="20230801 16:11:00.613"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 16:11:02.690" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 16:11:02.690" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 16:11:00.613" endtime="20230801 16:11:02.692"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 16:11:02.694" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 16:11:02.692" endtime="20230801 16:11:02.694"/>
</kw>
<status status="PASS" starttime="20230801 16:10:58.964" endtime="20230801 16:11:02.694"/>
</kw>
<kw name="When Go to page create team" library="common" sourcename="Go to page ${name} team">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:02.701" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:11:02.701" endtime="20230801 16:11:02.701"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:02.703" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:11:02.702" endtime="20230801 16:11:02.703"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:02.705" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:11:02.704" endtime="20230801 16:11:02.705"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:02.706" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:02.706" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:11:02.706" endtime="20230801 16:11:02.706"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:02.708" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:11:02.707" endtime="20230801 16:11:02.708"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:02.709" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:02.709" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:11:02.708" endtime="20230801 16:11:02.709"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.710" endtime="20230801 16:11:02.712"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.712" endtime="20230801 16:11:02.712"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:02.710" endtime="20230801 16:11:02.713"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.714" endtime="20230801 16:11:02.714"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.714" endtime="20230801 16:11:02.715"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.715" endtime="20230801 16:11:02.715"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:02.713" endtime="20230801 16:11:02.716"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.717" endtime="20230801 16:11:02.717"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.717" endtime="20230801 16:11:02.718"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:02.716" endtime="20230801 16:11:02.718"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.720" endtime="20230801 16:11:02.720"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.721" endtime="20230801 16:11:02.721"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:02.718" endtime="20230801 16:11:02.721"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.722" endtime="20230801 16:11:02.723"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.724" endtime="20230801 16:11:02.724"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:02.722" endtime="20230801 16:11:02.724"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.725" endtime="20230801 16:11:02.726"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.726" endtime="20230801 16:11:02.726"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:02.724" endtime="20230801 16:11:02.727"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.728" endtime="20230801 16:11:02.728"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.729" endtime="20230801 16:11:02.729"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:02.727" endtime="20230801 16:11:02.730"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.731" endtime="20230801 16:11:02.732"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:02.730" endtime="20230801 16:11:02.732"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:11:02.733" endtime="20230801 16:11:02.734"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:02.732" endtime="20230801 16:11:02.734"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.736" endtime="20230801 16:11:02.737"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.738" endtime="20230801 16:11:02.738"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:02.735" endtime="20230801 16:11:02.738"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.740" endtime="20230801 16:11:02.742"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:02.739" endtime="20230801 16:11:02.742"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.744" endtime="20230801 16:11:02.744"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:02.743" endtime="20230801 16:11:02.745"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.746" endtime="20230801 16:11:02.747"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:02.745" endtime="20230801 16:11:02.747"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:02.748" endtime="20230801 16:11:02.748"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:02.747" endtime="20230801 16:11:02.749"/>
</branch>
<status status="PASS" starttime="20230801 16:11:02.710" endtime="20230801 16:11:02.749"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:02.751" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:11:02.751" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:11:02.750" endtime="20230801 16:11:02.751"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:11:02.756" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:11:02.755" endtime="20230801 16:11:02.756"/>
</kw>
<status status="PASS" starttime="20230801 16:11:02.751" endtime="20230801 16:11:02.756"/>
</branch>
<status status="PASS" starttime="20230801 16:11:02.751" endtime="20230801 16:11:02.757"/>
</if>
<msg timestamp="20230801 16:11:02.757" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:11:02.699" endtime="20230801 16:11:02.757"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:11:02.759" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:11:02.758" endtime="20230801 16:11:02.759"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:02.759" endtime="20230801 16:11:05.066"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:11:05.068" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230801 16:11:05.067" endtime="20230801 16:11:05.170"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:05.171" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:11:05.172" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:11:05.171" endtime="20230801 16:11:05.172"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:11:05.174" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:11:05.173" endtime="20230801 16:11:05.175"/>
</kw>
<status status="PASS" starttime="20230801 16:11:05.173" endtime="20230801 16:11:05.175"/>
</branch>
<status status="PASS" starttime="20230801 16:11:05.172" endtime="20230801 16:11:05.175"/>
</if>
<status status="PASS" starttime="20230801 16:11:02.699" endtime="20230801 16:11:05.176"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:05.179" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:11:05.178" endtime="20230801 16:11:05.179"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:05.180" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:11:05.179" endtime="20230801 16:11:05.180"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:05.182" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:11:05.180" endtime="20230801 16:11:05.182"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:05.183" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:05.183" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:11:05.182" endtime="20230801 16:11:05.183"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:05.185" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:11:05.184" endtime="20230801 16:11:05.185"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:05.186" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:05.187" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:11:05.186" endtime="20230801 16:11:05.187"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.188" endtime="20230801 16:11:05.188"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.189" endtime="20230801 16:11:05.189"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:05.187" endtime="20230801 16:11:05.189"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.190" endtime="20230801 16:11:05.190"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.191" endtime="20230801 16:11:05.191"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.191" endtime="20230801 16:11:05.193"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:05.190" endtime="20230801 16:11:05.193"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.194" endtime="20230801 16:11:05.194"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.195" endtime="20230801 16:11:05.195"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:05.193" endtime="20230801 16:11:05.195"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.196" endtime="20230801 16:11:05.197"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.197" endtime="20230801 16:11:05.198"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:05.196" endtime="20230801 16:11:05.198"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.199" endtime="20230801 16:11:05.199"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.200" endtime="20230801 16:11:05.200"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:05.198" endtime="20230801 16:11:05.200"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.201" endtime="20230801 16:11:05.201"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.202" endtime="20230801 16:11:05.202"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:05.200" endtime="20230801 16:11:05.202"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.203" endtime="20230801 16:11:05.204"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.204" endtime="20230801 16:11:05.204"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:05.202" endtime="20230801 16:11:05.206"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.207" endtime="20230801 16:11:05.208"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:05.206" endtime="20230801 16:11:05.208"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:11:05.209" endtime="20230801 16:11:05.209"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:05.208" endtime="20230801 16:11:05.210"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.212" endtime="20230801 16:11:05.212"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.213" endtime="20230801 16:11:05.213"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:05.210" endtime="20230801 16:11:05.213"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.215" endtime="20230801 16:11:05.215"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:05.214" endtime="20230801 16:11:05.215"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.216" endtime="20230801 16:11:05.217"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:05.216" endtime="20230801 16:11:05.217"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.221" endtime="20230801 16:11:05.221"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:05.217" endtime="20230801 16:11:05.221"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.222" endtime="20230801 16:11:05.222"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:05.221" endtime="20230801 16:11:05.222"/>
</branch>
<status status="PASS" starttime="20230801 16:11:05.187" endtime="20230801 16:11:05.222"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:05.223" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:11:05.224" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:11:05.223" endtime="20230801 16:11:05.224"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:11:05.226" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:11:05.225" endtime="20230801 16:11:05.226"/>
</kw>
<status status="PASS" starttime="20230801 16:11:05.224" endtime="20230801 16:11:05.226"/>
</branch>
<status status="PASS" starttime="20230801 16:11:05.224" endtime="20230801 16:11:05.227"/>
</if>
<msg timestamp="20230801 16:11:05.227" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:11:05.177" endtime="20230801 16:11:05.228"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:11:05.229" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:11:05.228" endtime="20230801 16:11:05.229"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:05.230" endtime="20230801 16:11:05.510"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:11:05.512" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230801 16:11:05.512" endtime="20230801 16:11:05.600"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:05.601" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:11:05.601" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:11:05.600" endtime="20230801 16:11:05.601"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:11:05.605" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:11:05.603" endtime="20230801 16:11:05.605"/>
</kw>
<status status="PASS" starttime="20230801 16:11:05.602" endtime="20230801 16:11:05.605"/>
</branch>
<status status="PASS" starttime="20230801 16:11:05.601" endtime="20230801 16:11:05.606"/>
</if>
<status status="PASS" starttime="20230801 16:11:05.176" endtime="20230801 16:11:05.606"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:05.608" endtime="20230801 16:11:05.903"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:05.907" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:11:05.905" endtime="20230801 16:11:05.908"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:05.938" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:05.908" endtime="20230801 16:11:05.939"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.942" endtime="20230801 16:11:05.942"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:11:05.943" endtime="20230801 16:11:05.943"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:05.941" endtime="20230801 16:11:05.944"/>
</branch>
<status status="PASS" starttime="20230801 16:11:05.940" endtime="20230801 16:11:05.944"/>
</if>
<status status="PASS" starttime="20230801 16:11:05.903" endtime="20230801 16:11:05.946"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:11:05.947" endtime="20230801 16:11:06.016"/>
</kw>
<status status="PASS" starttime="20230801 16:11:05.607" endtime="20230801 16:11:06.017"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:06.022" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:11:06.019" endtime="20230801 16:11:06.023"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:06.025" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:06.025" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:11:06.025" endtime="20230801 16:11:06.025"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 16:11:06.026" endtime="20230801 16:11:06.027"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:06.026" endtime="20230801 16:11:06.027"/>
</branch>
<status status="PASS" starttime="20230801 16:11:06.026" endtime="20230801 16:11:06.027"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:11:08.217" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 16:11:06.032" endtime="20230801 16:11:08.218"/>
</kw>
<status status="PASS" starttime="20230801 16:11:06.029" endtime="20230801 16:11:08.218"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:08.220" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 16:11:08.219" endtime="20230801 16:11:08.220"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:11:08.777" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-7.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-7.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 16:11:08.777" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 16:11:08.778" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 16:11:08.224" endtime="20230801 16:11:08.780"/>
</kw>
<status status="FAIL" starttime="20230801 16:11:08.221" endtime="20230801 16:11:08.780"/>
</kw>
<msg timestamp="20230801 16:11:08.782" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 16:11:08.220" endtime="20230801 16:11:08.782"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:11:08.787" endtime="20230801 16:11:08.787"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:08.783" endtime="20230801 16:11:08.787"/>
</branch>
<status status="PASS" starttime="20230801 16:11:08.783" endtime="20230801 16:11:08.788"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:11:11.314" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 16:11:08.791" endtime="20230801 16:11:11.315"/>
</kw>
<status status="PASS" starttime="20230801 16:11:08.788" endtime="20230801 16:11:11.315"/>
</kw>
<status status="PASS" starttime="20230801 16:11:06.017" endtime="20230801 16:11:11.315"/>
</kw>
<status status="PASS" starttime="20230801 16:11:02.698" endtime="20230801 16:11:11.316"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:11.318" endtime="20230801 16:11:11.446"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:11.447" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:11:11.447" endtime="20230801 16:11:11.448"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:11.466" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:11.448" endtime="20230801 16:11:11.466"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:11:11.466" endtime="20230801 16:11:11.467"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:11.466" endtime="20230801 16:11:11.467"/>
</branch>
<status status="PASS" starttime="20230801 16:11:11.466" endtime="20230801 16:11:11.467"/>
</if>
<status status="PASS" starttime="20230801 16:11:11.446" endtime="20230801 16:11:11.467"/>
</kw>
<status status="PASS" starttime="20230801 16:11:11.316" endtime="20230801 16:11:11.467"/>
</kw>
<kw name="And Click &quot;Nhóm&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:11.474" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:11:11.472" endtime="20230801 16:11:11.474"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:11.482" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:11.475" endtime="20230801 16:11:11.482"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:11:11.484" endtime="20230801 16:11:11.484"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:11.484" endtime="20230801 16:11:11.485"/>
</branch>
<status status="PASS" starttime="20230801 16:11:11.482" endtime="20230801 16:11:11.485"/>
</if>
<status status="PASS" starttime="20230801 16:11:11.469" endtime="20230801 16:11:11.486"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:11.487" endtime="20230801 16:11:11.715"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:11.717" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:11:11.716" endtime="20230801 16:11:11.717"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:11.742" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:11:11.718" endtime="20230801 16:11:11.742"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:11:12.045" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 16:11:11.746" endtime="20230801 16:11:12.045"/>
</kw>
<status status="PASS" starttime="20230801 16:11:11.744" endtime="20230801 16:11:12.045"/>
</kw>
<status status="PASS" starttime="20230801 16:11:11.743" endtime="20230801 16:11:12.046"/>
</branch>
<status status="PASS" starttime="20230801 16:11:11.743" endtime="20230801 16:11:12.046"/>
</if>
<status status="PASS" starttime="20230801 16:11:11.715" endtime="20230801 16:11:12.046"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:12.048" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:11:12.048" endtime="20230801 16:11:12.048"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:12.077" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:11:12.049" endtime="20230801 16:11:12.078"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:11:13.539" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 16:11:12.080" endtime="20230801 16:11:13.539"/>
</kw>
<status status="PASS" starttime="20230801 16:11:12.079" endtime="20230801 16:11:13.540"/>
</kw>
<status status="PASS" starttime="20230801 16:11:12.078" endtime="20230801 16:11:13.540"/>
</branch>
<status status="PASS" starttime="20230801 16:11:12.078" endtime="20230801 16:11:13.540"/>
</if>
<status status="PASS" starttime="20230801 16:11:12.047" endtime="20230801 16:11:13.540"/>
</kw>
<status status="PASS" starttime="20230801 16:11:11.468" endtime="20230801 16:11:13.540"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:13.544" endtime="20230801 16:11:13.783"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:13.786" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:11:13.784" endtime="20230801 16:11:13.786"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:13.812" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:13.787" endtime="20230801 16:11:13.812"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:11:13.813" endtime="20230801 16:11:13.814"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:11:13.814" endtime="20230801 16:11:13.814"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:13.813" endtime="20230801 16:11:13.815"/>
</branch>
<status status="PASS" starttime="20230801 16:11:13.812" endtime="20230801 16:11:13.815"/>
</if>
<status status="PASS" starttime="20230801 16:11:13.784" endtime="20230801 16:11:13.815"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:11:13.816" endtime="20230801 16:11:14.084"/>
</kw>
<status status="PASS" starttime="20230801 16:11:13.543" endtime="20230801 16:11:14.084"/>
</kw>
<status status="PASS" starttime="20230801 16:11:13.542" endtime="20230801 16:11:14.084"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'edit'">
<kw name="Select team need to edit" library="common" sourcename="Select ${name} need to edit">
<status status="NOT RUN" starttime="20230801 16:11:14.086" endtime="20230801 16:11:14.086"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:14.085" endtime="20230801 16:11:14.086"/>
</branch>
<status status="PASS" starttime="20230801 16:11:13.542" endtime="20230801 16:11:14.087"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:14.089" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:11:14.088" endtime="20230801 16:11:14.089"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:14.097" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:14.089" endtime="20230801 16:11:14.097"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:11:14.098" endtime="20230801 16:11:14.098"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:14.097" endtime="20230801 16:11:14.098"/>
</branch>
<status status="PASS" starttime="20230801 16:11:14.097" endtime="20230801 16:11:14.098"/>
</if>
<status status="PASS" starttime="20230801 16:11:14.087" endtime="20230801 16:11:14.099"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 16:11:14.200" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 16:11:14.099" endtime="20230801 16:11:14.200"/>
</kw>
<status status="PASS" starttime="20230801 16:11:02.697" endtime="20230801 16:11:14.200"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Tên Nhóm&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:14.206" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:11:14.205" endtime="20230801 16:11:14.206"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:14.207" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:11:14.206" endtime="20230801 16:11:14.207"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:14.209" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:11:14.208" endtime="20230801 16:11:14.209"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:14.210" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:14.210" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:11:14.209" endtime="20230801 16:11:14.210"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:14.212" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 16:11:14.210" endtime="20230801 16:11:14.212"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:14.213" level="INFO">Length is 1</msg>
<msg timestamp="20230801 16:11:14.213" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 16:11:14.212" endtime="20230801 16:11:14.213"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.214" endtime="20230801 16:11:14.215"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.215" endtime="20230801 16:11:14.216"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:14.214" endtime="20230801 16:11:14.216"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.217" endtime="20230801 16:11:14.217"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.218" endtime="20230801 16:11:14.218"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.219" endtime="20230801 16:11:14.219"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:14.216" endtime="20230801 16:11:14.219"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.220" endtime="20230801 16:11:14.221"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.221" endtime="20230801 16:11:14.222"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:14.220" endtime="20230801 16:11:14.222"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.222" endtime="20230801 16:11:14.222"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.223" endtime="20230801 16:11:14.223"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:14.222" endtime="20230801 16:11:14.223"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.225" endtime="20230801 16:11:14.225"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.225" endtime="20230801 16:11:14.226"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:14.224" endtime="20230801 16:11:14.226"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.227" endtime="20230801 16:11:14.227"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.228" endtime="20230801 16:11:14.228"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:14.226" endtime="20230801 16:11:14.229"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.230" endtime="20230801 16:11:14.230"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.231" endtime="20230801 16:11:14.231"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:14.229" endtime="20230801 16:11:14.231"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.232" endtime="20230801 16:11:14.232"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:14.232" endtime="20230801 16:11:14.233"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:11:14.234" endtime="20230801 16:11:14.234"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:14.233" endtime="20230801 16:11:14.235"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.236" endtime="20230801 16:11:14.236"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.237" endtime="20230801 16:11:14.237"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:14.235" endtime="20230801 16:11:14.237"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.239" endtime="20230801 16:11:14.239"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:14.238" endtime="20230801 16:11:14.240"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.244" endtime="20230801 16:11:14.245"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:14.240" endtime="20230801 16:11:14.245"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.246" endtime="20230801 16:11:14.247"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:14.246" endtime="20230801 16:11:14.247"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230801 16:11:14.248" level="INFO">${new_text} = Soluta quas saepe nemo tempora.</msg>
<status status="PASS" starttime="20230801 16:11:14.248" endtime="20230801 16:11:14.248"/>
</kw>
<status status="PASS" starttime="20230801 16:11:14.247" endtime="20230801 16:11:14.249"/>
</branch>
<status status="PASS" starttime="20230801 16:11:14.213" endtime="20230801 16:11:14.249"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:14.250" level="INFO">Length is 8</msg>
<msg timestamp="20230801 16:11:14.250" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 16:11:14.249" endtime="20230801 16:11:14.250"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:11:14.266" level="INFO">${text} = Soluta quas saepe nemo tempora.</msg>
<status status="PASS" starttime="20230801 16:11:14.251" endtime="20230801 16:11:14.267"/>
</kw>
<status status="PASS" starttime="20230801 16:11:14.251" endtime="20230801 16:11:14.267"/>
</branch>
<status status="PASS" starttime="20230801 16:11:14.250" endtime="20230801 16:11:14.268"/>
</if>
<msg timestamp="20230801 16:11:14.274" level="INFO">${text} = Soluta quas saepe nemo tempora.</msg>
<status status="PASS" starttime="20230801 16:11:14.204" endtime="20230801 16:11:14.274"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:11:14.276" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên Nhóm"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:11:14.275" endtime="20230801 16:11:14.276"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:14.276" endtime="20230801 16:11:14.314"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:11:14.315" level="INFO">Fills the text 'Soluta quas saepe nemo tempora.' in the given field.</msg>
<status status="PASS" starttime="20230801 16:11:14.314" endtime="20230801 16:11:14.369"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:14.370" level="INFO">Length is 31</msg>
<msg timestamp="20230801 16:11:14.370" level="INFO">${cnt} = 31</msg>
<status status="PASS" starttime="20230801 16:11:14.370" endtime="20230801 16:11:14.370"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:11:14.372" level="INFO">${STATE["Tên Nhóm"]} = Soluta quas saepe nemo tempora.</msg>
<status status="PASS" starttime="20230801 16:11:14.372" endtime="20230801 16:11:14.372"/>
</kw>
<status status="PASS" starttime="20230801 16:11:14.371" endtime="20230801 16:11:14.373"/>
</branch>
<status status="PASS" starttime="20230801 16:11:14.371" endtime="20230801 16:11:14.373"/>
</if>
<status status="PASS" starttime="20230801 16:11:14.203" endtime="20230801 16:11:14.374"/>
</kw>
<kw name="And Click &quot;Lưu và tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:14.384" endtime="20230801 16:11:14.566"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:14.568" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:11:14.567" endtime="20230801 16:11:14.568"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:14.589" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:14.569" endtime="20230801 16:11:14.589"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.590" endtime="20230801 16:11:14.590"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:11:14.591" endtime="20230801 16:11:14.591"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:14.590" endtime="20230801 16:11:14.591"/>
</branch>
<status status="PASS" starttime="20230801 16:11:14.589" endtime="20230801 16:11:14.591"/>
</if>
<status status="PASS" starttime="20230801 16:11:14.566" endtime="20230801 16:11:14.592"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:11:14.592" endtime="20230801 16:11:14.637"/>
</kw>
<status status="PASS" starttime="20230801 16:11:14.383" endtime="20230801 16:11:14.638"/>
</kw>
<kw name="Then Required message &quot;Quản lý&quot; displayed under &quot;Xin vui lòng chọn quản lý&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230801 16:11:14.642" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230801 16:11:14.640" endtime="20230801 16:11:14.642"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:11:14.688" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230801 16:11:14.645" endtime="20230801 16:11:14.689"/>
</kw>
<status status="PASS" starttime="20230801 16:11:14.642" endtime="20230801 16:11:14.689"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:11:14.753" level="INFO">Text: 'Xin vui lòng chọn quản lý'</msg>
<status status="PASS" starttime="20230801 16:11:14.694" endtime="20230801 16:11:14.753"/>
</kw>
<status status="PASS" starttime="20230801 16:11:14.690" endtime="20230801 16:11:14.754"/>
</kw>
<status status="PASS" starttime="20230801 16:11:14.639" endtime="20230801 16:11:14.755"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 16:11:15.546" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 16:11:14.764" endtime="20230801 16:11:15.546"/>
</kw>
<status status="PASS" starttime="20230801 16:11:14.763" endtime="20230801 16:11:15.547"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230801 16:10:58.958" endtime="20230801 16:11:15.547"/>
</test>
<test id="s1-t8" name="CRT-10 Verify that creating a team successfully with the sanme manager with &quot;Lưu lại&quot; button" line="81">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 16:11:15.565" endtime="20230801 16:11:15.565"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 16:11:15.567" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\a5997fba-dc6c-4e12-8f3e-5fcc082d3768"}</msg>
<msg timestamp="20230801 16:11:16.928" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\a5997fba-dc6c-4e12-8f3e-5fcc082d3768"}</msg>
<status status="PASS" starttime="20230801 16:11:15.566" endtime="20230801 16:11:16.929"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 16:11:18.966" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 16:11:18.966" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 16:11:16.929" endtime="20230801 16:11:18.967"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 16:11:18.970" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 16:11:18.969" endtime="20230801 16:11:18.970"/>
</kw>
<status status="PASS" starttime="20230801 16:11:15.564" endtime="20230801 16:11:18.972"/>
</kw>
<kw name="When Go to page create team" library="common" sourcename="Go to page ${name} team">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:18.980" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:11:18.979" endtime="20230801 16:11:18.980"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:18.981" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:11:18.980" endtime="20230801 16:11:18.981"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:18.982" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:11:18.981" endtime="20230801 16:11:18.982"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:18.983" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:18.983" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:11:18.982" endtime="20230801 16:11:18.983"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:18.987" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:11:18.985" endtime="20230801 16:11:18.988"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:18.989" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:18.989" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:11:18.988" endtime="20230801 16:11:18.989"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:18.990" endtime="20230801 16:11:18.990"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:18.992" endtime="20230801 16:11:18.992"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:18.990" endtime="20230801 16:11:18.992"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:18.994" endtime="20230801 16:11:18.994"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:18.995" endtime="20230801 16:11:18.995"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:18.995" endtime="20230801 16:11:18.996"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:18.993" endtime="20230801 16:11:18.996"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:18.997" endtime="20230801 16:11:18.997"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:18.998" endtime="20230801 16:11:18.999"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:18.996" endtime="20230801 16:11:18.999"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:19.000" endtime="20230801 16:11:19.000"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:19.001" endtime="20230801 16:11:19.002"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:18.999" endtime="20230801 16:11:19.002"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:19.005" endtime="20230801 16:11:19.005"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:19.006" endtime="20230801 16:11:19.006"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:19.002" endtime="20230801 16:11:19.006"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:19.008" endtime="20230801 16:11:19.008"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:19.009" endtime="20230801 16:11:19.009"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:19.007" endtime="20230801 16:11:19.010"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:19.013" endtime="20230801 16:11:19.017"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:19.020" endtime="20230801 16:11:19.021"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:19.010" endtime="20230801 16:11:19.022"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:11:19.023" endtime="20230801 16:11:19.023"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:19.022" endtime="20230801 16:11:19.023"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:11:19.025" endtime="20230801 16:11:19.025"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:19.024" endtime="20230801 16:11:19.025"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:19.027" endtime="20230801 16:11:19.027"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:19.027" endtime="20230801 16:11:19.027"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:19.026" endtime="20230801 16:11:19.029"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:11:19.030" endtime="20230801 16:11:19.030"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:19.029" endtime="20230801 16:11:19.030"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:11:19.031" endtime="20230801 16:11:19.031"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:19.030" endtime="20230801 16:11:19.031"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:19.032" endtime="20230801 16:11:19.032"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:19.031" endtime="20230801 16:11:19.033"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:19.036" endtime="20230801 16:11:19.036"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:19.033" endtime="20230801 16:11:19.037"/>
</branch>
<status status="PASS" starttime="20230801 16:11:18.990" endtime="20230801 16:11:19.037"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:19.038" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:11:19.038" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:11:19.037" endtime="20230801 16:11:19.038"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:11:19.040" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:11:19.039" endtime="20230801 16:11:19.041"/>
</kw>
<status status="PASS" starttime="20230801 16:11:19.039" endtime="20230801 16:11:19.042"/>
</branch>
<status status="PASS" starttime="20230801 16:11:19.038" endtime="20230801 16:11:19.042"/>
</if>
<msg timestamp="20230801 16:11:19.043" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:11:18.978" endtime="20230801 16:11:19.043"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:11:19.044" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:11:19.043" endtime="20230801 16:11:19.045"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:19.045" endtime="20230801 16:11:20.920"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:11:20.922" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230801 16:11:20.920" endtime="20230801 16:11:21.014"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:21.015" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:11:21.015" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:11:21.015" endtime="20230801 16:11:21.015"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:11:21.018" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:11:21.017" endtime="20230801 16:11:21.019"/>
</kw>
<status status="PASS" starttime="20230801 16:11:21.016" endtime="20230801 16:11:21.019"/>
</branch>
<status status="PASS" starttime="20230801 16:11:21.016" endtime="20230801 16:11:21.019"/>
</if>
<status status="PASS" starttime="20230801 16:11:18.977" endtime="20230801 16:11:21.019"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:21.022" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:11:21.021" endtime="20230801 16:11:21.022"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:21.023" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:11:21.023" endtime="20230801 16:11:21.023"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:21.024" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:11:21.024" endtime="20230801 16:11:21.024"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:21.025" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:21.026" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:11:21.025" endtime="20230801 16:11:21.026"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:21.027" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:11:21.026" endtime="20230801 16:11:21.027"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:21.028" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:21.028" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:11:21.027" endtime="20230801 16:11:21.028"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.030" endtime="20230801 16:11:21.030"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.030" endtime="20230801 16:11:21.030"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:21.028" endtime="20230801 16:11:21.032"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.033" endtime="20230801 16:11:21.033"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.034" endtime="20230801 16:11:21.034"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.036" endtime="20230801 16:11:21.036"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:21.032" endtime="20230801 16:11:21.036"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.037" endtime="20230801 16:11:21.038"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.038" endtime="20230801 16:11:21.038"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:21.037" endtime="20230801 16:11:21.039"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.039" endtime="20230801 16:11:21.040"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.040" endtime="20230801 16:11:21.040"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:21.039" endtime="20230801 16:11:21.041"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.042" endtime="20230801 16:11:21.042"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.042" endtime="20230801 16:11:21.043"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:21.041" endtime="20230801 16:11:21.043"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.044" endtime="20230801 16:11:21.044"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.045" endtime="20230801 16:11:21.045"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:21.043" endtime="20230801 16:11:21.045"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.046" endtime="20230801 16:11:21.047"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.047" endtime="20230801 16:11:21.047"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:21.046" endtime="20230801 16:11:21.048"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.049" endtime="20230801 16:11:21.049"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:21.048" endtime="20230801 16:11:21.049"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:11:21.050" endtime="20230801 16:11:21.050"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:21.049" endtime="20230801 16:11:21.050"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.053" endtime="20230801 16:11:21.053"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.054" endtime="20230801 16:11:21.054"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:21.052" endtime="20230801 16:11:21.054"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.055" endtime="20230801 16:11:21.055"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:21.054" endtime="20230801 16:11:21.056"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.057" endtime="20230801 16:11:21.057"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:21.056" endtime="20230801 16:11:21.057"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.058" endtime="20230801 16:11:21.058"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:21.057" endtime="20230801 16:11:21.059"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.060" endtime="20230801 16:11:21.060"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:21.059" endtime="20230801 16:11:21.060"/>
</branch>
<status status="PASS" starttime="20230801 16:11:21.028" endtime="20230801 16:11:21.061"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:21.062" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:11:21.062" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:11:21.061" endtime="20230801 16:11:21.062"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:11:21.064" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:11:21.063" endtime="20230801 16:11:21.065"/>
</kw>
<status status="PASS" starttime="20230801 16:11:21.062" endtime="20230801 16:11:21.065"/>
</branch>
<status status="PASS" starttime="20230801 16:11:21.062" endtime="20230801 16:11:21.066"/>
</if>
<msg timestamp="20230801 16:11:21.066" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:11:21.020" endtime="20230801 16:11:21.067"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:11:21.069" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:11:21.068" endtime="20230801 16:11:21.069"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:21.072" endtime="20230801 16:11:21.238"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:11:21.241" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230801 16:11:21.240" endtime="20230801 16:11:21.320"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:21.322" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:11:21.323" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:11:21.321" endtime="20230801 16:11:21.325"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:11:21.328" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:11:21.326" endtime="20230801 16:11:21.328"/>
</kw>
<status status="PASS" starttime="20230801 16:11:21.325" endtime="20230801 16:11:21.328"/>
</branch>
<status status="PASS" starttime="20230801 16:11:21.325" endtime="20230801 16:11:21.330"/>
</if>
<status status="PASS" starttime="20230801 16:11:21.020" endtime="20230801 16:11:21.330"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:21.332" endtime="20230801 16:11:21.559"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:21.561" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:11:21.561" endtime="20230801 16:11:21.561"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:21.583" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:21.562" endtime="20230801 16:11:21.583"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.587" endtime="20230801 16:11:21.587"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.589" endtime="20230801 16:11:21.590"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:21.583" endtime="20230801 16:11:21.590"/>
</branch>
<status status="PASS" starttime="20230801 16:11:21.583" endtime="20230801 16:11:21.590"/>
</if>
<status status="PASS" starttime="20230801 16:11:21.560" endtime="20230801 16:11:21.592"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:11:21.593" endtime="20230801 16:11:21.657"/>
</kw>
<status status="PASS" starttime="20230801 16:11:21.330" endtime="20230801 16:11:21.658"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:21.660" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:11:21.659" endtime="20230801 16:11:21.660"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:21.661" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:21.661" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:11:21.660" endtime="20230801 16:11:21.661"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 16:11:21.662" endtime="20230801 16:11:21.662"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:21.662" endtime="20230801 16:11:21.663"/>
</branch>
<status status="PASS" starttime="20230801 16:11:21.662" endtime="20230801 16:11:21.663"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:11:24.155" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 16:11:21.666" endtime="20230801 16:11:24.155"/>
</kw>
<status status="PASS" starttime="20230801 16:11:21.663" endtime="20230801 16:11:24.156"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:24.157" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 16:11:24.156" endtime="20230801 16:11:24.157"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:11:24.712" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-8.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-8.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 16:11:24.713" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 16:11:24.713" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 16:11:24.161" endtime="20230801 16:11:24.716"/>
</kw>
<status status="FAIL" starttime="20230801 16:11:24.159" endtime="20230801 16:11:24.717"/>
</kw>
<msg timestamp="20230801 16:11:24.718" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 16:11:24.158" endtime="20230801 16:11:24.718"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:11:24.719" endtime="20230801 16:11:24.720"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:24.719" endtime="20230801 16:11:24.720"/>
</branch>
<status status="PASS" starttime="20230801 16:11:24.718" endtime="20230801 16:11:24.720"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:11:26.150" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 16:11:24.724" endtime="20230801 16:11:26.150"/>
</kw>
<status status="PASS" starttime="20230801 16:11:24.720" endtime="20230801 16:11:26.151"/>
</kw>
<status status="PASS" starttime="20230801 16:11:21.658" endtime="20230801 16:11:26.151"/>
</kw>
<status status="PASS" starttime="20230801 16:11:18.976" endtime="20230801 16:11:26.151"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:26.155" endtime="20230801 16:11:26.278"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:26.279" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:11:26.278" endtime="20230801 16:11:26.279"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:26.291" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:26.279" endtime="20230801 16:11:26.291"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:11:26.292" endtime="20230801 16:11:26.292"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:26.292" endtime="20230801 16:11:26.293"/>
</branch>
<status status="PASS" starttime="20230801 16:11:26.292" endtime="20230801 16:11:26.293"/>
</if>
<status status="PASS" starttime="20230801 16:11:26.278" endtime="20230801 16:11:26.293"/>
</kw>
<status status="PASS" starttime="20230801 16:11:26.153" endtime="20230801 16:11:26.293"/>
</kw>
<kw name="And Click &quot;Nhóm&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:26.295" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:11:26.295" endtime="20230801 16:11:26.295"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:26.304" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:26.295" endtime="20230801 16:11:26.304"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:11:26.307" endtime="20230801 16:11:26.307"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:26.306" endtime="20230801 16:11:26.308"/>
</branch>
<status status="PASS" starttime="20230801 16:11:26.305" endtime="20230801 16:11:26.308"/>
</if>
<status status="PASS" starttime="20230801 16:11:26.294" endtime="20230801 16:11:26.308"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:26.309" endtime="20230801 16:11:26.498"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:26.500" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:11:26.499" endtime="20230801 16:11:26.500"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:26.525" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:11:26.502" endtime="20230801 16:11:26.525"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:11:26.756" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 16:11:26.529" endtime="20230801 16:11:26.756"/>
</kw>
<status status="PASS" starttime="20230801 16:11:26.527" endtime="20230801 16:11:26.757"/>
</kw>
<status status="PASS" starttime="20230801 16:11:26.526" endtime="20230801 16:11:26.757"/>
</branch>
<status status="PASS" starttime="20230801 16:11:26.526" endtime="20230801 16:11:26.757"/>
</if>
<status status="PASS" starttime="20230801 16:11:26.499" endtime="20230801 16:11:26.758"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:26.759" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:11:26.759" endtime="20230801 16:11:26.759"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:26.793" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:11:26.760" endtime="20230801 16:11:26.793"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:11:28.233" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 16:11:26.797" endtime="20230801 16:11:28.235"/>
</kw>
<status status="PASS" starttime="20230801 16:11:26.794" endtime="20230801 16:11:28.236"/>
</kw>
<status status="PASS" starttime="20230801 16:11:26.794" endtime="20230801 16:11:28.236"/>
</branch>
<status status="PASS" starttime="20230801 16:11:26.793" endtime="20230801 16:11:28.237"/>
</if>
<status status="PASS" starttime="20230801 16:11:26.758" endtime="20230801 16:11:28.237"/>
</kw>
<status status="PASS" starttime="20230801 16:11:26.294" endtime="20230801 16:11:28.239"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:28.242" endtime="20230801 16:11:28.414"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:28.416" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:11:28.415" endtime="20230801 16:11:28.416"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:28.434" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:28.416" endtime="20230801 16:11:28.434"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.436" endtime="20230801 16:11:28.436"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.436" endtime="20230801 16:11:28.437"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:28.435" endtime="20230801 16:11:28.437"/>
</branch>
<status status="PASS" starttime="20230801 16:11:28.434" endtime="20230801 16:11:28.437"/>
</if>
<status status="PASS" starttime="20230801 16:11:28.415" endtime="20230801 16:11:28.437"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:11:28.438" endtime="20230801 16:11:28.652"/>
</kw>
<status status="PASS" starttime="20230801 16:11:28.240" endtime="20230801 16:11:28.652"/>
</kw>
<status status="PASS" starttime="20230801 16:11:28.240" endtime="20230801 16:11:28.653"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'edit'">
<kw name="Select team need to edit" library="common" sourcename="Select ${name} need to edit">
<status status="NOT RUN" starttime="20230801 16:11:28.654" endtime="20230801 16:11:28.654"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:28.653" endtime="20230801 16:11:28.654"/>
</branch>
<status status="PASS" starttime="20230801 16:11:28.239" endtime="20230801 16:11:28.655"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:28.656" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:11:28.656" endtime="20230801 16:11:28.657"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:28.668" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:28.657" endtime="20230801 16:11:28.668"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:11:28.670" endtime="20230801 16:11:28.670"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:28.669" endtime="20230801 16:11:28.670"/>
</branch>
<status status="PASS" starttime="20230801 16:11:28.669" endtime="20230801 16:11:28.670"/>
</if>
<status status="PASS" starttime="20230801 16:11:28.655" endtime="20230801 16:11:28.670"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 16:11:28.772" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 16:11:28.672" endtime="20230801 16:11:28.772"/>
</kw>
<status status="PASS" starttime="20230801 16:11:18.975" endtime="20230801 16:11:28.772"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Tên Nhóm&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:28.777" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:11:28.776" endtime="20230801 16:11:28.777"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:28.778" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:11:28.777" endtime="20230801 16:11:28.778"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:28.779" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:11:28.779" endtime="20230801 16:11:28.779"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:28.780" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:28.780" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:11:28.780" endtime="20230801 16:11:28.780"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:28.782" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 16:11:28.782" endtime="20230801 16:11:28.783"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:28.785" level="INFO">Length is 1</msg>
<msg timestamp="20230801 16:11:28.785" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 16:11:28.783" endtime="20230801 16:11:28.785"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.787" endtime="20230801 16:11:28.787"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.788" endtime="20230801 16:11:28.788"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:28.786" endtime="20230801 16:11:28.788"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.789" endtime="20230801 16:11:28.789"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.790" endtime="20230801 16:11:28.790"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.790" endtime="20230801 16:11:28.791"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:28.788" endtime="20230801 16:11:28.791"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.792" endtime="20230801 16:11:28.792"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.792" endtime="20230801 16:11:28.792"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:28.791" endtime="20230801 16:11:28.793"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.794" endtime="20230801 16:11:28.794"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.794" endtime="20230801 16:11:28.795"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:28.793" endtime="20230801 16:11:28.795"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.796" endtime="20230801 16:11:28.796"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.796" endtime="20230801 16:11:28.797"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:28.795" endtime="20230801 16:11:28.797"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.798" endtime="20230801 16:11:28.798"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.798" endtime="20230801 16:11:28.798"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:28.797" endtime="20230801 16:11:28.799"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.799" endtime="20230801 16:11:28.800"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.800" endtime="20230801 16:11:28.802"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:28.799" endtime="20230801 16:11:28.802"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.803" endtime="20230801 16:11:28.804"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:28.802" endtime="20230801 16:11:28.804"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:11:28.805" endtime="20230801 16:11:28.805"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:28.804" endtime="20230801 16:11:28.806"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.807" endtime="20230801 16:11:28.807"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.807" endtime="20230801 16:11:28.808"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:28.806" endtime="20230801 16:11:28.808"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.809" endtime="20230801 16:11:28.809"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:28.808" endtime="20230801 16:11:28.809"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.811" endtime="20230801 16:11:28.811"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:28.810" endtime="20230801 16:11:28.811"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:28.812" endtime="20230801 16:11:28.812"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:28.811" endtime="20230801 16:11:28.812"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230801 16:11:28.815" level="INFO">${new_text} = Consequatur ipsum labore explicabo dolores incidunt corrupti.</msg>
<status status="PASS" starttime="20230801 16:11:28.814" endtime="20230801 16:11:28.815"/>
</kw>
<status status="PASS" starttime="20230801 16:11:28.813" endtime="20230801 16:11:28.815"/>
</branch>
<status status="PASS" starttime="20230801 16:11:28.786" endtime="20230801 16:11:28.815"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:28.816" level="INFO">Length is 8</msg>
<msg timestamp="20230801 16:11:28.816" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 16:11:28.816" endtime="20230801 16:11:28.817"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:11:28.820" level="INFO">${text} = Consequatur ipsum labore explicabo dolores incidunt corrupti.</msg>
<status status="PASS" starttime="20230801 16:11:28.819" endtime="20230801 16:11:28.820"/>
</kw>
<status status="PASS" starttime="20230801 16:11:28.818" endtime="20230801 16:11:28.820"/>
</branch>
<status status="PASS" starttime="20230801 16:11:28.817" endtime="20230801 16:11:28.820"/>
</if>
<msg timestamp="20230801 16:11:28.822" level="INFO">${text} = Consequatur ipsum labore explicabo dolores incidunt corrupti.</msg>
<status status="PASS" starttime="20230801 16:11:28.775" endtime="20230801 16:11:28.822"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:11:28.823" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên Nhóm"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:11:28.822" endtime="20230801 16:11:28.823"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:28.824" endtime="20230801 16:11:28.882"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:11:28.884" level="INFO">Fills the text 'Consequatur ipsum labore explicabo dolores incidunt corrupti.' in the given field.</msg>
<status status="PASS" starttime="20230801 16:11:28.883" endtime="20230801 16:11:29.007"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:29.008" level="INFO">Length is 61</msg>
<msg timestamp="20230801 16:11:29.009" level="INFO">${cnt} = 61</msg>
<status status="PASS" starttime="20230801 16:11:29.008" endtime="20230801 16:11:29.009"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:11:29.012" level="INFO">${STATE["Tên Nhóm"]} = Consequatur ipsum labore explicabo dolores incidunt corrupti.</msg>
<status status="PASS" starttime="20230801 16:11:29.010" endtime="20230801 16:11:29.012"/>
</kw>
<status status="PASS" starttime="20230801 16:11:29.009" endtime="20230801 16:11:29.012"/>
</branch>
<status status="PASS" starttime="20230801 16:11:29.009" endtime="20230801 16:11:29.012"/>
</if>
<status status="PASS" starttime="20230801 16:11:28.774" endtime="20230801 16:11:29.013"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:29.017" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:11:29.016" endtime="20230801 16:11:29.017"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:29.019" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:11:29.018" endtime="20230801 16:11:29.019"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:29.020" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:11:29.019" endtime="20230801 16:11:29.020"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:29.021" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:29.021" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:11:29.020" endtime="20230801 16:11:29.021"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:29.022" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 16:11:29.021" endtime="20230801 16:11:29.022"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:29.023" level="INFO">Length is 1</msg>
<msg timestamp="20230801 16:11:29.023" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 16:11:29.023" endtime="20230801 16:11:29.023"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.024" endtime="20230801 16:11:29.025"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.025" endtime="20230801 16:11:29.026"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.024" endtime="20230801 16:11:29.026"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.027" endtime="20230801 16:11:29.027"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.028" endtime="20230801 16:11:29.028"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.029" endtime="20230801 16:11:29.029"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.026" endtime="20230801 16:11:29.029"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.030" endtime="20230801 16:11:29.030"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.031" endtime="20230801 16:11:29.032"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.029" endtime="20230801 16:11:29.032"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.033" endtime="20230801 16:11:29.033"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.034" endtime="20230801 16:11:29.034"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.032" endtime="20230801 16:11:29.035"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.035" endtime="20230801 16:11:29.036"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.036" endtime="20230801 16:11:29.037"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.035" endtime="20230801 16:11:29.037"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.038" endtime="20230801 16:11:29.038"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.039" endtime="20230801 16:11:29.039"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.037" endtime="20230801 16:11:29.039"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.040" endtime="20230801 16:11:29.041"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.042" endtime="20230801 16:11:29.042"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.039" endtime="20230801 16:11:29.042"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.043" endtime="20230801 16:11:29.044"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.043" endtime="20230801 16:11:29.044"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:11:29.045" endtime="20230801 16:11:29.046"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.044" endtime="20230801 16:11:29.046"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.048" endtime="20230801 16:11:29.048"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.049" endtime="20230801 16:11:29.049"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.047" endtime="20230801 16:11:29.049"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.051" endtime="20230801 16:11:29.051"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.050" endtime="20230801 16:11:29.051"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.053" endtime="20230801 16:11:29.054"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.052" endtime="20230801 16:11:29.054"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.056" endtime="20230801 16:11:29.056"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.054" endtime="20230801 16:11:29.056"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230801 16:11:29.058" level="INFO">${new_text} = Ullam placeat voluptatum.</msg>
<status status="PASS" starttime="20230801 16:11:29.057" endtime="20230801 16:11:29.058"/>
</kw>
<status status="PASS" starttime="20230801 16:11:29.057" endtime="20230801 16:11:29.058"/>
</branch>
<status status="PASS" starttime="20230801 16:11:29.024" endtime="20230801 16:11:29.059"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:29.060" level="INFO">Length is 8</msg>
<msg timestamp="20230801 16:11:29.060" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 16:11:29.059" endtime="20230801 16:11:29.060"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:11:29.062" level="INFO">${text} = Ullam placeat voluptatum.</msg>
<status status="PASS" starttime="20230801 16:11:29.061" endtime="20230801 16:11:29.062"/>
</kw>
<status status="PASS" starttime="20230801 16:11:29.060" endtime="20230801 16:11:29.062"/>
</branch>
<status status="PASS" starttime="20230801 16:11:29.060" endtime="20230801 16:11:29.063"/>
</if>
<msg timestamp="20230801 16:11:29.063" level="INFO">${text} = Ullam placeat voluptatum.</msg>
<status status="PASS" starttime="20230801 16:11:29.015" endtime="20230801 16:11:29.063"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230801 16:11:29.065" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230801 16:11:29.064" endtime="20230801 16:11:29.065"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:29.065" endtime="20230801 16:11:29.146"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:11:29.147" level="INFO">Fills the text 'Ullam placeat voluptatum.' in the given field.</msg>
<status status="PASS" starttime="20230801 16:11:29.146" endtime="20230801 16:11:29.289"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:29.290" level="INFO">Length is 25</msg>
<msg timestamp="20230801 16:11:29.290" level="INFO">${cnt} = 25</msg>
<status status="PASS" starttime="20230801 16:11:29.289" endtime="20230801 16:11:29.290"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:11:29.294" level="INFO">${STATE["Mô tả"]} = Ullam placeat voluptatum.</msg>
<status status="PASS" starttime="20230801 16:11:29.292" endtime="20230801 16:11:29.294"/>
</kw>
<status status="PASS" starttime="20230801 16:11:29.291" endtime="20230801 16:11:29.295"/>
</branch>
<status status="PASS" starttime="20230801 16:11:29.291" endtime="20230801 16:11:29.295"/>
</if>
<status status="PASS" starttime="20230801 16:11:29.014" endtime="20230801 16:11:29.295"/>
</kw>
<kw name="And Click select &quot;Quản lý&quot; with &quot;Hồ Văn Nhật&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:29.304" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:11:29.303" endtime="20230801 16:11:29.304"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:29.305" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:11:29.304" endtime="20230801 16:11:29.305"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:29.306" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:11:29.305" endtime="20230801 16:11:29.306"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:29.307" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:29.307" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:11:29.307" endtime="20230801 16:11:29.307"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:29.309" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:11:29.308" endtime="20230801 16:11:29.309"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:29.310" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:29.310" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:11:29.309" endtime="20230801 16:11:29.310"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.311" endtime="20230801 16:11:29.311"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.311" endtime="20230801 16:11:29.311"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.310" endtime="20230801 16:11:29.312"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.313" endtime="20230801 16:11:29.313"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.313" endtime="20230801 16:11:29.314"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.314" endtime="20230801 16:11:29.314"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.312" endtime="20230801 16:11:29.315"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.315" endtime="20230801 16:11:29.316"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.317" endtime="20230801 16:11:29.317"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.315" endtime="20230801 16:11:29.318"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.319" endtime="20230801 16:11:29.319"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.320" endtime="20230801 16:11:29.320"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.318" endtime="20230801 16:11:29.320"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.322" endtime="20230801 16:11:29.322"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.323" endtime="20230801 16:11:29.323"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.321" endtime="20230801 16:11:29.323"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.324" endtime="20230801 16:11:29.325"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.325" endtime="20230801 16:11:29.326"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.324" endtime="20230801 16:11:29.326"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.327" endtime="20230801 16:11:29.328"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.328" endtime="20230801 16:11:29.329"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.326" endtime="20230801 16:11:29.329"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.330" endtime="20230801 16:11:29.330"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.329" endtime="20230801 16:11:29.330"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:11:29.331" endtime="20230801 16:11:29.331"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.330" endtime="20230801 16:11:29.332"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.333" endtime="20230801 16:11:29.335"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.335" endtime="20230801 16:11:29.336"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.332" endtime="20230801 16:11:29.336"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.337" endtime="20230801 16:11:29.337"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.336" endtime="20230801 16:11:29.337"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.339" endtime="20230801 16:11:29.339"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.338" endtime="20230801 16:11:29.339"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.344" endtime="20230801 16:11:29.345"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.340" endtime="20230801 16:11:29.345"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:29.347" endtime="20230801 16:11:29.348"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:29.346" endtime="20230801 16:11:29.348"/>
</branch>
<status status="PASS" starttime="20230801 16:11:29.310" endtime="20230801 16:11:29.348"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:29.350" level="INFO">Length is 11</msg>
<msg timestamp="20230801 16:11:29.350" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20230801 16:11:29.349" endtime="20230801 16:11:29.350"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:11:29.355" level="INFO">${text} = Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230801 16:11:29.354" endtime="20230801 16:11:29.355"/>
</kw>
<status status="PASS" starttime="20230801 16:11:29.351" endtime="20230801 16:11:29.355"/>
</branch>
<status status="PASS" starttime="20230801 16:11:29.351" endtime="20230801 16:11:29.355"/>
</if>
<msg timestamp="20230801 16:11:29.356" level="INFO">${text} = Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230801 16:11:29.302" endtime="20230801 16:11:29.356"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 16:11:29.358" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 16:11:29.357" endtime="20230801 16:11:29.358"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:11:29.392" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 16:11:29.360" endtime="20230801 16:11:29.393"/>
</kw>
<status status="PASS" starttime="20230801 16:11:29.358" endtime="20230801 16:11:29.393"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:29.393" endtime="20230801 16:11:29.819"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 16:11:29.821" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 16:11:29.819" endtime="20230801 16:11:29.822"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:11:29.823" level="INFO">Fills the text 'Hồ Văn Nhật' in the given field.</msg>
<status status="PASS" starttime="20230801 16:11:29.822" endtime="20230801 16:11:29.959"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:29.960" endtime="20230801 16:11:31.433"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:31.435" level="INFO">Length is 11</msg>
<msg timestamp="20230801 16:11:31.435" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20230801 16:11:31.434" endtime="20230801 16:11:31.435"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:11:31.439" level="INFO">${STATE["Quản lý"]} = Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230801 16:11:31.438" endtime="20230801 16:11:31.439"/>
</kw>
<status status="PASS" starttime="20230801 16:11:31.436" endtime="20230801 16:11:31.439"/>
</branch>
<status status="PASS" starttime="20230801 16:11:31.436" endtime="20230801 16:11:31.440"/>
</if>
<status status="PASS" starttime="20230801 16:11:29.300" endtime="20230801 16:11:31.440"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:31.443" endtime="20230801 16:11:31.726"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:31.728" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:11:31.728" endtime="20230801 16:11:31.728"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:31.741" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:31.729" endtime="20230801 16:11:31.741"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:11:31.744" endtime="20230801 16:11:31.744"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:11:31.744" endtime="20230801 16:11:31.745"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:31.743" endtime="20230801 16:11:31.745"/>
</branch>
<status status="PASS" starttime="20230801 16:11:31.742" endtime="20230801 16:11:31.745"/>
</if>
<status status="PASS" starttime="20230801 16:11:31.727" endtime="20230801 16:11:31.745"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:11:31.746" endtime="20230801 16:11:31.788"/>
</kw>
<status status="PASS" starttime="20230801 16:11:31.442" endtime="20230801 16:11:31.788"/>
</kw>
<kw name="Then User look message &quot;Tạo thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:31.793" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:11:31.792" endtime="20230801 16:11:31.793"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:31.794" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:31.794" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:11:31.793" endtime="20230801 16:11:31.794"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 16:11:31.795" endtime="20230801 16:11:31.796"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:31.795" endtime="20230801 16:11:31.796"/>
</branch>
<status status="PASS" starttime="20230801 16:11:31.794" endtime="20230801 16:11:31.796"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:11:33.550" level="INFO">Text: 'Tạo thành công'</msg>
<status status="PASS" starttime="20230801 16:11:31.800" endtime="20230801 16:11:33.550"/>
</kw>
<status status="PASS" starttime="20230801 16:11:31.796" endtime="20230801 16:11:33.551"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:33.553" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 16:11:33.552" endtime="20230801 16:11:33.553"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:11:34.015" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-9.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-9.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 16:11:34.015" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 16:11:34.015" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 16:11:33.563" endtime="20230801 16:11:34.020"/>
</kw>
<status status="FAIL" starttime="20230801 16:11:33.556" endtime="20230801 16:11:34.020"/>
</kw>
<msg timestamp="20230801 16:11:34.022" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 16:11:33.554" endtime="20230801 16:11:34.022"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:11:34.024" endtime="20230801 16:11:34.024"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:34.023" endtime="20230801 16:11:34.025"/>
</branch>
<status status="PASS" starttime="20230801 16:11:34.023" endtime="20230801 16:11:34.026"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:11:36.549" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 16:11:34.030" endtime="20230801 16:11:36.550"/>
</kw>
<status status="PASS" starttime="20230801 16:11:34.027" endtime="20230801 16:11:36.551"/>
</kw>
<status status="PASS" starttime="20230801 16:11:31.790" endtime="20230801 16:11:36.553"/>
</kw>
<kw name="And User look title &quot;Nhóm&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:36.557" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:11:36.557" endtime="20230801 16:11:36.557"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:36.565" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:36.558" endtime="20230801 16:11:36.565"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:11:36.566" endtime="20230801 16:11:36.566"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:36.565" endtime="20230801 16:11:36.566"/>
</branch>
<status status="PASS" starttime="20230801 16:11:36.565" endtime="20230801 16:11:36.567"/>
</if>
<status status="PASS" starttime="20230801 16:11:36.556" endtime="20230801 16:11:36.568"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:36.570" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:11:36.570" endtime="20230801 16:11:36.570"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:36.582" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:36.571" endtime="20230801 16:11:36.582"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:11:36.584" endtime="20230801 16:11:36.585"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:36.584" endtime="20230801 16:11:36.585"/>
</branch>
<status status="PASS" starttime="20230801 16:11:36.583" endtime="20230801 16:11:36.585"/>
</if>
<status status="PASS" starttime="20230801 16:11:36.569" endtime="20230801 16:11:36.586"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230801 16:11:36.595" level="INFO">Title: 'Nhóm'</msg>
<msg timestamp="20230801 16:11:36.595" level="INFO">${actualTitle} = Nhóm</msg>
<status status="PASS" starttime="20230801 16:11:36.586" endtime="20230801 16:11:36.595"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230801 16:11:36.595" endtime="20230801 16:11:36.596"/>
</kw>
<status status="PASS" starttime="20230801 16:11:36.568" endtime="20230801 16:11:36.596"/>
</kw>
<status status="PASS" starttime="20230801 16:11:36.555" endtime="20230801 16:11:36.596"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;Tên Nhóm&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:36.600" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:11:36.599" endtime="20230801 16:11:36.600"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:36.608" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:36.600" endtime="20230801 16:11:36.608"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:11:36.609" endtime="20230801 16:11:36.609"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:36.609" endtime="20230801 16:11:36.609"/>
</branch>
<status status="PASS" starttime="20230801 16:11:36.608" endtime="20230801 16:11:36.609"/>
</if>
<status status="PASS" starttime="20230801 16:11:36.598" endtime="20230801 16:11:36.609"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 16:11:36.625" level="INFO">Found 3 Locators successfully.</msg>
<msg timestamp="20230801 16:11:36.625" level="INFO">${element} = ['element=032b7841-b24a-4002-95af-dbcb7cb92665', 'element=6be37b4b-9396-4fb7-99d2-b4885265356e', 'element=71d7568c-f2a2-49c7-bb57-95988c1d9a4e']</msg>
<status status="PASS" starttime="20230801 16:11:36.610" endtime="20230801 16:11:36.625"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:36.625" endtime="20230801 16:11:36.854"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:36.856" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:11:36.855" endtime="20230801 16:11:36.856"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:36.893" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:11:36.856" endtime="20230801 16:11:36.893"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:36.894" endtime="20230801 16:11:37.294"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 16:11:37.396" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 16:11:37.295" endtime="20230801 16:11:37.396"/>
</kw>
<status status="PASS" starttime="20230801 16:11:36.894" endtime="20230801 16:11:37.396"/>
</branch>
<status status="PASS" starttime="20230801 16:11:36.893" endtime="20230801 16:11:37.396"/>
</if>
<status status="PASS" starttime="20230801 16:11:36.854" endtime="20230801 16:11:37.397"/>
</kw>
<status status="PASS" starttime="20230801 16:11:36.597" endtime="20230801 16:11:37.397"/>
</kw>
<kw name="Then User look message &quot;Xóa thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:37.408" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:11:37.407" endtime="20230801 16:11:37.408"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:37.409" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:37.409" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:11:37.408" endtime="20230801 16:11:37.409"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 16:11:37.410" endtime="20230801 16:11:37.411"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:37.410" endtime="20230801 16:11:37.411"/>
</branch>
<status status="PASS" starttime="20230801 16:11:37.409" endtime="20230801 16:11:37.411"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:11:38.699" level="INFO">Text: 'Xóa thành công'</msg>
<status status="PASS" starttime="20230801 16:11:37.416" endtime="20230801 16:11:38.700"/>
</kw>
<status status="PASS" starttime="20230801 16:11:37.412" endtime="20230801 16:11:38.700"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:38.704" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 16:11:38.702" endtime="20230801 16:11:38.705"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:11:39.187" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-10.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-10.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 16:11:39.187" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 16:11:39.188" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 16:11:38.709" endtime="20230801 16:11:39.192"/>
</kw>
<status status="FAIL" starttime="20230801 16:11:38.707" endtime="20230801 16:11:39.193"/>
</kw>
<msg timestamp="20230801 16:11:39.193" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 16:11:38.706" endtime="20230801 16:11:39.193"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:11:39.195" endtime="20230801 16:11:39.195"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:39.194" endtime="20230801 16:11:39.195"/>
</branch>
<status status="PASS" starttime="20230801 16:11:39.194" endtime="20230801 16:11:39.195"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:11:41.746" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 16:11:39.198" endtime="20230801 16:11:41.747"/>
</kw>
<status status="PASS" starttime="20230801 16:11:39.196" endtime="20230801 16:11:41.748"/>
</kw>
<status status="PASS" starttime="20230801 16:11:37.406" endtime="20230801 16:11:41.749"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 16:11:42.779" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 16:11:41.767" endtime="20230801 16:11:42.780"/>
</kw>
<status status="PASS" starttime="20230801 16:11:41.765" endtime="20230801 16:11:42.780"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230801 16:11:15.557" endtime="20230801 16:11:42.782"/>
</test>
<test id="s1-t9" name="CRT-11 Verify that creating a team successfully with the same manager with &quot;Lưu và tạo mới&quot; button" line="93">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 16:11:42.800" endtime="20230801 16:11:42.802"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 16:11:42.804" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\558520ca-b143-40ee-8ac3-2f4dc3ffe610"}</msg>
<msg timestamp="20230801 16:11:44.290" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\558520ca-b143-40ee-8ac3-2f4dc3ffe610"}</msg>
<status status="PASS" starttime="20230801 16:11:42.802" endtime="20230801 16:11:44.290"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 16:11:46.190" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 16:11:46.190" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 16:11:44.290" endtime="20230801 16:11:46.191"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 16:11:46.193" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 16:11:46.192" endtime="20230801 16:11:46.193"/>
</kw>
<status status="PASS" starttime="20230801 16:11:42.798" endtime="20230801 16:11:46.194"/>
</kw>
<kw name="When Go to page create team" library="common" sourcename="Go to page ${name} team">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:46.198" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:11:46.198" endtime="20230801 16:11:46.198"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:46.200" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:11:46.200" endtime="20230801 16:11:46.200"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:46.204" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:11:46.202" endtime="20230801 16:11:46.204"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:46.205" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:46.205" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:11:46.204" endtime="20230801 16:11:46.205"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:46.207" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:11:46.206" endtime="20230801 16:11:46.207"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:46.208" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:46.208" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:11:46.207" endtime="20230801 16:11:46.208"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.210" endtime="20230801 16:11:46.210"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.211" endtime="20230801 16:11:46.211"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:46.209" endtime="20230801 16:11:46.211"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.212" endtime="20230801 16:11:46.212"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.213" endtime="20230801 16:11:46.213"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.214" endtime="20230801 16:11:46.214"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:46.212" endtime="20230801 16:11:46.214"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.216" endtime="20230801 16:11:46.217"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.218" endtime="20230801 16:11:46.218"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:46.215" endtime="20230801 16:11:46.218"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.220" endtime="20230801 16:11:46.220"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.220" endtime="20230801 16:11:46.220"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:46.219" endtime="20230801 16:11:46.220"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.222" endtime="20230801 16:11:46.223"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.223" endtime="20230801 16:11:46.224"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:46.222" endtime="20230801 16:11:46.224"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.225" endtime="20230801 16:11:46.225"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.226" endtime="20230801 16:11:46.227"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:46.224" endtime="20230801 16:11:46.227"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.228" endtime="20230801 16:11:46.228"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.228" endtime="20230801 16:11:46.228"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:46.227" endtime="20230801 16:11:46.229"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.229" endtime="20230801 16:11:46.229"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:46.229" endtime="20230801 16:11:46.230"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:11:46.230" endtime="20230801 16:11:46.230"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:46.230" endtime="20230801 16:11:46.230"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.231" endtime="20230801 16:11:46.232"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.232" endtime="20230801 16:11:46.234"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:46.231" endtime="20230801 16:11:46.234"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.235" endtime="20230801 16:11:46.236"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:46.234" endtime="20230801 16:11:46.236"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.237" endtime="20230801 16:11:46.237"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:46.236" endtime="20230801 16:11:46.237"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.239" endtime="20230801 16:11:46.239"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:46.239" endtime="20230801 16:11:46.240"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:46.240" endtime="20230801 16:11:46.240"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:46.240" endtime="20230801 16:11:46.240"/>
</branch>
<status status="PASS" starttime="20230801 16:11:46.208" endtime="20230801 16:11:46.241"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:46.242" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:11:46.242" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:11:46.241" endtime="20230801 16:11:46.242"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:11:46.244" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:11:46.243" endtime="20230801 16:11:46.244"/>
</kw>
<status status="PASS" starttime="20230801 16:11:46.242" endtime="20230801 16:11:46.244"/>
</branch>
<status status="PASS" starttime="20230801 16:11:46.242" endtime="20230801 16:11:46.245"/>
</if>
<msg timestamp="20230801 16:11:46.245" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:11:46.197" endtime="20230801 16:11:46.245"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:11:46.247" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:11:46.246" endtime="20230801 16:11:46.247"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:46.248" endtime="20230801 16:11:47.874"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:11:47.875" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230801 16:11:47.874" endtime="20230801 16:11:47.941"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:47.942" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:11:47.943" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:11:47.942" endtime="20230801 16:11:47.943"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:11:47.945" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:11:47.944" endtime="20230801 16:11:47.945"/>
</kw>
<status status="PASS" starttime="20230801 16:11:47.943" endtime="20230801 16:11:47.945"/>
</branch>
<status status="PASS" starttime="20230801 16:11:47.943" endtime="20230801 16:11:47.945"/>
</if>
<status status="PASS" starttime="20230801 16:11:46.197" endtime="20230801 16:11:47.946"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:47.949" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:11:47.948" endtime="20230801 16:11:47.949"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:47.950" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:11:47.950" endtime="20230801 16:11:47.950"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:47.952" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:11:47.951" endtime="20230801 16:11:47.952"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:47.953" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:47.953" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:11:47.953" endtime="20230801 16:11:47.953"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:47.955" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:11:47.954" endtime="20230801 16:11:47.955"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:47.956" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:47.957" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:11:47.956" endtime="20230801 16:11:47.957"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.958" endtime="20230801 16:11:47.958"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.959" endtime="20230801 16:11:47.959"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:47.957" endtime="20230801 16:11:47.959"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.960" endtime="20230801 16:11:47.960"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.961" endtime="20230801 16:11:47.962"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.962" endtime="20230801 16:11:47.963"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:47.959" endtime="20230801 16:11:47.963"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.964" endtime="20230801 16:11:47.964"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.964" endtime="20230801 16:11:47.965"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:47.963" endtime="20230801 16:11:47.965"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.967" endtime="20230801 16:11:47.967"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.968" endtime="20230801 16:11:47.968"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:47.966" endtime="20230801 16:11:47.969"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.970" endtime="20230801 16:11:47.970"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.970" endtime="20230801 16:11:47.970"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:47.969" endtime="20230801 16:11:47.972"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.973" endtime="20230801 16:11:47.973"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.974" endtime="20230801 16:11:47.974"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:47.972" endtime="20230801 16:11:47.974"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.975" endtime="20230801 16:11:47.975"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.976" endtime="20230801 16:11:47.977"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:47.974" endtime="20230801 16:11:47.977"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.979" endtime="20230801 16:11:47.979"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:47.978" endtime="20230801 16:11:47.979"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:11:47.980" endtime="20230801 16:11:47.980"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:47.979" endtime="20230801 16:11:47.981"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.981" endtime="20230801 16:11:47.982"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.983" endtime="20230801 16:11:47.983"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:47.981" endtime="20230801 16:11:47.984"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.985" endtime="20230801 16:11:47.985"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:47.984" endtime="20230801 16:11:47.985"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.986" endtime="20230801 16:11:47.986"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:47.985" endtime="20230801 16:11:47.987"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.988" endtime="20230801 16:11:47.988"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:47.987" endtime="20230801 16:11:47.988"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:47.989" endtime="20230801 16:11:47.989"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:47.989" endtime="20230801 16:11:47.990"/>
</branch>
<status status="PASS" starttime="20230801 16:11:47.957" endtime="20230801 16:11:47.990"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:47.992" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:11:47.992" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:11:47.990" endtime="20230801 16:11:47.992"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:11:47.994" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:11:47.993" endtime="20230801 16:11:47.994"/>
</kw>
<status status="PASS" starttime="20230801 16:11:47.992" endtime="20230801 16:11:47.994"/>
</branch>
<status status="PASS" starttime="20230801 16:11:47.992" endtime="20230801 16:11:47.995"/>
</if>
<msg timestamp="20230801 16:11:47.995" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:11:47.947" endtime="20230801 16:11:47.995"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:11:47.997" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:11:47.996" endtime="20230801 16:11:47.997"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:47.998" endtime="20230801 16:11:48.114"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:11:48.115" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230801 16:11:48.114" endtime="20230801 16:11:48.205"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:48.206" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:11:48.206" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:11:48.205" endtime="20230801 16:11:48.206"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:11:48.210" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:11:48.209" endtime="20230801 16:11:48.211"/>
</kw>
<status status="PASS" starttime="20230801 16:11:48.207" endtime="20230801 16:11:48.211"/>
</branch>
<status status="PASS" starttime="20230801 16:11:48.207" endtime="20230801 16:11:48.212"/>
</if>
<status status="PASS" starttime="20230801 16:11:47.946" endtime="20230801 16:11:48.212"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:48.214" endtime="20230801 16:11:48.504"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:48.506" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:11:48.505" endtime="20230801 16:11:48.506"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:48.520" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:48.507" endtime="20230801 16:11:48.521"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:11:48.523" endtime="20230801 16:11:48.524"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:11:48.525" endtime="20230801 16:11:48.525"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:48.522" endtime="20230801 16:11:48.525"/>
</branch>
<status status="PASS" starttime="20230801 16:11:48.522" endtime="20230801 16:11:48.526"/>
</if>
<status status="PASS" starttime="20230801 16:11:48.504" endtime="20230801 16:11:48.526"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:11:48.526" endtime="20230801 16:11:48.582"/>
</kw>
<status status="PASS" starttime="20230801 16:11:48.213" endtime="20230801 16:11:48.583"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:48.589" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:11:48.588" endtime="20230801 16:11:48.589"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:48.590" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:48.590" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:11:48.590" endtime="20230801 16:11:48.590"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 16:11:48.590" endtime="20230801 16:11:48.592"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:48.590" endtime="20230801 16:11:48.592"/>
</branch>
<status status="PASS" starttime="20230801 16:11:48.590" endtime="20230801 16:11:48.592"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:11:49.792" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 16:11:48.596" endtime="20230801 16:11:49.792"/>
</kw>
<status status="PASS" starttime="20230801 16:11:48.592" endtime="20230801 16:11:49.792"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:49.793" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 16:11:49.792" endtime="20230801 16:11:49.793"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:11:50.730" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-11.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-11.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 16:11:50.730" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 16:11:50.731" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 16:11:49.795" endtime="20230801 16:11:50.735"/>
</kw>
<status status="FAIL" starttime="20230801 16:11:49.793" endtime="20230801 16:11:50.736"/>
</kw>
<msg timestamp="20230801 16:11:50.736" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 16:11:49.793" endtime="20230801 16:11:50.736"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:11:50.737" endtime="20230801 16:11:50.739"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:50.737" endtime="20230801 16:11:50.739"/>
</branch>
<status status="PASS" starttime="20230801 16:11:50.737" endtime="20230801 16:11:50.739"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:11:52.835" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 16:11:50.742" endtime="20230801 16:11:52.835"/>
</kw>
<status status="PASS" starttime="20230801 16:11:50.740" endtime="20230801 16:11:52.836"/>
</kw>
<status status="PASS" starttime="20230801 16:11:48.584" endtime="20230801 16:11:52.836"/>
</kw>
<status status="PASS" starttime="20230801 16:11:46.196" endtime="20230801 16:11:52.837"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:52.838" endtime="20230801 16:11:52.965"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:52.970" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:11:52.969" endtime="20230801 16:11:52.970"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:53.026" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:52.970" endtime="20230801 16:11:53.026"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:11:53.028" endtime="20230801 16:11:53.028"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:53.027" endtime="20230801 16:11:53.028"/>
</branch>
<status status="PASS" starttime="20230801 16:11:53.027" endtime="20230801 16:11:53.028"/>
</if>
<status status="PASS" starttime="20230801 16:11:52.966" endtime="20230801 16:11:53.029"/>
</kw>
<status status="PASS" starttime="20230801 16:11:52.837" endtime="20230801 16:11:53.029"/>
</kw>
<kw name="And Click &quot;Nhóm&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:53.036" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:11:53.034" endtime="20230801 16:11:53.036"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:53.070" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:53.037" endtime="20230801 16:11:53.070"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:11:53.071" endtime="20230801 16:11:53.071"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:53.070" endtime="20230801 16:11:53.071"/>
</branch>
<status status="PASS" starttime="20230801 16:11:53.070" endtime="20230801 16:11:53.073"/>
</if>
<status status="PASS" starttime="20230801 16:11:53.030" endtime="20230801 16:11:53.073"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:53.074" endtime="20230801 16:11:53.284"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:53.287" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:11:53.287" endtime="20230801 16:11:53.288"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:53.307" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:11:53.288" endtime="20230801 16:11:53.307"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:11:53.479" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 16:11:53.310" endtime="20230801 16:11:53.479"/>
</kw>
<status status="PASS" starttime="20230801 16:11:53.308" endtime="20230801 16:11:53.479"/>
</kw>
<status status="PASS" starttime="20230801 16:11:53.308" endtime="20230801 16:11:53.480"/>
</branch>
<status status="PASS" starttime="20230801 16:11:53.308" endtime="20230801 16:11:53.480"/>
</if>
<status status="PASS" starttime="20230801 16:11:53.285" endtime="20230801 16:11:53.480"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:53.484" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:11:53.483" endtime="20230801 16:11:53.484"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:53.533" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:11:53.486" endtime="20230801 16:11:53.533"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:11:55.574" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 16:11:53.538" endtime="20230801 16:11:55.575"/>
</kw>
<status status="PASS" starttime="20230801 16:11:53.535" endtime="20230801 16:11:55.575"/>
</kw>
<status status="PASS" starttime="20230801 16:11:53.535" endtime="20230801 16:11:55.575"/>
</branch>
<status status="PASS" starttime="20230801 16:11:53.534" endtime="20230801 16:11:55.575"/>
</if>
<status status="PASS" starttime="20230801 16:11:53.480" endtime="20230801 16:11:55.575"/>
</kw>
<status status="PASS" starttime="20230801 16:11:53.030" endtime="20230801 16:11:55.576"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:55.577" endtime="20230801 16:11:55.704"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:55.706" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:11:55.705" endtime="20230801 16:11:55.707"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:55.722" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:55.708" endtime="20230801 16:11:55.722"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:11:55.724" endtime="20230801 16:11:55.724"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:11:55.724" endtime="20230801 16:11:55.724"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:55.723" endtime="20230801 16:11:55.725"/>
</branch>
<status status="PASS" starttime="20230801 16:11:55.722" endtime="20230801 16:11:55.725"/>
</if>
<status status="PASS" starttime="20230801 16:11:55.704" endtime="20230801 16:11:55.726"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:11:55.726" endtime="20230801 16:11:55.960"/>
</kw>
<status status="PASS" starttime="20230801 16:11:55.576" endtime="20230801 16:11:55.960"/>
</kw>
<status status="PASS" starttime="20230801 16:11:55.576" endtime="20230801 16:11:55.960"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'edit'">
<kw name="Select team need to edit" library="common" sourcename="Select ${name} need to edit">
<status status="NOT RUN" starttime="20230801 16:11:55.962" endtime="20230801 16:11:55.962"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:55.962" endtime="20230801 16:11:55.963"/>
</branch>
<status status="PASS" starttime="20230801 16:11:55.576" endtime="20230801 16:11:55.963"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:55.965" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:11:55.964" endtime="20230801 16:11:55.966"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:55.979" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:55.967" endtime="20230801 16:11:55.979"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:11:55.980" endtime="20230801 16:11:55.980"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:55.980" endtime="20230801 16:11:55.982"/>
</branch>
<status status="PASS" starttime="20230801 16:11:55.980" endtime="20230801 16:11:55.983"/>
</if>
<status status="PASS" starttime="20230801 16:11:55.963" endtime="20230801 16:11:55.984"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 16:11:56.085" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 16:11:55.984" endtime="20230801 16:11:56.085"/>
</kw>
<status status="PASS" starttime="20230801 16:11:46.196" endtime="20230801 16:11:56.085"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Tên Nhóm&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:56.089" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:11:56.088" endtime="20230801 16:11:56.089"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:56.090" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:11:56.089" endtime="20230801 16:11:56.090"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:56.092" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:11:56.090" endtime="20230801 16:11:56.092"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:56.093" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:56.093" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:11:56.092" endtime="20230801 16:11:56.093"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:56.094" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 16:11:56.094" endtime="20230801 16:11:56.094"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:56.095" level="INFO">Length is 1</msg>
<msg timestamp="20230801 16:11:56.095" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 16:11:56.095" endtime="20230801 16:11:56.095"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.097" endtime="20230801 16:11:56.097"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.097" endtime="20230801 16:11:56.098"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.096" endtime="20230801 16:11:56.098"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.099" endtime="20230801 16:11:56.099"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.100" endtime="20230801 16:11:56.101"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.101" endtime="20230801 16:11:56.101"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.098" endtime="20230801 16:11:56.102"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.103" endtime="20230801 16:11:56.103"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.103" endtime="20230801 16:11:56.104"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.102" endtime="20230801 16:11:56.104"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.104" endtime="20230801 16:11:56.104"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.105" endtime="20230801 16:11:56.105"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.104" endtime="20230801 16:11:56.105"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.105" endtime="20230801 16:11:56.106"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.106" endtime="20230801 16:11:56.106"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.105" endtime="20230801 16:11:56.106"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.106" endtime="20230801 16:11:56.107"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.107" endtime="20230801 16:11:56.107"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.106" endtime="20230801 16:11:56.107"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.108" endtime="20230801 16:11:56.108"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.108" endtime="20230801 16:11:56.108"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.107" endtime="20230801 16:11:56.108"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.109" endtime="20230801 16:11:56.109"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.109" endtime="20230801 16:11:56.109"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:11:56.110" endtime="20230801 16:11:56.110"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.109" endtime="20230801 16:11:56.110"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.110" endtime="20230801 16:11:56.110"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.112" endtime="20230801 16:11:56.112"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.110" endtime="20230801 16:11:56.112"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.113" endtime="20230801 16:11:56.113"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.112" endtime="20230801 16:11:56.113"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.114" endtime="20230801 16:11:56.114"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.113" endtime="20230801 16:11:56.114"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.115" endtime="20230801 16:11:56.116"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.114" endtime="20230801 16:11:56.116"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230801 16:11:56.118" level="INFO">${new_text} = Iusto maxime expedita tenetur assumenda.</msg>
<status status="PASS" starttime="20230801 16:11:56.117" endtime="20230801 16:11:56.118"/>
</kw>
<status status="PASS" starttime="20230801 16:11:56.116" endtime="20230801 16:11:56.118"/>
</branch>
<status status="PASS" starttime="20230801 16:11:56.096" endtime="20230801 16:11:56.118"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:56.119" level="INFO">Length is 8</msg>
<msg timestamp="20230801 16:11:56.120" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 16:11:56.119" endtime="20230801 16:11:56.120"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:11:56.121" level="INFO">${text} = Iusto maxime expedita tenetur assumenda.</msg>
<status status="PASS" starttime="20230801 16:11:56.121" endtime="20230801 16:11:56.122"/>
</kw>
<status status="PASS" starttime="20230801 16:11:56.120" endtime="20230801 16:11:56.122"/>
</branch>
<status status="PASS" starttime="20230801 16:11:56.120" endtime="20230801 16:11:56.122"/>
</if>
<msg timestamp="20230801 16:11:56.122" level="INFO">${text} = Iusto maxime expedita tenetur assumenda.</msg>
<status status="PASS" starttime="20230801 16:11:56.087" endtime="20230801 16:11:56.122"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:11:56.124" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên Nhóm"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:11:56.122" endtime="20230801 16:11:56.124"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:56.124" endtime="20230801 16:11:56.157"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:11:56.158" level="INFO">Fills the text 'Iusto maxime expedita tenetur assumenda.' in the given field.</msg>
<status status="PASS" starttime="20230801 16:11:56.157" endtime="20230801 16:11:56.200"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:56.202" level="INFO">Length is 40</msg>
<msg timestamp="20230801 16:11:56.202" level="INFO">${cnt} = 40</msg>
<status status="PASS" starttime="20230801 16:11:56.201" endtime="20230801 16:11:56.202"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:11:56.204" level="INFO">${STATE["Tên Nhóm"]} = Iusto maxime expedita tenetur assumenda.</msg>
<status status="PASS" starttime="20230801 16:11:56.203" endtime="20230801 16:11:56.204"/>
</kw>
<status status="PASS" starttime="20230801 16:11:56.202" endtime="20230801 16:11:56.204"/>
</branch>
<status status="PASS" starttime="20230801 16:11:56.202" endtime="20230801 16:11:56.205"/>
</if>
<status status="PASS" starttime="20230801 16:11:56.086" endtime="20230801 16:11:56.205"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:56.209" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:11:56.208" endtime="20230801 16:11:56.209"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:56.210" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:11:56.209" endtime="20230801 16:11:56.210"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:56.211" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:11:56.210" endtime="20230801 16:11:56.211"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:56.212" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:56.213" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:11:56.212" endtime="20230801 16:11:56.213"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:56.214" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 16:11:56.213" endtime="20230801 16:11:56.214"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:56.216" level="INFO">Length is 1</msg>
<msg timestamp="20230801 16:11:56.216" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 16:11:56.214" endtime="20230801 16:11:56.216"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.218" endtime="20230801 16:11:56.218"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.219" endtime="20230801 16:11:56.219"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.217" endtime="20230801 16:11:56.219"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.219" endtime="20230801 16:11:56.220"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.220" endtime="20230801 16:11:56.220"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.223" endtime="20230801 16:11:56.224"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.219" endtime="20230801 16:11:56.224"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.226" endtime="20230801 16:11:56.226"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.227" endtime="20230801 16:11:56.227"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.225" endtime="20230801 16:11:56.227"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.228" endtime="20230801 16:11:56.229"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.229" endtime="20230801 16:11:56.229"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.227" endtime="20230801 16:11:56.230"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.231" endtime="20230801 16:11:56.231"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.231" endtime="20230801 16:11:56.232"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.230" endtime="20230801 16:11:56.233"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.236" endtime="20230801 16:11:56.237"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.238" endtime="20230801 16:11:56.238"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.234" endtime="20230801 16:11:56.238"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.239" endtime="20230801 16:11:56.239"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.239" endtime="20230801 16:11:56.239"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.238" endtime="20230801 16:11:56.240"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.240" endtime="20230801 16:11:56.240"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.240" endtime="20230801 16:11:56.240"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:11:56.241" endtime="20230801 16:11:56.242"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.241" endtime="20230801 16:11:56.242"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.243" endtime="20230801 16:11:56.243"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.243" endtime="20230801 16:11:56.243"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.242" endtime="20230801 16:11:56.244"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.244" endtime="20230801 16:11:56.244"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.244" endtime="20230801 16:11:56.244"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.245" endtime="20230801 16:11:56.245"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.245" endtime="20230801 16:11:56.245"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.246" endtime="20230801 16:11:56.246"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.246" endtime="20230801 16:11:56.246"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230801 16:11:56.247" level="INFO">${new_text} = Eius numquam odit nobis ex.</msg>
<status status="PASS" starttime="20230801 16:11:56.247" endtime="20230801 16:11:56.247"/>
</kw>
<status status="PASS" starttime="20230801 16:11:56.246" endtime="20230801 16:11:56.247"/>
</branch>
<status status="PASS" starttime="20230801 16:11:56.216" endtime="20230801 16:11:56.248"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:56.248" level="INFO">Length is 8</msg>
<msg timestamp="20230801 16:11:56.252" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 16:11:56.248" endtime="20230801 16:11:56.252"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:11:56.254" level="INFO">${text} = Eius numquam odit nobis ex.</msg>
<status status="PASS" starttime="20230801 16:11:56.253" endtime="20230801 16:11:56.254"/>
</kw>
<status status="PASS" starttime="20230801 16:11:56.252" endtime="20230801 16:11:56.254"/>
</branch>
<status status="PASS" starttime="20230801 16:11:56.252" endtime="20230801 16:11:56.255"/>
</if>
<msg timestamp="20230801 16:11:56.255" level="INFO">${text} = Eius numquam odit nobis ex.</msg>
<status status="PASS" starttime="20230801 16:11:56.207" endtime="20230801 16:11:56.255"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230801 16:11:56.257" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230801 16:11:56.256" endtime="20230801 16:11:56.257"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:56.258" endtime="20230801 16:11:56.329"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:11:56.330" level="INFO">Fills the text 'Eius numquam odit nobis ex.' in the given field.</msg>
<status status="PASS" starttime="20230801 16:11:56.330" endtime="20230801 16:11:56.371"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:56.372" level="INFO">Length is 27</msg>
<msg timestamp="20230801 16:11:56.372" level="INFO">${cnt} = 27</msg>
<status status="PASS" starttime="20230801 16:11:56.372" endtime="20230801 16:11:56.372"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:11:56.374" level="INFO">${STATE["Mô tả"]} = Eius numquam odit nobis ex.</msg>
<status status="PASS" starttime="20230801 16:11:56.373" endtime="20230801 16:11:56.374"/>
</kw>
<status status="PASS" starttime="20230801 16:11:56.372" endtime="20230801 16:11:56.374"/>
</branch>
<status status="PASS" starttime="20230801 16:11:56.372" endtime="20230801 16:11:56.375"/>
</if>
<status status="PASS" starttime="20230801 16:11:56.206" endtime="20230801 16:11:56.375"/>
</kw>
<kw name="And Click select &quot;Quản lý&quot; with &quot;Hồ Văn Nhật&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:56.377" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:11:56.377" endtime="20230801 16:11:56.377"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:56.378" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:11:56.378" endtime="20230801 16:11:56.378"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:56.379" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:11:56.378" endtime="20230801 16:11:56.379"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:56.379" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:56.379" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:11:56.379" endtime="20230801 16:11:56.379"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:56.380" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:11:56.380" endtime="20230801 16:11:56.380"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:56.380" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:56.380" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:11:56.380" endtime="20230801 16:11:56.380"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.383" endtime="20230801 16:11:56.384"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.385" endtime="20230801 16:11:56.385"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.382" endtime="20230801 16:11:56.386"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.387" endtime="20230801 16:11:56.387"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.387" endtime="20230801 16:11:56.388"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.388" endtime="20230801 16:11:56.388"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.386" endtime="20230801 16:11:56.389"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.389" endtime="20230801 16:11:56.390"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.390" endtime="20230801 16:11:56.390"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.389" endtime="20230801 16:11:56.391"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.391" endtime="20230801 16:11:56.392"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.392" endtime="20230801 16:11:56.392"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.391" endtime="20230801 16:11:56.392"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.393" endtime="20230801 16:11:56.393"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.394" endtime="20230801 16:11:56.394"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.392" endtime="20230801 16:11:56.394"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.395" endtime="20230801 16:11:56.395"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.396" endtime="20230801 16:11:56.396"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.394" endtime="20230801 16:11:56.396"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.397" endtime="20230801 16:11:56.397"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.397" endtime="20230801 16:11:56.398"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.396" endtime="20230801 16:11:56.399"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.400" endtime="20230801 16:11:56.400"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.399" endtime="20230801 16:11:56.400"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:11:56.402" endtime="20230801 16:11:56.402"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.400" endtime="20230801 16:11:56.402"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.403" endtime="20230801 16:11:56.403"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.403" endtime="20230801 16:11:56.403"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.403" endtime="20230801 16:11:56.404"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.404" endtime="20230801 16:11:56.404"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.404" endtime="20230801 16:11:56.404"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.405" endtime="20230801 16:11:56.405"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.405" endtime="20230801 16:11:56.405"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.406" endtime="20230801 16:11:56.406"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.405" endtime="20230801 16:11:56.406"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:11:56.406" endtime="20230801 16:11:56.406"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:56.406" endtime="20230801 16:11:56.407"/>
</branch>
<status status="PASS" starttime="20230801 16:11:56.380" endtime="20230801 16:11:56.407"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:56.407" level="INFO">Length is 11</msg>
<msg timestamp="20230801 16:11:56.407" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20230801 16:11:56.407" endtime="20230801 16:11:56.407"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:11:56.409" level="INFO">${text} = Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230801 16:11:56.408" endtime="20230801 16:11:56.409"/>
</kw>
<status status="PASS" starttime="20230801 16:11:56.408" endtime="20230801 16:11:56.409"/>
</branch>
<status status="PASS" starttime="20230801 16:11:56.408" endtime="20230801 16:11:56.409"/>
</if>
<msg timestamp="20230801 16:11:56.409" level="INFO">${text} = Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230801 16:11:56.376" endtime="20230801 16:11:56.409"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 16:11:56.410" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 16:11:56.409" endtime="20230801 16:11:56.410"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:11:56.423" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 16:11:56.411" endtime="20230801 16:11:56.423"/>
</kw>
<status status="PASS" starttime="20230801 16:11:56.410" endtime="20230801 16:11:56.424"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:56.424" endtime="20230801 16:11:56.567"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 16:11:56.570" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 16:11:56.568" endtime="20230801 16:11:56.570"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:11:56.572" level="INFO">Fills the text 'Hồ Văn Nhật' in the given field.</msg>
<status status="PASS" starttime="20230801 16:11:56.570" endtime="20230801 16:11:56.661"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:56.662" endtime="20230801 16:11:58.174"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:58.174" level="INFO">Length is 11</msg>
<msg timestamp="20230801 16:11:58.174" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20230801 16:11:58.174" endtime="20230801 16:11:58.174"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:11:58.176" level="INFO">${STATE["Quản lý"]} = Hồ Văn Nhật</msg>
<status status="PASS" starttime="20230801 16:11:58.175" endtime="20230801 16:11:58.176"/>
</kw>
<status status="PASS" starttime="20230801 16:11:58.175" endtime="20230801 16:11:58.176"/>
</branch>
<status status="PASS" starttime="20230801 16:11:58.175" endtime="20230801 16:11:58.176"/>
</if>
<status status="PASS" starttime="20230801 16:11:56.376" endtime="20230801 16:11:58.176"/>
</kw>
<kw name="And Click &quot;Lưu và tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:11:58.178" endtime="20230801 16:11:58.406"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:58.408" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:11:58.407" endtime="20230801 16:11:58.408"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:11:58.426" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:11:58.408" endtime="20230801 16:11:58.426"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:11:58.427" endtime="20230801 16:11:58.427"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:11:58.427" endtime="20230801 16:11:58.428"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:58.427" endtime="20230801 16:11:58.428"/>
</branch>
<status status="PASS" starttime="20230801 16:11:58.426" endtime="20230801 16:11:58.428"/>
</if>
<status status="PASS" starttime="20230801 16:11:58.406" endtime="20230801 16:11:58.428"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:11:58.428" endtime="20230801 16:11:58.479"/>
</kw>
<status status="PASS" starttime="20230801 16:11:58.177" endtime="20230801 16:11:58.479"/>
</kw>
<kw name="Then User look message &quot;Tạo thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:11:58.484" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:11:58.482" endtime="20230801 16:11:58.484"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:11:58.486" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:11:58.487" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:11:58.485" endtime="20230801 16:11:58.487"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 16:11:58.488" endtime="20230801 16:11:58.488"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:11:58.487" endtime="20230801 16:11:58.488"/>
</branch>
<status status="PASS" starttime="20230801 16:11:58.487" endtime="20230801 16:11:58.489"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:11:59.944" level="INFO">Text: 'Tạo thành công'</msg>
<status status="PASS" starttime="20230801 16:11:58.492" endtime="20230801 16:11:59.944"/>
</kw>
<status status="PASS" starttime="20230801 16:11:58.489" endtime="20230801 16:11:59.945"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:11:59.945" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 16:11:59.945" endtime="20230801 16:11:59.945"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:12:00.492" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-12.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-12.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 16:12:00.493" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 16:12:00.493" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 16:11:59.947" endtime="20230801 16:12:00.496"/>
</kw>
<status status="FAIL" starttime="20230801 16:11:59.946" endtime="20230801 16:12:00.497"/>
</kw>
<msg timestamp="20230801 16:12:00.497" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 16:11:59.946" endtime="20230801 16:12:00.497"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:12:00.500" endtime="20230801 16:12:00.500"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:00.498" endtime="20230801 16:12:00.500"/>
</branch>
<status status="PASS" starttime="20230801 16:12:00.498" endtime="20230801 16:12:00.501"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:12:02.972" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 16:12:00.503" endtime="20230801 16:12:02.972"/>
</kw>
<status status="PASS" starttime="20230801 16:12:00.501" endtime="20230801 16:12:02.974"/>
</kw>
<status status="PASS" starttime="20230801 16:11:58.480" endtime="20230801 16:12:02.975"/>
</kw>
<kw name="And User look title &quot;Thêm mới nhóm&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:02.978" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:12:02.978" endtime="20230801 16:12:02.978"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:12:02.988" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:12:02.979" endtime="20230801 16:12:02.988"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:12:02.988" endtime="20230801 16:12:02.988"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:02.988" endtime="20230801 16:12:02.989"/>
</branch>
<status status="PASS" starttime="20230801 16:12:02.988" endtime="20230801 16:12:02.989"/>
</if>
<status status="PASS" starttime="20230801 16:12:02.977" endtime="20230801 16:12:02.989"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:02.990" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:12:02.990" endtime="20230801 16:12:02.990"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:12:02.999" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:12:02.990" endtime="20230801 16:12:02.999"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:12:03.000" endtime="20230801 16:12:03.000"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:03.000" endtime="20230801 16:12:03.000"/>
</branch>
<status status="PASS" starttime="20230801 16:12:03.000" endtime="20230801 16:12:03.001"/>
</if>
<status status="PASS" starttime="20230801 16:12:02.989" endtime="20230801 16:12:03.001"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230801 16:12:03.008" level="INFO">Title: 'Thêm mới nhóm'</msg>
<msg timestamp="20230801 16:12:03.008" level="INFO">${actualTitle} = Thêm mới nhóm</msg>
<status status="PASS" starttime="20230801 16:12:03.001" endtime="20230801 16:12:03.008"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230801 16:12:03.009" endtime="20230801 16:12:03.010"/>
</kw>
<status status="PASS" starttime="20230801 16:12:02.989" endtime="20230801 16:12:03.010"/>
</kw>
<status status="PASS" starttime="20230801 16:12:02.976" endtime="20230801 16:12:03.011"/>
</kw>
<kw name="And User look all field empty when create team" library="common" sourcename="User look all field empty when ${name} team">
<kw name="User look &quot;Tên Nhóm&quot; field empty" library="common" sourcename="User look &quot;${name}&quot; field empty">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:12:03.025" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên Nhóm"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:12:03.024" endtime="20230801 16:12:03.025"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${EMPTY}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:12:03.063" level="INFO">Text: ''</msg>
<status status="PASS" starttime="20230801 16:12:03.032" endtime="20230801 16:12:03.063"/>
</kw>
<status status="PASS" starttime="20230801 16:12:03.026" endtime="20230801 16:12:03.063"/>
</kw>
<status status="PASS" starttime="20230801 16:12:03.023" endtime="20230801 16:12:03.064"/>
</kw>
<kw name="User look textarea &quot;Mô tả&quot; field empty" library="common" sourcename="User look textarea &quot;${name}&quot; field empty">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230801 16:12:03.067" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230801 16:12:03.066" endtime="20230801 16:12:03.067"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${EMPTY}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:12:03.100" level="INFO">Text: ''</msg>
<status status="PASS" starttime="20230801 16:12:03.072" endtime="20230801 16:12:03.102"/>
</kw>
<status status="PASS" starttime="20230801 16:12:03.067" endtime="20230801 16:12:03.102"/>
</kw>
<status status="PASS" starttime="20230801 16:12:03.065" endtime="20230801 16:12:03.102"/>
</kw>
<kw name="User look select &quot;Quản lý&quot; field empty" library="common" sourcename="User look select &quot;${name}&quot; field empty">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 16:12:03.105" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 16:12:03.104" endtime="20230801 16:12:03.105"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${EMPTY}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:12:03.138" level="INFO">Text: ''</msg>
<status status="PASS" starttime="20230801 16:12:03.109" endtime="20230801 16:12:03.138"/>
</kw>
<status status="PASS" starttime="20230801 16:12:03.105" endtime="20230801 16:12:03.138"/>
</kw>
<status status="PASS" starttime="20230801 16:12:03.103" endtime="20230801 16:12:03.139"/>
</kw>
<status status="PASS" starttime="20230801 16:12:03.022" endtime="20230801 16:12:03.139"/>
</kw>
<kw name="And Click &quot;Huỷ bỏ&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:12:03.142" endtime="20230801 16:12:03.633"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:03.636" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:12:03.635" endtime="20230801 16:12:03.636"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:12:03.671" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:12:03.636" endtime="20230801 16:12:03.671"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:12:03.672" endtime="20230801 16:12:03.672"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:12:03.673" endtime="20230801 16:12:03.673"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:03.671" endtime="20230801 16:12:03.673"/>
</branch>
<status status="PASS" starttime="20230801 16:12:03.671" endtime="20230801 16:12:03.673"/>
</if>
<status status="PASS" starttime="20230801 16:12:03.634" endtime="20230801 16:12:03.674"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:12:03.674" endtime="20230801 16:12:03.712"/>
</kw>
<status status="PASS" starttime="20230801 16:12:03.140" endtime="20230801 16:12:03.712"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;Tên Nhóm&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:03.716" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:12:03.716" endtime="20230801 16:12:03.716"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:12:03.725" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:12:03.717" endtime="20230801 16:12:03.725"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:12:05.128" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 16:12:03.727" endtime="20230801 16:12:05.128"/>
</kw>
<status status="PASS" starttime="20230801 16:12:03.725" endtime="20230801 16:12:05.129"/>
</kw>
<status status="PASS" starttime="20230801 16:12:03.725" endtime="20230801 16:12:05.129"/>
</branch>
<status status="PASS" starttime="20230801 16:12:03.725" endtime="20230801 16:12:05.129"/>
</if>
<status status="PASS" starttime="20230801 16:12:03.714" endtime="20230801 16:12:05.129"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 16:12:05.152" level="INFO">Found 3 Locators successfully.</msg>
<msg timestamp="20230801 16:12:05.153" level="INFO">${element} = ['element=f7904610-6b9b-48b5-9c00-6f292b4d135b', 'element=fa8502fb-f1de-4837-b060-91019f3b6c83', 'element=d20d97ff-6628-494a-9de8-09c450e4f13b']</msg>
<status status="PASS" starttime="20230801 16:12:05.130" endtime="20230801 16:12:05.153"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:12:05.153" endtime="20230801 16:12:05.409"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:05.410" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:12:05.410" endtime="20230801 16:12:05.410"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:12:05.432" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:12:05.412" endtime="20230801 16:12:05.432"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:12:05.435" endtime="20230801 16:12:05.809"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 16:12:05.910" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 16:12:05.810" endtime="20230801 16:12:05.910"/>
</kw>
<status status="PASS" starttime="20230801 16:12:05.433" endtime="20230801 16:12:05.910"/>
</branch>
<status status="PASS" starttime="20230801 16:12:05.433" endtime="20230801 16:12:05.910"/>
</if>
<status status="PASS" starttime="20230801 16:12:05.409" endtime="20230801 16:12:05.911"/>
</kw>
<status status="PASS" starttime="20230801 16:12:03.713" endtime="20230801 16:12:05.912"/>
</kw>
<kw name="Then User look message &quot;Xóa thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:12:05.923" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:12:05.923" endtime="20230801 16:12:05.923"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:05.924" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:12:05.925" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:12:05.924" endtime="20230801 16:12:05.925"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 16:12:05.926" endtime="20230801 16:12:05.926"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:05.925" endtime="20230801 16:12:05.927"/>
</branch>
<status status="PASS" starttime="20230801 16:12:05.925" endtime="20230801 16:12:05.927"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:12:07.246" level="INFO">Text: 'Xóa thành công'</msg>
<status status="PASS" starttime="20230801 16:12:05.930" endtime="20230801 16:12:07.246"/>
</kw>
<status status="PASS" starttime="20230801 16:12:05.927" endtime="20230801 16:12:07.247"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:07.249" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 16:12:07.248" endtime="20230801 16:12:07.249"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:12:07.725" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-13.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-13.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 16:12:07.726" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 16:12:07.726" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 16:12:07.255" endtime="20230801 16:12:07.732"/>
</kw>
<status status="FAIL" starttime="20230801 16:12:07.252" endtime="20230801 16:12:07.732"/>
</kw>
<msg timestamp="20230801 16:12:07.733" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 16:12:07.250" endtime="20230801 16:12:07.733"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:12:07.735" endtime="20230801 16:12:07.736"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:07.734" endtime="20230801 16:12:07.736"/>
</branch>
<status status="PASS" starttime="20230801 16:12:07.733" endtime="20230801 16:12:07.736"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:12:10.292" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 16:12:07.740" endtime="20230801 16:12:10.293"/>
</kw>
<status status="PASS" starttime="20230801 16:12:07.737" endtime="20230801 16:12:10.293"/>
</kw>
<status status="PASS" starttime="20230801 16:12:05.920" endtime="20230801 16:12:10.294"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 16:12:11.196" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 16:12:10.310" endtime="20230801 16:12:11.196"/>
</kw>
<status status="PASS" starttime="20230801 16:12:10.309" endtime="20230801 16:12:11.196"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230801 16:11:42.793" endtime="20230801 16:12:11.197"/>
</test>
<test id="s1-t10" name="CRT-12 Verify that create new team is successful when create team with another manager &amp; &quot;Lưu lại&quot; button" line="107">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 16:12:11.213" endtime="20230801 16:12:11.215"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 16:12:11.217" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\6217742d-9e1c-4c5e-92fb-c262d6a51634"}</msg>
<msg timestamp="20230801 16:12:12.536" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\6217742d-9e1c-4c5e-92fb-c262d6a51634"}</msg>
<status status="PASS" starttime="20230801 16:12:11.215" endtime="20230801 16:12:12.537"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 16:12:14.291" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 16:12:14.291" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 16:12:12.537" endtime="20230801 16:12:14.292"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 16:12:14.295" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 16:12:14.293" endtime="20230801 16:12:14.295"/>
</kw>
<status status="PASS" starttime="20230801 16:12:11.212" endtime="20230801 16:12:14.295"/>
</kw>
<kw name="When Go to page create team" library="common" sourcename="Go to page ${name} team">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:14.303" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:12:14.303" endtime="20230801 16:12:14.303"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:14.305" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:12:14.304" endtime="20230801 16:12:14.306"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:12:14.308" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:12:14.307" endtime="20230801 16:12:14.308"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:14.309" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:12:14.310" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:12:14.308" endtime="20230801 16:12:14.310"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:12:14.312" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:12:14.311" endtime="20230801 16:12:14.312"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:14.315" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:12:14.315" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:12:14.313" endtime="20230801 16:12:14.315"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.318" endtime="20230801 16:12:14.318"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.319" endtime="20230801 16:12:14.319"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:14.316" endtime="20230801 16:12:14.319"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.320" endtime="20230801 16:12:14.320"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.322" endtime="20230801 16:12:14.322"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.323" endtime="20230801 16:12:14.323"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:14.319" endtime="20230801 16:12:14.323"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.324" endtime="20230801 16:12:14.325"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.325" endtime="20230801 16:12:14.325"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:14.324" endtime="20230801 16:12:14.326"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.327" endtime="20230801 16:12:14.327"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.328" endtime="20230801 16:12:14.329"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:14.326" endtime="20230801 16:12:14.329"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.330" endtime="20230801 16:12:14.330"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.332" endtime="20230801 16:12:14.334"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:14.329" endtime="20230801 16:12:14.334"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.336" endtime="20230801 16:12:14.336"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.337" endtime="20230801 16:12:14.337"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:14.335" endtime="20230801 16:12:14.337"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.339" endtime="20230801 16:12:14.339"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.339" endtime="20230801 16:12:14.340"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:14.338" endtime="20230801 16:12:14.340"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.342" endtime="20230801 16:12:14.342"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:14.340" endtime="20230801 16:12:14.342"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:12:14.343" endtime="20230801 16:12:14.343"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:14.342" endtime="20230801 16:12:14.344"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.345" endtime="20230801 16:12:14.345"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.345" endtime="20230801 16:12:14.346"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:14.344" endtime="20230801 16:12:14.346"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.347" endtime="20230801 16:12:14.349"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:14.346" endtime="20230801 16:12:14.349"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.350" endtime="20230801 16:12:14.350"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:14.350" endtime="20230801 16:12:14.352"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.353" endtime="20230801 16:12:14.353"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:14.352" endtime="20230801 16:12:14.353"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:12:14.354" endtime="20230801 16:12:14.355"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:14.354" endtime="20230801 16:12:14.355"/>
</branch>
<status status="PASS" starttime="20230801 16:12:14.316" endtime="20230801 16:12:14.355"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:14.356" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:12:14.357" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:12:14.356" endtime="20230801 16:12:14.357"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:12:14.359" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:12:14.358" endtime="20230801 16:12:14.359"/>
</kw>
<status status="PASS" starttime="20230801 16:12:14.357" endtime="20230801 16:12:14.360"/>
</branch>
<status status="PASS" starttime="20230801 16:12:14.357" endtime="20230801 16:12:14.360"/>
</if>
<msg timestamp="20230801 16:12:14.361" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:12:14.300" endtime="20230801 16:12:14.361"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:12:14.362" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:12:14.362" endtime="20230801 16:12:14.362"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:12:14.364" endtime="20230801 16:12:16.294"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:12:16.296" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230801 16:12:16.295" endtime="20230801 16:12:16.356"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:16.357" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:12:16.357" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:12:16.356" endtime="20230801 16:12:16.357"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:12:16.359" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:12:16.358" endtime="20230801 16:12:16.360"/>
</kw>
<status status="PASS" starttime="20230801 16:12:16.358" endtime="20230801 16:12:16.360"/>
</branch>
<status status="PASS" starttime="20230801 16:12:16.357" endtime="20230801 16:12:16.360"/>
</if>
<status status="PASS" starttime="20230801 16:12:14.299" endtime="20230801 16:12:16.360"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:16.365" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:12:16.364" endtime="20230801 16:12:16.365"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:16.366" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:12:16.366" endtime="20230801 16:12:16.366"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:12:16.368" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:12:16.367" endtime="20230801 16:12:16.368"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:16.369" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:12:16.369" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:12:16.368" endtime="20230801 16:12:16.369"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:12:16.371" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:12:16.370" endtime="20230801 16:12:16.371"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:16.372" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:12:16.372" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:12:16.371" endtime="20230801 16:12:16.372"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.373" endtime="20230801 16:12:16.373"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.374" endtime="20230801 16:12:16.374"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:16.372" endtime="20230801 16:12:16.374"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.375" endtime="20230801 16:12:16.375"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.376" endtime="20230801 16:12:16.376"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.376" endtime="20230801 16:12:16.377"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:16.374" endtime="20230801 16:12:16.377"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.378" endtime="20230801 16:12:16.378"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.378" endtime="20230801 16:12:16.379"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:16.377" endtime="20230801 16:12:16.379"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.380" endtime="20230801 16:12:16.382"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.382" endtime="20230801 16:12:16.383"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:16.379" endtime="20230801 16:12:16.383"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.384" endtime="20230801 16:12:16.384"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.385" endtime="20230801 16:12:16.385"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:16.383" endtime="20230801 16:12:16.385"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.386" endtime="20230801 16:12:16.386"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.387" endtime="20230801 16:12:16.387"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:16.385" endtime="20230801 16:12:16.387"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.388" endtime="20230801 16:12:16.388"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.389" endtime="20230801 16:12:16.389"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:16.388" endtime="20230801 16:12:16.389"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.390" endtime="20230801 16:12:16.390"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:16.389" endtime="20230801 16:12:16.390"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:12:16.391" endtime="20230801 16:12:16.391"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:16.390" endtime="20230801 16:12:16.391"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.392" endtime="20230801 16:12:16.392"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.392" endtime="20230801 16:12:16.392"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:16.391" endtime="20230801 16:12:16.392"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.393" endtime="20230801 16:12:16.393"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:16.393" endtime="20230801 16:12:16.393"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.394" endtime="20230801 16:12:16.394"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:16.394" endtime="20230801 16:12:16.395"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.396" endtime="20230801 16:12:16.396"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:16.395" endtime="20230801 16:12:16.397"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.398" endtime="20230801 16:12:16.399"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:16.398" endtime="20230801 16:12:16.399"/>
</branch>
<status status="PASS" starttime="20230801 16:12:16.372" endtime="20230801 16:12:16.399"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:16.400" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:12:16.400" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:12:16.400" endtime="20230801 16:12:16.400"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:12:16.402" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:12:16.400" endtime="20230801 16:12:16.402"/>
</kw>
<status status="PASS" starttime="20230801 16:12:16.400" endtime="20230801 16:12:16.402"/>
</branch>
<status status="PASS" starttime="20230801 16:12:16.400" endtime="20230801 16:12:16.403"/>
</if>
<msg timestamp="20230801 16:12:16.403" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:12:16.362" endtime="20230801 16:12:16.403"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:12:16.405" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:12:16.404" endtime="20230801 16:12:16.405"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:12:16.405" endtime="20230801 16:12:16.503"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:12:16.505" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230801 16:12:16.504" endtime="20230801 16:12:16.590"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:16.591" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:12:16.592" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:12:16.591" endtime="20230801 16:12:16.592"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:12:16.594" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:12:16.593" endtime="20230801 16:12:16.594"/>
</kw>
<status status="PASS" starttime="20230801 16:12:16.592" endtime="20230801 16:12:16.594"/>
</branch>
<status status="PASS" starttime="20230801 16:12:16.592" endtime="20230801 16:12:16.595"/>
</if>
<status status="PASS" starttime="20230801 16:12:16.360" endtime="20230801 16:12:16.595"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:12:16.598" endtime="20230801 16:12:16.821"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:16.822" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:12:16.822" endtime="20230801 16:12:16.823"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:12:16.844" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:12:16.823" endtime="20230801 16:12:16.844"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.846" endtime="20230801 16:12:16.846"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.847" endtime="20230801 16:12:16.848"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:16.844" endtime="20230801 16:12:16.848"/>
</branch>
<status status="PASS" starttime="20230801 16:12:16.844" endtime="20230801 16:12:16.849"/>
</if>
<status status="PASS" starttime="20230801 16:12:16.821" endtime="20230801 16:12:16.849"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:12:16.850" endtime="20230801 16:12:16.912"/>
</kw>
<status status="PASS" starttime="20230801 16:12:16.595" endtime="20230801 16:12:16.913"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:12:16.918" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:12:16.916" endtime="20230801 16:12:16.918"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:16.921" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:12:16.921" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:12:16.920" endtime="20230801 16:12:16.921"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 16:12:16.922" endtime="20230801 16:12:16.922"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:16.921" endtime="20230801 16:12:16.922"/>
</branch>
<status status="PASS" starttime="20230801 16:12:16.921" endtime="20230801 16:12:16.923"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:12:18.637" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 16:12:16.925" endtime="20230801 16:12:18.637"/>
</kw>
<status status="PASS" starttime="20230801 16:12:16.923" endtime="20230801 16:12:18.637"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:18.638" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 16:12:18.638" endtime="20230801 16:12:18.638"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:12:19.278" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-14.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-14.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 16:12:19.278" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 16:12:19.279" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 16:12:18.642" endtime="20230801 16:12:19.286"/>
</kw>
<status status="FAIL" starttime="20230801 16:12:18.639" endtime="20230801 16:12:19.287"/>
</kw>
<msg timestamp="20230801 16:12:19.287" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 16:12:18.639" endtime="20230801 16:12:19.287"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:12:19.288" endtime="20230801 16:12:19.288"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:19.287" endtime="20230801 16:12:19.288"/>
</branch>
<status status="PASS" starttime="20230801 16:12:19.287" endtime="20230801 16:12:19.288"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:12:21.250" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 16:12:19.290" endtime="20230801 16:12:21.250"/>
</kw>
<status status="PASS" starttime="20230801 16:12:19.288" endtime="20230801 16:12:21.250"/>
</kw>
<status status="PASS" starttime="20230801 16:12:16.914" endtime="20230801 16:12:21.252"/>
</kw>
<status status="PASS" starttime="20230801 16:12:14.298" endtime="20230801 16:12:21.252"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:12:21.254" endtime="20230801 16:12:21.376"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:21.378" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:12:21.378" endtime="20230801 16:12:21.379"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:12:21.393" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:12:21.380" endtime="20230801 16:12:21.393"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:12:21.394" endtime="20230801 16:12:21.394"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:21.393" endtime="20230801 16:12:21.394"/>
</branch>
<status status="PASS" starttime="20230801 16:12:21.393" endtime="20230801 16:12:21.394"/>
</if>
<status status="PASS" starttime="20230801 16:12:21.377" endtime="20230801 16:12:21.394"/>
</kw>
<status status="PASS" starttime="20230801 16:12:21.253" endtime="20230801 16:12:21.395"/>
</kw>
<kw name="And Click &quot;Nhóm&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:21.398" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:12:21.397" endtime="20230801 16:12:21.398"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:12:21.410" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:12:21.399" endtime="20230801 16:12:21.410"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:12:21.410" endtime="20230801 16:12:21.410"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:21.410" endtime="20230801 16:12:21.411"/>
</branch>
<status status="PASS" starttime="20230801 16:12:21.410" endtime="20230801 16:12:21.411"/>
</if>
<status status="PASS" starttime="20230801 16:12:21.395" endtime="20230801 16:12:21.411"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:12:21.412" endtime="20230801 16:12:21.592"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:21.595" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:12:21.594" endtime="20230801 16:12:21.595"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:12:21.670" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:12:21.595" endtime="20230801 16:12:21.670"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:12:21.671" endtime="20230801 16:12:21.671"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:21.670" endtime="20230801 16:12:21.671"/>
</branch>
<status status="PASS" starttime="20230801 16:12:21.670" endtime="20230801 16:12:21.672"/>
</if>
<status status="PASS" starttime="20230801 16:12:21.593" endtime="20230801 16:12:21.672"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:21.673" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:12:21.673" endtime="20230801 16:12:21.674"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:12:21.837" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:12:21.674" endtime="20230801 16:12:21.837"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:12:21.839" endtime="20230801 16:12:21.839"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:21.838" endtime="20230801 16:12:21.840"/>
</branch>
<status status="PASS" starttime="20230801 16:12:21.838" endtime="20230801 16:12:21.840"/>
</if>
<status status="PASS" starttime="20230801 16:12:21.672" endtime="20230801 16:12:21.840"/>
</kw>
<status status="PASS" starttime="20230801 16:12:21.395" endtime="20230801 16:12:21.840"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:12:21.844" endtime="20230801 16:12:22.072"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:22.074" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:12:22.073" endtime="20230801 16:12:22.074"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:12:22.091" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:12:22.074" endtime="20230801 16:12:22.091"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:12:22.093" endtime="20230801 16:12:22.093"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:12:22.094" endtime="20230801 16:12:22.094"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:22.091" endtime="20230801 16:12:22.094"/>
</branch>
<status status="PASS" starttime="20230801 16:12:22.091" endtime="20230801 16:12:22.095"/>
</if>
<status status="PASS" starttime="20230801 16:12:22.072" endtime="20230801 16:12:22.095"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:12:22.095" endtime="20230801 16:12:22.459"/>
</kw>
<status status="PASS" starttime="20230801 16:12:21.843" endtime="20230801 16:12:22.460"/>
</kw>
<status status="PASS" starttime="20230801 16:12:21.842" endtime="20230801 16:12:22.460"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'edit'">
<kw name="Select team need to edit" library="common" sourcename="Select ${name} need to edit">
<status status="NOT RUN" starttime="20230801 16:12:22.461" endtime="20230801 16:12:22.461"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:22.460" endtime="20230801 16:12:22.461"/>
</branch>
<status status="PASS" starttime="20230801 16:12:21.840" endtime="20230801 16:12:22.461"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:22.464" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:12:22.463" endtime="20230801 16:12:22.464"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:12:22.474" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:12:22.464" endtime="20230801 16:12:22.474"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:12:23.326" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 16:12:22.477" endtime="20230801 16:12:23.326"/>
</kw>
<status status="PASS" starttime="20230801 16:12:22.475" endtime="20230801 16:12:23.326"/>
</kw>
<status status="PASS" starttime="20230801 16:12:22.474" endtime="20230801 16:12:23.327"/>
</branch>
<status status="PASS" starttime="20230801 16:12:22.474" endtime="20230801 16:12:23.327"/>
</if>
<status status="PASS" starttime="20230801 16:12:22.462" endtime="20230801 16:12:23.327"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 16:12:23.428" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 16:12:23.328" endtime="20230801 16:12:23.428"/>
</kw>
<status status="PASS" starttime="20230801 16:12:14.297" endtime="20230801 16:12:23.428"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Tên Nhóm&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:23.435" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:12:23.435" endtime="20230801 16:12:23.435"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:23.436" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:12:23.436" endtime="20230801 16:12:23.436"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:12:23.438" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:12:23.437" endtime="20230801 16:12:23.438"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:23.439" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:12:23.439" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:12:23.438" endtime="20230801 16:12:23.439"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:12:23.440" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 16:12:23.440" endtime="20230801 16:12:23.440"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:23.442" level="INFO">Length is 1</msg>
<msg timestamp="20230801 16:12:23.442" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 16:12:23.440" endtime="20230801 16:12:23.442"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.443" endtime="20230801 16:12:23.444"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.444" endtime="20230801 16:12:23.444"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.443" endtime="20230801 16:12:23.444"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.445" endtime="20230801 16:12:23.445"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.446" endtime="20230801 16:12:23.446"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.447" endtime="20230801 16:12:23.449"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.445" endtime="20230801 16:12:23.449"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.450" endtime="20230801 16:12:23.451"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.452" endtime="20230801 16:12:23.452"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.450" endtime="20230801 16:12:23.452"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.453" endtime="20230801 16:12:23.454"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.454" endtime="20230801 16:12:23.455"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.453" endtime="20230801 16:12:23.455"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.456" endtime="20230801 16:12:23.456"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.457" endtime="20230801 16:12:23.458"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.455" endtime="20230801 16:12:23.458"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.459" endtime="20230801 16:12:23.460"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.460" endtime="20230801 16:12:23.460"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.459" endtime="20230801 16:12:23.460"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.462" endtime="20230801 16:12:23.463"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.466" endtime="20230801 16:12:23.467"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.462" endtime="20230801 16:12:23.468"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.469" endtime="20230801 16:12:23.469"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.468" endtime="20230801 16:12:23.469"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:12:23.470" endtime="20230801 16:12:23.471"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.469" endtime="20230801 16:12:23.471"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.472" endtime="20230801 16:12:23.472"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.472" endtime="20230801 16:12:23.473"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.471" endtime="20230801 16:12:23.473"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.474" endtime="20230801 16:12:23.474"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.473" endtime="20230801 16:12:23.474"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.475" endtime="20230801 16:12:23.475"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.474" endtime="20230801 16:12:23.475"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.476" endtime="20230801 16:12:23.476"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.476" endtime="20230801 16:12:23.477"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230801 16:12:23.478" level="INFO">${new_text} = Deleniti consectetur cum sapiente.</msg>
<status status="PASS" starttime="20230801 16:12:23.477" endtime="20230801 16:12:23.478"/>
</kw>
<status status="PASS" starttime="20230801 16:12:23.477" endtime="20230801 16:12:23.478"/>
</branch>
<status status="PASS" starttime="20230801 16:12:23.442" endtime="20230801 16:12:23.478"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:23.483" level="INFO">Length is 8</msg>
<msg timestamp="20230801 16:12:23.483" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 16:12:23.479" endtime="20230801 16:12:23.483"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:12:23.486" level="INFO">${text} = Deleniti consectetur cum sapiente.</msg>
<status status="PASS" starttime="20230801 16:12:23.485" endtime="20230801 16:12:23.486"/>
</kw>
<status status="PASS" starttime="20230801 16:12:23.484" endtime="20230801 16:12:23.486"/>
</branch>
<status status="PASS" starttime="20230801 16:12:23.484" endtime="20230801 16:12:23.486"/>
</if>
<msg timestamp="20230801 16:12:23.487" level="INFO">${text} = Deleniti consectetur cum sapiente.</msg>
<status status="PASS" starttime="20230801 16:12:23.433" endtime="20230801 16:12:23.487"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:12:23.488" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên Nhóm"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:12:23.487" endtime="20230801 16:12:23.488"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:12:23.489" endtime="20230801 16:12:23.530"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:12:23.535" level="INFO">Fills the text 'Deleniti consectetur cum sapiente.' in the given field.</msg>
<status status="PASS" starttime="20230801 16:12:23.532" endtime="20230801 16:12:23.590"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:23.591" level="INFO">Length is 34</msg>
<msg timestamp="20230801 16:12:23.591" level="INFO">${cnt} = 34</msg>
<status status="PASS" starttime="20230801 16:12:23.591" endtime="20230801 16:12:23.591"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:12:23.593" level="INFO">${STATE["Tên Nhóm"]} = Deleniti consectetur cum sapiente.</msg>
<status status="PASS" starttime="20230801 16:12:23.592" endtime="20230801 16:12:23.593"/>
</kw>
<status status="PASS" starttime="20230801 16:12:23.592" endtime="20230801 16:12:23.593"/>
</branch>
<status status="PASS" starttime="20230801 16:12:23.591" endtime="20230801 16:12:23.593"/>
</if>
<status status="PASS" starttime="20230801 16:12:23.431" endtime="20230801 16:12:23.593"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:23.598" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:12:23.596" endtime="20230801 16:12:23.598"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:23.600" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:12:23.599" endtime="20230801 16:12:23.600"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:12:23.603" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:12:23.602" endtime="20230801 16:12:23.603"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:23.604" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:12:23.604" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:12:23.603" endtime="20230801 16:12:23.604"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:12:23.606" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 16:12:23.605" endtime="20230801 16:12:23.606"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:23.607" level="INFO">Length is 1</msg>
<msg timestamp="20230801 16:12:23.607" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 16:12:23.606" endtime="20230801 16:12:23.607"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.608" endtime="20230801 16:12:23.608"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.609" endtime="20230801 16:12:23.609"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.607" endtime="20230801 16:12:23.610"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.611" endtime="20230801 16:12:23.611"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.612" endtime="20230801 16:12:23.612"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.613" endtime="20230801 16:12:23.614"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.610" endtime="20230801 16:12:23.614"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.617" endtime="20230801 16:12:23.617"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.617" endtime="20230801 16:12:23.618"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.615" endtime="20230801 16:12:23.618"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.619" endtime="20230801 16:12:23.619"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.619" endtime="20230801 16:12:23.620"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.618" endtime="20230801 16:12:23.620"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.620" endtime="20230801 16:12:23.620"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.622" endtime="20230801 16:12:23.622"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.620" endtime="20230801 16:12:23.622"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.623" endtime="20230801 16:12:23.624"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.624" endtime="20230801 16:12:23.624"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.623" endtime="20230801 16:12:23.624"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.626" endtime="20230801 16:12:23.626"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.626" endtime="20230801 16:12:23.626"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.625" endtime="20230801 16:12:23.627"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.627" endtime="20230801 16:12:23.628"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.627" endtime="20230801 16:12:23.628"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:12:23.629" endtime="20230801 16:12:23.629"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.628" endtime="20230801 16:12:23.629"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.631" endtime="20230801 16:12:23.631"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.632" endtime="20230801 16:12:23.632"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.629" endtime="20230801 16:12:23.632"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.633" endtime="20230801 16:12:23.634"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.633" endtime="20230801 16:12:23.634"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.634" endtime="20230801 16:12:23.634"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.634" endtime="20230801 16:12:23.635"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.635" endtime="20230801 16:12:23.635"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.635" endtime="20230801 16:12:23.635"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230801 16:12:23.636" level="INFO">${new_text} = Praesentium ea suscipit.</msg>
<status status="PASS" starttime="20230801 16:12:23.636" endtime="20230801 16:12:23.636"/>
</kw>
<status status="PASS" starttime="20230801 16:12:23.635" endtime="20230801 16:12:23.637"/>
</branch>
<status status="PASS" starttime="20230801 16:12:23.607" endtime="20230801 16:12:23.637"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:23.637" level="INFO">Length is 8</msg>
<msg timestamp="20230801 16:12:23.637" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 16:12:23.637" endtime="20230801 16:12:23.638"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:12:23.639" level="INFO">${text} = Praesentium ea suscipit.</msg>
<status status="PASS" starttime="20230801 16:12:23.638" endtime="20230801 16:12:23.639"/>
</kw>
<status status="PASS" starttime="20230801 16:12:23.638" endtime="20230801 16:12:23.639"/>
</branch>
<status status="PASS" starttime="20230801 16:12:23.638" endtime="20230801 16:12:23.639"/>
</if>
<msg timestamp="20230801 16:12:23.639" level="INFO">${text} = Praesentium ea suscipit.</msg>
<status status="PASS" starttime="20230801 16:12:23.595" endtime="20230801 16:12:23.639"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230801 16:12:23.640" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230801 16:12:23.639" endtime="20230801 16:12:23.640"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:12:23.642" endtime="20230801 16:12:23.694"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:12:23.695" level="INFO">Fills the text 'Praesentium ea suscipit.' in the given field.</msg>
<status status="PASS" starttime="20230801 16:12:23.694" endtime="20230801 16:12:23.737"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:23.739" level="INFO">Length is 24</msg>
<msg timestamp="20230801 16:12:23.739" level="INFO">${cnt} = 24</msg>
<status status="PASS" starttime="20230801 16:12:23.738" endtime="20230801 16:12:23.739"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:12:23.743" level="INFO">${STATE["Mô tả"]} = Praesentium ea suscipit.</msg>
<status status="PASS" starttime="20230801 16:12:23.741" endtime="20230801 16:12:23.743"/>
</kw>
<status status="PASS" starttime="20230801 16:12:23.740" endtime="20230801 16:12:23.743"/>
</branch>
<status status="PASS" starttime="20230801 16:12:23.740" endtime="20230801 16:12:23.743"/>
</if>
<status status="PASS" starttime="20230801 16:12:23.594" endtime="20230801 16:12:23.744"/>
</kw>
<kw name="And Click select &quot;Quản lý&quot; with &quot;Hoàng Anh&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:23.749" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:12:23.747" endtime="20230801 16:12:23.749"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:12:23.750" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:12:23.749" endtime="20230801 16:12:23.750"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:12:23.751" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:12:23.751" endtime="20230801 16:12:23.751"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:23.752" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:12:23.752" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:12:23.752" endtime="20230801 16:12:23.752"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:12:23.753" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:12:23.753" endtime="20230801 16:12:23.753"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:23.754" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:12:23.755" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:12:23.754" endtime="20230801 16:12:23.755"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.756" endtime="20230801 16:12:23.756"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.757" endtime="20230801 16:12:23.758"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.755" endtime="20230801 16:12:23.758"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.759" endtime="20230801 16:12:23.759"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.760" endtime="20230801 16:12:23.760"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.760" endtime="20230801 16:12:23.762"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.758" endtime="20230801 16:12:23.762"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.763" endtime="20230801 16:12:23.764"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.764" endtime="20230801 16:12:23.765"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.762" endtime="20230801 16:12:23.765"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.766" endtime="20230801 16:12:23.766"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.767" endtime="20230801 16:12:23.767"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.765" endtime="20230801 16:12:23.767"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.768" endtime="20230801 16:12:23.768"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.769" endtime="20230801 16:12:23.769"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.767" endtime="20230801 16:12:23.769"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.770" endtime="20230801 16:12:23.770"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.771" endtime="20230801 16:12:23.771"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.769" endtime="20230801 16:12:23.771"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.772" endtime="20230801 16:12:23.772"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.772" endtime="20230801 16:12:23.772"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.771" endtime="20230801 16:12:23.772"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.773" endtime="20230801 16:12:23.774"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.773" endtime="20230801 16:12:23.774"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:12:23.775" endtime="20230801 16:12:23.775"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.774" endtime="20230801 16:12:23.775"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.776" endtime="20230801 16:12:23.776"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.776" endtime="20230801 16:12:23.777"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.775" endtime="20230801 16:12:23.777"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.778" endtime="20230801 16:12:23.778"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.777" endtime="20230801 16:12:23.778"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.779" endtime="20230801 16:12:23.780"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.778" endtime="20230801 16:12:23.780"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.782" endtime="20230801 16:12:23.782"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.780" endtime="20230801 16:12:23.782"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:12:23.783" endtime="20230801 16:12:23.783"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:12:23.783" endtime="20230801 16:12:23.784"/>
</branch>
<status status="PASS" starttime="20230801 16:12:23.755" endtime="20230801 16:12:23.784"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:12:23.785" level="INFO">Length is 9</msg>
<msg timestamp="20230801 16:12:23.785" level="INFO">${cnt} = 9</msg>
<status status="PASS" starttime="20230801 16:12:23.784" endtime="20230801 16:12:23.785"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:12:23.788" level="INFO">${text} = Hoàng Anh</msg>
<status status="PASS" starttime="20230801 16:12:23.787" endtime="20230801 16:12:23.788"/>
</kw>
<status status="PASS" starttime="20230801 16:12:23.786" endtime="20230801 16:12:23.788"/>
</branch>
<status status="PASS" starttime="20230801 16:12:23.786" endtime="20230801 16:12:23.788"/>
</if>
<msg timestamp="20230801 16:12:23.789" level="INFO">${text} = Hoàng Anh</msg>
<status status="PASS" starttime="20230801 16:12:23.746" endtime="20230801 16:12:23.789"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 16:12:23.790" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 16:12:23.789" endtime="20230801 16:12:23.790"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:12:23.806" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 16:12:23.792" endtime="20230801 16:12:23.807"/>
</kw>
<status status="PASS" starttime="20230801 16:12:23.790" endtime="20230801 16:12:23.807"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:12:23.807" endtime="20230801 16:12:24.009"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 16:12:24.011" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Quản lý"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 16:12:24.010" endtime="20230801 16:12:24.011"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:12:24.012" level="INFO">Fills the text 'Hoàng Anh' in the given field.</msg>
<status status="PASS" starttime="20230801 16:12:24.012" endtime="20230801 16:12:24.101"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230801 16:13:24.529" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-15.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-15.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 16:13:24.530" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 16:13:24.530" level="FAIL">TimeoutError: locator.click: Timeout 60000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "ant-select-item-option") and @title="Hoàng Anh"]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 16:12:24.103" endtime="20230801 16:13:24.534"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20230801 16:13:24.535" endtime="20230801 16:13:24.535"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230801 16:13:24.536" endtime="20230801 16:13:24.537"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:24.536" endtime="20230801 16:13:24.537"/>
</branch>
<status status="NOT RUN" starttime="20230801 16:13:24.536" endtime="20230801 16:13:24.537"/>
</if>
<status status="FAIL" starttime="20230801 16:12:23.745" endtime="20230801 16:13:24.538"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20230801 16:13:24.589" endtime="20230801 16:13:24.589"/>
</kw>
<kw name="Then User look message &quot;Tạo thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<status status="NOT RUN" starttime="20230801 16:13:24.612" endtime="20230801 16:13:24.613"/>
</kw>
<kw name="And User look title &quot;Nhóm&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<status status="NOT RUN" starttime="20230801 16:13:24.657" endtime="20230801 16:13:24.657"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;Tên Nhóm&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<status status="NOT RUN" starttime="20230801 16:13:24.682" endtime="20230801 16:13:24.682"/>
</kw>
<kw name="Then User look message &quot;Xóa thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<status status="NOT RUN" starttime="20230801 16:13:24.705" endtime="20230801 16:13:24.706"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 16:13:26.748" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 16:13:24.721" endtime="20230801 16:13:26.748"/>
</kw>
<status status="PASS" starttime="20230801 16:13:24.720" endtime="20230801 16:13:26.748"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="FAIL" starttime="20230801 16:12:11.207" endtime="20230801 16:13:26.758">TimeoutError: locator.click: Timeout 60000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "ant-select-item-option") and @title="Hoàng Anh"]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<test id="s1-t11" name="CRT-13 Verify that create new team is successful when create team with another manager &amp; &quot;Lưu và tạo mới&quot; button" line="119">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 16:13:26.799" endtime="20230801 16:13:26.800"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 16:13:26.802" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\131a57b5-7e6f-4e78-9baf-01528900490f"}</msg>
<msg timestamp="20230801 16:13:28.729" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\131a57b5-7e6f-4e78-9baf-01528900490f"}</msg>
<status status="PASS" starttime="20230801 16:13:26.801" endtime="20230801 16:13:28.730"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 16:13:31.559" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 16:13:31.559" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 16:13:28.730" endtime="20230801 16:13:31.560"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 16:13:31.561" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 16:13:31.561" endtime="20230801 16:13:31.562"/>
</kw>
<status status="PASS" starttime="20230801 16:13:26.798" endtime="20230801 16:13:31.562"/>
</kw>
<kw name="When Go to page create team" library="common" sourcename="Go to page ${name} team">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:13:31.596" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:13:31.595" endtime="20230801 16:13:31.596"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:13:31.597" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:13:31.597" endtime="20230801 16:13:31.598"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:13:31.599" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:13:31.598" endtime="20230801 16:13:31.599"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:13:31.601" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:13:31.601" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:13:31.600" endtime="20230801 16:13:31.601"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:13:31.603" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:13:31.602" endtime="20230801 16:13:31.603"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:13:31.604" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:13:31.605" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:13:31.604" endtime="20230801 16:13:31.605"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.606" endtime="20230801 16:13:31.606"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.607" endtime="20230801 16:13:31.607"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:31.605" endtime="20230801 16:13:31.607"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.609" endtime="20230801 16:13:31.609"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.610" endtime="20230801 16:13:31.610"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.612" endtime="20230801 16:13:31.612"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:31.608" endtime="20230801 16:13:31.613"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.614" endtime="20230801 16:13:31.615"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.615" endtime="20230801 16:13:31.615"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:31.613" endtime="20230801 16:13:31.616"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.617" endtime="20230801 16:13:31.617"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.617" endtime="20230801 16:13:31.618"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:31.616" endtime="20230801 16:13:31.618"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.619" endtime="20230801 16:13:31.619"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.620" endtime="20230801 16:13:31.620"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:31.618" endtime="20230801 16:13:31.620"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.621" endtime="20230801 16:13:31.621"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.665" endtime="20230801 16:13:31.666"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:31.620" endtime="20230801 16:13:31.666"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.667" endtime="20230801 16:13:31.668"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.673" endtime="20230801 16:13:31.677"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:31.666" endtime="20230801 16:13:31.678"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.679" endtime="20230801 16:13:31.680"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:31.678" endtime="20230801 16:13:31.680"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:13:31.680" endtime="20230801 16:13:31.682"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:31.680" endtime="20230801 16:13:31.682"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.683" endtime="20230801 16:13:31.684"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.685" endtime="20230801 16:13:31.685"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:31.682" endtime="20230801 16:13:31.685"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.686" endtime="20230801 16:13:31.687"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:31.686" endtime="20230801 16:13:31.687"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.696" endtime="20230801 16:13:31.697"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:31.687" endtime="20230801 16:13:31.698"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.701" endtime="20230801 16:13:31.701"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:31.700" endtime="20230801 16:13:31.701"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:13:31.702" endtime="20230801 16:13:31.702"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:31.701" endtime="20230801 16:13:31.702"/>
</branch>
<status status="PASS" starttime="20230801 16:13:31.605" endtime="20230801 16:13:31.702"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:13:31.710" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:13:31.710" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:13:31.709" endtime="20230801 16:13:31.710"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:13:31.717" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:13:31.716" endtime="20230801 16:13:31.717"/>
</kw>
<status status="PASS" starttime="20230801 16:13:31.712" endtime="20230801 16:13:31.717"/>
</branch>
<status status="PASS" starttime="20230801 16:13:31.712" endtime="20230801 16:13:31.718"/>
</if>
<msg timestamp="20230801 16:13:31.718" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:13:31.594" endtime="20230801 16:13:31.718"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:13:31.720" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:13:31.718" endtime="20230801 16:13:31.720"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:13:31.722" endtime="20230801 16:13:34.053"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:13:34.055" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230801 16:13:34.054" endtime="20230801 16:13:34.183"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:13:34.184" level="INFO">Length is 19</msg>
<msg timestamp="20230801 16:13:34.184" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230801 16:13:34.183" endtime="20230801 16:13:34.184"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:13:34.187" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230801 16:13:34.186" endtime="20230801 16:13:34.187"/>
</kw>
<status status="PASS" starttime="20230801 16:13:34.185" endtime="20230801 16:13:34.187"/>
</branch>
<status status="PASS" starttime="20230801 16:13:34.184" endtime="20230801 16:13:34.188"/>
</if>
<status status="PASS" starttime="20230801 16:13:31.593" endtime="20230801 16:13:34.188"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:13:34.192" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:13:34.190" endtime="20230801 16:13:34.192"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:13:34.194" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:13:34.193" endtime="20230801 16:13:34.194"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:13:34.195" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:13:34.194" endtime="20230801 16:13:34.195"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:13:34.196" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:13:34.196" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:13:34.196" endtime="20230801 16:13:34.197"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:13:34.198" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:13:34.197" endtime="20230801 16:13:34.198"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:13:34.199" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:13:34.200" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:13:34.199" endtime="20230801 16:13:34.200"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.201" endtime="20230801 16:13:34.201"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.202" endtime="20230801 16:13:34.202"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:34.200" endtime="20230801 16:13:34.203"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.204" endtime="20230801 16:13:34.204"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.205" endtime="20230801 16:13:34.205"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.205" endtime="20230801 16:13:34.206"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:34.203" endtime="20230801 16:13:34.206"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.207" endtime="20230801 16:13:34.207"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.208" endtime="20230801 16:13:34.209"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:34.206" endtime="20230801 16:13:34.209"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.210" endtime="20230801 16:13:34.210"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.210" endtime="20230801 16:13:34.212"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:34.209" endtime="20230801 16:13:34.212"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.213" endtime="20230801 16:13:34.213"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.214" endtime="20230801 16:13:34.214"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:34.212" endtime="20230801 16:13:34.214"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.215" endtime="20230801 16:13:34.215"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.216" endtime="20230801 16:13:34.217"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:34.215" endtime="20230801 16:13:34.217"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.218" endtime="20230801 16:13:34.218"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.219" endtime="20230801 16:13:34.219"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:34.217" endtime="20230801 16:13:34.219"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.220" endtime="20230801 16:13:34.220"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:34.219" endtime="20230801 16:13:34.221"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:13:34.222" endtime="20230801 16:13:34.222"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:34.221" endtime="20230801 16:13:34.222"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.224" endtime="20230801 16:13:34.227"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.228" endtime="20230801 16:13:34.228"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:34.222" endtime="20230801 16:13:34.228"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.230" endtime="20230801 16:13:34.230"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:34.229" endtime="20230801 16:13:34.230"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.232" endtime="20230801 16:13:34.233"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:34.230" endtime="20230801 16:13:34.233"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.238" endtime="20230801 16:13:34.239"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:34.233" endtime="20230801 16:13:34.239"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:13:34.240" endtime="20230801 16:13:34.240"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:34.239" endtime="20230801 16:13:34.240"/>
</branch>
<status status="PASS" starttime="20230801 16:13:34.200" endtime="20230801 16:13:34.241"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:13:34.243" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:13:34.244" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:13:34.242" endtime="20230801 16:13:34.244"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:13:34.247" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:13:34.245" endtime="20230801 16:13:34.247"/>
</kw>
<status status="PASS" starttime="20230801 16:13:34.244" endtime="20230801 16:13:34.250"/>
</branch>
<status status="PASS" starttime="20230801 16:13:34.244" endtime="20230801 16:13:34.250"/>
</if>
<msg timestamp="20230801 16:13:34.252" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:13:34.189" endtime="20230801 16:13:34.252"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:13:34.254" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:13:34.252" endtime="20230801 16:13:34.254"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:13:34.255" endtime="20230801 16:13:34.579"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:13:34.580" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230801 16:13:34.580" endtime="20230801 16:13:34.688"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:13:34.689" level="INFO">Length is 13</msg>
<msg timestamp="20230801 16:13:34.689" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230801 16:13:34.688" endtime="20230801 16:13:34.689"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:13:34.692" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230801 16:13:34.691" endtime="20230801 16:13:34.693"/>
</kw>
<status status="PASS" starttime="20230801 16:13:34.690" endtime="20230801 16:13:34.693"/>
</branch>
<status status="PASS" starttime="20230801 16:13:34.690" endtime="20230801 16:13:34.693"/>
</if>
<status status="PASS" starttime="20230801 16:13:34.188" endtime="20230801 16:13:34.694"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:13:34.696" endtime="20230801 16:13:35.017"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:13:35.019" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:13:35.018" endtime="20230801 16:13:35.019"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:13:35.074" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:13:35.019" endtime="20230801 16:13:35.074"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:13:35.076" endtime="20230801 16:13:35.077"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:13:35.079" endtime="20230801 16:13:35.079"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:35.075" endtime="20230801 16:13:35.079"/>
</branch>
<status status="PASS" starttime="20230801 16:13:35.075" endtime="20230801 16:13:35.079"/>
</if>
<status status="PASS" starttime="20230801 16:13:35.017" endtime="20230801 16:13:35.080"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:13:35.080" endtime="20230801 16:13:35.155"/>
</kw>
<status status="PASS" starttime="20230801 16:13:34.694" endtime="20230801 16:13:35.155"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:13:35.159" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 16:13:35.157" endtime="20230801 16:13:35.159"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:13:35.163" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:13:35.163" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 16:13:35.162" endtime="20230801 16:13:35.163"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 16:13:35.165" endtime="20230801 16:13:35.165"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:35.164" endtime="20230801 16:13:35.165"/>
</branch>
<status status="PASS" starttime="20230801 16:13:35.164" endtime="20230801 16:13:35.165"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 16:13:37.820" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 16:13:35.170" endtime="20230801 16:13:37.820"/>
</kw>
<status status="PASS" starttime="20230801 16:13:35.167" endtime="20230801 16:13:37.821"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:13:37.822" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 16:13:37.822" endtime="20230801 16:13:37.822"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:13:38.982" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-16.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-16.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 16:13:38.982" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 16:13:38.982" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 16:13:37.827" endtime="20230801 16:13:38.985"/>
</kw>
<status status="FAIL" starttime="20230801 16:13:37.823" endtime="20230801 16:13:38.985"/>
</kw>
<msg timestamp="20230801 16:13:38.986" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 16:13:37.823" endtime="20230801 16:13:38.986"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:13:38.987" endtime="20230801 16:13:38.987"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:38.986" endtime="20230801 16:13:38.988"/>
</branch>
<status status="PASS" starttime="20230801 16:13:38.986" endtime="20230801 16:13:38.988"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:13:40.552" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 16:13:38.993" endtime="20230801 16:13:40.553"/>
</kw>
<status status="PASS" starttime="20230801 16:13:38.988" endtime="20230801 16:13:40.553"/>
</kw>
<status status="PASS" starttime="20230801 16:13:35.156" endtime="20230801 16:13:40.553"/>
</kw>
<status status="PASS" starttime="20230801 16:13:31.591" endtime="20230801 16:13:40.554"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:13:40.556" endtime="20230801 16:13:40.845"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:13:40.848" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:13:40.847" endtime="20230801 16:13:40.848"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:13:40.871" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:13:40.848" endtime="20230801 16:13:40.871"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:13:40.873" endtime="20230801 16:13:40.873"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:40.872" endtime="20230801 16:13:40.873"/>
</branch>
<status status="PASS" starttime="20230801 16:13:40.872" endtime="20230801 16:13:40.873"/>
</if>
<status status="PASS" starttime="20230801 16:13:40.846" endtime="20230801 16:13:40.874"/>
</kw>
<status status="PASS" starttime="20230801 16:13:40.555" endtime="20230801 16:13:40.875"/>
</kw>
<kw name="And Click &quot;Nhóm&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:13:40.880" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:13:40.880" endtime="20230801 16:13:40.880"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:13:40.905" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:13:40.882" endtime="20230801 16:13:40.905"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:13:40.907" endtime="20230801 16:13:40.907"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:40.906" endtime="20230801 16:13:40.907"/>
</branch>
<status status="PASS" starttime="20230801 16:13:40.906" endtime="20230801 16:13:40.908"/>
</if>
<status status="PASS" starttime="20230801 16:13:40.877" endtime="20230801 16:13:40.908"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:13:40.909" endtime="20230801 16:13:41.189"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:13:41.193" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:13:41.191" endtime="20230801 16:13:41.193"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:13:41.213" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:13:41.194" endtime="20230801 16:13:41.213"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:13:41.580" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 16:13:41.217" endtime="20230801 16:13:41.580"/>
</kw>
<status status="PASS" starttime="20230801 16:13:41.214" endtime="20230801 16:13:41.580"/>
</kw>
<status status="PASS" starttime="20230801 16:13:41.214" endtime="20230801 16:13:41.582"/>
</branch>
<status status="PASS" starttime="20230801 16:13:41.214" endtime="20230801 16:13:41.582"/>
</if>
<status status="PASS" starttime="20230801 16:13:41.190" endtime="20230801 16:13:41.582"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:13:41.585" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:13:41.584" endtime="20230801 16:13:41.585"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:13:41.607" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 16:13:41.586" endtime="20230801 16:13:41.607"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 16:13:43.117" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 16:13:41.611" endtime="20230801 16:13:43.118"/>
</kw>
<status status="PASS" starttime="20230801 16:13:41.609" endtime="20230801 16:13:43.118"/>
</kw>
<status status="PASS" starttime="20230801 16:13:41.608" endtime="20230801 16:13:43.118"/>
</branch>
<status status="PASS" starttime="20230801 16:13:41.607" endtime="20230801 16:13:43.119"/>
</if>
<status status="PASS" starttime="20230801 16:13:41.583" endtime="20230801 16:13:43.119"/>
</kw>
<status status="PASS" starttime="20230801 16:13:40.876" endtime="20230801 16:13:43.119"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:13:43.121" endtime="20230801 16:13:43.352"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:13:43.353" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 16:13:43.353" endtime="20230801 16:13:43.353"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:13:43.475" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:13:43.354" endtime="20230801 16:13:43.477"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.479" endtime="20230801 16:13:43.479"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.480" endtime="20230801 16:13:43.480"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:43.478" endtime="20230801 16:13:43.480"/>
</branch>
<status status="PASS" starttime="20230801 16:13:43.478" endtime="20230801 16:13:43.481"/>
</if>
<status status="PASS" starttime="20230801 16:13:43.352" endtime="20230801 16:13:43.481"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 16:13:43.482" endtime="20230801 16:13:43.746"/>
</kw>
<status status="PASS" starttime="20230801 16:13:43.120" endtime="20230801 16:13:43.747"/>
</kw>
<status status="PASS" starttime="20230801 16:13:43.120" endtime="20230801 16:13:43.747"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'edit'">
<kw name="Select team need to edit" library="common" sourcename="Select ${name} need to edit">
<status status="NOT RUN" starttime="20230801 16:13:43.747" endtime="20230801 16:13:43.748"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:43.747" endtime="20230801 16:13:43.748"/>
</branch>
<status status="PASS" starttime="20230801 16:13:43.120" endtime="20230801 16:13:43.748"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:13:43.750" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 16:13:43.749" endtime="20230801 16:13:43.750"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 16:13:43.784" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 16:13:43.750" endtime="20230801 16:13:43.784"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 16:13:43.785" endtime="20230801 16:13:43.785"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:43.784" endtime="20230801 16:13:43.785"/>
</branch>
<status status="PASS" starttime="20230801 16:13:43.784" endtime="20230801 16:13:43.786"/>
</if>
<status status="PASS" starttime="20230801 16:13:43.749" endtime="20230801 16:13:43.786"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 16:13:43.887" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 16:13:43.786" endtime="20230801 16:13:43.887"/>
</kw>
<status status="PASS" starttime="20230801 16:13:31.590" endtime="20230801 16:13:43.887"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Tên Nhóm&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:13:43.892" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:13:43.892" endtime="20230801 16:13:43.892"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:13:43.893" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:13:43.893" endtime="20230801 16:13:43.894"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:13:43.895" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:13:43.894" endtime="20230801 16:13:43.895"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:13:43.896" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:13:43.896" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:13:43.895" endtime="20230801 16:13:43.896"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:13:43.897" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 16:13:43.897" endtime="20230801 16:13:43.898"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:13:43.898" level="INFO">Length is 1</msg>
<msg timestamp="20230801 16:13:43.899" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 16:13:43.898" endtime="20230801 16:13:43.899"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.900" endtime="20230801 16:13:43.900"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.900" endtime="20230801 16:13:43.901"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:43.899" endtime="20230801 16:13:43.901"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.902" endtime="20230801 16:13:43.902"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.903" endtime="20230801 16:13:43.903"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.904" endtime="20230801 16:13:43.904"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:43.901" endtime="20230801 16:13:43.904"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.905" endtime="20230801 16:13:43.906"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.906" endtime="20230801 16:13:43.906"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:43.905" endtime="20230801 16:13:43.907"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.908" endtime="20230801 16:13:43.908"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.909" endtime="20230801 16:13:43.909"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:43.907" endtime="20230801 16:13:43.909"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.910" endtime="20230801 16:13:43.910"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.912" endtime="20230801 16:13:43.912"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:43.910" endtime="20230801 16:13:43.912"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.914" endtime="20230801 16:13:43.914"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.915" endtime="20230801 16:13:43.915"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:43.913" endtime="20230801 16:13:43.915"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.916" endtime="20230801 16:13:43.917"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.917" endtime="20230801 16:13:43.917"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:43.915" endtime="20230801 16:13:43.918"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.919" endtime="20230801 16:13:43.919"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:43.918" endtime="20230801 16:13:43.919"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:13:43.920" endtime="20230801 16:13:43.920"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:43.919" endtime="20230801 16:13:43.920"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.921" endtime="20230801 16:13:43.921"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.922" endtime="20230801 16:13:43.922"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:43.920" endtime="20230801 16:13:43.922"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.923" endtime="20230801 16:13:43.923"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:43.922" endtime="20230801 16:13:43.924"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.925" endtime="20230801 16:13:43.926"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:43.924" endtime="20230801 16:13:43.926"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:13:43.927" endtime="20230801 16:13:43.927"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:43.926" endtime="20230801 16:13:43.928"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230801 16:13:43.930" level="INFO">${new_text} = Provident non doloremque laborum maiores exercitationem provident.</msg>
<status status="PASS" starttime="20230801 16:13:43.929" endtime="20230801 16:13:43.930"/>
</kw>
<status status="PASS" starttime="20230801 16:13:43.928" endtime="20230801 16:13:43.930"/>
</branch>
<status status="PASS" starttime="20230801 16:13:43.899" endtime="20230801 16:13:43.930"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:13:43.933" level="INFO">Length is 8</msg>
<msg timestamp="20230801 16:13:43.934" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 16:13:43.930" endtime="20230801 16:13:43.934"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:13:43.937" level="INFO">${text} = Provident non doloremque laborum maiores exercitationem provident.</msg>
<status status="PASS" starttime="20230801 16:13:43.936" endtime="20230801 16:13:43.937"/>
</kw>
<status status="PASS" starttime="20230801 16:13:43.935" endtime="20230801 16:13:43.937"/>
</branch>
<status status="PASS" starttime="20230801 16:13:43.935" endtime="20230801 16:13:43.938"/>
</if>
<msg timestamp="20230801 16:13:43.939" level="INFO">${text} = Provident non doloremque laborum maiores exercitationem provident.</msg>
<status status="PASS" starttime="20230801 16:13:43.889" endtime="20230801 16:13:43.939"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 16:13:43.941" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên Nhóm"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 16:13:43.939" endtime="20230801 16:13:43.942"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:13:43.943" endtime="20230801 16:13:44.016"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:13:44.018" level="INFO">Fills the text 'Provident non doloremque laborum maiores exercitationem provident.' in the given field.</msg>
<status status="PASS" starttime="20230801 16:13:44.017" endtime="20230801 16:13:44.070"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:13:44.072" level="INFO">Length is 66</msg>
<msg timestamp="20230801 16:13:44.072" level="INFO">${cnt} = 66</msg>
<status status="PASS" starttime="20230801 16:13:44.071" endtime="20230801 16:13:44.072"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:13:44.075" level="INFO">${STATE["Tên Nhóm"]} = Provident non doloremque laborum maiores exercitationem provident.</msg>
<status status="PASS" starttime="20230801 16:13:44.074" endtime="20230801 16:13:44.075"/>
</kw>
<status status="PASS" starttime="20230801 16:13:44.072" endtime="20230801 16:13:44.076"/>
</branch>
<status status="PASS" starttime="20230801 16:13:44.072" endtime="20230801 16:13:44.076"/>
</if>
<status status="PASS" starttime="20230801 16:13:43.888" endtime="20230801 16:13:44.076"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:13:44.080" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:13:44.080" endtime="20230801 16:13:44.080"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:13:44.082" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:13:44.081" endtime="20230801 16:13:44.082"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:13:44.083" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 16:13:44.082" endtime="20230801 16:13:44.083"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:13:44.084" level="INFO">Length is 0</msg>
<msg timestamp="20230801 16:13:44.084" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 16:13:44.083" endtime="20230801 16:13:44.084"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:13:44.086" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 16:13:44.085" endtime="20230801 16:13:44.086"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:13:44.087" level="INFO">Length is 1</msg>
<msg timestamp="20230801 16:13:44.087" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 16:13:44.086" endtime="20230801 16:13:44.087"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.088" endtime="20230801 16:13:44.089"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.089" endtime="20230801 16:13:44.090"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:44.087" endtime="20230801 16:13:44.090"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.091" endtime="20230801 16:13:44.092"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.092" endtime="20230801 16:13:44.093"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.093" endtime="20230801 16:13:44.093"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:44.090" endtime="20230801 16:13:44.095"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.096" endtime="20230801 16:13:44.096"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.097" endtime="20230801 16:13:44.097"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:44.095" endtime="20230801 16:13:44.097"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.098" endtime="20230801 16:13:44.098"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.099" endtime="20230801 16:13:44.099"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:44.097" endtime="20230801 16:13:44.100"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.101" endtime="20230801 16:13:44.101"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.102" endtime="20230801 16:13:44.102"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:44.100" endtime="20230801 16:13:44.102"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.103" endtime="20230801 16:13:44.104"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.105" endtime="20230801 16:13:44.106"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:44.102" endtime="20230801 16:13:44.106"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.108" endtime="20230801 16:13:44.108"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.109" endtime="20230801 16:13:44.110"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:44.106" endtime="20230801 16:13:44.110"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.112" endtime="20230801 16:13:44.113"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:44.110" endtime="20230801 16:13:44.113"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 16:13:44.114" endtime="20230801 16:13:44.114"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:44.113" endtime="20230801 16:13:44.115"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.116" endtime="20230801 16:13:44.116"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.116" endtime="20230801 16:13:44.117"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:44.115" endtime="20230801 16:13:44.117"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.118" endtime="20230801 16:13:44.118"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:44.117" endtime="20230801 16:13:44.118"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.119" endtime="20230801 16:13:44.119"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:44.118" endtime="20230801 16:13:44.120"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 16:13:44.120" endtime="20230801 16:13:44.121"/>
</kw>
<status status="NOT RUN" starttime="20230801 16:13:44.120" endtime="20230801 16:13:44.121"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230801 16:13:44.123" level="INFO">${new_text} = Nemo a odit nesciunt quas quas ab.</msg>
<status status="PASS" starttime="20230801 16:13:44.123" endtime="20230801 16:13:44.124"/>
</kw>
<status status="PASS" starttime="20230801 16:13:44.121" endtime="20230801 16:13:44.125"/>
</branch>
<status status="PASS" starttime="20230801 16:13:44.087" endtime="20230801 16:13:44.125"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:13:44.127" level="INFO">Length is 8</msg>
<msg timestamp="20230801 16:13:44.127" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 16:13:44.126" endtime="20230801 16:13:44.127"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 16:13:44.129" level="INFO">${text} = Nemo a odit nesciunt quas quas ab.</msg>
<status status="PASS" starttime="20230801 16:13:44.128" endtime="20230801 16:13:44.129"/>
</kw>
<status status="PASS" starttime="20230801 16:13:44.127" endtime="20230801 16:13:44.130"/>
</branch>
<status status="PASS" starttime="20230801 16:13:44.127" endtime="20230801 16:13:44.130"/>
</if>
<msg timestamp="20230801 16:13:44.131" level="INFO">${text} = Nemo a odit nesciunt quas quas ab.</msg>
<status status="PASS" starttime="20230801 16:13:44.078" endtime="20230801 16:13:44.131"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230801 16:13:44.132" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230801 16:13:44.131" endtime="20230801 16:13:44.132"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 16:13:44.133" endtime="20230801 16:13:44.189"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 16:13:44.192" level="INFO">Fills the text 'Nemo a odit nesciunt quas quas ab.' in the given field.</msg>
<status status="PASS" starttime="20230801 16:13:44.190" endtime="20230801 16:13:44.284"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 16:13:44.285" level="INFO">Length is 34</msg>
<msg timestamp="20230801 16:13:44.285" level="INFO">${cnt} = 34</msg>
<status status="PASS" starttime="20230801 16:13:44.284" endtime="20230801 16:13:44.285"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 16:13:44.288" level="INFO">${STATE["Mô tả"]} = Nemo a odit nesciunt quas quas ab.</msg>
<status status="PASS" starttime="20230801 16:13:44.287" endtime="20230801 16:13:44.288"/>
</kw>
<status status="PASS" starttime="20230801 16:13:44.286" endtime="20230801 16:13:44.288"/>
</branch>
<status status="PASS" starttime="20230801 16:13:44.286" endtime="20230801 16:13:44.288"/>
</if>
<status status="PASS" starttime="20230801 16:13:44.077" endtime="20230801 16:13:44.289"/>
</kw>
<kw name="And Click select &quot;Quản lý&quot; with &quot;Hoàng Anh&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:13:44.295" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 16:13:44.294" endtime="20230801 16:13:44.295"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 16:13:44.296" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 16:13:44.296" endtime="20230801 16:13:44.296"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 16:13:44.298" level="INFO">${containsS} = []</msg>

<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.11.4 on win32)" generated="20230731 07:35:50.780" rpa="false" schemaversion="4">
<suite id="s1" name="Test" source="C:\Users\nhats\OneDrive\Desktop\ARI\vite-react-ari\test\testcases\test.robot">
<test id="s1-t1" name="EDC-01 Verify that it is possible to navigate to the page for Edit Code" line="9">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230731 07:35:54.022" endtime="20230731 07:35:54.042"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230731 07:35:54.045" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\f1c22f93-f854-4069-9adc-943447a1addc"}</msg>
<msg timestamp="20230731 07:35:55.652" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\f1c22f93-f854-4069-9adc-943447a1addc"}</msg>
<status status="PASS" starttime="20230731 07:35:54.043" endtime="20230731 07:35:55.652"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230731 07:35:57.420" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230731 07:35:57.420" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230731 07:35:55.653" endtime="20230731 07:35:57.421"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230731 07:35:57.425" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230731 07:35:57.422" endtime="20230731 07:35:57.425"/>
</kw>
<status status="PASS" starttime="20230731 07:35:54.021" endtime="20230731 07:35:57.426"/>
</kw>
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:35:57.432" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:35:57.431" endtime="20230731 07:35:57.432"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:35:57.434" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:35:57.433" endtime="20230731 07:35:57.434"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:35:57.436" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:35:57.435" endtime="20230731 07:35:57.436"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:35:57.438" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:35:57.438" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:35:57.437" endtime="20230731 07:35:57.438"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:35:57.441" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:35:57.439" endtime="20230731 07:35:57.442"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:35:57.444" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:35:57.444" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:35:57.443" endtime="20230731 07:35:57.444"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.446" endtime="20230731 07:35:57.446"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.447" endtime="20230731 07:35:57.447"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:57.445" endtime="20230731 07:35:57.447"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.448" endtime="20230731 07:35:57.448"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.450" endtime="20230731 07:35:57.450"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.451" endtime="20230731 07:35:57.451"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:57.447" endtime="20230731 07:35:57.452"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.453" endtime="20230731 07:35:57.467"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.468" endtime="20230731 07:35:57.468"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:57.452" endtime="20230731 07:35:57.468"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.477" endtime="20230731 07:35:57.477"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.478" endtime="20230731 07:35:57.478"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:57.468" endtime="20230731 07:35:57.478"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.480" endtime="20230731 07:35:57.480"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.481" endtime="20230731 07:35:57.481"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:57.479" endtime="20230731 07:35:57.484"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.485" endtime="20230731 07:35:57.485"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.485" endtime="20230731 07:35:57.485"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:57.484" endtime="20230731 07:35:57.486"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.486" endtime="20230731 07:35:57.492"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.493" endtime="20230731 07:35:57.494"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:57.486" endtime="20230731 07:35:57.495"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.496" endtime="20230731 07:35:57.496"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:57.495" endtime="20230731 07:35:57.496"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:35:57.497" endtime="20230731 07:35:57.497"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:57.496" endtime="20230731 07:35:57.498"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.499" endtime="20230731 07:35:57.499"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.512" endtime="20230731 07:35:57.512"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:57.498" endtime="20230731 07:35:57.513"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.514" endtime="20230731 07:35:57.514"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:57.513" endtime="20230731 07:35:57.514"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.516" endtime="20230731 07:35:57.524"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:57.515" endtime="20230731 07:35:57.525"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.530" endtime="20230731 07:35:57.530"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:57.525" endtime="20230731 07:35:57.531"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:35:57.533" endtime="20230731 07:35:57.533"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:57.531" endtime="20230731 07:35:57.533"/>
</branch>
<status status="PASS" starttime="20230731 07:35:57.445" endtime="20230731 07:35:57.533"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:35:57.535" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:35:57.535" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:35:57.534" endtime="20230731 07:35:57.535"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:35:57.544" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:35:57.540" endtime="20230731 07:35:57.544"/>
</kw>
<status status="PASS" starttime="20230731 07:35:57.538" endtime="20230731 07:35:57.544"/>
</branch>
<status status="PASS" starttime="20230731 07:35:57.535" endtime="20230731 07:35:57.545"/>
</if>
<msg timestamp="20230731 07:35:57.545" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:35:57.429" endtime="20230731 07:35:57.545"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:35:57.557" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:35:57.556" endtime="20230731 07:35:57.557"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:35:57.558" endtime="20230731 07:35:59.111"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:35:59.112" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230731 07:35:59.112" endtime="20230731 07:35:59.190"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:35:59.191" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:35:59.191" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:35:59.190" endtime="20230731 07:35:59.191"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:35:59.195" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:35:59.193" endtime="20230731 07:35:59.195"/>
</kw>
<status status="PASS" starttime="20230731 07:35:59.192" endtime="20230731 07:35:59.195"/>
</branch>
<status status="PASS" starttime="20230731 07:35:59.192" endtime="20230731 07:35:59.195"/>
</if>
<status status="PASS" starttime="20230731 07:35:57.428" endtime="20230731 07:35:59.196"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:35:59.198" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:35:59.198" endtime="20230731 07:35:59.198"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:35:59.200" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:35:59.199" endtime="20230731 07:35:59.200"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:35:59.201" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:35:59.200" endtime="20230731 07:35:59.201"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:35:59.203" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:35:59.203" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:35:59.202" endtime="20230731 07:35:59.203"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:35:59.204" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:35:59.204" endtime="20230731 07:35:59.204"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:35:59.205" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:35:59.205" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:35:59.205" endtime="20230731 07:35:59.206"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.206" endtime="20230731 07:35:59.207"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.207" endtime="20230731 07:35:59.207"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:59.206" endtime="20230731 07:35:59.207"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.208" endtime="20230731 07:35:59.208"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.209" endtime="20230731 07:35:59.210"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.210" endtime="20230731 07:35:59.211"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:59.207" endtime="20230731 07:35:59.211"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.212" endtime="20230731 07:35:59.212"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.213" endtime="20230731 07:35:59.213"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:59.211" endtime="20230731 07:35:59.213"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.214" endtime="20230731 07:35:59.215"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.215" endtime="20230731 07:35:59.216"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:59.214" endtime="20230731 07:35:59.216"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.217" endtime="20230731 07:35:59.217"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.218" endtime="20230731 07:35:59.218"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:59.216" endtime="20230731 07:35:59.218"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.220" endtime="20230731 07:35:59.221"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.221" endtime="20230731 07:35:59.221"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:59.219" endtime="20230731 07:35:59.222"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.223" endtime="20230731 07:35:59.223"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.223" endtime="20230731 07:35:59.224"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:59.222" endtime="20230731 07:35:59.224"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.225" endtime="20230731 07:35:59.225"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:59.224" endtime="20230731 07:35:59.225"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:35:59.227" endtime="20230731 07:35:59.227"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:59.226" endtime="20230731 07:35:59.227"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.228" endtime="20230731 07:35:59.228"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.229" endtime="20230731 07:35:59.230"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:59.227" endtime="20230731 07:35:59.230"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.231" endtime="20230731 07:35:59.232"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:59.230" endtime="20230731 07:35:59.232"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.233" endtime="20230731 07:35:59.233"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:59.232" endtime="20230731 07:35:59.234"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.241" endtime="20230731 07:35:59.242"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:59.235" endtime="20230731 07:35:59.242"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.243" endtime="20230731 07:35:59.243"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:59.242" endtime="20230731 07:35:59.243"/>
</branch>
<status status="PASS" starttime="20230731 07:35:59.206" endtime="20230731 07:35:59.244"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:35:59.245" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:35:59.245" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:35:59.244" endtime="20230731 07:35:59.245"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:35:59.247" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:35:59.246" endtime="20230731 07:35:59.247"/>
</kw>
<status status="PASS" starttime="20230731 07:35:59.246" endtime="20230731 07:35:59.247"/>
</branch>
<status status="PASS" starttime="20230731 07:35:59.245" endtime="20230731 07:35:59.248"/>
</if>
<msg timestamp="20230731 07:35:59.248" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:35:59.197" endtime="20230731 07:35:59.248"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:35:59.251" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:35:59.249" endtime="20230731 07:35:59.251"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:35:59.252" endtime="20230731 07:35:59.365"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:35:59.367" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230731 07:35:59.366" endtime="20230731 07:35:59.446"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:35:59.447" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:35:59.448" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:35:59.447" endtime="20230731 07:35:59.450"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:35:59.458" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:35:59.452" endtime="20230731 07:35:59.458"/>
</kw>
<status status="PASS" starttime="20230731 07:35:59.451" endtime="20230731 07:35:59.460"/>
</branch>
<status status="PASS" starttime="20230731 07:35:59.451" endtime="20230731 07:35:59.461"/>
</if>
<status status="PASS" starttime="20230731 07:35:59.196" endtime="20230731 07:35:59.461"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:35:59.465" endtime="20230731 07:35:59.692"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:35:59.694" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:35:59.693" endtime="20230731 07:35:59.694"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:35:59.749" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:35:59.694" endtime="20230731 07:35:59.749"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.751" endtime="20230731 07:35:59.751"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.751" endtime="20230731 07:35:59.751"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:59.750" endtime="20230731 07:35:59.752"/>
</branch>
<status status="PASS" starttime="20230731 07:35:59.750" endtime="20230731 07:35:59.752"/>
</if>
<status status="PASS" starttime="20230731 07:35:59.692" endtime="20230731 07:35:59.752"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:35:59.756" endtime="20230731 07:35:59.832"/>
</kw>
<status status="PASS" starttime="20230731 07:35:59.463" endtime="20230731 07:35:59.833"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:35:59.835" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:35:59.834" endtime="20230731 07:35:59.835"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:35:59.837" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:35:59.839" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:35:59.836" endtime="20230731 07:35:59.840"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:35:59.843" endtime="20230731 07:35:59.843"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:35:59.842" endtime="20230731 07:35:59.843"/>
</branch>
<status status="PASS" starttime="20230731 07:35:59.842" endtime="20230731 07:35:59.843"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:36:02.300" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230731 07:35:59.846" endtime="20230731 07:36:02.300"/>
</kw>
<status status="PASS" starttime="20230731 07:35:59.844" endtime="20230731 07:36:02.301"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:02.303" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:36:02.302" endtime="20230731 07:36:02.303"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:02.937" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:36:02.938" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:36:02.938" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:36:02.307" endtime="20230731 07:36:02.949"/>
</kw>
<status status="FAIL" starttime="20230731 07:36:02.305" endtime="20230731 07:36:02.949"/>
</kw>
<msg timestamp="20230731 07:36:02.950" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:36:02.304" endtime="20230731 07:36:02.950"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:36:02.951" endtime="20230731 07:36:02.952"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:02.950" endtime="20230731 07:36:02.952"/>
</branch>
<status status="PASS" starttime="20230731 07:36:02.950" endtime="20230731 07:36:02.953"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:05.100" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:36:02.957" endtime="20230731 07:36:05.100"/>
</kw>
<status status="PASS" starttime="20230731 07:36:02.953" endtime="20230731 07:36:05.101"/>
</kw>
<status status="PASS" starttime="20230731 07:35:59.833" endtime="20230731 07:36:05.101"/>
</kw>
<status status="PASS" starttime="20230731 07:35:57.428" endtime="20230731 07:36:05.101"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:05.103" endtime="20230731 07:36:05.198"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:05.200" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:05.199" endtime="20230731 07:36:05.200"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:05.213" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:36:05.200" endtime="20230731 07:36:05.213"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:36:05.214" endtime="20230731 07:36:05.214"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:05.213" endtime="20230731 07:36:05.214"/>
</branch>
<status status="PASS" starttime="20230731 07:36:05.213" endtime="20230731 07:36:05.214"/>
</if>
<status status="PASS" starttime="20230731 07:36:05.198" endtime="20230731 07:36:05.214"/>
</kw>
<status status="PASS" starttime="20230731 07:36:05.102" endtime="20230731 07:36:05.214"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:05.217" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:05.216" endtime="20230731 07:36:05.217"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:05.231" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:36:05.217" endtime="20230731 07:36:05.231"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:36:05.232" endtime="20230731 07:36:05.232"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:05.232" endtime="20230731 07:36:05.232"/>
</branch>
<status status="PASS" starttime="20230731 07:36:05.231" endtime="20230731 07:36:05.232"/>
</if>
<status status="PASS" starttime="20230731 07:36:05.216" endtime="20230731 07:36:05.233"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:05.233" endtime="20230731 07:36:05.414"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:05.416" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:05.415" endtime="20230731 07:36:05.416"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:05.448" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:36:05.417" endtime="20230731 07:36:05.448"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:05.945" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:36:05.453" endtime="20230731 07:36:05.945"/>
</kw>
<status status="PASS" starttime="20230731 07:36:05.450" endtime="20230731 07:36:05.946"/>
</kw>
<status status="PASS" starttime="20230731 07:36:05.448" endtime="20230731 07:36:05.946"/>
</branch>
<status status="PASS" starttime="20230731 07:36:05.448" endtime="20230731 07:36:05.946"/>
</if>
<status status="PASS" starttime="20230731 07:36:05.415" endtime="20230731 07:36:05.947"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:05.949" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:05.948" endtime="20230731 07:36:05.949"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:05.982" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230731 07:36:05.950" endtime="20230731 07:36:05.982"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:08.651" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:36:05.991" endtime="20230731 07:36:08.651"/>
</kw>
<status status="PASS" starttime="20230731 07:36:05.984" endtime="20230731 07:36:08.651"/>
</kw>
<status status="PASS" starttime="20230731 07:36:05.983" endtime="20230731 07:36:08.651"/>
</branch>
<status status="PASS" starttime="20230731 07:36:05.982" endtime="20230731 07:36:08.652"/>
</if>
<status status="PASS" starttime="20230731 07:36:05.947" endtime="20230731 07:36:08.652"/>
</kw>
<status status="PASS" starttime="20230731 07:36:05.215" endtime="20230731 07:36:08.652"/>
</kw>
<kw name="And Select Code need to edit" library="common" sourcename="Select ${name} need to edit">
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230731 07:36:08.671" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230731 07:36:08.671" level="INFO">${elements} = ['element=8c4172f1-429f-400f-b1ca-44fdbf430266', 'element=9e940505-da67-4224-9383-0e8307e7ee7e', 'element=72020a8e-d401-4894-927a-0cc0f2ccf58b', 'element=e9d0a008-3052-4708-babc-97d09c290854', 'elemen...</msg>
<status status="PASS" starttime="20230731 07:36:08.654" endtime="20230731 07:36:08.671"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'Post'">
<kw name="Click" library="Browser">
<arg>${elements}[2]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:36:08.673" endtime="20230731 07:36:08.673"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:08.672" endtime="20230731 07:36:08.673"/>
</branch>
<branch type="ELSE IF" condition="'${name}' != 'post'">
<kw name="Click" library="Browser">
<arg>${elements}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:08.674" endtime="20230731 07:36:08.866"/>
</kw>
<status status="PASS" starttime="20230731 07:36:08.673" endtime="20230731 07:36:08.867"/>
</branch>
<status status="PASS" starttime="20230731 07:36:08.672" endtime="20230731 07:36:08.867"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:08.868" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:08.868" endtime="20230731 07:36:08.868"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:08.951" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:36:08.869" endtime="20230731 07:36:08.951"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:36:08.953" endtime="20230731 07:36:08.953"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:08.952" endtime="20230731 07:36:08.954"/>
</branch>
<status status="PASS" starttime="20230731 07:36:08.951" endtime="20230731 07:36:08.954"/>
</if>
<status status="PASS" starttime="20230731 07:36:08.867" endtime="20230731 07:36:08.954"/>
</kw>
<status status="PASS" starttime="20230731 07:36:08.653" endtime="20230731 07:36:08.956"/>
</kw>
<kw name="Then User look title &quot;Chỉnh sửa mã Position&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:08.968" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:08.967" endtime="20230731 07:36:08.968"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:09.096" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:36:08.969" endtime="20230731 07:36:09.096"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:09.993" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:36:09.100" endtime="20230731 07:36:09.993"/>
</kw>
<status status="PASS" starttime="20230731 07:36:09.097" endtime="20230731 07:36:09.993"/>
</kw>
<status status="PASS" starttime="20230731 07:36:09.097" endtime="20230731 07:36:09.993"/>
</branch>
<status status="PASS" starttime="20230731 07:36:09.096" endtime="20230731 07:36:09.994"/>
</if>
<status status="PASS" starttime="20230731 07:36:08.966" endtime="20230731 07:36:09.994"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:09.996" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:09.996" endtime="20230731 07:36:09.996"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:10.009" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:36:09.997" endtime="20230731 07:36:10.009"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:36:10.011" endtime="20230731 07:36:10.011"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:10.010" endtime="20230731 07:36:10.011"/>
</branch>
<status status="PASS" starttime="20230731 07:36:10.010" endtime="20230731 07:36:10.011"/>
</if>
<status status="PASS" starttime="20230731 07:36:09.995" endtime="20230731 07:36:10.012"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230731 07:36:10.022" level="INFO">Title: 'Chỉnh sửa mã Position'</msg>
<msg timestamp="20230731 07:36:10.023" level="INFO">${actualTitle} = Chỉnh sửa mã Position</msg>
<status status="PASS" starttime="20230731 07:36:10.012" endtime="20230731 07:36:10.023"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230731 07:36:10.024" endtime="20230731 07:36:10.024"/>
</kw>
<status status="PASS" starttime="20230731 07:36:09.994" endtime="20230731 07:36:10.025"/>
</kw>
<status status="PASS" starttime="20230731 07:36:08.966" endtime="20230731 07:36:10.025"/>
</kw>
<kw name="And User look title form &quot;Chỉnh sửa mã Position&quot;" library="common" sourcename="User look title form &quot;${text}&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//h1[@class="text-xl font-bold hidden sm:block" and //h1[text() = "${text}"]]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:10.027" level="INFO">${element} = //h1[@class="text-xl font-bold hidden sm:block" and //h1[text() = "Chỉnh sửa mã Position"]]</msg>
<status status="PASS" starttime="20230731 07:36:10.027" endtime="20230731 07:36:10.027"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:10.042" level="INFO">Waited for Element with selector //h1[@class="text-xl font-bold hidden sm:block" and //h1[text() = "Chỉnh sửa mã Position"]] at state visible</msg>
<status status="PASS" starttime="20230731 07:36:10.029" endtime="20230731 07:36:10.042"/>
</kw>
<status status="PASS" starttime="20230731 07:36:10.027" endtime="20230731 07:36:10.043"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:36:10.090" level="INFO">Text: 'Chỉnh sửa mã Position'</msg>
<status status="PASS" starttime="20230731 07:36:10.047" endtime="20230731 07:36:10.090"/>
</kw>
<status status="PASS" starttime="20230731 07:36:10.043" endtime="20230731 07:36:10.091"/>
</kw>
<status status="PASS" starttime="20230731 07:36:10.026" endtime="20230731 07:36:10.091"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230731 07:36:11.938" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230731 07:36:10.093" endtime="20230731 07:36:11.939"/>
</kw>
<status status="PASS" starttime="20230731 07:36:10.092" endtime="20230731 07:36:11.939"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230731 07:35:54.012" endtime="20230731 07:36:11.940"/>
</test>
<test id="s1-t2" name="EDC-02 Verify that edit code unsuccessfull because blank &quot;Tên mã&quot; field" line="19">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230731 07:36:11.963" endtime="20230731 07:36:11.964"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230731 07:36:11.967" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\71c7db14-7117-4a35-9345-b0cd4a97e523"}</msg>
<msg timestamp="20230731 07:36:13.225" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\71c7db14-7117-4a35-9345-b0cd4a97e523"}</msg>
<status status="PASS" starttime="20230731 07:36:11.965" endtime="20230731 07:36:13.226"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230731 07:36:14.898" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230731 07:36:14.898" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230731 07:36:13.227" endtime="20230731 07:36:14.898"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230731 07:36:14.900" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230731 07:36:14.899" endtime="20230731 07:36:14.901"/>
</kw>
<status status="PASS" starttime="20230731 07:36:11.963" endtime="20230731 07:36:14.901"/>
</kw>
<kw name="When Go to edit code page" library="common" sourcename="Go to ${name} code page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:14.905" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:36:14.905" endtime="20230731 07:36:14.905"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:14.906" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:36:14.906" endtime="20230731 07:36:14.906"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:14.907" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:36:14.906" endtime="20230731 07:36:14.907"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:14.907" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:14.907" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:36:14.907" endtime="20230731 07:36:14.907"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:14.908" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:36:14.908" endtime="20230731 07:36:14.908"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:14.909" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:14.909" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:14.908" endtime="20230731 07:36:14.909"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.911" endtime="20230731 07:36:14.911"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.911" endtime="20230731 07:36:14.911"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:14.910" endtime="20230731 07:36:14.911"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.912" endtime="20230731 07:36:14.912"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.912" endtime="20230731 07:36:14.912"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.913" endtime="20230731 07:36:14.913"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:14.911" endtime="20230731 07:36:14.913"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.913" endtime="20230731 07:36:14.914"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.914" endtime="20230731 07:36:14.914"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:14.913" endtime="20230731 07:36:14.914"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.915" endtime="20230731 07:36:14.916"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.916" endtime="20230731 07:36:14.917"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:14.914" endtime="20230731 07:36:14.917"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.918" endtime="20230731 07:36:14.918"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.919" endtime="20230731 07:36:14.919"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:14.917" endtime="20230731 07:36:14.920"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.921" endtime="20230731 07:36:14.921"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.922" endtime="20230731 07:36:14.922"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:14.920" endtime="20230731 07:36:14.922"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.924" endtime="20230731 07:36:14.924"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.924" endtime="20230731 07:36:14.925"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:14.923" endtime="20230731 07:36:14.925"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.926" endtime="20230731 07:36:14.927"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:14.925" endtime="20230731 07:36:14.927"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:36:14.928" endtime="20230731 07:36:14.928"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:14.927" endtime="20230731 07:36:14.929"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.930" endtime="20230731 07:36:14.931"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.932" endtime="20230731 07:36:14.932"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:14.929" endtime="20230731 07:36:14.932"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.934" endtime="20230731 07:36:14.934"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:14.933" endtime="20230731 07:36:14.934"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.936" endtime="20230731 07:36:14.936"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:14.935" endtime="20230731 07:36:14.937"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.938" endtime="20230731 07:36:14.938"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:14.937" endtime="20230731 07:36:14.939"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:14.942" endtime="20230731 07:36:14.942"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:14.939" endtime="20230731 07:36:14.944"/>
</branch>
<status status="PASS" starttime="20230731 07:36:14.910" endtime="20230731 07:36:14.945"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:14.947" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:36:14.947" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:36:14.946" endtime="20230731 07:36:14.948"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:36:14.951" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:36:14.950" endtime="20230731 07:36:14.952"/>
</kw>
<status status="PASS" starttime="20230731 07:36:14.948" endtime="20230731 07:36:14.956"/>
</branch>
<status status="PASS" starttime="20230731 07:36:14.948" endtime="20230731 07:36:14.956"/>
</if>
<msg timestamp="20230731 07:36:14.958" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:36:14.904" endtime="20230731 07:36:14.958"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:36:14.960" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:36:14.958" endtime="20230731 07:36:14.960"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:14.961" endtime="20230731 07:36:17.038"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:36:17.039" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230731 07:36:17.039" endtime="20230731 07:36:17.095"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:17.096" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:36:17.097" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:36:17.096" endtime="20230731 07:36:17.097"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:36:17.099" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:36:17.098" endtime="20230731 07:36:17.099"/>
</kw>
<status status="PASS" starttime="20230731 07:36:17.097" endtime="20230731 07:36:17.099"/>
</branch>
<status status="PASS" starttime="20230731 07:36:17.097" endtime="20230731 07:36:17.099"/>
</if>
<status status="PASS" starttime="20230731 07:36:14.903" endtime="20230731 07:36:17.100"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:17.104" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:36:17.103" endtime="20230731 07:36:17.104"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:17.105" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:36:17.104" endtime="20230731 07:36:17.105"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:17.107" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:36:17.105" endtime="20230731 07:36:17.107"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:17.108" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:17.108" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:36:17.107" endtime="20230731 07:36:17.108"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:17.111" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:36:17.110" endtime="20230731 07:36:17.111"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:17.112" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:17.112" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:17.111" endtime="20230731 07:36:17.112"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.113" endtime="20230731 07:36:17.113"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.113" endtime="20230731 07:36:17.114"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:17.112" endtime="20230731 07:36:17.114"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.114" endtime="20230731 07:36:17.115"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.115" endtime="20230731 07:36:17.115"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.116" endtime="20230731 07:36:17.116"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:17.114" endtime="20230731 07:36:17.117"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.117" endtime="20230731 07:36:17.118"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.118" endtime="20230731 07:36:17.118"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:17.117" endtime="20230731 07:36:17.118"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.119" endtime="20230731 07:36:17.120"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.120" endtime="20230731 07:36:17.121"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:17.119" endtime="20230731 07:36:17.121"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.122" endtime="20230731 07:36:17.122"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.123" endtime="20230731 07:36:17.123"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:17.121" endtime="20230731 07:36:17.123"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.124" endtime="20230731 07:36:17.124"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.125" endtime="20230731 07:36:17.125"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:17.123" endtime="20230731 07:36:17.125"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.126" endtime="20230731 07:36:17.127"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.127" endtime="20230731 07:36:17.127"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:17.125" endtime="20230731 07:36:17.127"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.129" endtime="20230731 07:36:17.129"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:17.128" endtime="20230731 07:36:17.130"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:36:17.131" endtime="20230731 07:36:17.131"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:17.130" endtime="20230731 07:36:17.131"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.132" endtime="20230731 07:36:17.132"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.133" endtime="20230731 07:36:17.133"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:17.131" endtime="20230731 07:36:17.133"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.134" endtime="20230731 07:36:17.134"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:17.133" endtime="20230731 07:36:17.134"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.136" endtime="20230731 07:36:17.136"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:17.135" endtime="20230731 07:36:17.136"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.137" endtime="20230731 07:36:17.137"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:17.136" endtime="20230731 07:36:17.137"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.138" endtime="20230731 07:36:17.138"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:17.138" endtime="20230731 07:36:17.138"/>
</branch>
<status status="PASS" starttime="20230731 07:36:17.112" endtime="20230731 07:36:17.138"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:17.139" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:36:17.139" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:36:17.139" endtime="20230731 07:36:17.139"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:36:17.141" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:36:17.141" endtime="20230731 07:36:17.142"/>
</kw>
<status status="PASS" starttime="20230731 07:36:17.140" endtime="20230731 07:36:17.142"/>
</branch>
<status status="PASS" starttime="20230731 07:36:17.140" endtime="20230731 07:36:17.142"/>
</if>
<msg timestamp="20230731 07:36:17.143" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:36:17.102" endtime="20230731 07:36:17.143"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:36:17.145" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:36:17.143" endtime="20230731 07:36:17.145"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:17.145" endtime="20230731 07:36:17.240"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:36:17.242" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230731 07:36:17.240" endtime="20230731 07:36:17.327"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:17.328" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:36:17.328" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:36:17.327" endtime="20230731 07:36:17.328"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:36:17.332" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:36:17.330" endtime="20230731 07:36:17.332"/>
</kw>
<status status="PASS" starttime="20230731 07:36:17.328" endtime="20230731 07:36:17.333"/>
</branch>
<status status="PASS" starttime="20230731 07:36:17.328" endtime="20230731 07:36:17.333"/>
</if>
<status status="PASS" starttime="20230731 07:36:17.100" endtime="20230731 07:36:17.334"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:17.338" endtime="20230731 07:36:17.535"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:17.539" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:36:17.538" endtime="20230731 07:36:17.539"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:17.566" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:36:17.539" endtime="20230731 07:36:17.567"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.572" endtime="20230731 07:36:17.572"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.572" endtime="20230731 07:36:17.573"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:17.567" endtime="20230731 07:36:17.573"/>
</branch>
<status status="PASS" starttime="20230731 07:36:17.567" endtime="20230731 07:36:17.574"/>
</if>
<status status="PASS" starttime="20230731 07:36:17.536" endtime="20230731 07:36:17.574"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:36:17.576" endtime="20230731 07:36:17.645"/>
</kw>
<status status="PASS" starttime="20230731 07:36:17.334" endtime="20230731 07:36:17.646"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:17.647" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:36:17.646" endtime="20230731 07:36:17.647"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:17.647" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:17.648" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:17.647" endtime="20230731 07:36:17.648"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:36:17.648" endtime="20230731 07:36:17.648"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:17.648" endtime="20230731 07:36:17.649"/>
</branch>
<status status="PASS" starttime="20230731 07:36:17.648" endtime="20230731 07:36:17.649"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:36:18.856" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230731 07:36:17.655" endtime="20230731 07:36:18.856"/>
</kw>
<status status="PASS" starttime="20230731 07:36:17.649" endtime="20230731 07:36:18.856"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:18.857" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:36:18.857" endtime="20230731 07:36:18.858"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:19.723" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:36:19.723" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:36:19.723" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:36:18.862" endtime="20230731 07:36:19.726"/>
</kw>
<status status="FAIL" starttime="20230731 07:36:18.859" endtime="20230731 07:36:19.727"/>
</kw>
<msg timestamp="20230731 07:36:19.727" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:36:18.858" endtime="20230731 07:36:19.727"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:36:19.728" endtime="20230731 07:36:19.729"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:19.728" endtime="20230731 07:36:19.729"/>
</branch>
<status status="PASS" starttime="20230731 07:36:19.728" endtime="20230731 07:36:19.729"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:22.203" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:36:19.732" endtime="20230731 07:36:22.203"/>
</kw>
<status status="PASS" starttime="20230731 07:36:19.730" endtime="20230731 07:36:22.204"/>
</kw>
<status status="PASS" starttime="20230731 07:36:17.646" endtime="20230731 07:36:22.204"/>
</kw>
<status status="PASS" starttime="20230731 07:36:14.903" endtime="20230731 07:36:22.205"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:22.206" endtime="20230731 07:36:22.302"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:22.305" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:22.305" endtime="20230731 07:36:22.305"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:22.317" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:36:22.306" endtime="20230731 07:36:22.317"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:36:22.318" endtime="20230731 07:36:22.318"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:22.318" endtime="20230731 07:36:22.319"/>
</branch>
<status status="PASS" starttime="20230731 07:36:22.317" endtime="20230731 07:36:22.319"/>
</if>
<status status="PASS" starttime="20230731 07:36:22.303" endtime="20230731 07:36:22.320"/>
</kw>
<status status="PASS" starttime="20230731 07:36:22.205" endtime="20230731 07:36:22.320"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:22.324" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:22.323" endtime="20230731 07:36:22.324"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:22.334" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:36:22.324" endtime="20230731 07:36:22.334"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:36:22.337" endtime="20230731 07:36:22.337"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:22.336" endtime="20230731 07:36:22.337"/>
</branch>
<status status="PASS" starttime="20230731 07:36:22.335" endtime="20230731 07:36:22.338"/>
</if>
<status status="PASS" starttime="20230731 07:36:22.322" endtime="20230731 07:36:22.338"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:22.338" endtime="20230731 07:36:22.540"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:22.544" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:22.543" endtime="20230731 07:36:22.544"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:22.563" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:36:22.545" endtime="20230731 07:36:22.563"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:23.032" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:36:22.566" endtime="20230731 07:36:23.032"/>
</kw>
<status status="PASS" starttime="20230731 07:36:22.564" endtime="20230731 07:36:23.033"/>
</kw>
<status status="PASS" starttime="20230731 07:36:22.563" endtime="20230731 07:36:23.033"/>
</branch>
<status status="PASS" starttime="20230731 07:36:22.563" endtime="20230731 07:36:23.033"/>
</if>
<status status="PASS" starttime="20230731 07:36:22.541" endtime="20230731 07:36:23.034"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:23.039" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:23.037" endtime="20230731 07:36:23.039"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:23.061" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230731 07:36:23.041" endtime="20230731 07:36:23.061"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:25.235" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:36:23.065" endtime="20230731 07:36:25.235"/>
</kw>
<status status="PASS" starttime="20230731 07:36:23.062" endtime="20230731 07:36:25.235"/>
</kw>
<status status="PASS" starttime="20230731 07:36:23.061" endtime="20230731 07:36:25.236"/>
</branch>
<status status="PASS" starttime="20230731 07:36:23.061" endtime="20230731 07:36:25.236"/>
</if>
<status status="PASS" starttime="20230731 07:36:23.035" endtime="20230731 07:36:25.236"/>
</kw>
<status status="PASS" starttime="20230731 07:36:22.321" endtime="20230731 07:36:25.237"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Thêm mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20230731 07:36:25.238" endtime="20230731 07:36:25.238"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:25.237" endtime="20230731 07:36:25.238"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'edit'">
<kw name="Select Code need to edit" library="common" sourcename="Select ${name} need to edit">
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230731 07:36:25.256" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230731 07:36:25.256" level="INFO">${elements} = ['element=ee7a9f41-8c79-4014-ac04-bf0edc0fa787', 'element=3abe3732-bc13-40e3-9461-09d83895f290', 'element=37718439-ef61-4ffb-8c9a-34bd3a081c71', 'element=76074caa-dcbe-4e94-a60c-92531fd7f209', 'elemen...</msg>
<status status="PASS" starttime="20230731 07:36:25.240" endtime="20230731 07:36:25.256"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'Post'">
<kw name="Click" library="Browser">
<arg>${elements}[2]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:36:25.258" endtime="20230731 07:36:25.258"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:25.257" endtime="20230731 07:36:25.258"/>
</branch>
<branch type="ELSE IF" condition="'${name}' != 'post'">
<kw name="Click" library="Browser">
<arg>${elements}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:25.259" endtime="20230731 07:36:25.413"/>
</kw>
<status status="PASS" starttime="20230731 07:36:25.258" endtime="20230731 07:36:25.414"/>
</branch>
<status status="PASS" starttime="20230731 07:36:25.257" endtime="20230731 07:36:25.414"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:25.416" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:25.415" endtime="20230731 07:36:25.416"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:25.436" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:36:25.417" endtime="20230731 07:36:25.436"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:25.616" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:36:25.440" endtime="20230731 07:36:25.616"/>
</kw>
<status status="PASS" starttime="20230731 07:36:25.438" endtime="20230731 07:36:25.617"/>
</kw>
<status status="PASS" starttime="20230731 07:36:25.437" endtime="20230731 07:36:25.617"/>
</branch>
<status status="PASS" starttime="20230731 07:36:25.437" endtime="20230731 07:36:25.618"/>
</if>
<status status="PASS" starttime="20230731 07:36:25.414" endtime="20230731 07:36:25.618"/>
</kw>
<status status="PASS" starttime="20230731 07:36:25.239" endtime="20230731 07:36:25.618"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:36:27.619" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230731 07:36:25.619" endtime="20230731 07:36:27.619"/>
</kw>
<status status="PASS" starttime="20230731 07:36:25.238" endtime="20230731 07:36:27.620"/>
</branch>
<status status="PASS" starttime="20230731 07:36:25.237" endtime="20230731 07:36:27.620"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:27.622" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:27.622" endtime="20230731 07:36:27.623"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:27.632" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:36:27.623" endtime="20230731 07:36:27.632"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:36:27.634" endtime="20230731 07:36:27.634"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.633" endtime="20230731 07:36:27.634"/>
</branch>
<status status="PASS" starttime="20230731 07:36:27.633" endtime="20230731 07:36:27.634"/>
</if>
<status status="PASS" starttime="20230731 07:36:27.621" endtime="20230731 07:36:27.635"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:36:27.737" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230731 07:36:27.635" endtime="20230731 07:36:27.737"/>
</kw>
<status status="PASS" starttime="20230731 07:36:14.902" endtime="20230731 07:36:27.737"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Tên mã&quot; with &quot;&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:27.741" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:36:27.741" endtime="20230731 07:36:27.741"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:27.742" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:36:27.742" endtime="20230731 07:36:27.742"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:27.744" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:36:27.743" endtime="20230731 07:36:27.744"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:27.745" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:27.745" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:36:27.744" endtime="20230731 07:36:27.745"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:27.747" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:36:27.746" endtime="20230731 07:36:27.747"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:27.748" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:27.748" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:27.747" endtime="20230731 07:36:27.748"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.749" endtime="20230731 07:36:27.749"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.750" endtime="20230731 07:36:27.750"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.748" endtime="20230731 07:36:27.750"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.751" endtime="20230731 07:36:27.752"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.752" endtime="20230731 07:36:27.752"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.753" endtime="20230731 07:36:27.753"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.751" endtime="20230731 07:36:27.753"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.754" endtime="20230731 07:36:27.755"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.755" endtime="20230731 07:36:27.756"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.753" endtime="20230731 07:36:27.756"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.757" endtime="20230731 07:36:27.758"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.758" endtime="20230731 07:36:27.758"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.756" endtime="20230731 07:36:27.759"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.760" endtime="20230731 07:36:27.761"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.761" endtime="20230731 07:36:27.761"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.759" endtime="20230731 07:36:27.762"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.763" endtime="20230731 07:36:27.763"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.763" endtime="20230731 07:36:27.764"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.762" endtime="20230731 07:36:27.764"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.765" endtime="20230731 07:36:27.766"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.766" endtime="20230731 07:36:27.766"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.764" endtime="20230731 07:36:27.767"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.768" endtime="20230731 07:36:27.768"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.767" endtime="20230731 07:36:27.768"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:36:27.771" endtime="20230731 07:36:27.771"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.770" endtime="20230731 07:36:27.772"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.774" endtime="20230731 07:36:27.775"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.775" endtime="20230731 07:36:27.776"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.772" endtime="20230731 07:36:27.776"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.777" endtime="20230731 07:36:27.777"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.776" endtime="20230731 07:36:27.778"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.778" endtime="20230731 07:36:27.778"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.778" endtime="20230731 07:36:27.779"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.780" endtime="20230731 07:36:27.780"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.779" endtime="20230731 07:36:27.780"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.781" endtime="20230731 07:36:27.781"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.780" endtime="20230731 07:36:27.781"/>
</branch>
<status status="PASS" starttime="20230731 07:36:27.748" endtime="20230731 07:36:27.782"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:27.783" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:27.783" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:27.782" endtime="20230731 07:36:27.783"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.784" endtime="20230731 07:36:27.785"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.783" endtime="20230731 07:36:27.786"/>
</branch>
<status status="PASS" starttime="20230731 07:36:27.783" endtime="20230731 07:36:27.786"/>
</if>
<msg timestamp="20230731 07:36:27.786" level="INFO">${text} = </msg>
<status status="PASS" starttime="20230731 07:36:27.739" endtime="20230731 07:36:27.787"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:36:27.788" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:36:27.787" endtime="20230731 07:36:27.788"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:27.789" endtime="20230731 07:36:27.838"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:36:27.839" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20230731 07:36:27.839" endtime="20230731 07:36:27.870"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:27.871" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:27.871" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:27.871" endtime="20230731 07:36:27.871"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.873" endtime="20230731 07:36:27.873"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.872" endtime="20230731 07:36:27.873"/>
</branch>
<status status="PASS" starttime="20230731 07:36:27.872" endtime="20230731 07:36:27.874"/>
</if>
<status status="PASS" starttime="20230731 07:36:27.738" endtime="20230731 07:36:27.874"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Mã&quot; with &quot;&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:27.878" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:36:27.877" endtime="20230731 07:36:27.878"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:27.880" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:36:27.878" endtime="20230731 07:36:27.880"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:27.881" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:36:27.880" endtime="20230731 07:36:27.881"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:27.883" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:27.883" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:36:27.882" endtime="20230731 07:36:27.883"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:27.885" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:36:27.883" endtime="20230731 07:36:27.885"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:27.886" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:27.886" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:27.885" endtime="20230731 07:36:27.886"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.888" endtime="20230731 07:36:27.888"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.888" endtime="20230731 07:36:27.888"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.887" endtime="20230731 07:36:27.888"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.889" endtime="20230731 07:36:27.890"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.890" endtime="20230731 07:36:27.891"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.891" endtime="20230731 07:36:27.891"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.889" endtime="20230731 07:36:27.892"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.893" endtime="20230731 07:36:27.893"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.894" endtime="20230731 07:36:27.894"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.892" endtime="20230731 07:36:27.894"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.895" endtime="20230731 07:36:27.896"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.896" endtime="20230731 07:36:27.896"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.894" endtime="20230731 07:36:27.897"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.898" endtime="20230731 07:36:27.898"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.899" endtime="20230731 07:36:27.899"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.897" endtime="20230731 07:36:27.900"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.902" endtime="20230731 07:36:27.902"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.902" endtime="20230731 07:36:27.903"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.900" endtime="20230731 07:36:27.903"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.904" endtime="20230731 07:36:27.904"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.905" endtime="20230731 07:36:27.905"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.903" endtime="20230731 07:36:27.905"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.906" endtime="20230731 07:36:27.907"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.906" endtime="20230731 07:36:27.907"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:36:27.908" endtime="20230731 07:36:27.908"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.907" endtime="20230731 07:36:27.908"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.909" endtime="20230731 07:36:27.909"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.910" endtime="20230731 07:36:27.910"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.908" endtime="20230731 07:36:27.911"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.913" endtime="20230731 07:36:27.913"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.912" endtime="20230731 07:36:27.914"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.915" endtime="20230731 07:36:27.915"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.914" endtime="20230731 07:36:27.916"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.917" endtime="20230731 07:36:27.917"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.916" endtime="20230731 07:36:27.917"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.918" endtime="20230731 07:36:27.919"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.918" endtime="20230731 07:36:27.919"/>
</branch>
<status status="PASS" starttime="20230731 07:36:27.887" endtime="20230731 07:36:27.919"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:27.921" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:27.921" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:27.920" endtime="20230731 07:36:27.921"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:36:27.922" endtime="20230731 07:36:27.922"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:27.921" endtime="20230731 07:36:27.923"/>
</branch>
<status status="PASS" starttime="20230731 07:36:27.921" endtime="20230731 07:36:27.923"/>
</if>
<msg timestamp="20230731 07:36:27.924" level="INFO">${text} = </msg>
<status status="PASS" starttime="20230731 07:36:27.876" endtime="20230731 07:36:27.924"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:36:27.925" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:36:27.924" endtime="20230731 07:36:27.925"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:27.926" endtime="20230731 07:36:28.049"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:36:28.051" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20230731 07:36:28.050" endtime="20230731 07:36:28.080"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:28.081" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:28.081" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:28.080" endtime="20230731 07:36:28.081"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230731 07:36:28.082" endtime="20230731 07:36:28.083"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:28.082" endtime="20230731 07:36:28.083"/>
</branch>
<status status="PASS" starttime="20230731 07:36:28.081" endtime="20230731 07:36:28.083"/>
</if>
<status status="PASS" starttime="20230731 07:36:27.875" endtime="20230731 07:36:28.084"/>
</kw>
<kw name="Then Required message &quot;Tên mã&quot; displayed under &quot;Xin vui lòng nhập tên mã&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230731 07:36:28.100" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên mã"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230731 07:36:28.099" endtime="20230731 07:36:28.100"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:28.118" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên mã"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230731 07:36:28.104" endtime="20230731 07:36:28.118"/>
</kw>
<status status="PASS" starttime="20230731 07:36:28.101" endtime="20230731 07:36:28.119"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:36:28.170" level="INFO">Text: 'Xin vui lòng nhập tên mã'</msg>
<status status="PASS" starttime="20230731 07:36:28.124" endtime="20230731 07:36:28.170"/>
</kw>
<status status="PASS" starttime="20230731 07:36:28.120" endtime="20230731 07:36:28.171"/>
</kw>
<status status="PASS" starttime="20230731 07:36:28.098" endtime="20230731 07:36:28.171"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230731 07:36:29.475" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230731 07:36:28.173" endtime="20230731 07:36:29.475"/>
</kw>
<status status="PASS" starttime="20230731 07:36:28.172" endtime="20230731 07:36:29.476"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230731 07:36:11.953" endtime="20230731 07:36:29.477"/>
</test>
<test id="s1-t3" name="EDC-03 Verify that edit code unsuccessfull because blank &quot;Mã&quot; field" line="26">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230731 07:36:29.496" endtime="20230731 07:36:29.497"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230731 07:36:29.500" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\33a34aed-a2fe-4b3a-ab45-dd9699de9121"}</msg>
<msg timestamp="20230731 07:36:30.777" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\33a34aed-a2fe-4b3a-ab45-dd9699de9121"}</msg>
<status status="PASS" starttime="20230731 07:36:29.497" endtime="20230731 07:36:30.778"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230731 07:36:32.564" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230731 07:36:32.564" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230731 07:36:30.778" endtime="20230731 07:36:32.564"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230731 07:36:32.567" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230731 07:36:32.566" endtime="20230731 07:36:32.568"/>
</kw>
<status status="PASS" starttime="20230731 07:36:29.495" endtime="20230731 07:36:32.568"/>
</kw>
<kw name="When Go to edit code page" library="common" sourcename="Go to ${name} code page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:32.575" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:36:32.575" endtime="20230731 07:36:32.576"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:32.577" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:36:32.576" endtime="20230731 07:36:32.577"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:32.578" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:36:32.578" endtime="20230731 07:36:32.578"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:32.579" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:32.579" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:36:32.579" endtime="20230731 07:36:32.579"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:32.581" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:36:32.580" endtime="20230731 07:36:32.581"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:32.582" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:32.582" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:32.581" endtime="20230731 07:36:32.582"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.583" endtime="20230731 07:36:32.583"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.583" endtime="20230731 07:36:32.583"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:32.582" endtime="20230731 07:36:32.584"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.585" endtime="20230731 07:36:32.585"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.586" endtime="20230731 07:36:32.587"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.587" endtime="20230731 07:36:32.588"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:32.584" endtime="20230731 07:36:32.588"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.590" endtime="20230731 07:36:32.590"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.591" endtime="20230731 07:36:32.591"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:32.588" endtime="20230731 07:36:32.591"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.593" endtime="20230731 07:36:32.593"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.593" endtime="20230731 07:36:32.594"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:32.592" endtime="20230731 07:36:32.594"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.595" endtime="20230731 07:36:32.596"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.596" endtime="20230731 07:36:32.597"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:32.594" endtime="20230731 07:36:32.597"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.598" endtime="20230731 07:36:32.598"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.598" endtime="20230731 07:36:32.599"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:32.597" endtime="20230731 07:36:32.599"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.600" endtime="20230731 07:36:32.601"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.602" endtime="20230731 07:36:32.602"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:32.599" endtime="20230731 07:36:32.603"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.604" endtime="20230731 07:36:32.605"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:32.603" endtime="20230731 07:36:32.607"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:36:32.608" endtime="20230731 07:36:32.608"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:32.607" endtime="20230731 07:36:32.609"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.610" endtime="20230731 07:36:32.610"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.611" endtime="20230731 07:36:32.611"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:32.609" endtime="20230731 07:36:32.611"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.612" endtime="20230731 07:36:32.613"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:32.612" endtime="20230731 07:36:32.613"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.614" endtime="20230731 07:36:32.614"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:32.613" endtime="20230731 07:36:32.614"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.615" endtime="20230731 07:36:32.616"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:32.615" endtime="20230731 07:36:32.616"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:32.617" endtime="20230731 07:36:32.618"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:32.616" endtime="20230731 07:36:32.618"/>
</branch>
<status status="PASS" starttime="20230731 07:36:32.582" endtime="20230731 07:36:32.619"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:32.621" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:36:32.622" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:36:32.620" endtime="20230731 07:36:32.622"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:36:32.623" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:36:32.623" endtime="20230731 07:36:32.623"/>
</kw>
<status status="PASS" starttime="20230731 07:36:32.622" endtime="20230731 07:36:32.623"/>
</branch>
<status status="PASS" starttime="20230731 07:36:32.622" endtime="20230731 07:36:32.624"/>
</if>
<msg timestamp="20230731 07:36:32.624" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:36:32.574" endtime="20230731 07:36:32.624"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:36:32.625" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:36:32.624" endtime="20230731 07:36:32.625"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:32.625" endtime="20230731 07:36:34.750"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:36:34.752" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230731 07:36:34.751" endtime="20230731 07:36:34.803"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:34.804" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:36:34.804" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:36:34.803" endtime="20230731 07:36:34.804"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:36:34.806" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:36:34.805" endtime="20230731 07:36:34.807"/>
</kw>
<status status="PASS" starttime="20230731 07:36:34.805" endtime="20230731 07:36:34.807"/>
</branch>
<status status="PASS" starttime="20230731 07:36:34.804" endtime="20230731 07:36:34.807"/>
</if>
<status status="PASS" starttime="20230731 07:36:32.573" endtime="20230731 07:36:34.807"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:34.810" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:36:34.809" endtime="20230731 07:36:34.810"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:34.811" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:36:34.810" endtime="20230731 07:36:34.811"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:34.812" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:36:34.811" endtime="20230731 07:36:34.812"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:34.814" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:34.814" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:36:34.813" endtime="20230731 07:36:34.814"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:34.815" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:36:34.814" endtime="20230731 07:36:34.815"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:34.817" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:34.817" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:34.816" endtime="20230731 07:36:34.817"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.818" endtime="20230731 07:36:34.819"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.819" endtime="20230731 07:36:34.820"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:34.818" endtime="20230731 07:36:34.820"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.820" endtime="20230731 07:36:34.821"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.821" endtime="20230731 07:36:34.822"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.822" endtime="20230731 07:36:34.822"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:34.820" endtime="20230731 07:36:34.822"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.823" endtime="20230731 07:36:34.824"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.824" endtime="20230731 07:36:34.824"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:34.823" endtime="20230731 07:36:34.825"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.825" endtime="20230731 07:36:34.826"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.826" endtime="20230731 07:36:34.826"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:34.825" endtime="20230731 07:36:34.827"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.828" endtime="20230731 07:36:34.828"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.828" endtime="20230731 07:36:34.828"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:34.827" endtime="20230731 07:36:34.829"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.830" endtime="20230731 07:36:34.830"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.830" endtime="20230731 07:36:34.831"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:34.829" endtime="20230731 07:36:34.831"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.832" endtime="20230731 07:36:34.832"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.833" endtime="20230731 07:36:34.833"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:34.831" endtime="20230731 07:36:34.834"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.835" endtime="20230731 07:36:34.835"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:34.834" endtime="20230731 07:36:34.835"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:36:34.836" endtime="20230731 07:36:34.836"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:34.835" endtime="20230731 07:36:34.837"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.837" endtime="20230731 07:36:34.838"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.838" endtime="20230731 07:36:34.838"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:34.837" endtime="20230731 07:36:34.839"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.840" endtime="20230731 07:36:34.840"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:34.839" endtime="20230731 07:36:34.840"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.841" endtime="20230731 07:36:34.841"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:34.840" endtime="20230731 07:36:34.841"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.842" endtime="20230731 07:36:34.843"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:34.842" endtime="20230731 07:36:34.843"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:34.844" endtime="20230731 07:36:34.844"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:34.843" endtime="20230731 07:36:34.844"/>
</branch>
<status status="PASS" starttime="20230731 07:36:34.818" endtime="20230731 07:36:34.845"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:34.846" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:36:34.846" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:36:34.845" endtime="20230731 07:36:34.846"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:36:34.848" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:36:34.847" endtime="20230731 07:36:34.848"/>
</kw>
<status status="PASS" starttime="20230731 07:36:34.846" endtime="20230731 07:36:34.848"/>
</branch>
<status status="PASS" starttime="20230731 07:36:34.846" endtime="20230731 07:36:34.848"/>
</if>
<msg timestamp="20230731 07:36:34.849" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:36:34.808" endtime="20230731 07:36:34.849"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:36:34.852" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:36:34.850" endtime="20230731 07:36:34.852"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:34.852" endtime="20230731 07:36:34.940"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:36:34.943" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230731 07:36:34.941" endtime="20230731 07:36:35.013"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:35.014" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:36:35.015" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:36:35.014" endtime="20230731 07:36:35.015"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:36:35.019" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:36:35.016" endtime="20230731 07:36:35.019"/>
</kw>
<status status="PASS" starttime="20230731 07:36:35.015" endtime="20230731 07:36:35.020"/>
</branch>
<status status="PASS" starttime="20230731 07:36:35.015" endtime="20230731 07:36:35.021"/>
</if>
<status status="PASS" starttime="20230731 07:36:34.808" endtime="20230731 07:36:35.021"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:35.023" endtime="20230731 07:36:35.215"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:35.217" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:36:35.216" endtime="20230731 07:36:35.217"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:35.246" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:36:35.218" endtime="20230731 07:36:35.246"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:36:35.248" endtime="20230731 07:36:35.248"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:36:35.252" endtime="20230731 07:36:35.253"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:35.247" endtime="20230731 07:36:35.254"/>
</branch>
<status status="PASS" starttime="20230731 07:36:35.247" endtime="20230731 07:36:35.255"/>
</if>
<status status="PASS" starttime="20230731 07:36:35.215" endtime="20230731 07:36:35.255"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:36:35.258" endtime="20230731 07:36:35.326"/>
</kw>
<status status="PASS" starttime="20230731 07:36:35.022" endtime="20230731 07:36:35.327"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:35.328" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:36:35.328" endtime="20230731 07:36:35.328"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:35.329" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:35.330" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:35.329" endtime="20230731 07:36:35.330"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:36:35.330" endtime="20230731 07:36:35.331"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:35.330" endtime="20230731 07:36:35.331"/>
</branch>
<status status="PASS" starttime="20230731 07:36:35.330" endtime="20230731 07:36:35.331"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:36:37.108" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230731 07:36:35.333" endtime="20230731 07:36:37.108"/>
</kw>
<status status="PASS" starttime="20230731 07:36:35.331" endtime="20230731 07:36:37.108"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:37.109" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:36:37.109" endtime="20230731 07:36:37.109"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:37.602" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:36:37.603" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:36:37.603" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:36:37.112" endtime="20230731 07:36:37.609"/>
</kw>
<status status="FAIL" starttime="20230731 07:36:37.110" endtime="20230731 07:36:37.610"/>
</kw>
<msg timestamp="20230731 07:36:37.611" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:36:37.109" endtime="20230731 07:36:37.611"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:36:37.612" endtime="20230731 07:36:37.613"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:37.611" endtime="20230731 07:36:37.613"/>
</branch>
<status status="PASS" starttime="20230731 07:36:37.611" endtime="20230731 07:36:37.613"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:39.690" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:36:37.616" endtime="20230731 07:36:39.691"/>
</kw>
<status status="PASS" starttime="20230731 07:36:37.613" endtime="20230731 07:36:39.691"/>
</kw>
<status status="PASS" starttime="20230731 07:36:35.327" endtime="20230731 07:36:39.691"/>
</kw>
<status status="PASS" starttime="20230731 07:36:32.572" endtime="20230731 07:36:39.691"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:39.692" endtime="20230731 07:36:39.770"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:39.772" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:39.771" endtime="20230731 07:36:39.772"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:39.781" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:36:39.773" endtime="20230731 07:36:39.781"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:36:39.782" endtime="20230731 07:36:39.782"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:39.781" endtime="20230731 07:36:39.782"/>
</branch>
<status status="PASS" starttime="20230731 07:36:39.781" endtime="20230731 07:36:39.782"/>
</if>
<status status="PASS" starttime="20230731 07:36:39.770" endtime="20230731 07:36:39.782"/>
</kw>
<status status="PASS" starttime="20230731 07:36:39.692" endtime="20230731 07:36:39.783"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:39.787" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:39.787" endtime="20230731 07:36:39.787"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:39.796" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:36:39.788" endtime="20230731 07:36:39.796"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:36:39.798" endtime="20230731 07:36:39.798"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:39.797" endtime="20230731 07:36:39.798"/>
</branch>
<status status="PASS" starttime="20230731 07:36:39.797" endtime="20230731 07:36:39.798"/>
</if>
<status status="PASS" starttime="20230731 07:36:39.785" endtime="20230731 07:36:39.798"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:39.799" endtime="20230731 07:36:39.967"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:39.973" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:39.973" endtime="20230731 07:36:39.973"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:39.993" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:36:39.974" endtime="20230731 07:36:39.993"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:40.353" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:36:39.996" endtime="20230731 07:36:40.354"/>
</kw>
<status status="PASS" starttime="20230731 07:36:39.994" endtime="20230731 07:36:40.354"/>
</kw>
<status status="PASS" starttime="20230731 07:36:39.994" endtime="20230731 07:36:40.355"/>
</branch>
<status status="PASS" starttime="20230731 07:36:39.993" endtime="20230731 07:36:40.357"/>
</if>
<status status="PASS" starttime="20230731 07:36:39.970" endtime="20230731 07:36:40.358"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:40.361" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:40.361" endtime="20230731 07:36:40.361"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:40.404" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230731 07:36:40.362" endtime="20230731 07:36:40.405"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:42.478" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:36:40.410" endtime="20230731 07:36:42.478"/>
</kw>
<status status="PASS" starttime="20230731 07:36:40.406" endtime="20230731 07:36:42.478"/>
</kw>
<status status="PASS" starttime="20230731 07:36:40.406" endtime="20230731 07:36:42.478"/>
</branch>
<status status="PASS" starttime="20230731 07:36:40.405" endtime="20230731 07:36:42.478"/>
</if>
<status status="PASS" starttime="20230731 07:36:40.359" endtime="20230731 07:36:42.478"/>
</kw>
<status status="PASS" starttime="20230731 07:36:39.784" endtime="20230731 07:36:42.479"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Thêm mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20230731 07:36:42.480" endtime="20230731 07:36:42.480"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:42.479" endtime="20230731 07:36:42.480"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'edit'">
<kw name="Select Code need to edit" library="common" sourcename="Select ${name} need to edit">
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230731 07:36:42.503" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230731 07:36:42.504" level="INFO">${elements} = ['element=7695921e-f601-4f31-a56f-329274f5e25e', 'element=20ba227e-2b0a-40bd-a0a5-9262a08cc915', 'element=2e8b1a33-8f78-4c7f-afee-600c35259d5c', 'element=d4a7ca16-a255-4d12-9a32-82c9011f5e61', 'elemen...</msg>
<status status="PASS" starttime="20230731 07:36:42.481" endtime="20230731 07:36:42.504"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'Post'">
<kw name="Click" library="Browser">
<arg>${elements}[2]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:36:42.506" endtime="20230731 07:36:42.507"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:42.504" endtime="20230731 07:36:42.507"/>
</branch>
<branch type="ELSE IF" condition="'${name}' != 'post'">
<kw name="Click" library="Browser">
<arg>${elements}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:42.508" endtime="20230731 07:36:42.652"/>
</kw>
<status status="PASS" starttime="20230731 07:36:42.507" endtime="20230731 07:36:42.653"/>
</branch>
<status status="PASS" starttime="20230731 07:36:42.504" endtime="20230731 07:36:42.653"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:42.655" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:42.654" endtime="20230731 07:36:42.655"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:42.674" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:36:42.656" endtime="20230731 07:36:42.674"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:42.847" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:36:42.679" endtime="20230731 07:36:42.848"/>
</kw>
<status status="PASS" starttime="20230731 07:36:42.676" endtime="20230731 07:36:42.848"/>
</kw>
<status status="PASS" starttime="20230731 07:36:42.675" endtime="20230731 07:36:42.848"/>
</branch>
<status status="PASS" starttime="20230731 07:36:42.675" endtime="20230731 07:36:42.848"/>
</if>
<status status="PASS" starttime="20230731 07:36:42.653" endtime="20230731 07:36:42.849"/>
</kw>
<status status="PASS" starttime="20230731 07:36:42.481" endtime="20230731 07:36:42.849"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:36:44.852" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230731 07:36:42.851" endtime="20230731 07:36:44.852"/>
</kw>
<status status="PASS" starttime="20230731 07:36:42.480" endtime="20230731 07:36:44.852"/>
</branch>
<status status="PASS" starttime="20230731 07:36:42.479" endtime="20230731 07:36:44.852"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:44.853" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:44.852" endtime="20230731 07:36:44.853"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:44.861" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:36:44.853" endtime="20230731 07:36:44.861"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:36:44.861" endtime="20230731 07:36:44.862"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:44.861" endtime="20230731 07:36:44.862"/>
</branch>
<status status="PASS" starttime="20230731 07:36:44.861" endtime="20230731 07:36:44.862"/>
</if>
<status status="PASS" starttime="20230731 07:36:44.852" endtime="20230731 07:36:44.862"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:36:44.963" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230731 07:36:44.862" endtime="20230731 07:36:44.963"/>
</kw>
<status status="PASS" starttime="20230731 07:36:32.571" endtime="20230731 07:36:44.963"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Mã&quot; with &quot;&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:44.965" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:36:44.965" endtime="20230731 07:36:44.965"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:44.966" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:36:44.965" endtime="20230731 07:36:44.966"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:44.967" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:36:44.966" endtime="20230731 07:36:44.967"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:44.968" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:44.969" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:36:44.968" endtime="20230731 07:36:44.969"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:44.970" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:36:44.970" endtime="20230731 07:36:44.970"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:44.971" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:44.971" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:44.970" endtime="20230731 07:36:44.971"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.972" endtime="20230731 07:36:44.972"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.972" endtime="20230731 07:36:44.972"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:44.971" endtime="20230731 07:36:44.972"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.973" endtime="20230731 07:36:44.973"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.974" endtime="20230731 07:36:44.974"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.974" endtime="20230731 07:36:44.974"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:44.973" endtime="20230731 07:36:44.974"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.975" endtime="20230731 07:36:44.975"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.975" endtime="20230731 07:36:44.976"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:44.975" endtime="20230731 07:36:44.976"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.976" endtime="20230731 07:36:44.977"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.977" endtime="20230731 07:36:44.977"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:44.976" endtime="20230731 07:36:44.977"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.978" endtime="20230731 07:36:44.978"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.978" endtime="20230731 07:36:44.978"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:44.977" endtime="20230731 07:36:44.978"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.980" endtime="20230731 07:36:44.980"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.980" endtime="20230731 07:36:44.980"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:44.979" endtime="20230731 07:36:44.980"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.981" endtime="20230731 07:36:44.981"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.981" endtime="20230731 07:36:44.981"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:44.980" endtime="20230731 07:36:44.982"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.982" endtime="20230731 07:36:44.982"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:44.982" endtime="20230731 07:36:44.982"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:36:44.984" endtime="20230731 07:36:44.984"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:44.982" endtime="20230731 07:36:44.984"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.986" endtime="20230731 07:36:44.986"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.987" endtime="20230731 07:36:44.987"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:44.985" endtime="20230731 07:36:44.987"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.988" endtime="20230731 07:36:44.988"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:44.988" endtime="20230731 07:36:44.988"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.990" endtime="20230731 07:36:44.990"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:44.989" endtime="20230731 07:36:44.990"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.991" endtime="20230731 07:36:44.991"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:44.990" endtime="20230731 07:36:44.991"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.991" endtime="20230731 07:36:44.992"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:44.991" endtime="20230731 07:36:44.992"/>
</branch>
<status status="PASS" starttime="20230731 07:36:44.971" endtime="20230731 07:36:44.992"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:44.993" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:44.993" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:44.992" endtime="20230731 07:36:44.993"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:36:44.995" endtime="20230731 07:36:44.996"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:44.994" endtime="20230731 07:36:44.996"/>
</branch>
<status status="PASS" starttime="20230731 07:36:44.993" endtime="20230731 07:36:44.996"/>
</if>
<msg timestamp="20230731 07:36:44.997" level="INFO">${text} = </msg>
<status status="PASS" starttime="20230731 07:36:44.964" endtime="20230731 07:36:44.997"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:36:45.003" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:36:44.997" endtime="20230731 07:36:45.004"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:45.005" endtime="20230731 07:36:45.053"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:36:45.054" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20230731 07:36:45.053" endtime="20230731 07:36:45.084"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:45.085" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:45.085" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:45.084" endtime="20230731 07:36:45.085"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.086" endtime="20230731 07:36:45.087"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:45.086" endtime="20230731 07:36:45.087"/>
</branch>
<status status="PASS" starttime="20230731 07:36:45.086" endtime="20230731 07:36:45.087"/>
</if>
<status status="PASS" starttime="20230731 07:36:44.963" endtime="20230731 07:36:45.087"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Tên mã&quot; with &quot;&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:45.091" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:36:45.091" endtime="20230731 07:36:45.091"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:45.092" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:36:45.092" endtime="20230731 07:36:45.092"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:45.093" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:36:45.093" endtime="20230731 07:36:45.093"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:45.094" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:45.094" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:36:45.094" endtime="20230731 07:36:45.094"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:45.096" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:36:45.095" endtime="20230731 07:36:45.096"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:45.097" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:45.097" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:45.096" endtime="20230731 07:36:45.097"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.098" endtime="20230731 07:36:45.098"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.098" endtime="20230731 07:36:45.098"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:45.097" endtime="20230731 07:36:45.099"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.100" endtime="20230731 07:36:45.101"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.101" endtime="20230731 07:36:45.101"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.102" endtime="20230731 07:36:45.102"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:45.099" endtime="20230731 07:36:45.102"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.103" endtime="20230731 07:36:45.104"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.104" endtime="20230731 07:36:45.105"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:45.103" endtime="20230731 07:36:45.105"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.106" endtime="20230731 07:36:45.106"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.107" endtime="20230731 07:36:45.107"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:45.105" endtime="20230731 07:36:45.107"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.108" endtime="20230731 07:36:45.108"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.110" endtime="20230731 07:36:45.110"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:45.107" endtime="20230731 07:36:45.110"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.112" endtime="20230731 07:36:45.112"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.112" endtime="20230731 07:36:45.113"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:45.111" endtime="20230731 07:36:45.113"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.114" endtime="20230731 07:36:45.115"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.115" endtime="20230731 07:36:45.115"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:45.113" endtime="20230731 07:36:45.116"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.117" endtime="20230731 07:36:45.118"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:45.117" endtime="20230731 07:36:45.118"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:36:45.118" endtime="20230731 07:36:45.119"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:45.118" endtime="20230731 07:36:45.119"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.120" endtime="20230731 07:36:45.120"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.121" endtime="20230731 07:36:45.122"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:45.119" endtime="20230731 07:36:45.122"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.123" endtime="20230731 07:36:45.124"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:45.122" endtime="20230731 07:36:45.124"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.126" endtime="20230731 07:36:45.126"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:45.125" endtime="20230731 07:36:45.127"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.128" endtime="20230731 07:36:45.128"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:45.127" endtime="20230731 07:36:45.128"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.129" endtime="20230731 07:36:45.129"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:45.128" endtime="20230731 07:36:45.130"/>
</branch>
<status status="PASS" starttime="20230731 07:36:45.097" endtime="20230731 07:36:45.130"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:45.131" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:45.131" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:45.130" endtime="20230731 07:36:45.131"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.133" endtime="20230731 07:36:45.133"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:45.132" endtime="20230731 07:36:45.133"/>
</branch>
<status status="PASS" starttime="20230731 07:36:45.131" endtime="20230731 07:36:45.134"/>
</if>
<msg timestamp="20230731 07:36:45.135" level="INFO">${text} = </msg>
<status status="PASS" starttime="20230731 07:36:45.089" endtime="20230731 07:36:45.135"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:36:45.137" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:36:45.135" endtime="20230731 07:36:45.137"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:45.137" endtime="20230731 07:36:45.223"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:36:45.225" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20230731 07:36:45.224" endtime="20230731 07:36:45.266"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:45.267" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:45.267" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:45.266" endtime="20230731 07:36:45.267"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230731 07:36:45.269" endtime="20230731 07:36:45.269"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:45.269" endtime="20230731 07:36:45.269"/>
</branch>
<status status="PASS" starttime="20230731 07:36:45.267" endtime="20230731 07:36:45.270"/>
</if>
<status status="PASS" starttime="20230731 07:36:45.088" endtime="20230731 07:36:45.270"/>
</kw>
<kw name="Then Required message &quot;Mã&quot; displayed under &quot;Xin vui lòng nhập mã&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230731 07:36:45.274" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230731 07:36:45.273" endtime="20230731 07:36:45.274"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:45.300" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230731 07:36:45.276" endtime="20230731 07:36:45.301"/>
</kw>
<status status="PASS" starttime="20230731 07:36:45.274" endtime="20230731 07:36:45.301"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:36:45.354" level="INFO">Text: 'Xin vui lòng nhập mã'</msg>
<status status="PASS" starttime="20230731 07:36:45.306" endtime="20230731 07:36:45.355"/>
</kw>
<status status="PASS" starttime="20230731 07:36:45.302" endtime="20230731 07:36:45.355"/>
</kw>
<status status="PASS" starttime="20230731 07:36:45.272" endtime="20230731 07:36:45.355"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230731 07:36:46.429" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230731 07:36:45.358" endtime="20230731 07:36:46.430"/>
</kw>
<status status="PASS" starttime="20230731 07:36:45.357" endtime="20230731 07:36:46.430"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230731 07:36:29.489" endtime="20230731 07:36:46.431"/>
</test>
<test id="s1-t4" name="EDC-04 Verify that error message display when edit Code with &quot;Mã&quot; is already taken with &quot;Lưu lại&quot; button" line="34">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230731 07:36:46.453" endtime="20230731 07:36:46.454"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230731 07:36:46.456" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\2e40a0cb-5cea-4784-bc0e-e4e22bac53ed"}</msg>
<msg timestamp="20230731 07:36:47.731" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\2e40a0cb-5cea-4784-bc0e-e4e22bac53ed"}</msg>
<status status="PASS" starttime="20230731 07:36:46.454" endtime="20230731 07:36:47.731"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230731 07:36:49.412" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230731 07:36:49.413" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230731 07:36:47.732" endtime="20230731 07:36:49.413"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230731 07:36:49.414" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230731 07:36:49.414" endtime="20230731 07:36:49.415"/>
</kw>
<status status="PASS" starttime="20230731 07:36:46.452" endtime="20230731 07:36:49.415"/>
</kw>
<kw name="When Go to edit code page" library="common" sourcename="Go to ${name} code page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:49.421" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:36:49.420" endtime="20230731 07:36:49.421"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:49.422" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:36:49.422" endtime="20230731 07:36:49.422"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:49.423" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:36:49.423" endtime="20230731 07:36:49.423"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:49.425" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:49.425" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:36:49.424" endtime="20230731 07:36:49.425"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:49.426" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:36:49.425" endtime="20230731 07:36:49.426"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:49.427" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:49.427" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:49.427" endtime="20230731 07:36:49.427"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.428" endtime="20230731 07:36:49.428"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.429" endtime="20230731 07:36:49.429"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:49.428" endtime="20230731 07:36:49.429"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.430" endtime="20230731 07:36:49.431"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.431" endtime="20230731 07:36:49.431"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.432" endtime="20230731 07:36:49.433"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:49.430" endtime="20230731 07:36:49.433"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.434" endtime="20230731 07:36:49.435"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.436" endtime="20230731 07:36:49.436"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:49.433" endtime="20230731 07:36:49.436"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.438" endtime="20230731 07:36:49.438"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.438" endtime="20230731 07:36:49.439"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:49.437" endtime="20230731 07:36:49.439"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.441" endtime="20230731 07:36:49.441"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.442" endtime="20230731 07:36:49.442"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:49.440" endtime="20230731 07:36:49.443"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.444" endtime="20230731 07:36:49.444"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.445" endtime="20230731 07:36:49.445"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:49.443" endtime="20230731 07:36:49.446"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.448" endtime="20230731 07:36:49.448"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.451" endtime="20230731 07:36:49.452"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:49.446" endtime="20230731 07:36:49.452"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.453" endtime="20230731 07:36:49.454"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:49.452" endtime="20230731 07:36:49.454"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:36:49.456" endtime="20230731 07:36:49.456"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:49.455" endtime="20230731 07:36:49.456"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.463" endtime="20230731 07:36:49.464"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.464" endtime="20230731 07:36:49.464"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:49.457" endtime="20230731 07:36:49.465"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.467" endtime="20230731 07:36:49.468"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:49.465" endtime="20230731 07:36:49.471"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.474" endtime="20230731 07:36:49.474"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:49.472" endtime="20230731 07:36:49.474"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.476" endtime="20230731 07:36:49.476"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:49.475" endtime="20230731 07:36:49.476"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:49.477" endtime="20230731 07:36:49.477"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:49.476" endtime="20230731 07:36:49.478"/>
</branch>
<status status="PASS" starttime="20230731 07:36:49.428" endtime="20230731 07:36:49.479"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:49.481" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:36:49.481" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:36:49.480" endtime="20230731 07:36:49.481"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:36:49.486" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:36:49.485" endtime="20230731 07:36:49.486"/>
</kw>
<status status="PASS" starttime="20230731 07:36:49.483" endtime="20230731 07:36:49.487"/>
</branch>
<status status="PASS" starttime="20230731 07:36:49.482" endtime="20230731 07:36:49.487"/>
</if>
<msg timestamp="20230731 07:36:49.488" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:36:49.418" endtime="20230731 07:36:49.488"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:36:49.506" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:36:49.489" endtime="20230731 07:36:49.506"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:49.506" endtime="20230731 07:36:51.200"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:36:51.202" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230731 07:36:51.201" endtime="20230731 07:36:51.265"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:51.266" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:36:51.267" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:36:51.266" endtime="20230731 07:36:51.267"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:36:51.269" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:36:51.268" endtime="20230731 07:36:51.269"/>
</kw>
<status status="PASS" starttime="20230731 07:36:51.267" endtime="20230731 07:36:51.269"/>
</branch>
<status status="PASS" starttime="20230731 07:36:51.267" endtime="20230731 07:36:51.270"/>
</if>
<status status="PASS" starttime="20230731 07:36:49.418" endtime="20230731 07:36:51.270"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:51.273" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:36:51.273" endtime="20230731 07:36:51.273"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:51.275" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:36:51.274" endtime="20230731 07:36:51.275"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:51.276" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:36:51.275" endtime="20230731 07:36:51.276"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:51.277" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:51.277" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:36:51.277" endtime="20230731 07:36:51.277"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:51.278" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:36:51.278" endtime="20230731 07:36:51.278"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:51.279" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:51.279" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:51.278" endtime="20230731 07:36:51.279"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.281" endtime="20230731 07:36:51.281"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.281" endtime="20230731 07:36:51.282"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:51.280" endtime="20230731 07:36:51.282"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.283" endtime="20230731 07:36:51.283"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.284" endtime="20230731 07:36:51.284"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.285" endtime="20230731 07:36:51.285"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:51.282" endtime="20230731 07:36:51.285"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.286" endtime="20230731 07:36:51.287"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.287" endtime="20230731 07:36:51.287"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:51.286" endtime="20230731 07:36:51.287"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.290" endtime="20230731 07:36:51.290"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.290" endtime="20230731 07:36:51.291"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:51.289" endtime="20230731 07:36:51.291"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.292" endtime="20230731 07:36:51.292"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.292" endtime="20230731 07:36:51.293"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:51.291" endtime="20230731 07:36:51.293"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.294" endtime="20230731 07:36:51.294"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.295" endtime="20230731 07:36:51.295"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:51.293" endtime="20230731 07:36:51.295"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.296" endtime="20230731 07:36:51.296"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.297" endtime="20230731 07:36:51.297"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:51.295" endtime="20230731 07:36:51.297"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.298" endtime="20230731 07:36:51.298"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:51.297" endtime="20230731 07:36:51.299"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:36:51.300" endtime="20230731 07:36:51.300"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:51.299" endtime="20230731 07:36:51.300"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.301" endtime="20230731 07:36:51.302"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.302" endtime="20230731 07:36:51.303"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:51.301" endtime="20230731 07:36:51.303"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.304" endtime="20230731 07:36:51.304"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:51.303" endtime="20230731 07:36:51.305"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.306" endtime="20230731 07:36:51.306"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:51.305" endtime="20230731 07:36:51.306"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.307" endtime="20230731 07:36:51.307"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:51.306" endtime="20230731 07:36:51.307"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.309" endtime="20230731 07:36:51.310"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:51.309" endtime="20230731 07:36:51.310"/>
</branch>
<status status="PASS" starttime="20230731 07:36:51.280" endtime="20230731 07:36:51.310"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:51.311" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:36:51.311" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:36:51.311" endtime="20230731 07:36:51.312"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:36:51.313" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:36:51.313" endtime="20230731 07:36:51.314"/>
</kw>
<status status="PASS" starttime="20230731 07:36:51.312" endtime="20230731 07:36:51.314"/>
</branch>
<status status="PASS" starttime="20230731 07:36:51.312" endtime="20230731 07:36:51.314"/>
</if>
<msg timestamp="20230731 07:36:51.314" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:36:51.272" endtime="20230731 07:36:51.314"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:36:51.316" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:36:51.315" endtime="20230731 07:36:51.316"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:51.317" endtime="20230731 07:36:51.402"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:36:51.403" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230731 07:36:51.402" endtime="20230731 07:36:51.511"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:51.513" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:36:51.513" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:36:51.512" endtime="20230731 07:36:51.513"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:36:51.520" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:36:51.515" endtime="20230731 07:36:51.522"/>
</kw>
<status status="PASS" starttime="20230731 07:36:51.514" endtime="20230731 07:36:51.523"/>
</branch>
<status status="PASS" starttime="20230731 07:36:51.513" endtime="20230731 07:36:51.523"/>
</if>
<status status="PASS" starttime="20230731 07:36:51.270" endtime="20230731 07:36:51.524"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:51.525" endtime="20230731 07:36:51.770"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:51.771" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:36:51.771" endtime="20230731 07:36:51.771"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:51.794" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:36:51.772" endtime="20230731 07:36:51.794"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.796" endtime="20230731 07:36:51.796"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.797" endtime="20230731 07:36:51.797"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:51.795" endtime="20230731 07:36:51.797"/>
</branch>
<status status="PASS" starttime="20230731 07:36:51.794" endtime="20230731 07:36:51.797"/>
</if>
<status status="PASS" starttime="20230731 07:36:51.770" endtime="20230731 07:36:51.798"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:36:51.799" endtime="20230731 07:36:51.875"/>
</kw>
<status status="PASS" starttime="20230731 07:36:51.524" endtime="20230731 07:36:51.876"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:36:51.877" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:36:51.877" endtime="20230731 07:36:51.877"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:36:51.878" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:36:51.878" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:36:51.877" endtime="20230731 07:36:51.878"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:36:51.879" endtime="20230731 07:36:51.879"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:51.878" endtime="20230731 07:36:51.880"/>
</branch>
<status status="PASS" starttime="20230731 07:36:51.878" endtime="20230731 07:36:51.880"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:36:53.752" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230731 07:36:51.884" endtime="20230731 07:36:53.752"/>
</kw>
<status status="PASS" starttime="20230731 07:36:51.880" endtime="20230731 07:36:53.753"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:53.754" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:36:53.753" endtime="20230731 07:36:53.754"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:54.324" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-4.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-4.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:36:54.324" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:36:54.324" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:36:53.758" endtime="20230731 07:36:54.328"/>
</kw>
<status status="FAIL" starttime="20230731 07:36:53.755" endtime="20230731 07:36:54.328"/>
</kw>
<msg timestamp="20230731 07:36:54.329" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:36:53.755" endtime="20230731 07:36:54.329"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:36:54.331" endtime="20230731 07:36:54.331"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:54.330" endtime="20230731 07:36:54.331"/>
</branch>
<status status="PASS" starttime="20230731 07:36:54.330" endtime="20230731 07:36:54.332"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:56.445" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:36:54.335" endtime="20230731 07:36:56.446"/>
</kw>
<status status="PASS" starttime="20230731 07:36:54.332" endtime="20230731 07:36:56.446"/>
</kw>
<status status="PASS" starttime="20230731 07:36:51.876" endtime="20230731 07:36:56.446"/>
</kw>
<status status="PASS" starttime="20230731 07:36:49.417" endtime="20230731 07:36:56.447"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:56.449" endtime="20230731 07:36:56.533"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:56.537" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:56.535" endtime="20230731 07:36:56.537"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:56.545" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:36:56.537" endtime="20230731 07:36:56.545"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:36:56.546" endtime="20230731 07:36:56.546"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:56.545" endtime="20230731 07:36:56.546"/>
</branch>
<status status="PASS" starttime="20230731 07:36:56.545" endtime="20230731 07:36:56.546"/>
</if>
<status status="PASS" starttime="20230731 07:36:56.534" endtime="20230731 07:36:56.546"/>
</kw>
<status status="PASS" starttime="20230731 07:36:56.447" endtime="20230731 07:36:56.546"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:56.548" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:56.548" endtime="20230731 07:36:56.549"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:56.561" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:36:56.550" endtime="20230731 07:36:56.561"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:36:56.562" endtime="20230731 07:36:56.562"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:56.561" endtime="20230731 07:36:56.562"/>
</branch>
<status status="PASS" starttime="20230731 07:36:56.561" endtime="20230731 07:36:56.563"/>
</if>
<status status="PASS" starttime="20230731 07:36:56.547" endtime="20230731 07:36:56.563"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:56.564" endtime="20230731 07:36:56.754"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:56.756" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:56.755" endtime="20230731 07:36:56.756"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:56.774" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:36:56.758" endtime="20230731 07:36:56.774"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:57.156" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:36:56.777" endtime="20230731 07:36:57.156"/>
</kw>
<status status="PASS" starttime="20230731 07:36:56.775" endtime="20230731 07:36:57.157"/>
</kw>
<status status="PASS" starttime="20230731 07:36:56.774" endtime="20230731 07:36:57.157"/>
</branch>
<status status="PASS" starttime="20230731 07:36:56.774" endtime="20230731 07:36:57.158"/>
</if>
<status status="PASS" starttime="20230731 07:36:56.754" endtime="20230731 07:36:57.158"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:57.160" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:57.159" endtime="20230731 07:36:57.160"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:57.181" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230731 07:36:57.161" endtime="20230731 07:36:57.181"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:59.317" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:36:57.186" endtime="20230731 07:36:59.318"/>
</kw>
<status status="PASS" starttime="20230731 07:36:57.183" endtime="20230731 07:36:59.318"/>
</kw>
<status status="PASS" starttime="20230731 07:36:57.182" endtime="20230731 07:36:59.319"/>
</branch>
<status status="PASS" starttime="20230731 07:36:57.182" endtime="20230731 07:36:59.319"/>
</if>
<status status="PASS" starttime="20230731 07:36:57.158" endtime="20230731 07:36:59.320"/>
</kw>
<status status="PASS" starttime="20230731 07:36:56.547" endtime="20230731 07:36:59.320"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Thêm mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20230731 07:36:59.323" endtime="20230731 07:36:59.323"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:59.322" endtime="20230731 07:36:59.323"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'edit'">
<kw name="Select Code need to edit" library="common" sourcename="Select ${name} need to edit">
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230731 07:36:59.346" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230731 07:36:59.346" level="INFO">${elements} = ['element=be353ca0-6143-48ee-8f05-e4c5a3cf02c1', 'element=d88f88f5-96cb-46a4-9960-495eb6417ce2', 'element=d08ffab0-ac2d-4dd7-9433-4cb27e0472c7', 'element=97c7afaa-1c11-4c60-b837-a67eff7a2b13', 'elemen...</msg>
<status status="PASS" starttime="20230731 07:36:59.325" endtime="20230731 07:36:59.346"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'Post'">
<kw name="Click" library="Browser">
<arg>${elements}[2]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:36:59.347" endtime="20230731 07:36:59.347"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:36:59.346" endtime="20230731 07:36:59.347"/>
</branch>
<branch type="ELSE IF" condition="'${name}' != 'post'">
<kw name="Click" library="Browser">
<arg>${elements}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:36:59.348" endtime="20230731 07:36:59.541"/>
</kw>
<status status="PASS" starttime="20230731 07:36:59.347" endtime="20230731 07:36:59.541"/>
</branch>
<status status="PASS" starttime="20230731 07:36:59.346" endtime="20230731 07:36:59.541"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:36:59.544" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:36:59.543" endtime="20230731 07:36:59.544"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:36:59.559" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:36:59.544" endtime="20230731 07:36:59.559"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:36:59.742" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:36:59.563" endtime="20230731 07:36:59.742"/>
</kw>
<status status="PASS" starttime="20230731 07:36:59.561" endtime="20230731 07:36:59.743"/>
</kw>
<status status="PASS" starttime="20230731 07:36:59.559" endtime="20230731 07:36:59.743"/>
</branch>
<status status="PASS" starttime="20230731 07:36:59.559" endtime="20230731 07:36:59.744"/>
</if>
<status status="PASS" starttime="20230731 07:36:59.542" endtime="20230731 07:36:59.744"/>
</kw>
<status status="PASS" starttime="20230731 07:36:59.324" endtime="20230731 07:36:59.744"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:37:01.745" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230731 07:36:59.745" endtime="20230731 07:37:01.745"/>
</kw>
<status status="PASS" starttime="20230731 07:36:59.324" endtime="20230731 07:37:01.746"/>
</branch>
<status status="PASS" starttime="20230731 07:36:59.321" endtime="20230731 07:37:01.746"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:01.747" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:37:01.747" endtime="20230731 07:37:01.747"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:37:01.754" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:37:01.747" endtime="20230731 07:37:01.754"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:37:01.754" endtime="20230731 07:37:01.755"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:01.754" endtime="20230731 07:37:01.755"/>
</branch>
<status status="PASS" starttime="20230731 07:37:01.754" endtime="20230731 07:37:01.755"/>
</if>
<status status="PASS" starttime="20230731 07:37:01.746" endtime="20230731 07:37:01.755"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:37:01.857" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230731 07:37:01.755" endtime="20230731 07:37:01.857"/>
</kw>
<status status="PASS" starttime="20230731 07:36:49.417" endtime="20230731 07:37:01.857"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Tên mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:01.860" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:37:01.859" endtime="20230731 07:37:01.860"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:01.860" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:37:01.860" endtime="20230731 07:37:01.861"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:01.861" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:37:01.861" endtime="20230731 07:37:01.861"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:01.862" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:01.862" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:37:01.862" endtime="20230731 07:37:01.862"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:01.863" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230731 07:37:01.862" endtime="20230731 07:37:01.863"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:01.863" level="INFO">Length is 1</msg>
<msg timestamp="20230731 07:37:01.864" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230731 07:37:01.863" endtime="20230731 07:37:01.864"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.864" endtime="20230731 07:37:01.865"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.865" endtime="20230731 07:37:01.865"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:01.864" endtime="20230731 07:37:01.865"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.866" endtime="20230731 07:37:01.866"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.866" endtime="20230731 07:37:01.867"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.867" endtime="20230731 07:37:01.867"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:01.866" endtime="20230731 07:37:01.867"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.868" endtime="20230731 07:37:01.868"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.868" endtime="20230731 07:37:01.868"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:01.867" endtime="20230731 07:37:01.868"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.869" endtime="20230731 07:37:01.869"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.870" endtime="20230731 07:37:01.870"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:01.868" endtime="20230731 07:37:01.870"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.871" endtime="20230731 07:37:01.871"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.872" endtime="20230731 07:37:01.872"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:01.870" endtime="20230731 07:37:01.872"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.874" endtime="20230731 07:37:01.874"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.875" endtime="20230731 07:37:01.875"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:01.873" endtime="20230731 07:37:01.875"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.876" endtime="20230731 07:37:01.876"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.876" endtime="20230731 07:37:01.876"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:01.875" endtime="20230731 07:37:01.877"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.877" endtime="20230731 07:37:01.877"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:01.877" endtime="20230731 07:37:01.877"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:37:01.878" endtime="20230731 07:37:01.878"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:01.877" endtime="20230731 07:37:01.878"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.879" endtime="20230731 07:37:01.879"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.880" endtime="20230731 07:37:01.880"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:01.878" endtime="20230731 07:37:01.880"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.881" endtime="20230731 07:37:01.882"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:01.881" endtime="20230731 07:37:01.882"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.883" endtime="20230731 07:37:01.884"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:01.882" endtime="20230731 07:37:01.885"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:01.886" endtime="20230731 07:37:01.887"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:01.885" endtime="20230731 07:37:01.887"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230731 07:37:01.888" level="INFO">${new_text} = Sunt ex voluptatum.</msg>
<status status="PASS" starttime="20230731 07:37:01.888" endtime="20230731 07:37:01.890"/>
</kw>
<status status="PASS" starttime="20230731 07:37:01.887" endtime="20230731 07:37:01.890"/>
</branch>
<status status="PASS" starttime="20230731 07:37:01.864" endtime="20230731 07:37:01.890"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:01.892" level="INFO">Length is 8</msg>
<msg timestamp="20230731 07:37:01.892" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230731 07:37:01.891" endtime="20230731 07:37:01.892"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:37:01.894" level="INFO">${text} = Sunt ex voluptatum.</msg>
<status status="PASS" starttime="20230731 07:37:01.893" endtime="20230731 07:37:01.894"/>
</kw>
<status status="PASS" starttime="20230731 07:37:01.893" endtime="20230731 07:37:01.895"/>
</branch>
<status status="PASS" starttime="20230731 07:37:01.892" endtime="20230731 07:37:01.895"/>
</if>
<msg timestamp="20230731 07:37:01.896" level="INFO">${text} = Sunt ex voluptatum.</msg>
<status status="PASS" starttime="20230731 07:37:01.859" endtime="20230731 07:37:01.896"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:37:01.897" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:37:01.896" endtime="20230731 07:37:01.897"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:01.898" endtime="20230731 07:37:01.949"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:37:01.950" level="INFO">Fills the text 'Sunt ex voluptatum.' in the given field.</msg>
<status status="PASS" starttime="20230731 07:37:01.950" endtime="20230731 07:37:01.985"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:01.986" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:37:01.986" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:37:01.985" endtime="20230731 07:37:01.987"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:37:01.992" level="INFO">${STATE["Tên mã"]} = Sunt ex voluptatum.</msg>
<status status="PASS" starttime="20230731 07:37:01.989" endtime="20230731 07:37:01.992"/>
</kw>
<status status="PASS" starttime="20230731 07:37:01.988" endtime="20230731 07:37:01.992"/>
</branch>
<status status="PASS" starttime="20230731 07:37:01.987" endtime="20230731 07:37:01.993"/>
</if>
<status status="PASS" starttime="20230731 07:37:01.858" endtime="20230731 07:37:01.993"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Mã&quot; with &quot;DEV&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:01.995" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:37:01.995" endtime="20230731 07:37:01.995"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:01.997" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:37:01.996" endtime="20230731 07:37:01.997"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:01.999" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:37:01.998" endtime="20230731 07:37:01.999"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:02.001" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:02.001" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:37:02.000" endtime="20230731 07:37:02.001"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:02.002" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:37:02.001" endtime="20230731 07:37:02.002"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:02.003" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:02.003" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:37:02.003" endtime="20230731 07:37:02.004"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.005" endtime="20230731 07:37:02.005"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.005" endtime="20230731 07:37:02.006"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.004" endtime="20230731 07:37:02.006"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.007" endtime="20230731 07:37:02.007"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.007" endtime="20230731 07:37:02.008"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.008" endtime="20230731 07:37:02.008"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.006" endtime="20230731 07:37:02.009"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.010" endtime="20230731 07:37:02.010"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.011" endtime="20230731 07:37:02.011"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.009" endtime="20230731 07:37:02.011"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.012" endtime="20230731 07:37:02.012"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.012" endtime="20230731 07:37:02.012"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.011" endtime="20230731 07:37:02.012"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.013" endtime="20230731 07:37:02.014"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.014" endtime="20230731 07:37:02.015"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.013" endtime="20230731 07:37:02.016"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.017" endtime="20230731 07:37:02.017"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.018" endtime="20230731 07:37:02.018"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.016" endtime="20230731 07:37:02.018"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.019" endtime="20230731 07:37:02.019"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.020" endtime="20230731 07:37:02.020"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.018" endtime="20230731 07:37:02.021"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.021" endtime="20230731 07:37:02.022"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.021" endtime="20230731 07:37:02.022"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:37:02.023" endtime="20230731 07:37:02.023"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.022" endtime="20230731 07:37:02.023"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.024" endtime="20230731 07:37:02.024"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.025" endtime="20230731 07:37:02.025"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.023" endtime="20230731 07:37:02.026"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.027" endtime="20230731 07:37:02.028"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.026" endtime="20230731 07:37:02.028"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.030" endtime="20230731 07:37:02.031"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.029" endtime="20230731 07:37:02.031"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.032" endtime="20230731 07:37:02.033"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.031" endtime="20230731 07:37:02.033"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.034" endtime="20230731 07:37:02.035"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.033" endtime="20230731 07:37:02.035"/>
</branch>
<status status="PASS" starttime="20230731 07:37:02.004" endtime="20230731 07:37:02.036"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:02.037" level="INFO">Length is 3</msg>
<msg timestamp="20230731 07:37:02.037" level="INFO">${cnt} = 3</msg>
<status status="PASS" starttime="20230731 07:37:02.036" endtime="20230731 07:37:02.037"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:37:02.039" level="INFO">${text} = DEV</msg>
<status status="PASS" starttime="20230731 07:37:02.039" endtime="20230731 07:37:02.039"/>
</kw>
<status status="PASS" starttime="20230731 07:37:02.038" endtime="20230731 07:37:02.039"/>
</branch>
<status status="PASS" starttime="20230731 07:37:02.038" endtime="20230731 07:37:02.040"/>
</if>
<msg timestamp="20230731 07:37:02.040" level="INFO">${text} = DEV</msg>
<status status="PASS" starttime="20230731 07:37:01.994" endtime="20230731 07:37:02.040"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:37:02.042" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:37:02.041" endtime="20230731 07:37:02.042"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:02.042" endtime="20230731 07:37:02.111"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:37:02.112" level="INFO">Fills the text 'DEV' in the given field.</msg>
<status status="PASS" starttime="20230731 07:37:02.112" endtime="20230731 07:37:02.148"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:02.150" level="INFO">Length is 3</msg>
<msg timestamp="20230731 07:37:02.150" level="INFO">${cnt} = 3</msg>
<status status="PASS" starttime="20230731 07:37:02.149" endtime="20230731 07:37:02.150"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:37:02.155" level="INFO">${STATE["Mã"]} = DEV</msg>
<status status="PASS" starttime="20230731 07:37:02.152" endtime="20230731 07:37:02.155"/>
</kw>
<status status="PASS" starttime="20230731 07:37:02.151" endtime="20230731 07:37:02.155"/>
</branch>
<status status="PASS" starttime="20230731 07:37:02.151" endtime="20230731 07:37:02.155"/>
</if>
<status status="PASS" starttime="20230731 07:37:01.994" endtime="20230731 07:37:02.156"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:02.159" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:37:02.159" endtime="20230731 07:37:02.159"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:02.160" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:37:02.160" endtime="20230731 07:37:02.160"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:02.161" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:37:02.161" endtime="20230731 07:37:02.161"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:02.162" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:02.163" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:37:02.162" endtime="20230731 07:37:02.163"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:02.164" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230731 07:37:02.163" endtime="20230731 07:37:02.164"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:02.165" level="INFO">Length is 1</msg>
<msg timestamp="20230731 07:37:02.165" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230731 07:37:02.164" endtime="20230731 07:37:02.165"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.166" endtime="20230731 07:37:02.166"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.166" endtime="20230731 07:37:02.167"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.166" endtime="20230731 07:37:02.167"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.167" endtime="20230731 07:37:02.167"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.168" endtime="20230731 07:37:02.168"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.168" endtime="20230731 07:37:02.168"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.167" endtime="20230731 07:37:02.168"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.169" endtime="20230731 07:37:02.170"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.170" endtime="20230731 07:37:02.171"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.168" endtime="20230731 07:37:02.171"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.172" endtime="20230731 07:37:02.172"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.173" endtime="20230731 07:37:02.173"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.171" endtime="20230731 07:37:02.173"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.174" endtime="20230731 07:37:02.175"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.175" endtime="20230731 07:37:02.176"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.174" endtime="20230731 07:37:02.176"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.177" endtime="20230731 07:37:02.177"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.178" endtime="20230731 07:37:02.178"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.176" endtime="20230731 07:37:02.178"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.179" endtime="20230731 07:37:02.179"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.180" endtime="20230731 07:37:02.180"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.178" endtime="20230731 07:37:02.182"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.183" endtime="20230731 07:37:02.184"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.182" endtime="20230731 07:37:02.186"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:37:02.187" endtime="20230731 07:37:02.187"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.186" endtime="20230731 07:37:02.187"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.189" endtime="20230731 07:37:02.189"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.190" endtime="20230731 07:37:02.190"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.187" endtime="20230731 07:37:02.190"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.191" endtime="20230731 07:37:02.191"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.190" endtime="20230731 07:37:02.191"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.192" endtime="20230731 07:37:02.192"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.191" endtime="20230731 07:37:02.192"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.192" endtime="20230731 07:37:02.192"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.192" endtime="20230731 07:37:02.193"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230731 07:37:02.193" level="INFO">${new_text} = Doloremque quas consequuntur dolore earum.</msg>
<status status="PASS" starttime="20230731 07:37:02.193" endtime="20230731 07:37:02.193"/>
</kw>
<status status="PASS" starttime="20230731 07:37:02.193" endtime="20230731 07:37:02.194"/>
</branch>
<status status="PASS" starttime="20230731 07:37:02.165" endtime="20230731 07:37:02.194"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:02.194" level="INFO">Length is 8</msg>
<msg timestamp="20230731 07:37:02.194" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230731 07:37:02.194" endtime="20230731 07:37:02.194"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:37:02.196" level="INFO">${text} = Doloremque quas consequuntur dolore earum.</msg>
<status status="PASS" starttime="20230731 07:37:02.195" endtime="20230731 07:37:02.196"/>
</kw>
<status status="PASS" starttime="20230731 07:37:02.195" endtime="20230731 07:37:02.196"/>
</branch>
<status status="PASS" starttime="20230731 07:37:02.195" endtime="20230731 07:37:02.196"/>
</if>
<msg timestamp="20230731 07:37:02.196" level="INFO">${text} = Doloremque quas consequuntur dolore earum.</msg>
<status status="PASS" starttime="20230731 07:37:02.158" endtime="20230731 07:37:02.196"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230731 07:37:02.197" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230731 07:37:02.196" endtime="20230731 07:37:02.197"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:02.197" endtime="20230731 07:37:02.266"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:37:02.267" level="INFO">Fills the text 'Doloremque quas consequuntur dolore earum.' in the given field.</msg>
<status status="PASS" starttime="20230731 07:37:02.267" endtime="20230731 07:37:02.306"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:02.307" level="INFO">Length is 42</msg>
<msg timestamp="20230731 07:37:02.307" level="INFO">${cnt} = 42</msg>
<status status="PASS" starttime="20230731 07:37:02.306" endtime="20230731 07:37:02.307"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:37:02.312" level="INFO">${STATE["Mô tả"]} = Doloremque quas consequuntur dolore earum.</msg>
<status status="PASS" starttime="20230731 07:37:02.308" endtime="20230731 07:37:02.312"/>
</kw>
<status status="PASS" starttime="20230731 07:37:02.308" endtime="20230731 07:37:02.312"/>
</branch>
<status status="PASS" starttime="20230731 07:37:02.308" endtime="20230731 07:37:02.312"/>
</if>
<status status="PASS" starttime="20230731 07:37:02.157" endtime="20230731 07:37:02.313"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:02.315" endtime="20230731 07:37:02.492"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:02.496" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:37:02.495" endtime="20230731 07:37:02.496"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:37:02.507" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:37:02.496" endtime="20230731 07:37:02.507"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.508" endtime="20230731 07:37:02.508"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.508" endtime="20230731 07:37:02.508"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.507" endtime="20230731 07:37:02.508"/>
</branch>
<status status="PASS" starttime="20230731 07:37:02.507" endtime="20230731 07:37:02.508"/>
</if>
<status status="PASS" starttime="20230731 07:37:02.493" endtime="20230731 07:37:02.509"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:37:02.509" endtime="20230731 07:37:02.546"/>
</kw>
<status status="PASS" starttime="20230731 07:37:02.314" endtime="20230731 07:37:02.546"/>
</kw>
<kw name="Then User look message &quot;Internal server error&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:02.549" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:37:02.548" endtime="20230731 07:37:02.549"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:02.550" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:02.551" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:37:02.550" endtime="20230731 07:37:02.551"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:37:02.552" endtime="20230731 07:37:02.552"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:02.551" endtime="20230731 07:37:02.552"/>
</branch>
<status status="PASS" starttime="20230731 07:37:02.551" endtime="20230731 07:37:02.553"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:37:04.488" level="INFO">Text: 'Internal server error'</msg>
<status status="PASS" starttime="20230731 07:37:02.557" endtime="20230731 07:37:04.488"/>
</kw>
<status status="PASS" starttime="20230731 07:37:02.554" endtime="20230731 07:37:04.488"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:04.489" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:37:04.489" endtime="20230731 07:37:04.489"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:37:04.919" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-5.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-5.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:37:04.920" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:37:04.920" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:37:04.494" endtime="20230731 07:37:04.923"/>
</kw>
<status status="FAIL" starttime="20230731 07:37:04.490" endtime="20230731 07:37:04.923"/>
</kw>
<msg timestamp="20230731 07:37:04.924" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:37:04.490" endtime="20230731 07:37:04.924"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:37:04.927" endtime="20230731 07:37:04.927"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:04.925" endtime="20230731 07:37:04.928"/>
</branch>
<status status="PASS" starttime="20230731 07:37:04.924" endtime="20230731 07:37:04.928"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:37:10.483" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:37:04.932" endtime="20230731 07:37:10.484"/>
</kw>
<status status="PASS" starttime="20230731 07:37:04.928" endtime="20230731 07:37:10.485"/>
</kw>
<status status="PASS" starttime="20230731 07:37:02.547" endtime="20230731 07:37:10.486"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230731 07:37:11.713" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230731 07:37:10.488" endtime="20230731 07:37:11.713"/>
</kw>
<status status="PASS" starttime="20230731 07:37:10.487" endtime="20230731 07:37:11.713"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230731 07:36:46.445" endtime="20230731 07:37:11.715"/>
</test>
<test id="s1-t5" name="EDC-05 Verify that error message display when edit Code with &quot;Mã&quot; is already taken with &quot;Lưu và tạo mới&quot; button" line="43">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230731 07:37:11.738" endtime="20230731 07:37:11.739"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230731 07:37:11.740" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\8fe47dad-7b71-4a94-9ddc-ebf74d189fce"}</msg>
<msg timestamp="20230731 07:37:12.981" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\8fe47dad-7b71-4a94-9ddc-ebf74d189fce"}</msg>
<status status="PASS" starttime="20230731 07:37:11.739" endtime="20230731 07:37:12.981"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230731 07:37:14.940" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230731 07:37:14.940" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230731 07:37:12.982" endtime="20230731 07:37:14.940"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230731 07:37:14.942" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230731 07:37:14.941" endtime="20230731 07:37:14.942"/>
</kw>
<status status="PASS" starttime="20230731 07:37:11.737" endtime="20230731 07:37:14.943"/>
</kw>
<kw name="When Go to edit code page" library="common" sourcename="Go to ${name} code page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:14.951" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:37:14.951" endtime="20230731 07:37:14.951"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:14.952" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:37:14.952" endtime="20230731 07:37:14.953"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:14.954" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:37:14.953" endtime="20230731 07:37:14.954"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:14.955" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:14.955" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:37:14.954" endtime="20230731 07:37:14.955"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:14.957" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:37:14.956" endtime="20230731 07:37:14.957"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:14.958" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:14.958" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:37:14.958" endtime="20230731 07:37:14.958"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.959" endtime="20230731 07:37:14.959"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.959" endtime="20230731 07:37:14.959"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:14.958" endtime="20230731 07:37:14.959"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.960" endtime="20230731 07:37:14.961"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.961" endtime="20230731 07:37:14.961"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.962" endtime="20230731 07:37:14.962"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:14.959" endtime="20230731 07:37:14.962"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.964" endtime="20230731 07:37:14.964"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.965" endtime="20230731 07:37:14.965"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:14.963" endtime="20230731 07:37:14.966"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.968" endtime="20230731 07:37:14.968"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.969" endtime="20230731 07:37:14.970"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:14.966" endtime="20230731 07:37:14.970"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.972" endtime="20230731 07:37:14.972"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.973" endtime="20230731 07:37:14.973"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:14.971" endtime="20230731 07:37:14.973"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.974" endtime="20230731 07:37:14.975"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.975" endtime="20230731 07:37:14.976"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:14.973" endtime="20230731 07:37:14.976"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.977" endtime="20230731 07:37:14.978"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.978" endtime="20230731 07:37:14.979"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:14.977" endtime="20230731 07:37:14.979"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.981" endtime="20230731 07:37:14.982"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:14.980" endtime="20230731 07:37:14.982"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:37:14.983" endtime="20230731 07:37:14.985"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:14.982" endtime="20230731 07:37:14.985"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.987" endtime="20230731 07:37:14.987"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.988" endtime="20230731 07:37:14.988"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:14.985" endtime="20230731 07:37:14.988"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.990" endtime="20230731 07:37:14.990"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:14.989" endtime="20230731 07:37:14.990"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.991" endtime="20230731 07:37:14.992"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:14.991" endtime="20230731 07:37:14.992"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.993" endtime="20230731 07:37:14.993"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:14.992" endtime="20230731 07:37:14.993"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:14.994" endtime="20230731 07:37:14.995"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:14.994" endtime="20230731 07:37:14.995"/>
</branch>
<status status="PASS" starttime="20230731 07:37:14.958" endtime="20230731 07:37:14.995"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:14.996" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:37:14.996" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:37:14.996" endtime="20230731 07:37:14.996"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:37:15.002" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:37:15.001" endtime="20230731 07:37:15.002"/>
</kw>
<status status="PASS" starttime="20230731 07:37:15.000" endtime="20230731 07:37:15.003"/>
</branch>
<status status="PASS" starttime="20230731 07:37:14.998" endtime="20230731 07:37:15.003"/>
</if>
<msg timestamp="20230731 07:37:15.004" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:37:14.949" endtime="20230731 07:37:15.004"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:37:15.005" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:37:15.004" endtime="20230731 07:37:15.005"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:15.006" endtime="20230731 07:37:17.207"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:37:17.208" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230731 07:37:17.208" endtime="20230731 07:37:17.267"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:17.268" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:37:17.268" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:37:17.267" endtime="20230731 07:37:17.268"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:37:17.271" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:37:17.270" endtime="20230731 07:37:17.272"/>
</kw>
<status status="PASS" starttime="20230731 07:37:17.269" endtime="20230731 07:37:17.272"/>
</branch>
<status status="PASS" starttime="20230731 07:37:17.269" endtime="20230731 07:37:17.272"/>
</if>
<status status="PASS" starttime="20230731 07:37:14.948" endtime="20230731 07:37:17.273"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:17.276" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:37:17.275" endtime="20230731 07:37:17.276"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:17.277" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:37:17.277" endtime="20230731 07:37:17.277"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:17.278" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:37:17.278" endtime="20230731 07:37:17.278"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:17.280" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:17.280" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:37:17.279" endtime="20230731 07:37:17.280"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:17.282" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:37:17.281" endtime="20230731 07:37:17.282"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:17.283" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:17.283" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:37:17.282" endtime="20230731 07:37:17.283"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.284" endtime="20230731 07:37:17.285"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.285" endtime="20230731 07:37:17.285"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:17.284" endtime="20230731 07:37:17.285"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.287" endtime="20230731 07:37:17.287"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.288" endtime="20230731 07:37:17.288"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.288" endtime="20230731 07:37:17.288"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:17.285" endtime="20230731 07:37:17.288"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.289" endtime="20230731 07:37:17.290"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.290" endtime="20230731 07:37:17.290"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:17.289" endtime="20230731 07:37:17.291"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.291" endtime="20230731 07:37:17.291"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.292" endtime="20230731 07:37:17.292"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:17.291" endtime="20230731 07:37:17.292"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.292" endtime="20230731 07:37:17.292"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.293" endtime="20230731 07:37:17.293"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:17.292" endtime="20230731 07:37:17.293"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.294" endtime="20230731 07:37:17.294"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.294" endtime="20230731 07:37:17.294"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:17.293" endtime="20230731 07:37:17.294"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.295" endtime="20230731 07:37:17.295"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.296" endtime="20230731 07:37:17.297"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:17.294" endtime="20230731 07:37:17.297"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.300" endtime="20230731 07:37:17.301"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:17.298" endtime="20230731 07:37:17.301"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:37:17.302" endtime="20230731 07:37:17.302"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:17.301" endtime="20230731 07:37:17.302"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.303" endtime="20230731 07:37:17.303"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.304" endtime="20230731 07:37:17.304"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:17.302" endtime="20230731 07:37:17.304"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.305" endtime="20230731 07:37:17.305"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:17.304" endtime="20230731 07:37:17.305"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.306" endtime="20230731 07:37:17.307"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:17.306" endtime="20230731 07:37:17.307"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.308" endtime="20230731 07:37:17.308"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:17.307" endtime="20230731 07:37:17.308"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.308" endtime="20230731 07:37:17.308"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:17.308" endtime="20230731 07:37:17.309"/>
</branch>
<status status="PASS" starttime="20230731 07:37:17.283" endtime="20230731 07:37:17.309"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:17.310" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:37:17.310" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:37:17.309" endtime="20230731 07:37:17.310"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:37:17.312" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:37:17.311" endtime="20230731 07:37:17.312"/>
</kw>
<status status="PASS" starttime="20230731 07:37:17.311" endtime="20230731 07:37:17.312"/>
</branch>
<status status="PASS" starttime="20230731 07:37:17.311" endtime="20230731 07:37:17.312"/>
</if>
<msg timestamp="20230731 07:37:17.313" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:37:17.274" endtime="20230731 07:37:17.313"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:37:17.314" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:37:17.313" endtime="20230731 07:37:17.315"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:17.315" endtime="20230731 07:37:17.417"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:37:17.419" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230731 07:37:17.417" endtime="20230731 07:37:17.495"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:17.496" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:37:17.496" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:37:17.496" endtime="20230731 07:37:17.496"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:37:17.503" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:37:17.501" endtime="20230731 07:37:17.503"/>
</kw>
<status status="PASS" starttime="20230731 07:37:17.498" endtime="20230731 07:37:17.503"/>
</branch>
<status status="PASS" starttime="20230731 07:37:17.497" endtime="20230731 07:37:17.503"/>
</if>
<status status="PASS" starttime="20230731 07:37:17.273" endtime="20230731 07:37:17.503"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:17.504" endtime="20230731 07:37:17.707"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:17.708" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:37:17.708" endtime="20230731 07:37:17.708"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:37:17.734" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:37:17.709" endtime="20230731 07:37:17.734"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.737" endtime="20230731 07:37:17.738"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.738" endtime="20230731 07:37:17.739"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:17.736" endtime="20230731 07:37:17.740"/>
</branch>
<status status="PASS" starttime="20230731 07:37:17.736" endtime="20230731 07:37:17.741"/>
</if>
<status status="PASS" starttime="20230731 07:37:17.707" endtime="20230731 07:37:17.741"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:37:17.743" endtime="20230731 07:37:17.792"/>
</kw>
<status status="PASS" starttime="20230731 07:37:17.504" endtime="20230731 07:37:17.792"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:17.795" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:37:17.794" endtime="20230731 07:37:17.795"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:17.796" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:17.796" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:37:17.795" endtime="20230731 07:37:17.796"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:37:17.802" endtime="20230731 07:37:17.803"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:17.797" endtime="20230731 07:37:17.804"/>
</branch>
<status status="PASS" starttime="20230731 07:37:17.797" endtime="20230731 07:37:17.804"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:37:20.515" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230731 07:37:17.810" endtime="20230731 07:37:20.515"/>
</kw>
<status status="PASS" starttime="20230731 07:37:17.806" endtime="20230731 07:37:20.516"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:20.517" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:37:20.516" endtime="20230731 07:37:20.517"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:37:21.339" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-6.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-6.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:37:21.339" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:37:21.340" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:37:20.522" endtime="20230731 07:37:21.345"/>
</kw>
<status status="FAIL" starttime="20230731 07:37:20.519" endtime="20230731 07:37:21.345"/>
</kw>
<msg timestamp="20230731 07:37:21.346" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:37:20.518" endtime="20230731 07:37:21.346"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:37:21.348" endtime="20230731 07:37:21.348"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:21.347" endtime="20230731 07:37:21.348"/>
</branch>
<status status="PASS" starttime="20230731 07:37:21.346" endtime="20230731 07:37:21.348"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:37:23.048" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:37:21.351" endtime="20230731 07:37:23.048"/>
</kw>
<status status="PASS" starttime="20230731 07:37:21.349" endtime="20230731 07:37:23.048"/>
</kw>
<status status="PASS" starttime="20230731 07:37:17.793" endtime="20230731 07:37:23.048"/>
</kw>
<status status="PASS" starttime="20230731 07:37:14.946" endtime="20230731 07:37:23.048"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:23.049" endtime="20230731 07:37:23.132"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:23.135" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:37:23.134" endtime="20230731 07:37:23.135"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:37:23.144" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:37:23.136" endtime="20230731 07:37:23.144"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:37:23.145" endtime="20230731 07:37:23.146"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:23.145" endtime="20230731 07:37:23.146"/>
</branch>
<status status="PASS" starttime="20230731 07:37:23.145" endtime="20230731 07:37:23.146"/>
</if>
<status status="PASS" starttime="20230731 07:37:23.133" endtime="20230731 07:37:23.147"/>
</kw>
<status status="PASS" starttime="20230731 07:37:23.049" endtime="20230731 07:37:23.147"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:23.151" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:37:23.150" endtime="20230731 07:37:23.151"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:37:23.161" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:37:23.151" endtime="20230731 07:37:23.161"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:37:23.162" endtime="20230731 07:37:23.162"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:23.162" endtime="20230731 07:37:23.162"/>
</branch>
<status status="PASS" starttime="20230731 07:37:23.161" endtime="20230731 07:37:23.163"/>
</if>
<status status="PASS" starttime="20230731 07:37:23.149" endtime="20230731 07:37:23.163"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:23.164" endtime="20230731 07:37:23.359"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:23.361" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:37:23.360" endtime="20230731 07:37:23.361"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:37:23.397" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:37:23.362" endtime="20230731 07:37:23.397"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:37:23.859" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:37:23.403" endtime="20230731 07:37:23.860"/>
</kw>
<status status="PASS" starttime="20230731 07:37:23.400" endtime="20230731 07:37:23.860"/>
</kw>
<status status="PASS" starttime="20230731 07:37:23.399" endtime="20230731 07:37:23.861"/>
</branch>
<status status="PASS" starttime="20230731 07:37:23.398" endtime="20230731 07:37:23.861"/>
</if>
<status status="PASS" starttime="20230731 07:37:23.359" endtime="20230731 07:37:23.861"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:23.863" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:37:23.862" endtime="20230731 07:37:23.863"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:37:23.877" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230731 07:37:23.864" endtime="20230731 07:37:23.877"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:37:26.035" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:37:23.881" endtime="20230731 07:37:26.036"/>
</kw>
<status status="PASS" starttime="20230731 07:37:23.877" endtime="20230731 07:37:26.036"/>
</kw>
<status status="PASS" starttime="20230731 07:37:23.877" endtime="20230731 07:37:26.036"/>
</branch>
<status status="PASS" starttime="20230731 07:37:23.877" endtime="20230731 07:37:26.036"/>
</if>
<status status="PASS" starttime="20230731 07:37:23.862" endtime="20230731 07:37:26.037"/>
</kw>
<status status="PASS" starttime="20230731 07:37:23.148" endtime="20230731 07:37:26.037"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Thêm mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20230731 07:37:26.038" endtime="20230731 07:37:26.038"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:26.037" endtime="20230731 07:37:26.038"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'edit'">
<kw name="Select Code need to edit" library="common" sourcename="Select ${name} need to edit">
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230731 07:37:26.055" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230731 07:37:26.055" level="INFO">${elements} = ['element=208bb671-dbc4-4cd2-83af-1254ba266e04', 'element=5167d396-b78a-4019-a705-3670eb4b90c9', 'element=46b4bec7-fe30-494f-a8c0-0b74bd67bb37', 'element=99256164-720d-4087-9d2b-2008e5f129dc', 'elemen...</msg>
<status status="PASS" starttime="20230731 07:37:26.040" endtime="20230731 07:37:26.055"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'Post'">
<kw name="Click" library="Browser">
<arg>${elements}[2]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:37:26.056" endtime="20230731 07:37:26.056"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:26.055" endtime="20230731 07:37:26.056"/>
</branch>
<branch type="ELSE IF" condition="'${name}' != 'post'">
<kw name="Click" library="Browser">
<arg>${elements}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:26.057" endtime="20230731 07:37:26.211"/>
</kw>
<status status="PASS" starttime="20230731 07:37:26.056" endtime="20230731 07:37:26.212"/>
</branch>
<status status="PASS" starttime="20230731 07:37:26.055" endtime="20230731 07:37:26.212"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:26.215" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:37:26.214" endtime="20230731 07:37:26.215"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:37:26.226" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:37:26.216" endtime="20230731 07:37:26.226"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:37:27.256" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:37:26.230" endtime="20230731 07:37:27.256"/>
</kw>
<status status="PASS" starttime="20230731 07:37:26.227" endtime="20230731 07:37:27.256"/>
</kw>
<status status="PASS" starttime="20230731 07:37:26.226" endtime="20230731 07:37:27.257"/>
</branch>
<status status="PASS" starttime="20230731 07:37:26.226" endtime="20230731 07:37:27.257"/>
</if>
<status status="PASS" starttime="20230731 07:37:26.212" endtime="20230731 07:37:27.257"/>
</kw>
<status status="PASS" starttime="20230731 07:37:26.039" endtime="20230731 07:37:27.257"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:37:29.258" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230731 07:37:27.257" endtime="20230731 07:37:29.258"/>
</kw>
<status status="PASS" starttime="20230731 07:37:26.038" endtime="20230731 07:37:29.259"/>
</branch>
<status status="PASS" starttime="20230731 07:37:26.037" endtime="20230731 07:37:29.259"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:29.260" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:37:29.259" endtime="20230731 07:37:29.260"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:37:29.268" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:37:29.261" endtime="20230731 07:37:29.268"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:37:29.270" endtime="20230731 07:37:29.270"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.269" endtime="20230731 07:37:29.270"/>
</branch>
<status status="PASS" starttime="20230731 07:37:29.268" endtime="20230731 07:37:29.270"/>
</if>
<status status="PASS" starttime="20230731 07:37:29.259" endtime="20230731 07:37:29.270"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:37:29.371" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230731 07:37:29.271" endtime="20230731 07:37:29.371"/>
</kw>
<status status="PASS" starttime="20230731 07:37:14.944" endtime="20230731 07:37:29.371"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Tên mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:29.374" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:37:29.374" endtime="20230731 07:37:29.374"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:29.375" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:37:29.374" endtime="20230731 07:37:29.375"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:29.375" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:37:29.375" endtime="20230731 07:37:29.375"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:29.376" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:29.376" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:37:29.375" endtime="20230731 07:37:29.376"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:29.377" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230731 07:37:29.376" endtime="20230731 07:37:29.377"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:29.377" level="INFO">Length is 1</msg>
<msg timestamp="20230731 07:37:29.377" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230731 07:37:29.377" endtime="20230731 07:37:29.377"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.378" endtime="20230731 07:37:29.378"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.378" endtime="20230731 07:37:29.379"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.378" endtime="20230731 07:37:29.379"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.379" endtime="20230731 07:37:29.379"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.380" endtime="20230731 07:37:29.380"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.381" endtime="20230731 07:37:29.381"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.379" endtime="20230731 07:37:29.381"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.382" endtime="20230731 07:37:29.382"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.383" endtime="20230731 07:37:29.383"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.381" endtime="20230731 07:37:29.383"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.384" endtime="20230731 07:37:29.384"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.385" endtime="20230731 07:37:29.385"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.383" endtime="20230731 07:37:29.385"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.386" endtime="20230731 07:37:29.386"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.387" endtime="20230731 07:37:29.387"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.385" endtime="20230731 07:37:29.387"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.389" endtime="20230731 07:37:29.389"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.390" endtime="20230731 07:37:29.390"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.387" endtime="20230731 07:37:29.390"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.391" endtime="20230731 07:37:29.391"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.393" endtime="20230731 07:37:29.393"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.390" endtime="20230731 07:37:29.393"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.394" endtime="20230731 07:37:29.395"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.394" endtime="20230731 07:37:29.395"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:37:29.396" endtime="20230731 07:37:29.397"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.395" endtime="20230731 07:37:29.397"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.398" endtime="20230731 07:37:29.398"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.398" endtime="20230731 07:37:29.398"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.397" endtime="20230731 07:37:29.399"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.401" endtime="20230731 07:37:29.401"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.399" endtime="20230731 07:37:29.401"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.403" endtime="20230731 07:37:29.403"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.402" endtime="20230731 07:37:29.404"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.408" endtime="20230731 07:37:29.408"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.404" endtime="20230731 07:37:29.408"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230731 07:37:29.410" level="INFO">${new_text} = Doloremque voluptates dicta expedita at.</msg>
<status status="PASS" starttime="20230731 07:37:29.410" endtime="20230731 07:37:29.410"/>
</kw>
<status status="PASS" starttime="20230731 07:37:29.408" endtime="20230731 07:37:29.411"/>
</branch>
<status status="PASS" starttime="20230731 07:37:29.377" endtime="20230731 07:37:29.411"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:29.412" level="INFO">Length is 8</msg>
<msg timestamp="20230731 07:37:29.412" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230731 07:37:29.412" endtime="20230731 07:37:29.412"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:37:29.416" level="INFO">${text} = Doloremque voluptates dicta expedita at.</msg>
<status status="PASS" starttime="20230731 07:37:29.414" endtime="20230731 07:37:29.416"/>
</kw>
<status status="PASS" starttime="20230731 07:37:29.413" endtime="20230731 07:37:29.416"/>
</branch>
<status status="PASS" starttime="20230731 07:37:29.413" endtime="20230731 07:37:29.417"/>
</if>
<msg timestamp="20230731 07:37:29.417" level="INFO">${text} = Doloremque voluptates dicta expedita at.</msg>
<status status="PASS" starttime="20230731 07:37:29.373" endtime="20230731 07:37:29.417"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:37:29.418" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:37:29.417" endtime="20230731 07:37:29.418"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:29.419" endtime="20230731 07:37:29.472"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:37:29.474" level="INFO">Fills the text 'Doloremque voluptates dicta expedita at.' in the given field.</msg>
<status status="PASS" starttime="20230731 07:37:29.473" endtime="20230731 07:37:29.509"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:29.509" level="INFO">Length is 40</msg>
<msg timestamp="20230731 07:37:29.510" level="INFO">${cnt} = 40</msg>
<status status="PASS" starttime="20230731 07:37:29.509" endtime="20230731 07:37:29.510"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:37:29.512" level="INFO">${STATE["Tên mã"]} = Doloremque voluptates dicta expedita at.</msg>
<status status="PASS" starttime="20230731 07:37:29.511" endtime="20230731 07:37:29.513"/>
</kw>
<status status="PASS" starttime="20230731 07:37:29.510" endtime="20230731 07:37:29.513"/>
</branch>
<status status="PASS" starttime="20230731 07:37:29.510" endtime="20230731 07:37:29.513"/>
</if>
<status status="PASS" starttime="20230731 07:37:29.372" endtime="20230731 07:37:29.513"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Mã&quot; with &quot;DEV&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:29.521" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:37:29.521" endtime="20230731 07:37:29.521"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:29.523" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:37:29.522" endtime="20230731 07:37:29.523"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:29.524" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:37:29.523" endtime="20230731 07:37:29.524"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:29.526" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:29.526" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:37:29.525" endtime="20230731 07:37:29.526"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:29.527" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:37:29.526" endtime="20230731 07:37:29.527"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:29.528" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:29.528" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:37:29.527" endtime="20230731 07:37:29.528"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.530" endtime="20230731 07:37:29.531"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.531" endtime="20230731 07:37:29.531"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.529" endtime="20230731 07:37:29.532"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.533" endtime="20230731 07:37:29.533"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.534" endtime="20230731 07:37:29.534"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.535" endtime="20230731 07:37:29.535"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.532" endtime="20230731 07:37:29.535"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.536" endtime="20230731 07:37:29.536"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.537" endtime="20230731 07:37:29.537"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.535" endtime="20230731 07:37:29.537"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.538" endtime="20230731 07:37:29.538"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.538" endtime="20230731 07:37:29.539"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.538" endtime="20230731 07:37:29.539"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.540" endtime="20230731 07:37:29.540"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.541" endtime="20230731 07:37:29.541"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.539" endtime="20230731 07:37:29.541"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.542" endtime="20230731 07:37:29.543"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.544" endtime="20230731 07:37:29.544"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.541" endtime="20230731 07:37:29.544"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.548" endtime="20230731 07:37:29.548"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.550" endtime="20230731 07:37:29.550"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.545" endtime="20230731 07:37:29.551"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.552" endtime="20230731 07:37:29.553"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.551" endtime="20230731 07:37:29.553"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:37:29.554" endtime="20230731 07:37:29.554"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.553" endtime="20230731 07:37:29.554"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.555" endtime="20230731 07:37:29.555"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.556" endtime="20230731 07:37:29.556"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.555" endtime="20230731 07:37:29.556"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.557" endtime="20230731 07:37:29.557"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.557" endtime="20230731 07:37:29.558"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.558" endtime="20230731 07:37:29.558"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.558" endtime="20230731 07:37:29.558"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.559" endtime="20230731 07:37:29.560"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.559" endtime="20230731 07:37:29.560"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.561" endtime="20230731 07:37:29.561"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.560" endtime="20230731 07:37:29.561"/>
</branch>
<status status="PASS" starttime="20230731 07:37:29.528" endtime="20230731 07:37:29.561"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:29.563" level="INFO">Length is 3</msg>
<msg timestamp="20230731 07:37:29.563" level="INFO">${cnt} = 3</msg>
<status status="PASS" starttime="20230731 07:37:29.562" endtime="20230731 07:37:29.563"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:37:29.566" level="INFO">${text} = DEV</msg>
<status status="PASS" starttime="20230731 07:37:29.565" endtime="20230731 07:37:29.566"/>
</kw>
<status status="PASS" starttime="20230731 07:37:29.564" endtime="20230731 07:37:29.567"/>
</branch>
<status status="PASS" starttime="20230731 07:37:29.564" endtime="20230731 07:37:29.567"/>
</if>
<msg timestamp="20230731 07:37:29.568" level="INFO">${text} = DEV</msg>
<status status="PASS" starttime="20230731 07:37:29.519" endtime="20230731 07:37:29.568"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:37:29.570" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:37:29.569" endtime="20230731 07:37:29.571"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:29.571" endtime="20230731 07:37:29.647"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:37:29.649" level="INFO">Fills the text 'DEV' in the given field.</msg>
<status status="PASS" starttime="20230731 07:37:29.647" endtime="20230731 07:37:29.695"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:29.696" level="INFO">Length is 3</msg>
<msg timestamp="20230731 07:37:29.697" level="INFO">${cnt} = 3</msg>
<status status="PASS" starttime="20230731 07:37:29.695" endtime="20230731 07:37:29.697"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:37:29.698" level="INFO">${STATE["Mã"]} = DEV</msg>
<status status="PASS" starttime="20230731 07:37:29.698" endtime="20230731 07:37:29.698"/>
</kw>
<status status="PASS" starttime="20230731 07:37:29.697" endtime="20230731 07:37:29.699"/>
</branch>
<status status="PASS" starttime="20230731 07:37:29.697" endtime="20230731 07:37:29.699"/>
</if>
<status status="PASS" starttime="20230731 07:37:29.519" endtime="20230731 07:37:29.699"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:29.703" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:37:29.703" endtime="20230731 07:37:29.703"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:29.704" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:37:29.704" endtime="20230731 07:37:29.705"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:29.706" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:37:29.705" endtime="20230731 07:37:29.706"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:29.707" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:29.707" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:37:29.706" endtime="20230731 07:37:29.707"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:29.708" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230731 07:37:29.708" endtime="20230731 07:37:29.708"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:29.710" level="INFO">Length is 1</msg>
<msg timestamp="20230731 07:37:29.710" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230731 07:37:29.709" endtime="20230731 07:37:29.710"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.712" endtime="20230731 07:37:29.712"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.712" endtime="20230731 07:37:29.713"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.711" endtime="20230731 07:37:29.713"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.714" endtime="20230731 07:37:29.715"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.715" endtime="20230731 07:37:29.715"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.716" endtime="20230731 07:37:29.716"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.714" endtime="20230731 07:37:29.716"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.717" endtime="20230731 07:37:29.717"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.718" endtime="20230731 07:37:29.718"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.716" endtime="20230731 07:37:29.718"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.718" endtime="20230731 07:37:29.719"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.719" endtime="20230731 07:37:29.719"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.718" endtime="20230731 07:37:29.720"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.721" endtime="20230731 07:37:29.721"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.721" endtime="20230731 07:37:29.722"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.720" endtime="20230731 07:37:29.722"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.723" endtime="20230731 07:37:29.723"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.724" endtime="20230731 07:37:29.724"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.722" endtime="20230731 07:37:29.724"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.725" endtime="20230731 07:37:29.725"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.726" endtime="20230731 07:37:29.726"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.724" endtime="20230731 07:37:29.726"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.727" endtime="20230731 07:37:29.727"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.726" endtime="20230731 07:37:29.729"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:37:29.730" endtime="20230731 07:37:29.731"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.729" endtime="20230731 07:37:29.731"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.732" endtime="20230731 07:37:29.732"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.732" endtime="20230731 07:37:29.733"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.731" endtime="20230731 07:37:29.733"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.734" endtime="20230731 07:37:29.734"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.733" endtime="20230731 07:37:29.734"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.735" endtime="20230731 07:37:29.735"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.734" endtime="20230731 07:37:29.735"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:29.736" endtime="20230731 07:37:29.736"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:29.735" endtime="20230731 07:37:29.737"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230731 07:37:29.738" level="INFO">${new_text} = Quidem repellat corrupti.</msg>
<status status="PASS" starttime="20230731 07:37:29.738" endtime="20230731 07:37:29.738"/>
</kw>
<status status="PASS" starttime="20230731 07:37:29.737" endtime="20230731 07:37:29.738"/>
</branch>
<status status="PASS" starttime="20230731 07:37:29.711" endtime="20230731 07:37:29.739"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:29.740" level="INFO">Length is 8</msg>
<msg timestamp="20230731 07:37:29.740" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230731 07:37:29.739" endtime="20230731 07:37:29.740"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:37:29.743" level="INFO">${text} = Quidem repellat corrupti.</msg>
<status status="PASS" starttime="20230731 07:37:29.742" endtime="20230731 07:37:29.743"/>
</kw>
<status status="PASS" starttime="20230731 07:37:29.741" endtime="20230731 07:37:29.744"/>
</branch>
<status status="PASS" starttime="20230731 07:37:29.740" endtime="20230731 07:37:29.744"/>
</if>
<msg timestamp="20230731 07:37:29.744" level="INFO">${text} = Quidem repellat corrupti.</msg>
<status status="PASS" starttime="20230731 07:37:29.702" endtime="20230731 07:37:29.744"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230731 07:37:29.746" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230731 07:37:29.745" endtime="20230731 07:37:29.746"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:29.747" endtime="20230731 07:37:29.826"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:37:29.827" level="INFO">Fills the text 'Quidem repellat corrupti.' in the given field.</msg>
<status status="PASS" starttime="20230731 07:37:29.826" endtime="20230731 07:37:29.858"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:29.859" level="INFO">Length is 25</msg>
<msg timestamp="20230731 07:37:29.859" level="INFO">${cnt} = 25</msg>
<status status="PASS" starttime="20230731 07:37:29.859" endtime="20230731 07:37:29.859"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:37:29.861" level="INFO">${STATE["Mô tả"]} = Quidem repellat corrupti.</msg>
<status status="PASS" starttime="20230731 07:37:29.860" endtime="20230731 07:37:29.861"/>
</kw>
<status status="PASS" starttime="20230731 07:37:29.860" endtime="20230731 07:37:29.862"/>
</branch>
<status status="PASS" starttime="20230731 07:37:29.860" endtime="20230731 07:37:29.862"/>
</if>
<status status="PASS" starttime="20230731 07:37:29.701" endtime="20230731 07:37:29.863"/>
</kw>
<kw name="And Click &quot;Lưu và tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:29.871" endtime="20230731 07:37:30.041"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:30.044" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:37:30.043" endtime="20230731 07:37:30.044"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:37:30.057" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:37:30.044" endtime="20230731 07:37:30.058"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:37:30.058" endtime="20230731 07:37:30.059"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:37:30.059" endtime="20230731 07:37:30.059"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:30.058" endtime="20230731 07:37:30.059"/>
</branch>
<status status="PASS" starttime="20230731 07:37:30.058" endtime="20230731 07:37:30.060"/>
</if>
<status status="PASS" starttime="20230731 07:37:30.041" endtime="20230731 07:37:30.060"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:37:30.061" endtime="20230731 07:37:30.110"/>
</kw>
<status status="PASS" starttime="20230731 07:37:29.870" endtime="20230731 07:37:30.110"/>
</kw>
<kw name="Then User look message &quot;Internal server error&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:30.120" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:37:30.119" endtime="20230731 07:37:30.120"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:30.121" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:30.121" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:37:30.120" endtime="20230731 07:37:30.121"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:37:30.122" endtime="20230731 07:37:30.123"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:30.122" endtime="20230731 07:37:30.123"/>
</branch>
<status status="PASS" starttime="20230731 07:37:30.121" endtime="20230731 07:37:30.123"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:37:32.038" level="INFO">Text: 'Internal server error'</msg>
<status status="PASS" starttime="20230731 07:37:30.127" endtime="20230731 07:37:32.038"/>
</kw>
<status status="PASS" starttime="20230731 07:37:30.123" endtime="20230731 07:37:32.038"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:32.039" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:37:32.039" endtime="20230731 07:37:32.039"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:37:32.405" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-7.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-7.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:37:32.405" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:37:32.405" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:37:32.041" endtime="20230731 07:37:32.407"/>
</kw>
<status status="FAIL" starttime="20230731 07:37:32.040" endtime="20230731 07:37:32.407"/>
</kw>
<msg timestamp="20230731 07:37:32.408" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:37:32.040" endtime="20230731 07:37:32.408"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:37:32.408" endtime="20230731 07:37:32.409"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:32.408" endtime="20230731 07:37:32.409"/>
</branch>
<status status="PASS" starttime="20230731 07:37:32.408" endtime="20230731 07:37:32.410"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:37:38.453" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:37:32.416" endtime="20230731 07:37:38.453"/>
</kw>
<status status="PASS" starttime="20230731 07:37:32.410" endtime="20230731 07:37:38.454"/>
</kw>
<status status="PASS" starttime="20230731 07:37:30.117" endtime="20230731 07:37:38.454"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230731 07:37:39.502" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230731 07:37:38.455" endtime="20230731 07:37:39.502"/>
</kw>
<status status="PASS" starttime="20230731 07:37:38.455" endtime="20230731 07:37:39.503"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230731 07:37:11.730" endtime="20230731 07:37:39.503"/>
</test>
<test id="s1-t6" name="EDC-06 Verify that the error message displayed when edit Code has &quot;Mã&quot; already used by the user with &quot;Lưu lại&quot; button" line="52">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230731 07:37:39.544" endtime="20230731 07:37:39.545"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230731 07:37:39.548" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\d24f0c55-3b16-4ec5-b59d-7102050da8c4"}</msg>
<msg timestamp="20230731 07:37:40.798" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\d24f0c55-3b16-4ec5-b59d-7102050da8c4"}</msg>
<status status="PASS" starttime="20230731 07:37:39.546" endtime="20230731 07:37:40.798"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230731 07:37:42.507" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230731 07:37:42.509" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230731 07:37:40.799" endtime="20230731 07:37:42.509"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230731 07:37:42.511" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230731 07:37:42.510" endtime="20230731 07:37:42.511"/>
</kw>
<status status="PASS" starttime="20230731 07:37:39.543" endtime="20230731 07:37:42.511"/>
</kw>
<kw name="When Go to page edit code" library="common">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:42.520" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:37:42.519" endtime="20230731 07:37:42.520"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:42.522" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:37:42.521" endtime="20230731 07:37:42.522"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:42.523" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:37:42.522" endtime="20230731 07:37:42.523"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:42.525" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:42.525" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:37:42.524" endtime="20230731 07:37:42.525"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:42.527" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:37:42.526" endtime="20230731 07:37:42.527"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:42.529" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:42.529" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:37:42.527" endtime="20230731 07:37:42.529"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.531" endtime="20230731 07:37:42.532"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.532" endtime="20230731 07:37:42.533"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:42.531" endtime="20230731 07:37:42.533"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.534" endtime="20230731 07:37:42.534"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.535" endtime="20230731 07:37:42.535"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.536" endtime="20230731 07:37:42.536"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:42.533" endtime="20230731 07:37:42.536"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.537" endtime="20230731 07:37:42.538"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.538" endtime="20230731 07:37:42.538"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:42.536" endtime="20230731 07:37:42.538"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.540" endtime="20230731 07:37:42.540"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.541" endtime="20230731 07:37:42.541"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:42.539" endtime="20230731 07:37:42.542"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.543" endtime="20230731 07:37:42.543"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.544" endtime="20230731 07:37:42.544"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:42.542" endtime="20230731 07:37:42.545"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.548" endtime="20230731 07:37:42.548"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.549" endtime="20230731 07:37:42.549"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:42.545" endtime="20230731 07:37:42.550"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.551" endtime="20230731 07:37:42.552"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.552" endtime="20230731 07:37:42.553"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:42.550" endtime="20230731 07:37:42.553"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.555" endtime="20230731 07:37:42.555"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:42.554" endtime="20230731 07:37:42.555"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:37:42.556" endtime="20230731 07:37:42.557"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:42.556" endtime="20230731 07:37:42.557"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.558" endtime="20230731 07:37:42.558"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.560" endtime="20230731 07:37:42.560"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:42.557" endtime="20230731 07:37:42.560"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.561" endtime="20230731 07:37:42.561"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:42.560" endtime="20230731 07:37:42.562"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.564" endtime="20230731 07:37:42.564"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:42.563" endtime="20230731 07:37:42.564"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.566" endtime="20230731 07:37:42.566"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:42.565" endtime="20230731 07:37:42.566"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:42.567" endtime="20230731 07:37:42.568"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:42.567" endtime="20230731 07:37:42.568"/>
</branch>
<status status="PASS" starttime="20230731 07:37:42.530" endtime="20230731 07:37:42.568"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:42.570" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:37:42.571" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:37:42.568" endtime="20230731 07:37:42.571"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:37:42.587" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:37:42.577" endtime="20230731 07:37:42.587"/>
</kw>
<status status="PASS" starttime="20230731 07:37:42.572" endtime="20230731 07:37:42.588"/>
</branch>
<status status="PASS" starttime="20230731 07:37:42.571" endtime="20230731 07:37:42.588"/>
</if>
<msg timestamp="20230731 07:37:42.588" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:37:42.518" endtime="20230731 07:37:42.588"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:37:42.592" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:37:42.589" endtime="20230731 07:37:42.592"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:42.593" endtime="20230731 07:37:44.352"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:37:44.354" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230731 07:37:44.353" endtime="20230731 07:37:44.459"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:44.461" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:37:44.461" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:37:44.460" endtime="20230731 07:37:44.461"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:37:44.466" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:37:44.463" endtime="20230731 07:37:44.466"/>
</kw>
<status status="PASS" starttime="20230731 07:37:44.462" endtime="20230731 07:37:44.466"/>
</branch>
<status status="PASS" starttime="20230731 07:37:44.462" endtime="20230731 07:37:44.466"/>
</if>
<status status="PASS" starttime="20230731 07:37:42.517" endtime="20230731 07:37:44.466"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:44.470" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:37:44.470" endtime="20230731 07:37:44.471"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:44.472" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:37:44.471" endtime="20230731 07:37:44.472"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:44.474" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:37:44.473" endtime="20230731 07:37:44.474"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:44.475" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:44.475" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:37:44.474" endtime="20230731 07:37:44.475"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:44.477" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:37:44.476" endtime="20230731 07:37:44.477"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:44.478" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:44.478" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:37:44.477" endtime="20230731 07:37:44.478"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.480" endtime="20230731 07:37:44.480"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.481" endtime="20230731 07:37:44.481"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:44.478" endtime="20230731 07:37:44.481"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.482" endtime="20230731 07:37:44.482"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.483" endtime="20230731 07:37:44.483"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.484" endtime="20230731 07:37:44.484"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:44.481" endtime="20230731 07:37:44.484"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.485" endtime="20230731 07:37:44.486"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.487" endtime="20230731 07:37:44.487"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:44.485" endtime="20230731 07:37:44.487"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.489" endtime="20230731 07:37:44.489"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.490" endtime="20230731 07:37:44.490"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:44.488" endtime="20230731 07:37:44.491"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.492" endtime="20230731 07:37:44.492"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.493" endtime="20230731 07:37:44.493"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:44.491" endtime="20230731 07:37:44.493"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.496" endtime="20230731 07:37:44.496"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.497" endtime="20230731 07:37:44.497"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:44.494" endtime="20230731 07:37:44.497"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.499" endtime="20230731 07:37:44.499"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.500" endtime="20230731 07:37:44.501"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:44.498" endtime="20230731 07:37:44.501"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.504" endtime="20230731 07:37:44.505"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:44.501" endtime="20230731 07:37:44.505"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:37:44.506" endtime="20230731 07:37:44.507"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:44.505" endtime="20230731 07:37:44.507"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.508" endtime="20230731 07:37:44.508"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.509" endtime="20230731 07:37:44.509"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:44.507" endtime="20230731 07:37:44.509"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.510" endtime="20230731 07:37:44.510"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:44.509" endtime="20230731 07:37:44.510"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.512" endtime="20230731 07:37:44.513"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:44.511" endtime="20230731 07:37:44.513"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.514" endtime="20230731 07:37:44.515"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:44.513" endtime="20230731 07:37:44.515"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:44.516" endtime="20230731 07:37:44.516"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:44.515" endtime="20230731 07:37:44.517"/>
</branch>
<status status="PASS" starttime="20230731 07:37:44.478" endtime="20230731 07:37:44.517"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:44.520" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:37:44.520" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:37:44.519" endtime="20230731 07:37:44.520"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:37:44.522" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:37:44.521" endtime="20230731 07:37:44.522"/>
</kw>
<status status="PASS" starttime="20230731 07:37:44.521" endtime="20230731 07:37:44.523"/>
</branch>
<status status="PASS" starttime="20230731 07:37:44.521" endtime="20230731 07:37:44.523"/>
</if>
<msg timestamp="20230731 07:37:44.523" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:37:44.468" endtime="20230731 07:37:44.523"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:37:44.525" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:37:44.524" endtime="20230731 07:37:44.525"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:44.525" endtime="20230731 07:37:45.077"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:37:45.082" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230731 07:37:45.079" endtime="20230731 07:37:45.276"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:45.277" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:37:45.277" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:37:45.276" endtime="20230731 07:37:45.277"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:37:45.280" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:37:45.279" endtime="20230731 07:37:45.280"/>
</kw>
<status status="PASS" starttime="20230731 07:37:45.277" endtime="20230731 07:37:45.281"/>
</branch>
<status status="PASS" starttime="20230731 07:37:45.277" endtime="20230731 07:37:45.281"/>
</if>
<status status="PASS" starttime="20230731 07:37:44.467" endtime="20230731 07:37:45.281"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:45.283" endtime="20230731 07:37:45.726"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:45.730" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:37:45.729" endtime="20230731 07:37:45.730"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:37:45.798" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:37:45.731" endtime="20230731 07:37:45.798"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:37:45.801" endtime="20230731 07:37:45.801"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:37:45.802" endtime="20230731 07:37:45.802"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:45.800" endtime="20230731 07:37:45.803"/>
</branch>
<status status="PASS" starttime="20230731 07:37:45.799" endtime="20230731 07:37:45.803"/>
</if>
<status status="PASS" starttime="20230731 07:37:45.727" endtime="20230731 07:37:45.804"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:37:45.805" endtime="20230731 07:37:45.863"/>
</kw>
<status status="PASS" starttime="20230731 07:37:45.282" endtime="20230731 07:37:45.864"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:45.868" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:37:45.867" endtime="20230731 07:37:45.868"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:45.869" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:45.869" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:37:45.868" endtime="20230731 07:37:45.869"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:37:45.870" endtime="20230731 07:37:45.870"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:45.870" endtime="20230731 07:37:45.871"/>
</branch>
<status status="PASS" starttime="20230731 07:37:45.869" endtime="20230731 07:37:45.871"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:37:48.181" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230731 07:37:45.874" endtime="20230731 07:37:48.181"/>
</kw>
<status status="PASS" starttime="20230731 07:37:45.871" endtime="20230731 07:37:48.182"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:48.183" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:37:48.182" endtime="20230731 07:37:48.183"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:37:48.753" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-8.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-8.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:37:48.753" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:37:48.754" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:37:48.187" endtime="20230731 07:37:48.760"/>
</kw>
<status status="FAIL" starttime="20230731 07:37:48.184" endtime="20230731 07:37:48.760"/>
</kw>
<msg timestamp="20230731 07:37:48.761" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:37:48.184" endtime="20230731 07:37:48.761"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:37:48.763" endtime="20230731 07:37:48.763"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:48.762" endtime="20230731 07:37:48.763"/>
</branch>
<status status="PASS" starttime="20230731 07:37:48.761" endtime="20230731 07:37:48.764"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:37:51.080" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:37:48.766" endtime="20230731 07:37:51.081"/>
</kw>
<status status="PASS" starttime="20230731 07:37:48.764" endtime="20230731 07:37:51.083"/>
</kw>
<status status="PASS" starttime="20230731 07:37:45.866" endtime="20230731 07:37:51.084"/>
</kw>
<status status="PASS" starttime="20230731 07:37:42.515" endtime="20230731 07:37:51.085"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:51.087" endtime="20230731 07:37:51.213"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:51.215" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:37:51.215" endtime="20230731 07:37:51.215"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:37:51.227" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:37:51.216" endtime="20230731 07:37:51.227"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:37:51.230" endtime="20230731 07:37:51.230"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:51.228" endtime="20230731 07:37:51.230"/>
</branch>
<status status="PASS" starttime="20230731 07:37:51.228" endtime="20230731 07:37:51.231"/>
</if>
<status status="PASS" starttime="20230731 07:37:51.214" endtime="20230731 07:37:51.231"/>
</kw>
<status status="PASS" starttime="20230731 07:37:51.086" endtime="20230731 07:37:51.232"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:51.235" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:37:51.234" endtime="20230731 07:37:51.235"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:37:51.244" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:37:51.235" endtime="20230731 07:37:51.244"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:37:51.246" endtime="20230731 07:37:51.246"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:51.245" endtime="20230731 07:37:51.247"/>
</branch>
<status status="PASS" starttime="20230731 07:37:51.244" endtime="20230731 07:37:51.247"/>
</if>
<status status="PASS" starttime="20230731 07:37:51.233" endtime="20230731 07:37:51.247"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:51.248" endtime="20230731 07:37:51.420"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:51.422" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:37:51.422" endtime="20230731 07:37:51.422"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:37:51.450" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:37:51.423" endtime="20230731 07:37:51.451"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:37:51.842" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:37:51.454" endtime="20230731 07:37:51.843"/>
</kw>
<status status="PASS" starttime="20230731 07:37:51.452" endtime="20230731 07:37:51.843"/>
</kw>
<status status="PASS" starttime="20230731 07:37:51.451" endtime="20230731 07:37:51.843"/>
</branch>
<status status="PASS" starttime="20230731 07:37:51.451" endtime="20230731 07:37:51.844"/>
</if>
<status status="PASS" starttime="20230731 07:37:51.421" endtime="20230731 07:37:51.845"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:51.848" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:37:51.847" endtime="20230731 07:37:51.848"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:37:51.891" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230731 07:37:51.848" endtime="20230731 07:37:51.891"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:37:53.841" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:37:51.895" endtime="20230731 07:37:53.841"/>
</kw>
<status status="PASS" starttime="20230731 07:37:51.892" endtime="20230731 07:37:53.842"/>
</kw>
<status status="PASS" starttime="20230731 07:37:51.891" endtime="20230731 07:37:53.842"/>
</branch>
<status status="PASS" starttime="20230731 07:37:51.891" endtime="20230731 07:37:53.842"/>
</if>
<status status="PASS" starttime="20230731 07:37:51.846" endtime="20230731 07:37:53.843"/>
</kw>
<status status="PASS" starttime="20230731 07:37:51.232" endtime="20230731 07:37:53.843"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230731 07:37:53.870" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230731 07:37:53.870" level="INFO">${elements} = ['element=b5ea5ad7-3b68-43ac-8229-a3b1d81e81ea', 'element=f7813c68-986c-4168-b862-90e21faa177f', 'element=d396b17b-1894-45d9-aac5-9fe8189140f1', 'element=c0ad3dd7-ab96-41c1-a5d0-d092905eb949', 'elemen...</msg>
<status status="PASS" starttime="20230731 07:37:53.844" endtime="20230731 07:37:53.870"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elements}[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:53.871" endtime="20230731 07:37:54.082"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:37:56.084" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230731 07:37:54.083" endtime="20230731 07:37:56.084"/>
</kw>
<status status="PASS" starttime="20230731 07:37:42.513" endtime="20230731 07:37:56.084"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:56.088" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:37:56.087" endtime="20230731 07:37:56.088"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:56.089" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:37:56.088" endtime="20230731 07:37:56.089"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:56.089" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:37:56.089" endtime="20230731 07:37:56.089"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:56.090" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:56.090" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:37:56.090" endtime="20230731 07:37:56.090"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:56.092" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230731 07:37:56.091" endtime="20230731 07:37:56.092"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:56.093" level="INFO">Length is 1</msg>
<msg timestamp="20230731 07:37:56.093" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230731 07:37:56.092" endtime="20230731 07:37:56.093"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.094" endtime="20230731 07:37:56.094"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.094" endtime="20230731 07:37:56.095"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:56.094" endtime="20230731 07:37:56.095"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.095" endtime="20230731 07:37:56.095"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.096" endtime="20230731 07:37:56.096"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.096" endtime="20230731 07:37:56.096"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:56.095" endtime="20230731 07:37:56.096"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.096" endtime="20230731 07:37:56.096"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.098" endtime="20230731 07:37:56.098"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:56.096" endtime="20230731 07:37:56.098"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.099" endtime="20230731 07:37:56.099"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.099" endtime="20230731 07:37:56.099"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:56.098" endtime="20230731 07:37:56.099"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.100" endtime="20230731 07:37:56.100"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.100" endtime="20230731 07:37:56.100"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:56.099" endtime="20230731 07:37:56.102"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.103" endtime="20230731 07:37:56.103"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.103" endtime="20230731 07:37:56.104"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:56.102" endtime="20230731 07:37:56.104"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.105" endtime="20230731 07:37:56.105"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.105" endtime="20230731 07:37:56.105"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:56.104" endtime="20230731 07:37:56.105"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.106" endtime="20230731 07:37:56.106"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:56.105" endtime="20230731 07:37:56.106"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:37:56.107" endtime="20230731 07:37:56.107"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:56.106" endtime="20230731 07:37:56.107"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.109" endtime="20230731 07:37:56.110"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.111" endtime="20230731 07:37:56.111"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:56.107" endtime="20230731 07:37:56.111"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.112" endtime="20230731 07:37:56.113"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:56.111" endtime="20230731 07:37:56.113"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.114" endtime="20230731 07:37:56.114"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:56.113" endtime="20230731 07:37:56.114"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.115" endtime="20230731 07:37:56.116"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:56.115" endtime="20230731 07:37:56.116"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230731 07:37:56.118" level="INFO">${new_text} = Iusto iste doloremque dolores.</msg>
<status status="PASS" starttime="20230731 07:37:56.117" endtime="20230731 07:37:56.118"/>
</kw>
<status status="PASS" starttime="20230731 07:37:56.116" endtime="20230731 07:37:56.119"/>
</branch>
<status status="PASS" starttime="20230731 07:37:56.093" endtime="20230731 07:37:56.120"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:56.124" level="INFO">Length is 8</msg>
<msg timestamp="20230731 07:37:56.124" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230731 07:37:56.123" endtime="20230731 07:37:56.124"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:37:56.126" level="INFO">${text} = Iusto iste doloremque dolores.</msg>
<status status="PASS" starttime="20230731 07:37:56.125" endtime="20230731 07:37:56.126"/>
</kw>
<status status="PASS" starttime="20230731 07:37:56.125" endtime="20230731 07:37:56.127"/>
</branch>
<status status="PASS" starttime="20230731 07:37:56.124" endtime="20230731 07:37:56.127"/>
</if>
<msg timestamp="20230731 07:37:56.127" level="INFO">${text} = Iusto iste doloremque dolores.</msg>
<status status="PASS" starttime="20230731 07:37:56.086" endtime="20230731 07:37:56.127"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:37:56.129" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:37:56.128" endtime="20230731 07:37:56.129"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:56.130" endtime="20230731 07:37:56.184"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:37:56.185" level="INFO">Fills the text 'Iusto iste doloremque dolores.' in the given field.</msg>
<status status="PASS" starttime="20230731 07:37:56.184" endtime="20230731 07:37:56.227"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:56.228" level="INFO">Length is 30</msg>
<msg timestamp="20230731 07:37:56.228" level="INFO">${cnt} = 30</msg>
<status status="PASS" starttime="20230731 07:37:56.228" endtime="20230731 07:37:56.228"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:37:56.230" level="INFO">${STATE["Mã"]} = Iusto iste doloremque dolores.</msg>
<status status="PASS" starttime="20230731 07:37:56.229" endtime="20230731 07:37:56.231"/>
</kw>
<status status="PASS" starttime="20230731 07:37:56.229" endtime="20230731 07:37:56.231"/>
</branch>
<status status="PASS" starttime="20230731 07:37:56.228" endtime="20230731 07:37:56.231"/>
</if>
<status status="PASS" starttime="20230731 07:37:56.085" endtime="20230731 07:37:56.231"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:37:56.244" endtime="20230731 07:37:56.424"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:56.427" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:37:56.426" endtime="20230731 07:37:56.427"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:37:56.448" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:37:56.427" endtime="20230731 07:37:56.448"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.450" endtime="20230731 07:37:56.450"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.451" endtime="20230731 07:37:56.451"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:56.449" endtime="20230731 07:37:56.451"/>
</branch>
<status status="PASS" starttime="20230731 07:37:56.448" endtime="20230731 07:37:56.452"/>
</if>
<status status="PASS" starttime="20230731 07:37:56.425" endtime="20230731 07:37:56.452"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:37:56.453" endtime="20230731 07:37:56.496"/>
</kw>
<status status="PASS" starttime="20230731 07:37:56.243" endtime="20230731 07:37:56.496"/>
</kw>
<kw name="Then User look message &quot;Internal server error&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:37:56.504" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:37:56.504" endtime="20230731 07:37:56.505"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:37:56.506" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:37:56.506" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:37:56.505" endtime="20230731 07:37:56.506"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:37:56.507" endtime="20230731 07:37:56.507"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:56.506" endtime="20230731 07:37:56.507"/>
</branch>
<status status="PASS" starttime="20230731 07:37:56.506" endtime="20230731 07:37:56.508"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:37:58.420" level="INFO">Text: 'Internal server error'</msg>
<status status="PASS" starttime="20230731 07:37:56.512" endtime="20230731 07:37:58.420"/>
</kw>
<status status="PASS" starttime="20230731 07:37:56.508" endtime="20230731 07:37:58.420"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:37:58.422" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:37:58.421" endtime="20230731 07:37:58.422"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:37:58.833" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-9.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-9.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:37:58.834" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:37:58.834" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:37:58.425" endtime="20230731 07:37:58.837"/>
</kw>
<status status="FAIL" starttime="20230731 07:37:58.423" endtime="20230731 07:37:58.837"/>
</kw>
<msg timestamp="20230731 07:37:58.839" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:37:58.422" endtime="20230731 07:37:58.839"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:37:58.841" endtime="20230731 07:37:58.841"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:37:58.840" endtime="20230731 07:37:58.841"/>
</branch>
<status status="PASS" starttime="20230731 07:37:58.840" endtime="20230731 07:37:58.842"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:38:04.369" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:37:58.845" endtime="20230731 07:38:04.370"/>
</kw>
<status status="PASS" starttime="20230731 07:37:58.842" endtime="20230731 07:38:04.370"/>
</kw>
<status status="PASS" starttime="20230731 07:37:56.503" endtime="20230731 07:38:04.370"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230731 07:38:04.996" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230731 07:38:04.372" endtime="20230731 07:38:04.997"/>
</kw>
<status status="PASS" starttime="20230731 07:38:04.371" endtime="20230731 07:38:04.997"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230731 07:37:39.537" endtime="20230731 07:38:04.998"/>
</test>
<test id="s1-t7" name="EDC-07 Verify that error message display when changing &quot;Mã&quot; field &amp; &quot;Lưu và tạo mới&quot; button" line="59">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230731 07:38:05.025" endtime="20230731 07:38:05.026"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230731 07:38:05.028" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\b884b355-9572-4499-8d28-55b9dae50786"}</msg>
<msg timestamp="20230731 07:38:06.351" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\b884b355-9572-4499-8d28-55b9dae50786"}</msg>
<status status="PASS" starttime="20230731 07:38:05.027" endtime="20230731 07:38:06.351"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230731 07:38:07.827" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230731 07:38:07.827" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230731 07:38:06.352" endtime="20230731 07:38:07.827"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230731 07:38:07.832" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230731 07:38:07.829" endtime="20230731 07:38:07.832"/>
</kw>
<status status="PASS" starttime="20230731 07:38:05.024" endtime="20230731 07:38:07.833"/>
</kw>
<kw name="When Go to page edit code" library="common">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:07.840" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:38:07.839" endtime="20230731 07:38:07.840"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:07.841" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:38:07.840" endtime="20230731 07:38:07.841"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:38:07.842" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:38:07.842" endtime="20230731 07:38:07.842"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:07.845" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:38:07.845" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:38:07.844" endtime="20230731 07:38:07.845"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:38:07.847" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:38:07.846" endtime="20230731 07:38:07.847"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:07.848" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:38:07.848" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:38:07.847" endtime="20230731 07:38:07.848"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.851" endtime="20230731 07:38:07.852"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.852" endtime="20230731 07:38:07.852"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:07.848" endtime="20230731 07:38:07.852"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.853" endtime="20230731 07:38:07.853"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.854" endtime="20230731 07:38:07.854"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.854" endtime="20230731 07:38:07.854"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:07.853" endtime="20230731 07:38:07.855"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.856" endtime="20230731 07:38:07.858"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.858" endtime="20230731 07:38:07.858"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:07.855" endtime="20230731 07:38:07.858"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.860" endtime="20230731 07:38:07.860"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.862" endtime="20230731 07:38:07.862"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:07.858" endtime="20230731 07:38:07.863"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.864" endtime="20230731 07:38:07.864"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.865" endtime="20230731 07:38:07.865"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:07.863" endtime="20230731 07:38:07.865"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.867" endtime="20230731 07:38:07.867"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.867" endtime="20230731 07:38:07.867"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:07.866" endtime="20230731 07:38:07.867"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.869" endtime="20230731 07:38:07.870"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.877" endtime="20230731 07:38:07.879"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:07.869" endtime="20230731 07:38:07.879"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.883" endtime="20230731 07:38:07.883"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:07.881" endtime="20230731 07:38:07.883"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:38:07.884" endtime="20230731 07:38:07.885"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:07.883" endtime="20230731 07:38:07.885"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.886" endtime="20230731 07:38:07.886"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.887" endtime="20230731 07:38:07.887"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:07.885" endtime="20230731 07:38:07.888"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.888" endtime="20230731 07:38:07.888"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:07.888" endtime="20230731 07:38:07.889"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.890" endtime="20230731 07:38:07.890"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:07.889" endtime="20230731 07:38:07.890"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.891" endtime="20230731 07:38:07.891"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:07.890" endtime="20230731 07:38:07.892"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:07.893" endtime="20230731 07:38:07.894"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:07.892" endtime="20230731 07:38:07.894"/>
</branch>
<status status="PASS" starttime="20230731 07:38:07.848" endtime="20230731 07:38:07.895"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:07.896" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:38:07.897" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:38:07.896" endtime="20230731 07:38:07.897"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:38:07.898" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:38:07.897" endtime="20230731 07:38:07.898"/>
</kw>
<status status="PASS" starttime="20230731 07:38:07.897" endtime="20230731 07:38:07.898"/>
</branch>
<status status="PASS" starttime="20230731 07:38:07.897" endtime="20230731 07:38:07.898"/>
</if>
<msg timestamp="20230731 07:38:07.899" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:38:07.838" endtime="20230731 07:38:07.899"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:38:07.900" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:38:07.899" endtime="20230731 07:38:07.900"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:38:07.901" endtime="20230731 07:38:09.958"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:38:09.959" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230731 07:38:09.958" endtime="20230731 07:38:10.042"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:10.044" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:38:10.044" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:38:10.043" endtime="20230731 07:38:10.044"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:38:10.047" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:38:10.046" endtime="20230731 07:38:10.047"/>
</kw>
<status status="PASS" starttime="20230731 07:38:10.045" endtime="20230731 07:38:10.048"/>
</branch>
<status status="PASS" starttime="20230731 07:38:10.045" endtime="20230731 07:38:10.048"/>
</if>
<status status="PASS" starttime="20230731 07:38:07.837" endtime="20230731 07:38:10.048"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:10.051" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:38:10.051" endtime="20230731 07:38:10.051"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:10.052" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:38:10.052" endtime="20230731 07:38:10.052"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:38:10.054" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:38:10.053" endtime="20230731 07:38:10.054"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:10.055" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:38:10.055" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:38:10.054" endtime="20230731 07:38:10.055"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:38:10.056" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:38:10.055" endtime="20230731 07:38:10.056"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:10.057" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:38:10.057" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:38:10.057" endtime="20230731 07:38:10.057"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.060" endtime="20230731 07:38:10.060"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.061" endtime="20230731 07:38:10.061"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:10.059" endtime="20230731 07:38:10.061"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.062" endtime="20230731 07:38:10.063"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.064" endtime="20230731 07:38:10.064"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.065" endtime="20230731 07:38:10.065"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:10.062" endtime="20230731 07:38:10.066"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.067" endtime="20230731 07:38:10.067"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.068" endtime="20230731 07:38:10.068"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:10.066" endtime="20230731 07:38:10.068"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.070" endtime="20230731 07:38:10.071"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.072" endtime="20230731 07:38:10.072"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:10.069" endtime="20230731 07:38:10.072"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.073" endtime="20230731 07:38:10.074"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.074" endtime="20230731 07:38:10.075"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:10.072" endtime="20230731 07:38:10.075"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.076" endtime="20230731 07:38:10.077"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.078" endtime="20230731 07:38:10.078"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:10.075" endtime="20230731 07:38:10.078"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.080" endtime="20230731 07:38:10.080"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.081" endtime="20230731 07:38:10.081"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:10.078" endtime="20230731 07:38:10.082"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.083" endtime="20230731 07:38:10.083"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:10.082" endtime="20230731 07:38:10.083"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:38:10.084" endtime="20230731 07:38:10.085"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:10.084" endtime="20230731 07:38:10.085"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.086" endtime="20230731 07:38:10.086"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.087" endtime="20230731 07:38:10.087"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:10.085" endtime="20230731 07:38:10.088"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.089" endtime="20230731 07:38:10.089"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:10.088" endtime="20230731 07:38:10.090"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.091" endtime="20230731 07:38:10.091"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:10.090" endtime="20230731 07:38:10.091"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.093" endtime="20230731 07:38:10.093"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:10.092" endtime="20230731 07:38:10.093"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.094" endtime="20230731 07:38:10.095"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:10.093" endtime="20230731 07:38:10.095"/>
</branch>
<status status="PASS" starttime="20230731 07:38:10.057" endtime="20230731 07:38:10.095"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:10.096" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:38:10.096" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:38:10.096" endtime="20230731 07:38:10.096"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:38:10.098" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:38:10.098" endtime="20230731 07:38:10.098"/>
</kw>
<status status="PASS" starttime="20230731 07:38:10.097" endtime="20230731 07:38:10.098"/>
</branch>
<status status="PASS" starttime="20230731 07:38:10.097" endtime="20230731 07:38:10.098"/>
</if>
<msg timestamp="20230731 07:38:10.099" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:38:10.049" endtime="20230731 07:38:10.099"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:38:10.101" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:38:10.099" endtime="20230731 07:38:10.101"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:38:10.101" endtime="20230731 07:38:10.231"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:38:10.233" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230731 07:38:10.232" endtime="20230731 07:38:10.289"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:10.290" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:38:10.290" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:38:10.290" endtime="20230731 07:38:10.290"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:38:10.293" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:38:10.292" endtime="20230731 07:38:10.293"/>
</kw>
<status status="PASS" starttime="20230731 07:38:10.291" endtime="20230731 07:38:10.294"/>
</branch>
<status status="PASS" starttime="20230731 07:38:10.291" endtime="20230731 07:38:10.294"/>
</if>
<status status="PASS" starttime="20230731 07:38:10.049" endtime="20230731 07:38:10.295"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:38:10.297" endtime="20230731 07:38:10.525"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:10.528" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:38:10.527" endtime="20230731 07:38:10.528"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:38:10.558" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:38:10.530" endtime="20230731 07:38:10.558"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.562" endtime="20230731 07:38:10.564"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.565" endtime="20230731 07:38:10.565"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:10.561" endtime="20230731 07:38:10.566"/>
</branch>
<status status="PASS" starttime="20230731 07:38:10.561" endtime="20230731 07:38:10.567"/>
</if>
<status status="PASS" starttime="20230731 07:38:10.525" endtime="20230731 07:38:10.567"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:38:10.567" endtime="20230731 07:38:10.622"/>
</kw>
<status status="PASS" starttime="20230731 07:38:10.296" endtime="20230731 07:38:10.622"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:38:10.625" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:38:10.624" endtime="20230731 07:38:10.625"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:10.626" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:38:10.626" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:38:10.625" endtime="20230731 07:38:10.626"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:38:10.628" endtime="20230731 07:38:10.628"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:10.626" endtime="20230731 07:38:10.628"/>
</branch>
<status status="PASS" starttime="20230731 07:38:10.626" endtime="20230731 07:38:10.630"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:38:13.086" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230731 07:38:10.634" endtime="20230731 07:38:13.086"/>
</kw>
<status status="PASS" starttime="20230731 07:38:10.630" endtime="20230731 07:38:13.087"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:13.088" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:38:13.088" endtime="20230731 07:38:13.088"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:38:13.654" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-10.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-10.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:38:13.656" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:38:13.657" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:38:13.092" endtime="20230731 07:38:13.661"/>
</kw>
<status status="FAIL" starttime="20230731 07:38:13.089" endtime="20230731 07:38:13.661"/>
</kw>
<msg timestamp="20230731 07:38:13.662" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:38:13.089" endtime="20230731 07:38:13.662"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:38:13.663" endtime="20230731 07:38:13.664"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:13.662" endtime="20230731 07:38:13.664"/>
</branch>
<status status="PASS" starttime="20230731 07:38:13.662" endtime="20230731 07:38:13.664"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:38:15.821" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:38:13.667" endtime="20230731 07:38:15.822"/>
</kw>
<status status="PASS" starttime="20230731 07:38:13.665" endtime="20230731 07:38:15.822"/>
</kw>
<status status="PASS" starttime="20230731 07:38:10.623" endtime="20230731 07:38:15.822"/>
</kw>
<status status="PASS" starttime="20230731 07:38:07.836" endtime="20230731 07:38:15.822"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:38:15.823" endtime="20230731 07:38:15.893"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:15.895" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:38:15.895" endtime="20230731 07:38:15.895"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:38:15.903" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:38:15.896" endtime="20230731 07:38:15.903"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:38:15.904" endtime="20230731 07:38:15.904"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:15.904" endtime="20230731 07:38:15.905"/>
</branch>
<status status="PASS" starttime="20230731 07:38:15.903" endtime="20230731 07:38:15.905"/>
</if>
<status status="PASS" starttime="20230731 07:38:15.893" endtime="20230731 07:38:15.905"/>
</kw>
<status status="PASS" starttime="20230731 07:38:15.823" endtime="20230731 07:38:15.905"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:15.909" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:38:15.907" endtime="20230731 07:38:15.909"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:38:15.919" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:38:15.909" endtime="20230731 07:38:15.919"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:38:15.920" endtime="20230731 07:38:15.920"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:15.919" endtime="20230731 07:38:15.920"/>
</branch>
<status status="PASS" starttime="20230731 07:38:15.919" endtime="20230731 07:38:15.921"/>
</if>
<status status="PASS" starttime="20230731 07:38:15.907" endtime="20230731 07:38:15.921"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:38:15.921" endtime="20230731 07:38:16.137"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:16.139" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:38:16.138" endtime="20230731 07:38:16.139"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:38:16.155" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:38:16.140" endtime="20230731 07:38:16.155"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:38:16.908" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:38:16.158" endtime="20230731 07:38:16.908"/>
</kw>
<status status="PASS" starttime="20230731 07:38:16.156" endtime="20230731 07:38:16.909"/>
</kw>
<status status="PASS" starttime="20230731 07:38:16.155" endtime="20230731 07:38:16.909"/>
</branch>
<status status="PASS" starttime="20230731 07:38:16.155" endtime="20230731 07:38:16.912"/>
</if>
<status status="PASS" starttime="20230731 07:38:16.138" endtime="20230731 07:38:16.912"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:16.915" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:38:16.914" endtime="20230731 07:38:16.915"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:38:16.952" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230731 07:38:16.915" endtime="20230731 07:38:16.952"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:38:19.157" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:38:16.956" endtime="20230731 07:38:19.157"/>
</kw>
<status status="PASS" starttime="20230731 07:38:16.954" endtime="20230731 07:38:19.158"/>
</kw>
<status status="PASS" starttime="20230731 07:38:16.953" endtime="20230731 07:38:19.158"/>
</branch>
<status status="PASS" starttime="20230731 07:38:16.953" endtime="20230731 07:38:19.162"/>
</if>
<status status="PASS" starttime="20230731 07:38:16.913" endtime="20230731 07:38:19.163"/>
</kw>
<status status="PASS" starttime="20230731 07:38:15.906" endtime="20230731 07:38:19.167"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230731 07:38:19.197" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230731 07:38:19.200" level="INFO">${elements} = ['element=06f9bca0-1299-4744-8458-64e04f045d27', 'element=6e0a262c-34a5-4233-bccd-c98d7deaa34f', 'element=18af7b46-78d1-4b0f-bfd5-9636a3591163', 'element=28688023-4eeb-42d7-94a9-dce6cb8c1744', 'elemen...</msg>
<status status="PASS" starttime="20230731 07:38:19.167" endtime="20230731 07:38:19.200"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elements}[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:38:19.201" endtime="20230731 07:38:19.546"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:38:21.548" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230731 07:38:19.547" endtime="20230731 07:38:21.548"/>
</kw>
<status status="PASS" starttime="20230731 07:38:07.836" endtime="20230731 07:38:21.548"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:21.572" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:38:21.571" endtime="20230731 07:38:21.572"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:21.573" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:38:21.573" endtime="20230731 07:38:21.573"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:38:21.574" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:38:21.574" endtime="20230731 07:38:21.575"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:21.576" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:38:21.576" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:38:21.575" endtime="20230731 07:38:21.576"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:38:21.577" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230731 07:38:21.577" endtime="20230731 07:38:21.577"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:21.579" level="INFO">Length is 1</msg>
<msg timestamp="20230731 07:38:21.579" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230731 07:38:21.578" endtime="20230731 07:38:21.579"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.581" endtime="20230731 07:38:21.581"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.582" endtime="20230731 07:38:21.582"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:21.580" endtime="20230731 07:38:21.583"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.584" endtime="20230731 07:38:21.584"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.586" endtime="20230731 07:38:21.586"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.587" endtime="20230731 07:38:21.587"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:21.583" endtime="20230731 07:38:21.589"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.590" endtime="20230731 07:38:21.590"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.591" endtime="20230731 07:38:21.591"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:21.589" endtime="20230731 07:38:21.592"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.593" endtime="20230731 07:38:21.594"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.595" endtime="20230731 07:38:21.595"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:21.592" endtime="20230731 07:38:21.596"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.597" endtime="20230731 07:38:21.598"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.598" endtime="20230731 07:38:21.599"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:21.596" endtime="20230731 07:38:21.600"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.601" endtime="20230731 07:38:21.602"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.602" endtime="20230731 07:38:21.602"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:21.600" endtime="20230731 07:38:21.603"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.604" endtime="20230731 07:38:21.604"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.604" endtime="20230731 07:38:21.605"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:21.603" endtime="20230731 07:38:21.605"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.606" endtime="20230731 07:38:21.606"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:21.605" endtime="20230731 07:38:21.606"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:38:21.607" endtime="20230731 07:38:21.607"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:21.606" endtime="20230731 07:38:21.607"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.608" endtime="20230731 07:38:21.608"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.614" endtime="20230731 07:38:21.615"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:21.608" endtime="20230731 07:38:21.616"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.617" endtime="20230731 07:38:21.617"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:21.616" endtime="20230731 07:38:21.617"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.618" endtime="20230731 07:38:21.618"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:21.618" endtime="20230731 07:38:21.618"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:21.620" endtime="20230731 07:38:21.620"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:21.619" endtime="20230731 07:38:21.620"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230731 07:38:21.622" level="INFO">${new_text} = Eos maxime eos harum veniam explicabo error cum.</msg>
<status status="PASS" starttime="20230731 07:38:21.621" endtime="20230731 07:38:21.622"/>
</kw>
<status status="PASS" starttime="20230731 07:38:21.620" endtime="20230731 07:38:21.622"/>
</branch>
<status status="PASS" starttime="20230731 07:38:21.579" endtime="20230731 07:38:21.622"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:21.623" level="INFO">Length is 8</msg>
<msg timestamp="20230731 07:38:21.623" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230731 07:38:21.623" endtime="20230731 07:38:21.624"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:38:21.627" level="INFO">${text} = Eos maxime eos harum veniam explicabo error cum.</msg>
<status status="PASS" starttime="20230731 07:38:21.625" endtime="20230731 07:38:21.627"/>
</kw>
<status status="PASS" starttime="20230731 07:38:21.624" endtime="20230731 07:38:21.628"/>
</branch>
<status status="PASS" starttime="20230731 07:38:21.624" endtime="20230731 07:38:21.628"/>
</if>
<msg timestamp="20230731 07:38:21.630" level="INFO">${text} = Eos maxime eos harum veniam explicabo error cum.</msg>
<status status="PASS" starttime="20230731 07:38:21.570" endtime="20230731 07:38:21.631"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:38:21.632" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:38:21.631" endtime="20230731 07:38:21.632"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:38:21.633" endtime="20230731 07:38:21.766"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:38:21.767" level="INFO">Fills the text 'Eos maxime eos harum veniam explicabo error cum.' in the given field.</msg>
<status status="PASS" starttime="20230731 07:38:21.766" endtime="20230731 07:38:21.834"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:21.835" level="INFO">Length is 48</msg>
<msg timestamp="20230731 07:38:21.836" level="INFO">${cnt} = 48</msg>
<status status="PASS" starttime="20230731 07:38:21.835" endtime="20230731 07:38:21.836"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:38:21.838" level="INFO">${STATE["Mã"]} = Eos maxime eos harum veniam explicabo error cum.</msg>
<status status="PASS" starttime="20230731 07:38:21.837" endtime="20230731 07:38:21.838"/>
</kw>
<status status="PASS" starttime="20230731 07:38:21.836" endtime="20230731 07:38:21.838"/>
</branch>
<status status="PASS" starttime="20230731 07:38:21.836" endtime="20230731 07:38:21.838"/>
</if>
<status status="PASS" starttime="20230731 07:38:21.569" endtime="20230731 07:38:21.839"/>
</kw>
<kw name="And Click &quot;Lưu và tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:38:21.844" endtime="20230731 07:38:22.118"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:22.120" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:38:22.119" endtime="20230731 07:38:22.120"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:38:22.150" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:38:22.121" endtime="20230731 07:38:22.150"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:38:22.152" endtime="20230731 07:38:22.152"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:38:22.153" endtime="20230731 07:38:22.153"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:22.151" endtime="20230731 07:38:22.153"/>
</branch>
<status status="PASS" starttime="20230731 07:38:22.151" endtime="20230731 07:38:22.153"/>
</if>
<status status="PASS" starttime="20230731 07:38:22.119" endtime="20230731 07:38:22.154"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:38:22.154" endtime="20230731 07:38:22.207"/>
</kw>
<status status="PASS" starttime="20230731 07:38:21.843" endtime="20230731 07:38:22.207"/>
</kw>
<kw name="Then User look message &quot;Internal server error&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:38:22.211" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:38:22.210" endtime="20230731 07:38:22.211"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:22.212" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:38:22.212" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:38:22.212" endtime="20230731 07:38:22.214"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:38:22.215" endtime="20230731 07:38:22.215"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:22.214" endtime="20230731 07:38:22.215"/>
</branch>
<status status="PASS" starttime="20230731 07:38:22.214" endtime="20230731 07:38:22.216"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:38:24.193" level="INFO">Text: 'Internal server error'</msg>
<status status="PASS" starttime="20230731 07:38:22.220" endtime="20230731 07:38:24.193"/>
</kw>
<status status="PASS" starttime="20230731 07:38:22.216" endtime="20230731 07:38:24.194"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:24.196" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:38:24.195" endtime="20230731 07:38:24.196"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:38:24.637" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-11.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-11.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:38:24.637" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:38:24.637" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:38:24.199" endtime="20230731 07:38:24.641"/>
</kw>
<status status="FAIL" starttime="20230731 07:38:24.197" endtime="20230731 07:38:24.641"/>
</kw>
<msg timestamp="20230731 07:38:24.643" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:38:24.197" endtime="20230731 07:38:24.643"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:38:24.644" endtime="20230731 07:38:24.645"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:24.643" endtime="20230731 07:38:24.645"/>
</branch>
<status status="PASS" starttime="20230731 07:38:24.643" endtime="20230731 07:38:24.645"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:38:30.240" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:38:24.648" endtime="20230731 07:38:30.241"/>
</kw>
<status status="PASS" starttime="20230731 07:38:24.646" endtime="20230731 07:38:30.241"/>
</kw>
<status status="PASS" starttime="20230731 07:38:22.208" endtime="20230731 07:38:30.242"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230731 07:38:31.017" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230731 07:38:30.252" endtime="20230731 07:38:31.017"/>
</kw>
<status status="PASS" starttime="20230731 07:38:30.251" endtime="20230731 07:38:31.017"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230731 07:38:05.006" endtime="20230731 07:38:31.018"/>
</test>
<test id="s1-t8" name="EDC-08 Verify that the code can be successfully edited when changing the &quot;Tên mã&quot; field &amp; &quot;Lưu lại&quot; button" line="67">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230731 07:38:31.037" endtime="20230731 07:38:31.038"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230731 07:38:31.039" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\2e82616a-655e-40ee-aa88-9a411341d655"}</msg>
<msg timestamp="20230731 07:38:32.505" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\2e82616a-655e-40ee-aa88-9a411341d655"}</msg>
<status status="PASS" starttime="20230731 07:38:31.039" endtime="20230731 07:38:32.505"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230731 07:38:34.543" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230731 07:38:34.543" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230731 07:38:32.506" endtime="20230731 07:38:34.544"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230731 07:38:34.545" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230731 07:38:34.544" endtime="20230731 07:38:34.545"/>
</kw>
<status status="PASS" starttime="20230731 07:38:31.035" endtime="20230731 07:38:34.546"/>
</kw>
<kw name="When Go to edit code page" library="common" sourcename="Go to ${name} code page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:34.551" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:38:34.550" endtime="20230731 07:38:34.551"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:34.551" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:38:34.551" endtime="20230731 07:38:34.551"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:38:34.552" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:38:34.552" endtime="20230731 07:38:34.552"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:34.553" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:38:34.553" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:38:34.552" endtime="20230731 07:38:34.553"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:38:34.554" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:38:34.553" endtime="20230731 07:38:34.554"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:34.554" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:38:34.554" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:38:34.554" endtime="20230731 07:38:34.554"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.555" endtime="20230731 07:38:34.555"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.555" endtime="20230731 07:38:34.555"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:34.555" endtime="20230731 07:38:34.556"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.556" endtime="20230731 07:38:34.556"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.557" endtime="20230731 07:38:34.557"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.557" endtime="20230731 07:38:34.557"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:34.556" endtime="20230731 07:38:34.557"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.558" endtime="20230731 07:38:34.558"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.559" endtime="20230731 07:38:34.560"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:34.557" endtime="20230731 07:38:34.560"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.561" endtime="20230731 07:38:34.561"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.562" endtime="20230731 07:38:34.562"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:34.560" endtime="20230731 07:38:34.563"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.564" endtime="20230731 07:38:34.564"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.565" endtime="20230731 07:38:34.565"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:34.563" endtime="20230731 07:38:34.566"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.567" endtime="20230731 07:38:34.569"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.570" endtime="20230731 07:38:34.570"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:34.567" endtime="20230731 07:38:34.570"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.572" endtime="20230731 07:38:34.572"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.572" endtime="20230731 07:38:34.573"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:34.571" endtime="20230731 07:38:34.573"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.577" endtime="20230731 07:38:34.578"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:34.574" endtime="20230731 07:38:34.579"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:38:34.580" endtime="20230731 07:38:34.580"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:34.579" endtime="20230731 07:38:34.580"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.582" endtime="20230731 07:38:34.582"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.583" endtime="20230731 07:38:34.583"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:34.581" endtime="20230731 07:38:34.583"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.584" endtime="20230731 07:38:34.584"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:34.583" endtime="20230731 07:38:34.585"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.585" endtime="20230731 07:38:34.586"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:34.585" endtime="20230731 07:38:34.586"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.587" endtime="20230731 07:38:34.587"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:34.586" endtime="20230731 07:38:34.587"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:34.589" endtime="20230731 07:38:34.590"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:34.587" endtime="20230731 07:38:34.590"/>
</branch>
<status status="PASS" starttime="20230731 07:38:34.554" endtime="20230731 07:38:34.591"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:34.596" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:38:34.597" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:38:34.594" endtime="20230731 07:38:34.597"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:38:34.603" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:38:34.600" endtime="20230731 07:38:34.603"/>
</kw>
<status status="PASS" starttime="20230731 07:38:34.598" endtime="20230731 07:38:34.603"/>
</branch>
<status status="PASS" starttime="20230731 07:38:34.598" endtime="20230731 07:38:34.604"/>
</if>
<msg timestamp="20230731 07:38:34.605" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:38:34.549" endtime="20230731 07:38:34.607"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:38:34.615" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:38:34.607" endtime="20230731 07:38:34.615"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:38:34.616" endtime="20230731 07:38:36.161"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:38:36.162" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230731 07:38:36.161" endtime="20230731 07:38:36.237"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:36.239" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:38:36.239" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:38:36.237" endtime="20230731 07:38:36.239"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:38:36.242" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:38:36.240" endtime="20230731 07:38:36.242"/>
</kw>
<status status="PASS" starttime="20230731 07:38:36.239" endtime="20230731 07:38:36.242"/>
</branch>
<status status="PASS" starttime="20230731 07:38:36.239" endtime="20230731 07:38:36.243"/>
</if>
<status status="PASS" starttime="20230731 07:38:34.548" endtime="20230731 07:38:36.243"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:36.246" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:38:36.246" endtime="20230731 07:38:36.247"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:36.248" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:38:36.247" endtime="20230731 07:38:36.248"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:38:36.249" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:38:36.248" endtime="20230731 07:38:36.249"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:36.249" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:38:36.250" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:38:36.249" endtime="20230731 07:38:36.250"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:38:36.251" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:38:36.250" endtime="20230731 07:38:36.251"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:36.252" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:38:36.252" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:38:36.252" endtime="20230731 07:38:36.252"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.254" endtime="20230731 07:38:36.254"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.254" endtime="20230731 07:38:36.254"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:36.253" endtime="20230731 07:38:36.254"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.255" endtime="20230731 07:38:36.255"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.255" endtime="20230731 07:38:36.255"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.256" endtime="20230731 07:38:36.256"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:36.254" endtime="20230731 07:38:36.256"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.257" endtime="20230731 07:38:36.257"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.257" endtime="20230731 07:38:36.257"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:36.256" endtime="20230731 07:38:36.257"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.259" endtime="20230731 07:38:36.260"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.260" endtime="20230731 07:38:36.261"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:36.257" endtime="20230731 07:38:36.261"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.262" endtime="20230731 07:38:36.262"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.263" endtime="20230731 07:38:36.263"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:36.261" endtime="20230731 07:38:36.263"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.264" endtime="20230731 07:38:36.264"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.265" endtime="20230731 07:38:36.265"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:36.263" endtime="20230731 07:38:36.266"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.267" endtime="20230731 07:38:36.267"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.268" endtime="20230731 07:38:36.268"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:36.266" endtime="20230731 07:38:36.268"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.269" endtime="20230731 07:38:36.269"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:36.268" endtime="20230731 07:38:36.270"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:38:36.271" endtime="20230731 07:38:36.271"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:36.270" endtime="20230731 07:38:36.271"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.272" endtime="20230731 07:38:36.272"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.273" endtime="20230731 07:38:36.273"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:36.271" endtime="20230731 07:38:36.273"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.275" endtime="20230731 07:38:36.275"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:36.273" endtime="20230731 07:38:36.275"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.276" endtime="20230731 07:38:36.276"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:36.275" endtime="20230731 07:38:36.277"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.277" endtime="20230731 07:38:36.277"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:36.277" endtime="20230731 07:38:36.279"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.280" endtime="20230731 07:38:36.280"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:36.279" endtime="20230731 07:38:36.280"/>
</branch>
<status status="PASS" starttime="20230731 07:38:36.253" endtime="20230731 07:38:36.280"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:36.282" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:38:36.282" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:38:36.281" endtime="20230731 07:38:36.282"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:38:36.284" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:38:36.283" endtime="20230731 07:38:36.284"/>
</kw>
<status status="PASS" starttime="20230731 07:38:36.282" endtime="20230731 07:38:36.284"/>
</branch>
<status status="PASS" starttime="20230731 07:38:36.282" endtime="20230731 07:38:36.284"/>
</if>
<msg timestamp="20230731 07:38:36.285" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:38:36.245" endtime="20230731 07:38:36.285"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:38:36.286" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:38:36.285" endtime="20230731 07:38:36.286"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:38:36.287" endtime="20230731 07:38:36.380"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:38:36.383" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230731 07:38:36.382" endtime="20230731 07:38:36.471"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:36.472" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:38:36.472" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:38:36.471" endtime="20230731 07:38:36.472"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:38:36.475" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:38:36.474" endtime="20230731 07:38:36.475"/>
</kw>
<status status="PASS" starttime="20230731 07:38:36.473" endtime="20230731 07:38:36.476"/>
</branch>
<status status="PASS" starttime="20230731 07:38:36.473" endtime="20230731 07:38:36.476"/>
</if>
<status status="PASS" starttime="20230731 07:38:36.244" endtime="20230731 07:38:36.477"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:38:36.480" endtime="20230731 07:38:36.697"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:36.699" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:38:36.699" endtime="20230731 07:38:36.699"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:38:36.711" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:38:36.700" endtime="20230731 07:38:36.711"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.713" endtime="20230731 07:38:36.713"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.714" endtime="20230731 07:38:36.714"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:36.712" endtime="20230731 07:38:36.714"/>
</branch>
<status status="PASS" starttime="20230731 07:38:36.712" endtime="20230731 07:38:36.715"/>
</if>
<status status="PASS" starttime="20230731 07:38:36.698" endtime="20230731 07:38:36.715"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:38:36.716" endtime="20230731 07:38:36.806"/>
</kw>
<status status="PASS" starttime="20230731 07:38:36.479" endtime="20230731 07:38:36.807"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:38:36.814" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:38:36.810" endtime="20230731 07:38:36.814"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:36.815" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:38:36.815" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:38:36.814" endtime="20230731 07:38:36.815"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:38:36.817" endtime="20230731 07:38:36.817"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:36.816" endtime="20230731 07:38:36.817"/>
</branch>
<status status="PASS" starttime="20230731 07:38:36.816" endtime="20230731 07:38:36.817"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:38:39.002" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230731 07:38:36.821" endtime="20230731 07:38:39.002"/>
</kw>
<status status="PASS" starttime="20230731 07:38:36.818" endtime="20230731 07:38:39.003"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:39.004" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:38:39.003" endtime="20230731 07:38:39.004"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:38:39.907" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-12.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-12.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:38:39.908" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:38:39.908" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:38:39.010" endtime="20230731 07:38:39.911"/>
</kw>
<status status="FAIL" starttime="20230731 07:38:39.005" endtime="20230731 07:38:39.911"/>
</kw>
<msg timestamp="20230731 07:38:39.912" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:38:39.005" endtime="20230731 07:38:39.912"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:38:39.913" endtime="20230731 07:38:39.913"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:39.912" endtime="20230731 07:38:39.913"/>
</branch>
<status status="PASS" starttime="20230731 07:38:39.912" endtime="20230731 07:38:39.914"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:38:41.903" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:38:39.916" endtime="20230731 07:38:41.903"/>
</kw>
<status status="PASS" starttime="20230731 07:38:39.914" endtime="20230731 07:38:41.903"/>
</kw>
<status status="PASS" starttime="20230731 07:38:36.807" endtime="20230731 07:38:41.904"/>
</kw>
<status status="PASS" starttime="20230731 07:38:34.547" endtime="20230731 07:38:41.904"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:38:41.905" endtime="20230731 07:38:41.981"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:41.982" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:38:41.982" endtime="20230731 07:38:41.982"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:38:41.989" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:38:41.983" endtime="20230731 07:38:41.989"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:38:41.990" endtime="20230731 07:38:41.991"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:41.990" endtime="20230731 07:38:41.991"/>
</branch>
<status status="PASS" starttime="20230731 07:38:41.990" endtime="20230731 07:38:41.992"/>
</if>
<status status="PASS" starttime="20230731 07:38:41.982" endtime="20230731 07:38:41.992"/>
</kw>
<status status="PASS" starttime="20230731 07:38:41.904" endtime="20230731 07:38:41.992"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:41.996" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:38:41.995" endtime="20230731 07:38:41.996"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:38:42.003" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:38:41.996" endtime="20230731 07:38:42.003"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:38:42.004" endtime="20230731 07:38:42.005"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:42.004" endtime="20230731 07:38:42.005"/>
</branch>
<status status="PASS" starttime="20230731 07:38:42.004" endtime="20230731 07:38:42.005"/>
</if>
<status status="PASS" starttime="20230731 07:38:41.994" endtime="20230731 07:38:42.005"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:38:42.006" endtime="20230731 07:38:42.161"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:42.164" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:38:42.163" endtime="20230731 07:38:42.164"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:38:42.180" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:38:42.165" endtime="20230731 07:38:42.180"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:38:42.573" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:38:42.186" endtime="20230731 07:38:42.574"/>
</kw>
<status status="PASS" starttime="20230731 07:38:42.183" endtime="20230731 07:38:42.575"/>
</kw>
<status status="PASS" starttime="20230731 07:38:42.181" endtime="20230731 07:38:42.576"/>
</branch>
<status status="PASS" starttime="20230731 07:38:42.180" endtime="20230731 07:38:42.576"/>
</if>
<status status="PASS" starttime="20230731 07:38:42.161" endtime="20230731 07:38:42.576"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:42.579" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:38:42.578" endtime="20230731 07:38:42.579"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:38:42.597" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230731 07:38:42.579" endtime="20230731 07:38:42.597"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:38:44.656" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:38:42.602" endtime="20230731 07:38:44.657"/>
</kw>
<status status="PASS" starttime="20230731 07:38:42.598" endtime="20230731 07:38:44.657"/>
</kw>
<status status="PASS" starttime="20230731 07:38:42.598" endtime="20230731 07:38:44.658"/>
</branch>
<status status="PASS" starttime="20230731 07:38:42.597" endtime="20230731 07:38:44.658"/>
</if>
<status status="PASS" starttime="20230731 07:38:42.577" endtime="20230731 07:38:44.658"/>
</kw>
<status status="PASS" starttime="20230731 07:38:41.993" endtime="20230731 07:38:44.659"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Thêm mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20230731 07:38:44.661" endtime="20230731 07:38:44.661"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:44.660" endtime="20230731 07:38:44.661"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'edit'">
<kw name="Select Code need to edit" library="common" sourcename="Select ${name} need to edit">
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230731 07:38:44.676" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230731 07:38:44.676" level="INFO">${elements} = ['element=4b73885e-977c-4d16-8ef8-73dc7e5611ff', 'element=79586a39-3ebc-4349-b38d-944e8669daf1', 'element=c93a198c-3a76-4084-a039-6faa5047d3ff', 'element=1dae381c-9fc7-4479-b1d9-ed7e3a79fdd6', 'elemen...</msg>
<status status="PASS" starttime="20230731 07:38:44.663" endtime="20230731 07:38:44.676"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'Post'">
<kw name="Click" library="Browser">
<arg>${elements}[2]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:38:44.677" endtime="20230731 07:38:44.677"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:44.677" endtime="20230731 07:38:44.677"/>
</branch>
<branch type="ELSE IF" condition="'${name}' != 'post'">
<kw name="Click" library="Browser">
<arg>${elements}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:38:44.678" endtime="20230731 07:38:44.838"/>
</kw>
<status status="PASS" starttime="20230731 07:38:44.677" endtime="20230731 07:38:44.838"/>
</branch>
<status status="PASS" starttime="20230731 07:38:44.676" endtime="20230731 07:38:44.839"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:44.843" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:38:44.841" endtime="20230731 07:38:44.843"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:38:44.859" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:38:44.843" endtime="20230731 07:38:44.860"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:38:45.019" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:38:44.864" endtime="20230731 07:38:45.019"/>
</kw>
<status status="PASS" starttime="20230731 07:38:44.861" endtime="20230731 07:38:45.020"/>
</kw>
<status status="PASS" starttime="20230731 07:38:44.860" endtime="20230731 07:38:45.020"/>
</branch>
<status status="PASS" starttime="20230731 07:38:44.860" endtime="20230731 07:38:45.020"/>
</if>
<status status="PASS" starttime="20230731 07:38:44.840" endtime="20230731 07:38:45.021"/>
</kw>
<status status="PASS" starttime="20230731 07:38:44.662" endtime="20230731 07:38:45.021"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:38:47.023" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230731 07:38:45.022" endtime="20230731 07:38:47.023"/>
</kw>
<status status="PASS" starttime="20230731 07:38:44.661" endtime="20230731 07:38:47.023"/>
</branch>
<status status="PASS" starttime="20230731 07:38:44.660" endtime="20230731 07:38:47.023"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:47.024" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:38:47.023" endtime="20230731 07:38:47.024"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:38:47.030" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:38:47.024" endtime="20230731 07:38:47.031"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:38:47.031" endtime="20230731 07:38:47.032"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:47.031" endtime="20230731 07:38:47.032"/>
</branch>
<status status="PASS" starttime="20230731 07:38:47.031" endtime="20230731 07:38:47.032"/>
</if>
<status status="PASS" starttime="20230731 07:38:47.023" endtime="20230731 07:38:47.032"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:38:47.133" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230731 07:38:47.032" endtime="20230731 07:38:47.133"/>
</kw>
<status status="PASS" starttime="20230731 07:38:34.547" endtime="20230731 07:38:47.133"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Tên mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:47.136" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:38:47.135" endtime="20230731 07:38:47.136"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:47.136" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:38:47.136" endtime="20230731 07:38:47.136"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:38:47.137" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:38:47.137" endtime="20230731 07:38:47.137"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:47.138" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:38:47.138" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:38:47.137" endtime="20230731 07:38:47.138"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:38:47.139" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230731 07:38:47.138" endtime="20230731 07:38:47.139"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:47.139" level="INFO">Length is 1</msg>
<msg timestamp="20230731 07:38:47.139" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230731 07:38:47.139" endtime="20230731 07:38:47.139"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.140" endtime="20230731 07:38:47.140"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.141" endtime="20230731 07:38:47.141"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:47.139" endtime="20230731 07:38:47.141"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.141" endtime="20230731 07:38:47.141"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.142" endtime="20230731 07:38:47.142"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.142" endtime="20230731 07:38:47.142"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:47.141" endtime="20230731 07:38:47.142"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.143" endtime="20230731 07:38:47.143"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.143" endtime="20230731 07:38:47.143"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:47.142" endtime="20230731 07:38:47.144"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.144" endtime="20230731 07:38:47.144"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.144" endtime="20230731 07:38:47.145"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:47.144" endtime="20230731 07:38:47.145"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.147" endtime="20230731 07:38:47.147"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.147" endtime="20230731 07:38:47.147"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:47.146" endtime="20230731 07:38:47.149"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.150" endtime="20230731 07:38:47.150"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.151" endtime="20230731 07:38:47.151"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:47.149" endtime="20230731 07:38:47.151"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.153" endtime="20230731 07:38:47.153"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.154" endtime="20230731 07:38:47.154"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:47.152" endtime="20230731 07:38:47.155"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.156" endtime="20230731 07:38:47.156"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:47.155" endtime="20230731 07:38:47.157"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:38:47.158" endtime="20230731 07:38:47.158"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:47.157" endtime="20230731 07:38:47.158"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.159" endtime="20230731 07:38:47.159"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.160" endtime="20230731 07:38:47.160"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:47.158" endtime="20230731 07:38:47.160"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.161" endtime="20230731 07:38:47.162"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:47.161" endtime="20230731 07:38:47.162"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.163" endtime="20230731 07:38:47.163"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:47.162" endtime="20230731 07:38:47.163"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.164" endtime="20230731 07:38:47.164"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:47.163" endtime="20230731 07:38:47.164"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230731 07:38:47.165" level="INFO">${new_text} = Vel saepe eum consequuntur perspiciatis dolorem.</msg>
<status status="PASS" starttime="20230731 07:38:47.165" endtime="20230731 07:38:47.165"/>
</kw>
<status status="PASS" starttime="20230731 07:38:47.164" endtime="20230731 07:38:47.165"/>
</branch>
<status status="PASS" starttime="20230731 07:38:47.139" endtime="20230731 07:38:47.165"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:47.166" level="INFO">Length is 8</msg>
<msg timestamp="20230731 07:38:47.166" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230731 07:38:47.166" endtime="20230731 07:38:47.166"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:38:47.167" level="INFO">${text} = Vel saepe eum consequuntur perspiciatis dolorem.</msg>
<status status="PASS" starttime="20230731 07:38:47.167" endtime="20230731 07:38:47.167"/>
</kw>
<status status="PASS" starttime="20230731 07:38:47.167" endtime="20230731 07:38:47.167"/>
</branch>
<status status="PASS" starttime="20230731 07:38:47.166" endtime="20230731 07:38:47.167"/>
</if>
<msg timestamp="20230731 07:38:47.169" level="INFO">${text} = Vel saepe eum consequuntur perspiciatis dolorem.</msg>
<status status="PASS" starttime="20230731 07:38:47.135" endtime="20230731 07:38:47.169"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:38:47.169" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:38:47.169" endtime="20230731 07:38:47.170"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:38:47.170" endtime="20230731 07:38:47.218"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:38:47.218" level="INFO">Fills the text 'Vel saepe eum consequuntur perspiciatis dolorem.' in the given field.</msg>
<status status="PASS" starttime="20230731 07:38:47.218" endtime="20230731 07:38:47.257"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:47.257" level="INFO">Length is 48</msg>
<msg timestamp="20230731 07:38:47.257" level="INFO">${cnt} = 48</msg>
<status status="PASS" starttime="20230731 07:38:47.257" endtime="20230731 07:38:47.259"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:38:47.261" level="INFO">${STATE["Tên mã"]} = Vel saepe eum consequuntur perspiciatis dolorem.</msg>
<status status="PASS" starttime="20230731 07:38:47.260" endtime="20230731 07:38:47.261"/>
</kw>
<status status="PASS" starttime="20230731 07:38:47.259" endtime="20230731 07:38:47.261"/>
</branch>
<status status="PASS" starttime="20230731 07:38:47.259" endtime="20230731 07:38:47.261"/>
</if>
<status status="PASS" starttime="20230731 07:38:47.134" endtime="20230731 07:38:47.262"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:38:47.266" endtime="20230731 07:38:47.447"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:47.449" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:38:47.448" endtime="20230731 07:38:47.449"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:38:47.457" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:38:47.450" endtime="20230731 07:38:47.457"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.458" endtime="20230731 07:38:47.460"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.461" endtime="20230731 07:38:47.461"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:47.457" endtime="20230731 07:38:47.462"/>
</branch>
<status status="PASS" starttime="20230731 07:38:47.457" endtime="20230731 07:38:47.462"/>
</if>
<status status="PASS" starttime="20230731 07:38:47.447" endtime="20230731 07:38:47.462"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:38:47.463" endtime="20230731 07:38:47.503"/>
</kw>
<status status="PASS" starttime="20230731 07:38:47.265" endtime="20230731 07:38:47.503"/>
</kw>
<kw name="Then User look message &quot;Cập nhật thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:38:47.506" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:38:47.505" endtime="20230731 07:38:47.506"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:47.508" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:38:47.508" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:38:47.507" endtime="20230731 07:38:47.508"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:38:47.509" endtime="20230731 07:38:47.510"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:47.509" endtime="20230731 07:38:47.510"/>
</branch>
<status status="PASS" starttime="20230731 07:38:47.509" endtime="20230731 07:38:47.510"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:38:50.906" level="INFO">Text: 'Cập nhật thành công'</msg>
<status status="PASS" starttime="20230731 07:38:47.516" endtime="20230731 07:38:50.907"/>
</kw>
<status status="PASS" starttime="20230731 07:38:47.511" endtime="20230731 07:38:50.908"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:50.913" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:38:50.912" endtime="20230731 07:38:50.913"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:38:51.434" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-13.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-13.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:38:51.436" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:38:51.437" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:38:50.918" endtime="20230731 07:38:51.443"/>
</kw>
<status status="FAIL" starttime="20230731 07:38:50.916" endtime="20230731 07:38:51.443"/>
</kw>
<msg timestamp="20230731 07:38:51.444" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:38:50.914" endtime="20230731 07:38:51.444"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:38:51.445" endtime="20230731 07:38:51.446"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:51.444" endtime="20230731 07:38:51.446"/>
</branch>
<status status="PASS" starttime="20230731 07:38:51.444" endtime="20230731 07:38:51.446"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:38:53.394" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:38:51.449" endtime="20230731 07:38:53.394"/>
</kw>
<status status="PASS" starttime="20230731 07:38:51.446" endtime="20230731 07:38:53.395"/>
</kw>
<status status="PASS" starttime="20230731 07:38:47.504" endtime="20230731 07:38:53.395"/>
</kw>
<kw name="And User look title &quot;Danh sách Mã&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:53.398" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:38:53.398" endtime="20230731 07:38:53.398"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:38:53.407" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:38:53.399" endtime="20230731 07:38:53.407"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:38:53.410" endtime="20230731 07:38:53.411"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:53.409" endtime="20230731 07:38:53.411"/>
</branch>
<status status="PASS" starttime="20230731 07:38:53.409" endtime="20230731 07:38:53.411"/>
</if>
<status status="PASS" starttime="20230731 07:38:53.397" endtime="20230731 07:38:53.411"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:53.414" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:38:53.413" endtime="20230731 07:38:53.414"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:38:53.425" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:38:53.414" endtime="20230731 07:38:53.425"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:38:53.427" endtime="20230731 07:38:53.427"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:53.426" endtime="20230731 07:38:53.427"/>
</branch>
<status status="PASS" starttime="20230731 07:38:53.426" endtime="20230731 07:38:53.428"/>
</if>
<status status="PASS" starttime="20230731 07:38:53.412" endtime="20230731 07:38:53.428"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230731 07:38:53.437" level="INFO">Title: 'Danh sách Mã'</msg>
<msg timestamp="20230731 07:38:53.437" level="INFO">${actualTitle} = Danh sách Mã</msg>
<status status="PASS" starttime="20230731 07:38:53.429" endtime="20230731 07:38:53.437"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230731 07:38:53.438" endtime="20230731 07:38:53.438"/>
</kw>
<status status="PASS" starttime="20230731 07:38:53.412" endtime="20230731 07:38:53.438"/>
</kw>
<status status="PASS" starttime="20230731 07:38:53.396" endtime="20230731 07:38:53.439"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230731 07:38:54.867" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230731 07:38:53.445" endtime="20230731 07:38:54.868"/>
</kw>
<status status="PASS" starttime="20230731 07:38:53.445" endtime="20230731 07:38:54.868"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230731 07:38:31.029" endtime="20230731 07:38:54.869"/>
</test>
<test id="s1-t9" name="EDC-09 Verify that the code can be successfully edited when changing the &quot;Tên mã&quot; field &amp; &quot;Lưu và tạo mới&quot; button" line="75">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230731 07:38:54.886" endtime="20230731 07:38:54.887"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230731 07:38:54.888" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\3688c4bd-2255-4014-999b-1723c36a7e0d"}</msg>
<msg timestamp="20230731 07:38:56.247" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\3688c4bd-2255-4014-999b-1723c36a7e0d"}</msg>
<status status="PASS" starttime="20230731 07:38:54.887" endtime="20230731 07:38:56.247"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230731 07:38:57.765" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230731 07:38:57.765" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230731 07:38:56.249" endtime="20230731 07:38:57.765"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230731 07:38:57.767" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230731 07:38:57.766" endtime="20230731 07:38:57.767"/>
</kw>
<status status="PASS" starttime="20230731 07:38:54.886" endtime="20230731 07:38:57.767"/>
</kw>
<kw name="When Go to edit code page" library="common" sourcename="Go to ${name} code page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:57.775" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:38:57.774" endtime="20230731 07:38:57.775"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:57.779" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:38:57.776" endtime="20230731 07:38:57.779"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:38:57.780" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:38:57.779" endtime="20230731 07:38:57.780"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:57.782" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:38:57.782" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:38:57.781" endtime="20230731 07:38:57.782"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:38:57.783" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:38:57.783" endtime="20230731 07:38:57.783"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:57.785" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:38:57.785" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:38:57.784" endtime="20230731 07:38:57.785"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.788" endtime="20230731 07:38:57.788"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.789" endtime="20230731 07:38:57.789"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:57.786" endtime="20230731 07:38:57.790"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.791" endtime="20230731 07:38:57.792"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.792" endtime="20230731 07:38:57.793"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.795" endtime="20230731 07:38:57.795"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:57.790" endtime="20230731 07:38:57.796"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.797" endtime="20230731 07:38:57.797"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.797" endtime="20230731 07:38:57.799"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:57.796" endtime="20230731 07:38:57.799"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.801" endtime="20230731 07:38:57.801"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.802" endtime="20230731 07:38:57.803"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:57.800" endtime="20230731 07:38:57.803"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.805" endtime="20230731 07:38:57.805"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.808" endtime="20230731 07:38:57.809"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:57.803" endtime="20230731 07:38:57.811"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.814" endtime="20230731 07:38:57.815"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.817" endtime="20230731 07:38:57.817"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:57.813" endtime="20230731 07:38:57.817"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.819" endtime="20230731 07:38:57.819"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.820" endtime="20230731 07:38:57.820"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:57.818" endtime="20230731 07:38:57.821"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.822" endtime="20230731 07:38:57.822"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:57.821" endtime="20230731 07:38:57.823"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:38:57.825" endtime="20230731 07:38:57.825"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:57.824" endtime="20230731 07:38:57.826"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.827" endtime="20230731 07:38:57.828"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.828" endtime="20230731 07:38:57.829"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:57.827" endtime="20230731 07:38:57.830"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.831" endtime="20230731 07:38:57.831"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:57.830" endtime="20230731 07:38:57.832"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.833" endtime="20230731 07:38:57.833"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:57.832" endtime="20230731 07:38:57.833"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.835" endtime="20230731 07:38:57.835"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:57.834" endtime="20230731 07:38:57.836"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:57.837" endtime="20230731 07:38:57.837"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:57.836" endtime="20230731 07:38:57.837"/>
</branch>
<status status="PASS" starttime="20230731 07:38:57.786" endtime="20230731 07:38:57.837"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:57.844" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:38:57.844" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:38:57.839" endtime="20230731 07:38:57.844"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:38:57.848" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:38:57.847" endtime="20230731 07:38:57.848"/>
</kw>
<status status="PASS" starttime="20230731 07:38:57.846" endtime="20230731 07:38:57.848"/>
</branch>
<status status="PASS" starttime="20230731 07:38:57.846" endtime="20230731 07:38:57.848"/>
</if>
<msg timestamp="20230731 07:38:57.849" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:38:57.772" endtime="20230731 07:38:57.850"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:38:57.853" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:38:57.852" endtime="20230731 07:38:57.853"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:38:57.853" endtime="20230731 07:38:59.569"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:38:59.570" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230731 07:38:59.569" endtime="20230731 07:38:59.634"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:59.636" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:38:59.636" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:38:59.635" endtime="20230731 07:38:59.636"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:38:59.638" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:38:59.638" endtime="20230731 07:38:59.638"/>
</kw>
<status status="PASS" starttime="20230731 07:38:59.636" endtime="20230731 07:38:59.639"/>
</branch>
<status status="PASS" starttime="20230731 07:38:59.636" endtime="20230731 07:38:59.639"/>
</if>
<status status="PASS" starttime="20230731 07:38:57.770" endtime="20230731 07:38:59.640"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:59.643" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:38:59.643" endtime="20230731 07:38:59.643"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:38:59.644" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:38:59.644" endtime="20230731 07:38:59.644"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:38:59.646" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:38:59.645" endtime="20230731 07:38:59.646"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:59.647" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:38:59.647" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:38:59.646" endtime="20230731 07:38:59.647"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:38:59.648" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:38:59.647" endtime="20230731 07:38:59.648"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:59.650" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:38:59.650" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:38:59.649" endtime="20230731 07:38:59.650"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.651" endtime="20230731 07:38:59.652"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.652" endtime="20230731 07:38:59.652"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:59.651" endtime="20230731 07:38:59.653"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.654" endtime="20230731 07:38:59.654"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.655" endtime="20230731 07:38:59.655"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.655" endtime="20230731 07:38:59.656"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:59.653" endtime="20230731 07:38:59.656"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.657" endtime="20230731 07:38:59.657"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.658" endtime="20230731 07:38:59.658"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:59.657" endtime="20230731 07:38:59.658"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.659" endtime="20230731 07:38:59.659"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.660" endtime="20230731 07:38:59.660"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:59.658" endtime="20230731 07:38:59.660"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.661" endtime="20230731 07:38:59.661"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.662" endtime="20230731 07:38:59.662"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:59.660" endtime="20230731 07:38:59.662"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.663" endtime="20230731 07:38:59.663"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.664" endtime="20230731 07:38:59.664"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:59.662" endtime="20230731 07:38:59.664"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.665" endtime="20230731 07:38:59.666"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.666" endtime="20230731 07:38:59.666"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:59.664" endtime="20230731 07:38:59.667"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.668" endtime="20230731 07:38:59.668"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:59.667" endtime="20230731 07:38:59.668"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:38:59.670" endtime="20230731 07:38:59.670"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:59.668" endtime="20230731 07:38:59.670"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.671" endtime="20230731 07:38:59.671"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.672" endtime="20230731 07:38:59.672"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:59.670" endtime="20230731 07:38:59.672"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.674" endtime="20230731 07:38:59.674"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:59.673" endtime="20230731 07:38:59.674"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.675" endtime="20230731 07:38:59.675"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:59.674" endtime="20230731 07:38:59.676"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.677" endtime="20230731 07:38:59.677"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:59.676" endtime="20230731 07:38:59.677"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:38:59.678" endtime="20230731 07:38:59.678"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:38:59.677" endtime="20230731 07:38:59.678"/>
</branch>
<status status="PASS" starttime="20230731 07:38:59.650" endtime="20230731 07:38:59.678"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:59.680" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:38:59.680" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:38:59.679" endtime="20230731 07:38:59.680"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:38:59.682" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:38:59.681" endtime="20230731 07:38:59.682"/>
</kw>
<status status="PASS" starttime="20230731 07:38:59.681" endtime="20230731 07:38:59.683"/>
</branch>
<status status="PASS" starttime="20230731 07:38:59.680" endtime="20230731 07:38:59.683"/>
</if>
<msg timestamp="20230731 07:38:59.684" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:38:59.641" endtime="20230731 07:38:59.684"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:38:59.685" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:38:59.684" endtime="20230731 07:38:59.685"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:38:59.686" endtime="20230731 07:38:59.770"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:38:59.772" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230731 07:38:59.771" endtime="20230731 07:38:59.863"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:38:59.864" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:38:59.864" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:38:59.863" endtime="20230731 07:38:59.864"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:38:59.868" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:38:59.867" endtime="20230731 07:38:59.868"/>
</kw>
<status status="PASS" starttime="20230731 07:38:59.865" endtime="20230731 07:38:59.869"/>
</branch>
<status status="PASS" starttime="20230731 07:38:59.865" endtime="20230731 07:38:59.869"/>
</if>
<status status="PASS" starttime="20230731 07:38:59.640" endtime="20230731 07:38:59.869"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:38:59.871" endtime="20230731 07:39:00.129"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:00.133" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:39:00.132" endtime="20230731 07:39:00.134"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:00.173" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:00.135" endtime="20230731 07:39:00.173"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:00.178" endtime="20230731 07:39:00.178"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:39:00.179" endtime="20230731 07:39:00.180"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:00.176" endtime="20230731 07:39:00.180"/>
</branch>
<status status="PASS" starttime="20230731 07:39:00.174" endtime="20230731 07:39:00.180"/>
</if>
<status status="PASS" starttime="20230731 07:39:00.129" endtime="20230731 07:39:00.182"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:39:00.183" endtime="20230731 07:39:00.250"/>
</kw>
<status status="PASS" starttime="20230731 07:38:59.870" endtime="20230731 07:39:00.250"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:39:00.253" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:39:00.252" endtime="20230731 07:39:00.253"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:00.254" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:39:00.254" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:39:00.253" endtime="20230731 07:39:00.254"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:00.255" endtime="20230731 07:39:00.255"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:00.254" endtime="20230731 07:39:00.255"/>
</branch>
<status status="PASS" starttime="20230731 07:39:00.254" endtime="20230731 07:39:00.255"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:39:01.425" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230731 07:39:00.261" endtime="20230731 07:39:01.425"/>
</kw>
<status status="PASS" starttime="20230731 07:39:00.255" endtime="20230731 07:39:01.426"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:01.427" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:39:01.427" endtime="20230731 07:39:01.427"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:02.339" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-14.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-14.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:39:02.339" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:39:02.339" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:39:01.430" endtime="20230731 07:39:02.342"/>
</kw>
<status status="FAIL" starttime="20230731 07:39:01.428" endtime="20230731 07:39:02.343"/>
</kw>
<msg timestamp="20230731 07:39:02.343" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:39:01.428" endtime="20230731 07:39:02.343"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:02.345" endtime="20230731 07:39:02.345"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:02.344" endtime="20230731 07:39:02.345"/>
</branch>
<status status="PASS" starttime="20230731 07:39:02.344" endtime="20230731 07:39:02.345"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:04.416" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:39:02.349" endtime="20230731 07:39:04.416"/>
</kw>
<status status="PASS" starttime="20230731 07:39:02.346" endtime="20230731 07:39:04.417"/>
</kw>
<status status="PASS" starttime="20230731 07:39:00.251" endtime="20230731 07:39:04.417"/>
</kw>
<status status="PASS" starttime="20230731 07:38:57.769" endtime="20230731 07:39:04.418"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:04.421" endtime="20230731 07:39:04.485"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:04.487" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:04.487" endtime="20230731 07:39:04.487"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:04.497" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:04.488" endtime="20230731 07:39:04.497"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:39:04.499" endtime="20230731 07:39:04.499"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:04.497" endtime="20230731 07:39:04.499"/>
</branch>
<status status="PASS" starttime="20230731 07:39:04.497" endtime="20230731 07:39:04.499"/>
</if>
<status status="PASS" starttime="20230731 07:39:04.486" endtime="20230731 07:39:04.500"/>
</kw>
<status status="PASS" starttime="20230731 07:39:04.420" endtime="20230731 07:39:04.500"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:04.503" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:04.502" endtime="20230731 07:39:04.503"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:04.514" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:04.504" endtime="20230731 07:39:04.514"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:39:04.515" endtime="20230731 07:39:04.515"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:04.514" endtime="20230731 07:39:04.515"/>
</branch>
<status status="PASS" starttime="20230731 07:39:04.514" endtime="20230731 07:39:04.515"/>
</if>
<status status="PASS" starttime="20230731 07:39:04.502" endtime="20230731 07:39:04.515"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:04.516" endtime="20230731 07:39:04.670"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:04.673" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:04.672" endtime="20230731 07:39:04.673"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:04.693" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:39:04.675" endtime="20230731 07:39:04.693"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:05.034" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:39:04.697" endtime="20230731 07:39:05.034"/>
</kw>
<status status="PASS" starttime="20230731 07:39:04.694" endtime="20230731 07:39:05.034"/>
</kw>
<status status="PASS" starttime="20230731 07:39:04.693" endtime="20230731 07:39:05.035"/>
</branch>
<status status="PASS" starttime="20230731 07:39:04.693" endtime="20230731 07:39:05.035"/>
</if>
<status status="PASS" starttime="20230731 07:39:04.671" endtime="20230731 07:39:05.035"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:05.037" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:05.036" endtime="20230731 07:39:05.037"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:05.074" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230731 07:39:05.038" endtime="20230731 07:39:05.074"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:07.181" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:39:05.080" endtime="20230731 07:39:07.181"/>
</kw>
<status status="PASS" starttime="20230731 07:39:05.075" endtime="20230731 07:39:07.181"/>
</kw>
<status status="PASS" starttime="20230731 07:39:05.074" endtime="20230731 07:39:07.181"/>
</branch>
<status status="PASS" starttime="20230731 07:39:05.074" endtime="20230731 07:39:07.181"/>
</if>
<status status="PASS" starttime="20230731 07:39:05.036" endtime="20230731 07:39:07.182"/>
</kw>
<status status="PASS" starttime="20230731 07:39:04.501" endtime="20230731 07:39:07.182"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Thêm mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20230731 07:39:07.183" endtime="20230731 07:39:07.183"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:07.182" endtime="20230731 07:39:07.183"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'edit'">
<kw name="Select Code need to edit" library="common" sourcename="Select ${name} need to edit">
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230731 07:39:07.199" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230731 07:39:07.199" level="INFO">${elements} = ['element=9dec3ca1-e09e-4bb4-a96f-0c6e8a40c135', 'element=88d69d5e-d820-4ff7-82f2-a2c16530487d', 'element=75edf6df-c271-4427-860c-81d80e55220f', 'element=53031bcc-5f7e-4fec-be5d-79e53897181c', 'elemen...</msg>
<status status="PASS" starttime="20230731 07:39:07.184" endtime="20230731 07:39:07.199"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'Post'">
<kw name="Click" library="Browser">
<arg>${elements}[2]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:07.200" endtime="20230731 07:39:07.201"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:07.199" endtime="20230731 07:39:07.201"/>
</branch>
<branch type="ELSE IF" condition="'${name}' != 'post'">
<kw name="Click" library="Browser">
<arg>${elements}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:07.202" endtime="20230731 07:39:07.347"/>
</kw>
<status status="PASS" starttime="20230731 07:39:07.201" endtime="20230731 07:39:07.347"/>
</branch>
<status status="PASS" starttime="20230731 07:39:07.199" endtime="20230731 07:39:07.347"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:07.349" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:07.349" endtime="20230731 07:39:07.349"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:07.368" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:39:07.350" endtime="20230731 07:39:07.368"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:07.581" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:39:07.373" endtime="20230731 07:39:07.581"/>
</kw>
<status status="PASS" starttime="20230731 07:39:07.370" endtime="20230731 07:39:07.582"/>
</kw>
<status status="PASS" starttime="20230731 07:39:07.369" endtime="20230731 07:39:07.582"/>
</branch>
<status status="PASS" starttime="20230731 07:39:07.369" endtime="20230731 07:39:07.582"/>
</if>
<status status="PASS" starttime="20230731 07:39:07.348" endtime="20230731 07:39:07.583"/>
</kw>
<status status="PASS" starttime="20230731 07:39:07.183" endtime="20230731 07:39:07.583"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:39:09.584" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230731 07:39:07.584" endtime="20230731 07:39:09.584"/>
</kw>
<status status="PASS" starttime="20230731 07:39:07.183" endtime="20230731 07:39:09.584"/>
</branch>
<status status="PASS" starttime="20230731 07:39:07.182" endtime="20230731 07:39:09.584"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:09.585" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:09.585" endtime="20230731 07:39:09.585"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:09.593" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:09.586" endtime="20230731 07:39:09.593"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:39:09.594" endtime="20230731 07:39:09.594"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:09.593" endtime="20230731 07:39:09.594"/>
</branch>
<status status="PASS" starttime="20230731 07:39:09.593" endtime="20230731 07:39:09.595"/>
</if>
<status status="PASS" starttime="20230731 07:39:09.584" endtime="20230731 07:39:09.595"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:39:09.696" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230731 07:39:09.596" endtime="20230731 07:39:09.696"/>
</kw>
<status status="PASS" starttime="20230731 07:38:57.768" endtime="20230731 07:39:09.696"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Tên mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:09.698" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:39:09.698" endtime="20230731 07:39:09.698"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:09.699" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:39:09.698" endtime="20230731 07:39:09.699"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:39:09.700" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:39:09.699" endtime="20230731 07:39:09.700"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:09.701" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:39:09.701" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:39:09.700" endtime="20230731 07:39:09.701"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:39:09.701" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230731 07:39:09.701" endtime="20230731 07:39:09.701"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:09.703" level="INFO">Length is 1</msg>
<msg timestamp="20230731 07:39:09.703" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230731 07:39:09.702" endtime="20230731 07:39:09.703"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.704" endtime="20230731 07:39:09.704"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.705" endtime="20230731 07:39:09.705"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:09.703" endtime="20230731 07:39:09.705"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.706" endtime="20230731 07:39:09.706"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.707" endtime="20230731 07:39:09.707"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.707" endtime="20230731 07:39:09.707"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:09.706" endtime="20230731 07:39:09.707"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.708" endtime="20230731 07:39:09.708"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.708" endtime="20230731 07:39:09.708"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:09.707" endtime="20230731 07:39:09.708"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.708" endtime="20230731 07:39:09.708"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.709" endtime="20230731 07:39:09.709"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:09.708" endtime="20230731 07:39:09.709"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.710" endtime="20230731 07:39:09.710"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.710" endtime="20230731 07:39:09.711"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:09.709" endtime="20230731 07:39:09.711"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.712" endtime="20230731 07:39:09.712"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.713" endtime="20230731 07:39:09.713"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:09.711" endtime="20230731 07:39:09.713"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.714" endtime="20230731 07:39:09.714"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.715" endtime="20230731 07:39:09.715"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:09.713" endtime="20230731 07:39:09.715"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.716" endtime="20230731 07:39:09.716"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:09.715" endtime="20230731 07:39:09.717"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:39:09.718" endtime="20230731 07:39:09.718"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:09.717" endtime="20230731 07:39:09.718"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.720" endtime="20230731 07:39:09.720"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.720" endtime="20230731 07:39:09.721"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:09.718" endtime="20230731 07:39:09.721"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.721" endtime="20230731 07:39:09.721"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:09.721" endtime="20230731 07:39:09.722"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.723" endtime="20230731 07:39:09.723"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:09.722" endtime="20230731 07:39:09.723"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:39:09.724" endtime="20230731 07:39:09.724"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:09.723" endtime="20230731 07:39:09.725"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230731 07:39:09.727" level="INFO">${new_text} = Assumenda laboriosam nostrum dolorum quos tenetur.</msg>
<status status="PASS" starttime="20230731 07:39:09.726" endtime="20230731 07:39:09.727"/>
</kw>
<status status="PASS" starttime="20230731 07:39:09.725" endtime="20230731 07:39:09.727"/>
</branch>
<status status="PASS" starttime="20230731 07:39:09.703" endtime="20230731 07:39:09.727"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:09.730" level="INFO">Length is 8</msg>
<msg timestamp="20230731 07:39:09.730" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230731 07:39:09.728" endtime="20230731 07:39:09.730"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:39:09.734" level="INFO">${text} = Assumenda laboriosam nostrum dolorum quos tenetur.</msg>
<status status="PASS" starttime="20230731 07:39:09.733" endtime="20230731 07:39:09.734"/>
</kw>
<status status="PASS" starttime="20230731 07:39:09.732" endtime="20230731 07:39:09.734"/>
</branch>
<status status="PASS" starttime="20230731 07:39:09.730" endtime="20230731 07:39:09.735"/>
</if>
<msg timestamp="20230731 07:39:09.735" level="INFO">${text} = Assumenda laboriosam nostrum dolorum quos tenetur.</msg>
<status status="PASS" starttime="20230731 07:39:09.697" endtime="20230731 07:39:09.735"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:39:09.737" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:39:09.736" endtime="20230731 07:39:09.737"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:09.737" endtime="20230731 07:39:09.784"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:39:09.785" level="INFO">Fills the text 'Assumenda laboriosam nostrum dolorum quos tenetur.' in the given field.</msg>
<status status="PASS" starttime="20230731 07:39:09.785" endtime="20230731 07:39:09.824"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:09.825" level="INFO">Length is 50</msg>
<msg timestamp="20230731 07:39:09.825" level="INFO">${cnt} = 50</msg>
<status status="PASS" starttime="20230731 07:39:09.824" endtime="20230731 07:39:09.825"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:39:09.827" level="INFO">${STATE["Tên mã"]} = Assumenda laboriosam nostrum dolorum quos tenetur.</msg>
<status status="PASS" starttime="20230731 07:39:09.827" endtime="20230731 07:39:09.829"/>
</kw>
<status status="PASS" starttime="20230731 07:39:09.826" endtime="20230731 07:39:09.829"/>
</branch>
<status status="PASS" starttime="20230731 07:39:09.825" endtime="20230731 07:39:09.829"/>
</if>
<status status="PASS" starttime="20230731 07:39:09.697" endtime="20230731 07:39:09.829"/>
</kw>
<kw name="And Click &quot;Lưu và tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:09.832" endtime="20230731 07:39:10.015"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:10.018" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:39:10.017" endtime="20230731 07:39:10.018"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:10.031" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:10.018" endtime="20230731 07:39:10.031"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:10.031" endtime="20230731 07:39:10.031"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:39:10.032" endtime="20230731 07:39:10.032"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:10.031" endtime="20230731 07:39:10.032"/>
</branch>
<status status="PASS" starttime="20230731 07:39:10.031" endtime="20230731 07:39:10.033"/>
</if>
<status status="PASS" starttime="20230731 07:39:10.016" endtime="20230731 07:39:10.033"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:39:10.033" endtime="20230731 07:39:10.071"/>
</kw>
<status status="PASS" starttime="20230731 07:39:09.831" endtime="20230731 07:39:10.072"/>
</kw>
<kw name="Then User look message &quot;Cập nhật thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:39:10.077" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:39:10.076" endtime="20230731 07:39:10.077"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:10.078" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:39:10.079" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:39:10.078" endtime="20230731 07:39:10.079"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:10.079" endtime="20230731 07:39:10.079"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:10.079" endtime="20230731 07:39:10.079"/>
</branch>
<status status="PASS" starttime="20230731 07:39:10.079" endtime="20230731 07:39:10.080"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:39:12.107" level="INFO">Text: 'Cập nhật thành công'</msg>
<status status="PASS" starttime="20230731 07:39:10.083" endtime="20230731 07:39:12.107"/>
</kw>
<status status="PASS" starttime="20230731 07:39:10.080" endtime="20230731 07:39:12.109"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:12.110" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:39:12.110" endtime="20230731 07:39:12.110"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:12.516" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-15.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-15.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:39:12.516" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:39:12.516" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:39:12.114" endtime="20230731 07:39:12.521"/>
</kw>
<status status="FAIL" starttime="20230731 07:39:12.111" endtime="20230731 07:39:12.521"/>
</kw>
<msg timestamp="20230731 07:39:12.522" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:39:12.111" endtime="20230731 07:39:12.522"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:12.524" endtime="20230731 07:39:12.525"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:12.523" endtime="20230731 07:39:12.525"/>
</branch>
<status status="PASS" starttime="20230731 07:39:12.523" endtime="20230731 07:39:12.525"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:14.976" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:39:12.529" endtime="20230731 07:39:14.976"/>
</kw>
<status status="PASS" starttime="20230731 07:39:12.526" endtime="20230731 07:39:14.976"/>
</kw>
<status status="PASS" starttime="20230731 07:39:10.075" endtime="20230731 07:39:14.976"/>
</kw>
<kw name="And User look title &quot;Danh sách nghỉ phép&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:14.979" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:14.979" endtime="20230731 07:39:14.979"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:14.992" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:14.980" endtime="20230731 07:39:14.992"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:39:14.993" endtime="20230731 07:39:14.993"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:14.992" endtime="20230731 07:39:14.994"/>
</branch>
<status status="PASS" starttime="20230731 07:39:14.992" endtime="20230731 07:39:14.994"/>
</if>
<status status="PASS" starttime="20230731 07:39:14.978" endtime="20230731 07:39:14.994"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:14.999" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:14.998" endtime="20230731 07:39:14.999"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:15.014" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:14.999" endtime="20230731 07:39:15.014"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:39:15.015" endtime="20230731 07:39:15.016"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:15.015" endtime="20230731 07:39:15.016"/>
</branch>
<status status="PASS" starttime="20230731 07:39:15.014" endtime="20230731 07:39:15.016"/>
</if>
<status status="PASS" starttime="20230731 07:39:14.997" endtime="20230731 07:39:15.017"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230731 07:39:15.028" level="INFO">Title: 'Thêm mới mã Position'</msg>
<msg timestamp="20230731 07:39:15.028" level="INFO">${actualTitle} = Thêm mới mã Position</msg>
<status status="PASS" starttime="20230731 07:39:15.017" endtime="20230731 07:39:15.028"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230731 07:39:15.029" level="FAIL">Thêm mới mã Position != Danh sách nghỉ phép</msg>
<status status="FAIL" starttime="20230731 07:39:15.028" endtime="20230731 07:39:15.029"/>
</kw>
<status status="FAIL" starttime="20230731 07:39:14.995" endtime="20230731 07:39:15.029"/>
</kw>
<status status="FAIL" starttime="20230731 07:39:14.977" endtime="20230731 07:39:15.029"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230731 07:39:16.296" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230731 07:39:15.031" endtime="20230731 07:39:16.296"/>
</kw>
<status status="PASS" starttime="20230731 07:39:15.030" endtime="20230731 07:39:16.297"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="FAIL" starttime="20230731 07:38:54.882" endtime="20230731 07:39:16.297">Thêm mới mã Position != Danh sách nghỉ phép</status>
</test>
<test id="s1-t10" name="EDC-10 Verify that the code can be successfully edited when changing the &quot;Mã&quot; field &amp; &quot;Lưu lại&quot; button" line="83">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230731 07:39:16.342" endtime="20230731 07:39:16.343"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230731 07:39:16.345" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\c9f12a91-f63e-461e-b247-67fc00483a37"}</msg>
<msg timestamp="20230731 07:39:17.625" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\c9f12a91-f63e-461e-b247-67fc00483a37"}</msg>
<status status="PASS" starttime="20230731 07:39:16.344" endtime="20230731 07:39:17.625"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230731 07:39:19.275" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230731 07:39:19.275" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230731 07:39:17.626" endtime="20230731 07:39:19.275"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230731 07:39:19.277" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230731 07:39:19.276" endtime="20230731 07:39:19.277"/>
</kw>
<status status="PASS" starttime="20230731 07:39:16.341" endtime="20230731 07:39:19.277"/>
</kw>
<kw name="When Go to edit code page" library="common" sourcename="Go to ${name} code page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:19.283" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:39:19.283" endtime="20230731 07:39:19.283"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:19.284" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:39:19.284" endtime="20230731 07:39:19.285"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:39:19.286" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:39:19.285" endtime="20230731 07:39:19.286"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:19.287" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:39:19.287" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:39:19.287" endtime="20230731 07:39:19.287"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:39:19.289" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:39:19.288" endtime="20230731 07:39:19.289"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:19.290" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:39:19.290" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:39:19.289" endtime="20230731 07:39:19.290"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.292" endtime="20230731 07:39:19.292"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.292" endtime="20230731 07:39:19.293"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:19.291" endtime="20230731 07:39:19.293"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.294" endtime="20230731 07:39:19.294"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.295" endtime="20230731 07:39:19.295"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.295" endtime="20230731 07:39:19.295"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:19.293" endtime="20230731 07:39:19.295"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.296" endtime="20230731 07:39:19.296"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.296" endtime="20230731 07:39:19.297"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:19.296" endtime="20230731 07:39:19.297"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.297" endtime="20230731 07:39:19.297"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.297" endtime="20230731 07:39:19.297"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:19.297" endtime="20230731 07:39:19.297"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.299" endtime="20230731 07:39:19.299"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.300" endtime="20230731 07:39:19.300"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:19.299" endtime="20230731 07:39:19.300"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.302" endtime="20230731 07:39:19.302"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.302" endtime="20230731 07:39:19.303"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:19.301" endtime="20230731 07:39:19.304"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.305" endtime="20230731 07:39:19.306"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.306" endtime="20230731 07:39:19.307"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:19.304" endtime="20230731 07:39:19.307"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.308" endtime="20230731 07:39:19.308"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:19.307" endtime="20230731 07:39:19.308"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:39:19.309" endtime="20230731 07:39:19.309"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:19.309" endtime="20230731 07:39:19.310"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.311" endtime="20230731 07:39:19.311"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.312" endtime="20230731 07:39:19.312"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:19.310" endtime="20230731 07:39:19.313"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.320" endtime="20230731 07:39:19.323"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:19.313" endtime="20230731 07:39:19.324"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.326" endtime="20230731 07:39:19.326"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:19.325" endtime="20230731 07:39:19.326"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.332" endtime="20230731 07:39:19.334"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:19.329" endtime="20230731 07:39:19.334"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:39:19.335" endtime="20230731 07:39:19.335"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:19.334" endtime="20230731 07:39:19.336"/>
</branch>
<status status="PASS" starttime="20230731 07:39:19.291" endtime="20230731 07:39:19.336"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:19.337" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:39:19.337" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:39:19.336" endtime="20230731 07:39:19.337"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:39:19.343" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:39:19.341" endtime="20230731 07:39:19.343"/>
</kw>
<status status="PASS" starttime="20230731 07:39:19.340" endtime="20230731 07:39:19.344"/>
</branch>
<status status="PASS" starttime="20230731 07:39:19.337" endtime="20230731 07:39:19.344"/>
</if>
<msg timestamp="20230731 07:39:19.344" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:39:19.282" endtime="20230731 07:39:19.345"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:39:19.348" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:39:19.345" endtime="20230731 07:39:19.348"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:19.348" endtime="20230731 07:39:20.692"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:39:20.694" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230731 07:39:20.693" endtime="20230731 07:39:20.814"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:20.815" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:39:20.815" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:39:20.814" endtime="20230731 07:39:20.815"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:39:20.817" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:39:20.816" endtime="20230731 07:39:20.817"/>
</kw>
<status status="PASS" starttime="20230731 07:39:20.816" endtime="20230731 07:39:20.818"/>
</branch>
<status status="PASS" starttime="20230731 07:39:20.815" endtime="20230731 07:39:20.818"/>
</if>
<status status="PASS" starttime="20230731 07:39:19.281" endtime="20230731 07:39:20.818"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:20.821" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:39:20.821" endtime="20230731 07:39:20.822"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:20.823" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:39:20.822" endtime="20230731 07:39:20.823"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:39:20.824" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:39:20.823" endtime="20230731 07:39:20.824"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:20.826" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:39:20.826" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:39:20.825" endtime="20230731 07:39:20.826"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:39:20.827" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:39:20.826" endtime="20230731 07:39:20.827"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:20.829" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:39:20.829" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:39:20.827" endtime="20230731 07:39:20.829"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.831" endtime="20230731 07:39:20.831"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.831" endtime="20230731 07:39:20.832"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:20.830" endtime="20230731 07:39:20.832"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.833" endtime="20230731 07:39:20.833"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.834" endtime="20230731 07:39:20.834"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.834" endtime="20230731 07:39:20.835"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:20.832" endtime="20230731 07:39:20.835"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.836" endtime="20230731 07:39:20.836"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.837" endtime="20230731 07:39:20.837"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:20.835" endtime="20230731 07:39:20.838"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.839" endtime="20230731 07:39:20.839"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.840" endtime="20230731 07:39:20.840"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:20.838" endtime="20230731 07:39:20.840"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.841" endtime="20230731 07:39:20.842"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.842" endtime="20230731 07:39:20.842"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:20.841" endtime="20230731 07:39:20.843"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.844" endtime="20230731 07:39:20.844"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.845" endtime="20230731 07:39:20.845"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:20.843" endtime="20230731 07:39:20.845"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.846" endtime="20230731 07:39:20.847"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.847" endtime="20230731 07:39:20.847"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:20.845" endtime="20230731 07:39:20.847"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.849" endtime="20230731 07:39:20.850"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:20.849" endtime="20230731 07:39:20.850"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:39:20.851" endtime="20230731 07:39:20.851"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:20.850" endtime="20230731 07:39:20.851"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.853" endtime="20230731 07:39:20.853"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.853" endtime="20230731 07:39:20.854"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:20.852" endtime="20230731 07:39:20.854"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.855" endtime="20230731 07:39:20.855"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:20.854" endtime="20230731 07:39:20.856"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.857" endtime="20230731 07:39:20.857"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:20.856" endtime="20230731 07:39:20.857"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.858" endtime="20230731 07:39:20.859"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:20.858" endtime="20230731 07:39:20.859"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:39:20.860" endtime="20230731 07:39:20.860"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:20.859" endtime="20230731 07:39:20.860"/>
</branch>
<status status="PASS" starttime="20230731 07:39:20.830" endtime="20230731 07:39:20.860"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:20.862" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:39:20.862" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:39:20.861" endtime="20230731 07:39:20.862"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:39:20.864" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:39:20.863" endtime="20230731 07:39:20.864"/>
</kw>
<status status="PASS" starttime="20230731 07:39:20.862" endtime="20230731 07:39:20.864"/>
</branch>
<status status="PASS" starttime="20230731 07:39:20.862" endtime="20230731 07:39:20.865"/>
</if>
<msg timestamp="20230731 07:39:20.865" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:39:20.819" endtime="20230731 07:39:20.865"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:39:20.867" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:39:20.866" endtime="20230731 07:39:20.867"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:20.867" endtime="20230731 07:39:20.973"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:39:20.974" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230731 07:39:20.973" endtime="20230731 07:39:21.071"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:21.077" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:39:21.077" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:39:21.074" endtime="20230731 07:39:21.077"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:39:21.080" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:39:21.079" endtime="20230731 07:39:21.080"/>
</kw>
<status status="PASS" starttime="20230731 07:39:21.078" endtime="20230731 07:39:21.080"/>
</branch>
<status status="PASS" starttime="20230731 07:39:21.078" endtime="20230731 07:39:21.080"/>
</if>
<status status="PASS" starttime="20230731 07:39:20.819" endtime="20230731 07:39:21.081"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:21.082" endtime="20230731 07:39:21.412"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:21.414" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:39:21.413" endtime="20230731 07:39:21.414"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:21.445" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:21.414" endtime="20230731 07:39:21.445"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:21.447" endtime="20230731 07:39:21.447"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:39:21.447" endtime="20230731 07:39:21.448"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:21.446" endtime="20230731 07:39:21.448"/>
</branch>
<status status="PASS" starttime="20230731 07:39:21.445" endtime="20230731 07:39:21.448"/>
</if>
<status status="PASS" starttime="20230731 07:39:21.412" endtime="20230731 07:39:21.448"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:39:21.448" endtime="20230731 07:39:21.497"/>
</kw>
<status status="PASS" starttime="20230731 07:39:21.081" endtime="20230731 07:39:21.497"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:39:21.499" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:39:21.498" endtime="20230731 07:39:21.499"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:21.500" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:39:21.500" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:39:21.499" endtime="20230731 07:39:21.500"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:21.501" endtime="20230731 07:39:21.501"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:21.500" endtime="20230731 07:39:21.501"/>
</branch>
<status status="PASS" starttime="20230731 07:39:21.500" endtime="20230731 07:39:21.501"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:39:22.674" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230731 07:39:21.503" endtime="20230731 07:39:22.674"/>
</kw>
<status status="PASS" starttime="20230731 07:39:21.501" endtime="20230731 07:39:22.674"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:22.676" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:39:22.675" endtime="20230731 07:39:22.676"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:23.602" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-16.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-16.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:39:23.603" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:39:23.603" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:39:22.680" endtime="20230731 07:39:23.606"/>
</kw>
<status status="FAIL" starttime="20230731 07:39:22.677" endtime="20230731 07:39:23.607"/>
</kw>
<msg timestamp="20230731 07:39:23.607" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:39:22.676" endtime="20230731 07:39:23.607"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:23.609" endtime="20230731 07:39:23.609"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:23.608" endtime="20230731 07:39:23.609"/>
</branch>
<status status="PASS" starttime="20230731 07:39:23.608" endtime="20230731 07:39:23.609"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:25.656" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:39:23.612" endtime="20230731 07:39:25.656"/>
</kw>
<status status="PASS" starttime="20230731 07:39:23.609" endtime="20230731 07:39:25.657"/>
</kw>
<status status="PASS" starttime="20230731 07:39:21.498" endtime="20230731 07:39:25.657"/>
</kw>
<status status="PASS" starttime="20230731 07:39:19.280" endtime="20230731 07:39:25.659"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:25.661" endtime="20230731 07:39:25.753"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:25.755" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:25.755" endtime="20230731 07:39:25.756"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:25.767" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:25.756" endtime="20230731 07:39:25.767"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:39:25.767" endtime="20230731 07:39:25.769"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:25.767" endtime="20230731 07:39:25.769"/>
</branch>
<status status="PASS" starttime="20230731 07:39:25.767" endtime="20230731 07:39:25.769"/>
</if>
<status status="PASS" starttime="20230731 07:39:25.753" endtime="20230731 07:39:25.769"/>
</kw>
<status status="PASS" starttime="20230731 07:39:25.660" endtime="20230731 07:39:25.770"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:25.773" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:25.772" endtime="20230731 07:39:25.773"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:25.781" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:25.774" endtime="20230731 07:39:25.781"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:39:25.782" endtime="20230731 07:39:25.782"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:25.781" endtime="20230731 07:39:25.782"/>
</branch>
<status status="PASS" starttime="20230731 07:39:25.781" endtime="20230731 07:39:25.782"/>
</if>
<status status="PASS" starttime="20230731 07:39:25.771" endtime="20230731 07:39:25.782"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:25.782" endtime="20230731 07:39:25.947"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:25.950" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:25.949" endtime="20230731 07:39:25.950"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:25.966" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:39:25.950" endtime="20230731 07:39:25.966"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:26.315" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:39:25.969" endtime="20230731 07:39:26.315"/>
</kw>
<status status="PASS" starttime="20230731 07:39:25.967" endtime="20230731 07:39:26.315"/>
</kw>
<status status="PASS" starttime="20230731 07:39:25.966" endtime="20230731 07:39:26.315"/>
</branch>
<status status="PASS" starttime="20230731 07:39:25.966" endtime="20230731 07:39:26.315"/>
</if>
<status status="PASS" starttime="20230731 07:39:25.947" endtime="20230731 07:39:26.317"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:26.319" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:26.317" endtime="20230731 07:39:26.319"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:26.346" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230731 07:39:26.320" endtime="20230731 07:39:26.346"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:28.304" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:39:26.350" endtime="20230731 07:39:28.304"/>
</kw>
<status status="PASS" starttime="20230731 07:39:26.347" endtime="20230731 07:39:28.305"/>
</kw>
<status status="PASS" starttime="20230731 07:39:26.347" endtime="20230731 07:39:28.306"/>
</branch>
<status status="PASS" starttime="20230731 07:39:26.347" endtime="20230731 07:39:28.307"/>
</if>
<status status="PASS" starttime="20230731 07:39:26.317" endtime="20230731 07:39:28.307"/>
</kw>
<status status="PASS" starttime="20230731 07:39:25.770" endtime="20230731 07:39:28.307"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Thêm mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20230731 07:39:28.308" endtime="20230731 07:39:28.309"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:28.308" endtime="20230731 07:39:28.309"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'edit'">
<kw name="Select Code need to edit" library="common" sourcename="Select ${name} need to edit">
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230731 07:39:28.332" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230731 07:39:28.332" level="INFO">${elements} = ['element=347eca0c-76b6-41bc-8111-9fa9aa482ef4', 'element=1aa69402-d07a-436a-b882-18d005ddcb59', 'element=7bb74085-7519-4bc7-84ce-3669f043d9fb', 'element=5ae311bc-e4b6-4a43-8b5d-bca60f87c1ec', 'elemen...</msg>
<status status="PASS" starttime="20230731 07:39:28.313" endtime="20230731 07:39:28.332"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'Post'">
<kw name="Click" library="Browser">
<arg>${elements}[2]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:28.334" endtime="20230731 07:39:28.334"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:28.333" endtime="20230731 07:39:28.334"/>
</branch>
<branch type="ELSE IF" condition="'${name}' != 'post'">
<kw name="Click" library="Browser">
<arg>${elements}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:28.335" endtime="20230731 07:39:28.559"/>
</kw>
<status status="PASS" starttime="20230731 07:39:28.334" endtime="20230731 07:39:28.561"/>
</branch>
<status status="PASS" starttime="20230731 07:39:28.333" endtime="20230731 07:39:28.561"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:28.564" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:28.563" endtime="20230731 07:39:28.564"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:28.584" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:39:28.564" endtime="20230731 07:39:28.584"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:28.802" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:39:28.588" endtime="20230731 07:39:28.802"/>
</kw>
<status status="PASS" starttime="20230731 07:39:28.585" endtime="20230731 07:39:28.803"/>
</kw>
<status status="PASS" starttime="20230731 07:39:28.584" endtime="20230731 07:39:28.803"/>
</branch>
<status status="PASS" starttime="20230731 07:39:28.584" endtime="20230731 07:39:28.804"/>
</if>
<status status="PASS" starttime="20230731 07:39:28.562" endtime="20230731 07:39:28.804"/>
</kw>
<status status="PASS" starttime="20230731 07:39:28.311" endtime="20230731 07:39:28.805"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:39:30.806" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230731 07:39:28.806" endtime="20230731 07:39:30.806"/>
</kw>
<status status="PASS" starttime="20230731 07:39:28.310" endtime="20230731 07:39:30.806"/>
</branch>
<status status="PASS" starttime="20230731 07:39:28.307" endtime="20230731 07:39:30.807"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:30.809" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:30.807" endtime="20230731 07:39:30.809"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:30.819" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:30.810" endtime="20230731 07:39:30.819"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:39:30.821" endtime="20230731 07:39:30.821"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:30.820" endtime="20230731 07:39:30.821"/>
</branch>
<status status="PASS" starttime="20230731 07:39:30.820" endtime="20230731 07:39:30.822"/>
</if>
<status status="PASS" starttime="20230731 07:39:30.807" endtime="20230731 07:39:30.822"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:39:30.924" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230731 07:39:30.822" endtime="20230731 07:39:30.924"/>
</kw>
<status status="PASS" starttime="20230731 07:39:19.279" endtime="20230731 07:39:30.924"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:30.930" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:39:30.930" endtime="20230731 07:39:30.931"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:30.932" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:39:30.931" endtime="20230731 07:39:30.932"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:39:30.933" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:39:30.932" endtime="20230731 07:39:30.933"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:30.935" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:39:30.935" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:39:30.934" endtime="20230731 07:39:30.936"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:39:30.939" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230731 07:39:30.937" endtime="20230731 07:39:30.939"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:30.940" level="INFO">Length is 1</msg>
<msg timestamp="20230731 07:39:30.940" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230731 07:39:30.939" endtime="20230731 07:39:30.940"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.942" endtime="20230731 07:39:30.942"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.943" endtime="20230731 07:39:30.943"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:30.941" endtime="20230731 07:39:30.943"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.944" endtime="20230731 07:39:30.944"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.945" endtime="20230731 07:39:30.945"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.945" endtime="20230731 07:39:30.946"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:30.944" endtime="20230731 07:39:30.946"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.947" endtime="20230731 07:39:30.947"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.947" endtime="20230731 07:39:30.947"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:30.946" endtime="20230731 07:39:30.947"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.949" endtime="20230731 07:39:30.949"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.950" endtime="20230731 07:39:30.950"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:30.949" endtime="20230731 07:39:30.951"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.952" endtime="20230731 07:39:30.953"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.953" endtime="20230731 07:39:30.954"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:30.951" endtime="20230731 07:39:30.954"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.955" endtime="20230731 07:39:30.956"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.956" endtime="20230731 07:39:30.956"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:30.954" endtime="20230731 07:39:30.957"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.958" endtime="20230731 07:39:30.958"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.958" endtime="20230731 07:39:30.959"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:30.957" endtime="20230731 07:39:30.959"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.960" endtime="20230731 07:39:30.960"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:30.959" endtime="20230731 07:39:30.960"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:39:30.961" endtime="20230731 07:39:30.962"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:30.961" endtime="20230731 07:39:30.962"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.963" endtime="20230731 07:39:30.963"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.964" endtime="20230731 07:39:30.964"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:30.962" endtime="20230731 07:39:30.964"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.965" endtime="20230731 07:39:30.966"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:30.965" endtime="20230731 07:39:30.966"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.967" endtime="20230731 07:39:30.967"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:30.966" endtime="20230731 07:39:30.967"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:39:30.969" endtime="20230731 07:39:30.969"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:30.967" endtime="20230731 07:39:30.969"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230731 07:39:30.971" level="INFO">${new_text} = A iste sint sit illum voluptate.</msg>
<status status="PASS" starttime="20230731 07:39:30.971" endtime="20230731 07:39:30.973"/>
</kw>
<status status="PASS" starttime="20230731 07:39:30.970" endtime="20230731 07:39:30.973"/>
</branch>
<status status="PASS" starttime="20230731 07:39:30.941" endtime="20230731 07:39:30.973"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:30.980" level="INFO">Length is 8</msg>
<msg timestamp="20230731 07:39:30.982" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230731 07:39:30.979" endtime="20230731 07:39:30.982"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:39:30.985" level="INFO">${text} = A iste sint sit illum voluptate.</msg>
<status status="PASS" starttime="20230731 07:39:30.984" endtime="20230731 07:39:30.985"/>
</kw>
<status status="PASS" starttime="20230731 07:39:30.983" endtime="20230731 07:39:30.985"/>
</branch>
<status status="PASS" starttime="20230731 07:39:30.983" endtime="20230731 07:39:30.985"/>
</if>
<msg timestamp="20230731 07:39:30.986" level="INFO">${text} = A iste sint sit illum voluptate.</msg>
<status status="PASS" starttime="20230731 07:39:30.928" endtime="20230731 07:39:30.986"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:39:30.991" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:39:30.987" endtime="20230731 07:39:30.991"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:30.991" endtime="20230731 07:39:31.048"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:39:31.050" level="INFO">Fills the text 'A iste sint sit illum voluptate.' in the given field.</msg>
<status status="PASS" starttime="20230731 07:39:31.048" endtime="20230731 07:39:31.085"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:31.086" level="INFO">Length is 32</msg>
<msg timestamp="20230731 07:39:31.087" level="INFO">${cnt} = 32</msg>
<status status="PASS" starttime="20230731 07:39:31.086" endtime="20230731 07:39:31.087"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:39:31.090" level="INFO">${STATE["Mã"]} = A iste sint sit illum voluptate.</msg>
<status status="PASS" starttime="20230731 07:39:31.089" endtime="20230731 07:39:31.090"/>
</kw>
<status status="PASS" starttime="20230731 07:39:31.087" endtime="20230731 07:39:31.090"/>
</branch>
<status status="PASS" starttime="20230731 07:39:31.087" endtime="20230731 07:39:31.091"/>
</if>
<status status="PASS" starttime="20230731 07:39:30.928" endtime="20230731 07:39:31.092"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:31.095" endtime="20230731 07:39:31.329"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:31.331" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:39:31.330" endtime="20230731 07:39:31.331"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:31.369" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:31.331" endtime="20230731 07:39:31.369"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:31.371" endtime="20230731 07:39:31.372"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:39:31.372" endtime="20230731 07:39:31.373"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:31.370" endtime="20230731 07:39:31.373"/>
</branch>
<status status="PASS" starttime="20230731 07:39:31.370" endtime="20230731 07:39:31.374"/>
</if>
<status status="PASS" starttime="20230731 07:39:31.329" endtime="20230731 07:39:31.374"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:39:31.375" endtime="20230731 07:39:31.419"/>
</kw>
<status status="PASS" starttime="20230731 07:39:31.094" endtime="20230731 07:39:31.419"/>
</kw>
<kw name="Then User look message &quot;Cập nhật thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:39:31.424" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:39:31.423" endtime="20230731 07:39:31.425"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:31.427" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:39:31.427" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:39:31.426" endtime="20230731 07:39:31.427"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:31.427" endtime="20230731 07:39:31.427"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:31.427" endtime="20230731 07:39:31.429"/>
</branch>
<status status="PASS" starttime="20230731 07:39:31.427" endtime="20230731 07:39:31.429"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:39:34.594" level="INFO">Text: 'Cập nhật thành công'</msg>
<status status="PASS" starttime="20230731 07:39:31.433" endtime="20230731 07:39:34.594"/>
</kw>
<status status="PASS" starttime="20230731 07:39:31.429" endtime="20230731 07:39:34.595"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:34.596" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:39:34.595" endtime="20230731 07:39:34.596"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:35.191" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-17.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-17.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:39:35.191" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:39:35.191" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:39:34.605" endtime="20230731 07:39:35.194"/>
</kw>
<status status="FAIL" starttime="20230731 07:39:34.601" endtime="20230731 07:39:35.194"/>
</kw>
<msg timestamp="20230731 07:39:35.195" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:39:34.597" endtime="20230731 07:39:35.195"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:35.196" endtime="20230731 07:39:35.197"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:35.196" endtime="20230731 07:39:35.197"/>
</branch>
<status status="PASS" starttime="20230731 07:39:35.195" endtime="20230731 07:39:35.197"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:37.174" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:39:35.200" endtime="20230731 07:39:37.174"/>
</kw>
<status status="PASS" starttime="20230731 07:39:35.197" endtime="20230731 07:39:37.175"/>
</kw>
<status status="PASS" starttime="20230731 07:39:31.422" endtime="20230731 07:39:37.175"/>
</kw>
<kw name="And User look title &quot;Danh sách Mã&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:37.180" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:37.178" endtime="20230731 07:39:37.180"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:37.190" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:37.180" endtime="20230731 07:39:37.190"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:39:37.191" endtime="20230731 07:39:37.191"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:37.190" endtime="20230731 07:39:37.192"/>
</branch>
<status status="PASS" starttime="20230731 07:39:37.190" endtime="20230731 07:39:37.192"/>
</if>
<status status="PASS" starttime="20230731 07:39:37.178" endtime="20230731 07:39:37.192"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:37.195" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:37.195" endtime="20230731 07:39:37.195"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:37.208" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:37.196" endtime="20230731 07:39:37.208"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:39:37.209" endtime="20230731 07:39:37.209"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:37.209" endtime="20230731 07:39:37.210"/>
</branch>
<status status="PASS" starttime="20230731 07:39:37.208" endtime="20230731 07:39:37.210"/>
</if>
<status status="PASS" starttime="20230731 07:39:37.194" endtime="20230731 07:39:37.211"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230731 07:39:37.224" level="INFO">Title: 'Danh sách Mã'</msg>
<msg timestamp="20230731 07:39:37.225" level="INFO">${actualTitle} = Danh sách Mã</msg>
<status status="PASS" starttime="20230731 07:39:37.211" endtime="20230731 07:39:37.225"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230731 07:39:37.226" endtime="20230731 07:39:37.227"/>
</kw>
<status status="PASS" starttime="20230731 07:39:37.193" endtime="20230731 07:39:37.227"/>
</kw>
<status status="PASS" starttime="20230731 07:39:37.177" endtime="20230731 07:39:37.227"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230731 07:39:38.492" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230731 07:39:37.230" endtime="20230731 07:39:38.492"/>
</kw>
<status status="PASS" starttime="20230731 07:39:37.229" endtime="20230731 07:39:38.493"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230731 07:39:16.332" endtime="20230731 07:39:38.494"/>
</test>
<test id="s1-t11" name="EDC-11 Verify that the code can be successfully edited when changing the &quot;Mã&quot; field &amp; &quot;Lưu và tạo mới&quot; button" line="91">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230731 07:39:38.518" endtime="20230731 07:39:38.518"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230731 07:39:38.521" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\8bbd0d82-79a6-437d-bb2f-ca543bbee2d7"}</msg>
<msg timestamp="20230731 07:39:39.829" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\8bbd0d82-79a6-437d-bb2f-ca543bbee2d7"}</msg>
<status status="PASS" starttime="20230731 07:39:38.519" endtime="20230731 07:39:39.829"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230731 07:39:41.412" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230731 07:39:41.412" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230731 07:39:39.830" endtime="20230731 07:39:41.412"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230731 07:39:41.415" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230731 07:39:41.413" endtime="20230731 07:39:41.415"/>
</kw>
<status status="PASS" starttime="20230731 07:39:38.517" endtime="20230731 07:39:41.415"/>
</kw>
<kw name="When Go to edit code page" library="common" sourcename="Go to ${name} code page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:41.426" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:39:41.424" endtime="20230731 07:39:41.426"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:41.428" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:39:41.427" endtime="20230731 07:39:41.428"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:39:41.429" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:39:41.428" endtime="20230731 07:39:41.429"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:41.430" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:39:41.430" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:39:41.429" endtime="20230731 07:39:41.430"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:39:41.432" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:39:41.431" endtime="20230731 07:39:41.432"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:41.434" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:39:41.434" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:39:41.433" endtime="20230731 07:39:41.434"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.436" endtime="20230731 07:39:41.437"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.437" endtime="20230731 07:39:41.437"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:41.435" endtime="20230731 07:39:41.439"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.442" endtime="20230731 07:39:41.443"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.443" endtime="20230731 07:39:41.444"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.444" endtime="20230731 07:39:41.445"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:41.439" endtime="20230731 07:39:41.445"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.446" endtime="20230731 07:39:41.446"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.450" endtime="20230731 07:39:41.451"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:41.445" endtime="20230731 07:39:41.452"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.454" endtime="20230731 07:39:41.454"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.455" endtime="20230731 07:39:41.455"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:41.452" endtime="20230731 07:39:41.455"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.457" endtime="20230731 07:39:41.458"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.460" endtime="20230731 07:39:41.460"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:41.456" endtime="20230731 07:39:41.461"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.462" endtime="20230731 07:39:41.462"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.463" endtime="20230731 07:39:41.463"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:41.461" endtime="20230731 07:39:41.463"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.464" endtime="20230731 07:39:41.464"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.465" endtime="20230731 07:39:41.465"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:41.463" endtime="20230731 07:39:41.465"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.467" endtime="20230731 07:39:41.467"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:41.466" endtime="20230731 07:39:41.468"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:39:41.468" endtime="20230731 07:39:41.469"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:41.468" endtime="20230731 07:39:41.469"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.471" endtime="20230731 07:39:41.472"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.473" endtime="20230731 07:39:41.473"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:41.470" endtime="20230731 07:39:41.474"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.475" endtime="20230731 07:39:41.475"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:41.474" endtime="20230731 07:39:41.476"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.477" endtime="20230731 07:39:41.479"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:41.477" endtime="20230731 07:39:41.479"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.480" endtime="20230731 07:39:41.481"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:41.479" endtime="20230731 07:39:41.481"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:39:41.481" endtime="20230731 07:39:41.481"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:41.481" endtime="20230731 07:39:41.482"/>
</branch>
<status status="PASS" starttime="20230731 07:39:41.435" endtime="20230731 07:39:41.482"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:41.482" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:39:41.483" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:39:41.482" endtime="20230731 07:39:41.483"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:39:41.484" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:39:41.483" endtime="20230731 07:39:41.484"/>
</kw>
<status status="PASS" starttime="20230731 07:39:41.483" endtime="20230731 07:39:41.484"/>
</branch>
<status status="PASS" starttime="20230731 07:39:41.483" endtime="20230731 07:39:41.484"/>
</if>
<msg timestamp="20230731 07:39:41.484" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:39:41.422" endtime="20230731 07:39:41.484"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:39:41.485" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:39:41.485" endtime="20230731 07:39:41.485"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:41.486" endtime="20230731 07:39:43.170"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:39:43.172" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230731 07:39:43.171" endtime="20230731 07:39:43.234"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:43.235" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:39:43.235" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:39:43.234" endtime="20230731 07:39:43.235"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:39:43.237" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:39:43.237" endtime="20230731 07:39:43.237"/>
</kw>
<status status="PASS" starttime="20230731 07:39:43.236" endtime="20230731 07:39:43.239"/>
</branch>
<status status="PASS" starttime="20230731 07:39:43.235" endtime="20230731 07:39:43.239"/>
</if>
<status status="PASS" starttime="20230731 07:39:41.421" endtime="20230731 07:39:43.239"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:43.242" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:39:43.242" endtime="20230731 07:39:43.242"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:43.243" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:39:43.243" endtime="20230731 07:39:43.243"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:39:43.245" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:39:43.244" endtime="20230731 07:39:43.245"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:43.245" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:39:43.245" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:39:43.245" endtime="20230731 07:39:43.245"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:39:43.247" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:39:43.246" endtime="20230731 07:39:43.247"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:43.247" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:39:43.247" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:39:43.247" endtime="20230731 07:39:43.247"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.250" endtime="20230731 07:39:43.250"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.251" endtime="20230731 07:39:43.251"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:43.249" endtime="20230731 07:39:43.251"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.254" endtime="20230731 07:39:43.255"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.255" endtime="20230731 07:39:43.256"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.256" endtime="20230731 07:39:43.257"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:43.252" endtime="20230731 07:39:43.257"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.258" endtime="20230731 07:39:43.258"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.259" endtime="20230731 07:39:43.259"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:43.257" endtime="20230731 07:39:43.259"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.260" endtime="20230731 07:39:43.260"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.261" endtime="20230731 07:39:43.261"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:43.259" endtime="20230731 07:39:43.262"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.263" endtime="20230731 07:39:43.263"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.263" endtime="20230731 07:39:43.264"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:43.262" endtime="20230731 07:39:43.264"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.265" endtime="20230731 07:39:43.265"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.266" endtime="20230731 07:39:43.266"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:43.264" endtime="20230731 07:39:43.266"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.267" endtime="20230731 07:39:43.267"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.269" endtime="20230731 07:39:43.269"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:43.267" endtime="20230731 07:39:43.270"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.271" endtime="20230731 07:39:43.271"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:43.270" endtime="20230731 07:39:43.271"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:39:43.272" endtime="20230731 07:39:43.273"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:43.272" endtime="20230731 07:39:43.273"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.274" endtime="20230731 07:39:43.274"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.275" endtime="20230731 07:39:43.275"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:43.273" endtime="20230731 07:39:43.275"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.276" endtime="20230731 07:39:43.277"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:43.276" endtime="20230731 07:39:43.277"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.278" endtime="20230731 07:39:43.278"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:43.277" endtime="20230731 07:39:43.278"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.280" endtime="20230731 07:39:43.280"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:43.278" endtime="20230731 07:39:43.280"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.281" endtime="20230731 07:39:43.282"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:43.281" endtime="20230731 07:39:43.282"/>
</branch>
<status status="PASS" starttime="20230731 07:39:43.249" endtime="20230731 07:39:43.282"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:43.283" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:39:43.284" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:39:43.283" endtime="20230731 07:39:43.284"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:39:43.286" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:39:43.285" endtime="20230731 07:39:43.286"/>
</kw>
<status status="PASS" starttime="20230731 07:39:43.284" endtime="20230731 07:39:43.286"/>
</branch>
<status status="PASS" starttime="20230731 07:39:43.284" endtime="20230731 07:39:43.287"/>
</if>
<msg timestamp="20230731 07:39:43.287" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:39:43.241" endtime="20230731 07:39:43.287"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:39:43.288" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:39:43.288" endtime="20230731 07:39:43.288"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:43.289" endtime="20230731 07:39:43.417"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:39:43.420" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230731 07:39:43.419" endtime="20230731 07:39:43.497"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:43.498" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:39:43.498" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:39:43.498" endtime="20230731 07:39:43.498"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:39:43.502" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:39:43.500" endtime="20230731 07:39:43.502"/>
</kw>
<status status="PASS" starttime="20230731 07:39:43.499" endtime="20230731 07:39:43.502"/>
</branch>
<status status="PASS" starttime="20230731 07:39:43.499" endtime="20230731 07:39:43.503"/>
</if>
<status status="PASS" starttime="20230731 07:39:43.240" endtime="20230731 07:39:43.505"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:43.511" endtime="20230731 07:39:43.731"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:43.733" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:39:43.732" endtime="20230731 07:39:43.733"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:43.751" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:43.733" endtime="20230731 07:39:43.751"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.752" endtime="20230731 07:39:43.753"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.753" endtime="20230731 07:39:43.754"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:43.751" endtime="20230731 07:39:43.754"/>
</branch>
<status status="PASS" starttime="20230731 07:39:43.751" endtime="20230731 07:39:43.755"/>
</if>
<status status="PASS" starttime="20230731 07:39:43.731" endtime="20230731 07:39:43.757"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:39:43.758" endtime="20230731 07:39:43.813"/>
</kw>
<status status="PASS" starttime="20230731 07:39:43.506" endtime="20230731 07:39:43.814"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:39:43.816" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:39:43.815" endtime="20230731 07:39:43.816"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:43.817" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:39:43.817" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:39:43.816" endtime="20230731 07:39:43.817"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:43.819" endtime="20230731 07:39:43.820"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:43.817" endtime="20230731 07:39:43.820"/>
</branch>
<status status="PASS" starttime="20230731 07:39:43.817" endtime="20230731 07:39:43.820"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:39:45.062" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230731 07:39:43.827" endtime="20230731 07:39:45.063"/>
</kw>
<status status="PASS" starttime="20230731 07:39:43.822" endtime="20230731 07:39:45.063"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:45.065" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:39:45.064" endtime="20230731 07:39:45.065"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:45.983" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-18.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-18.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:39:45.983" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:39:45.983" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:39:45.072" endtime="20230731 07:39:45.986"/>
</kw>
<status status="FAIL" starttime="20230731 07:39:45.066" endtime="20230731 07:39:45.987"/>
</kw>
<msg timestamp="20230731 07:39:45.987" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:39:45.066" endtime="20230731 07:39:45.987"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:45.989" endtime="20230731 07:39:45.989"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:45.988" endtime="20230731 07:39:45.989"/>
</branch>
<status status="PASS" starttime="20230731 07:39:45.988" endtime="20230731 07:39:45.989"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:48.459" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:39:45.992" endtime="20230731 07:39:48.459"/>
</kw>
<status status="PASS" starttime="20230731 07:39:45.989" endtime="20230731 07:39:48.460"/>
</kw>
<status status="PASS" starttime="20230731 07:39:43.814" endtime="20230731 07:39:48.460"/>
</kw>
<status status="PASS" starttime="20230731 07:39:41.419" endtime="20230731 07:39:48.460"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:48.461" endtime="20230731 07:39:48.536"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:48.539" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:48.537" endtime="20230731 07:39:48.539"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:48.548" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:48.540" endtime="20230731 07:39:48.549"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:39:48.549" endtime="20230731 07:39:48.549"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:48.549" endtime="20230731 07:39:48.549"/>
</branch>
<status status="PASS" starttime="20230731 07:39:48.549" endtime="20230731 07:39:48.549"/>
</if>
<status status="PASS" starttime="20230731 07:39:48.537" endtime="20230731 07:39:48.549"/>
</kw>
<status status="PASS" starttime="20230731 07:39:48.460" endtime="20230731 07:39:48.550"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:48.553" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:48.552" endtime="20230731 07:39:48.553"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:48.562" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:48.554" endtime="20230731 07:39:48.562"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:39:48.563" endtime="20230731 07:39:48.564"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:48.563" endtime="20230731 07:39:48.564"/>
</branch>
<status status="PASS" starttime="20230731 07:39:48.563" endtime="20230731 07:39:48.564"/>
</if>
<status status="PASS" starttime="20230731 07:39:48.551" endtime="20230731 07:39:48.564"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:48.564" endtime="20230731 07:39:48.722"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:48.724" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:48.723" endtime="20230731 07:39:48.724"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:48.743" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:39:48.725" endtime="20230731 07:39:48.743"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:49.211" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:39:48.746" endtime="20230731 07:39:49.211"/>
</kw>
<status status="PASS" starttime="20230731 07:39:48.744" endtime="20230731 07:39:49.212"/>
</kw>
<status status="PASS" starttime="20230731 07:39:48.743" endtime="20230731 07:39:49.212"/>
</branch>
<status status="PASS" starttime="20230731 07:39:48.743" endtime="20230731 07:39:49.213"/>
</if>
<status status="PASS" starttime="20230731 07:39:48.722" endtime="20230731 07:39:49.213"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:49.217" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:49.215" endtime="20230731 07:39:49.217"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:49.250" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230731 07:39:49.218" endtime="20230731 07:39:49.251"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:51.463" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:39:49.256" endtime="20230731 07:39:51.463"/>
</kw>
<status status="PASS" starttime="20230731 07:39:49.252" endtime="20230731 07:39:51.463"/>
</kw>
<status status="PASS" starttime="20230731 07:39:49.251" endtime="20230731 07:39:51.464"/>
</branch>
<status status="PASS" starttime="20230731 07:39:49.251" endtime="20230731 07:39:51.464"/>
</if>
<status status="PASS" starttime="20230731 07:39:49.214" endtime="20230731 07:39:51.464"/>
</kw>
<status status="PASS" starttime="20230731 07:39:48.550" endtime="20230731 07:39:51.464"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Thêm mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20230731 07:39:51.465" endtime="20230731 07:39:51.465"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:51.464" endtime="20230731 07:39:51.465"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'edit'">
<kw name="Select Code need to edit" library="common" sourcename="Select ${name} need to edit">
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230731 07:39:51.479" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230731 07:39:51.480" level="INFO">${elements} = ['element=85803ddd-8fa9-404d-8810-22a6bcdaaabd', 'element=d50a2994-c9ed-4acd-a319-c690fd3a28da', 'element=7a1e8e6f-0446-4962-94d2-c13276e0d2e8', 'element=eeec4e1b-d7b5-479a-9dab-a5e12905e026', 'elemen...</msg>
<status status="PASS" starttime="20230731 07:39:51.466" endtime="20230731 07:39:51.480"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'Post'">
<kw name="Click" library="Browser">
<arg>${elements}[2]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:51.481" endtime="20230731 07:39:51.481"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:51.480" endtime="20230731 07:39:51.481"/>
</branch>
<branch type="ELSE IF" condition="'${name}' != 'post'">
<kw name="Click" library="Browser">
<arg>${elements}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:51.482" endtime="20230731 07:39:51.636"/>
</kw>
<status status="PASS" starttime="20230731 07:39:51.482" endtime="20230731 07:39:51.637"/>
</branch>
<status status="PASS" starttime="20230731 07:39:51.480" endtime="20230731 07:39:51.638"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:51.640" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:51.639" endtime="20230731 07:39:51.640"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:51.657" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:39:51.641" endtime="20230731 07:39:51.657"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:51.854" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:39:51.662" endtime="20230731 07:39:51.854"/>
</kw>
<status status="PASS" starttime="20230731 07:39:51.660" endtime="20230731 07:39:51.855"/>
</kw>
<status status="PASS" starttime="20230731 07:39:51.659" endtime="20230731 07:39:51.855"/>
</branch>
<status status="PASS" starttime="20230731 07:39:51.659" endtime="20230731 07:39:51.855"/>
</if>
<status status="PASS" starttime="20230731 07:39:51.639" endtime="20230731 07:39:51.856"/>
</kw>
<status status="PASS" starttime="20230731 07:39:51.466" endtime="20230731 07:39:51.856"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:39:53.858" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230731 07:39:51.856" endtime="20230731 07:39:53.858"/>
</kw>
<status status="PASS" starttime="20230731 07:39:51.465" endtime="20230731 07:39:53.858"/>
</branch>
<status status="PASS" starttime="20230731 07:39:51.464" endtime="20230731 07:39:53.858"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:53.860" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:53.860" endtime="20230731 07:39:53.860"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:53.869" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:53.861" endtime="20230731 07:39:53.869"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:39:53.869" endtime="20230731 07:39:53.870"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:53.869" endtime="20230731 07:39:53.870"/>
</branch>
<status status="PASS" starttime="20230731 07:39:53.869" endtime="20230731 07:39:53.870"/>
</if>
<status status="PASS" starttime="20230731 07:39:53.859" endtime="20230731 07:39:53.870"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:39:53.972" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230731 07:39:53.870" endtime="20230731 07:39:53.972"/>
</kw>
<status status="PASS" starttime="20230731 07:39:41.417" endtime="20230731 07:39:53.972"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:53.974" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:39:53.974" endtime="20230731 07:39:53.974"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:53.975" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:39:53.975" endtime="20230731 07:39:53.975"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:39:53.976" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:39:53.975" endtime="20230731 07:39:53.976"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:53.977" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:39:53.977" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:39:53.976" endtime="20230731 07:39:53.977"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:39:53.977" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230731 07:39:53.977" endtime="20230731 07:39:53.977"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:53.979" level="INFO">Length is 1</msg>
<msg timestamp="20230731 07:39:53.979" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230731 07:39:53.977" endtime="20230731 07:39:53.979"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:53.980" endtime="20230731 07:39:53.981"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:53.981" endtime="20230731 07:39:53.981"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:53.980" endtime="20230731 07:39:53.981"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:39:53.982" endtime="20230731 07:39:53.982"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:53.982" endtime="20230731 07:39:53.982"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:39:53.982" endtime="20230731 07:39:53.983"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:53.981" endtime="20230731 07:39:53.983"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:53.983" endtime="20230731 07:39:53.983"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:53.984" endtime="20230731 07:39:53.984"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:53.983" endtime="20230731 07:39:53.984"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:53.984" endtime="20230731 07:39:53.985"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:53.985" endtime="20230731 07:39:53.985"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:53.984" endtime="20230731 07:39:53.985"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:53.986" endtime="20230731 07:39:53.986"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:53.987" endtime="20230731 07:39:53.987"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:53.986" endtime="20230731 07:39:53.987"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:53.988" endtime="20230731 07:39:53.988"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:53.989" endtime="20230731 07:39:53.989"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:53.988" endtime="20230731 07:39:53.989"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:53.990" endtime="20230731 07:39:53.990"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:53.990" endtime="20230731 07:39:53.990"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:53.989" endtime="20230731 07:39:53.991"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:39:53.991" endtime="20230731 07:39:53.992"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:53.991" endtime="20230731 07:39:53.992"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:39:53.993" endtime="20230731 07:39:53.993"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:53.992" endtime="20230731 07:39:53.993"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:39:53.994" endtime="20230731 07:39:53.994"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:39:53.995" endtime="20230731 07:39:53.995"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:53.993" endtime="20230731 07:39:53.995"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:39:53.997" endtime="20230731 07:39:53.997"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:53.996" endtime="20230731 07:39:53.997"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:39:53.999" endtime="20230731 07:39:53.999"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:53.997" endtime="20230731 07:39:53.999"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:39:54.000" endtime="20230731 07:39:54.001"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:53.999" endtime="20230731 07:39:54.001"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230731 07:39:54.003" level="INFO">${new_text} = Explicabo provident iste iure.</msg>
<status status="PASS" starttime="20230731 07:39:54.002" endtime="20230731 07:39:54.003"/>
</kw>
<status status="PASS" starttime="20230731 07:39:54.001" endtime="20230731 07:39:54.003"/>
</branch>
<status status="PASS" starttime="20230731 07:39:53.980" endtime="20230731 07:39:54.004"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:54.005" level="INFO">Length is 8</msg>
<msg timestamp="20230731 07:39:54.005" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230731 07:39:54.004" endtime="20230731 07:39:54.006"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:39:54.009" level="INFO">${text} = Explicabo provident iste iure.</msg>
<status status="PASS" starttime="20230731 07:39:54.008" endtime="20230731 07:39:54.009"/>
</kw>
<status status="PASS" starttime="20230731 07:39:54.006" endtime="20230731 07:39:54.009"/>
</branch>
<status status="PASS" starttime="20230731 07:39:54.006" endtime="20230731 07:39:54.009"/>
</if>
<msg timestamp="20230731 07:39:54.010" level="INFO">${text} = Explicabo provident iste iure.</msg>
<status status="PASS" starttime="20230731 07:39:53.973" endtime="20230731 07:39:54.010"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:39:54.013" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:39:54.011" endtime="20230731 07:39:54.013"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:54.014" endtime="20230731 07:39:54.064"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:39:54.065" level="INFO">Fills the text 'Explicabo provident iste iure.' in the given field.</msg>
<status status="PASS" starttime="20230731 07:39:54.064" endtime="20230731 07:39:54.096"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:54.097" level="INFO">Length is 30</msg>
<msg timestamp="20230731 07:39:54.097" level="INFO">${cnt} = 30</msg>
<status status="PASS" starttime="20230731 07:39:54.097" endtime="20230731 07:39:54.097"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:39:54.099" level="INFO">${STATE["Mã"]} = Explicabo provident iste iure.</msg>
<status status="PASS" starttime="20230731 07:39:54.098" endtime="20230731 07:39:54.099"/>
</kw>
<status status="PASS" starttime="20230731 07:39:54.098" endtime="20230731 07:39:54.099"/>
</branch>
<status status="PASS" starttime="20230731 07:39:54.098" endtime="20230731 07:39:54.100"/>
</if>
<status status="PASS" starttime="20230731 07:39:53.973" endtime="20230731 07:39:54.100"/>
</kw>
<kw name="And Click &quot;Lưu và tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:39:54.103" endtime="20230731 07:39:54.281"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:54.284" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:39:54.283" endtime="20230731 07:39:54.284"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:54.295" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:54.285" endtime="20230731 07:39:54.295"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:54.296" endtime="20230731 07:39:54.296"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:39:54.296" endtime="20230731 07:39:54.296"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:54.295" endtime="20230731 07:39:54.297"/>
</branch>
<status status="PASS" starttime="20230731 07:39:54.295" endtime="20230731 07:39:54.297"/>
</if>
<status status="PASS" starttime="20230731 07:39:54.282" endtime="20230731 07:39:54.297"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:39:54.297" endtime="20230731 07:39:54.335"/>
</kw>
<status status="PASS" starttime="20230731 07:39:54.101" endtime="20230731 07:39:54.335"/>
</kw>
<kw name="Then User look message &quot;Cập nhật thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:39:54.339" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:39:54.338" endtime="20230731 07:39:54.339"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:39:54.341" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:39:54.341" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:39:54.340" endtime="20230731 07:39:54.341"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:54.343" endtime="20230731 07:39:54.343"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:54.342" endtime="20230731 07:39:54.343"/>
</branch>
<status status="PASS" starttime="20230731 07:39:54.341" endtime="20230731 07:39:54.344"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:39:56.376" level="INFO">Text: 'Cập nhật thành công'</msg>
<status status="PASS" starttime="20230731 07:39:54.347" endtime="20230731 07:39:56.376"/>
</kw>
<status status="PASS" starttime="20230731 07:39:54.344" endtime="20230731 07:39:56.377"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:56.378" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:39:56.377" endtime="20230731 07:39:56.378"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:56.794" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-19.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-19.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:39:56.794" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:39:56.795" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:39:56.382" endtime="20230731 07:39:56.798"/>
</kw>
<status status="FAIL" starttime="20230731 07:39:56.380" endtime="20230731 07:39:56.799"/>
</kw>
<msg timestamp="20230731 07:39:56.799" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:39:56.379" endtime="20230731 07:39:56.799"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:39:56.801" endtime="20230731 07:39:56.802"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:56.800" endtime="20230731 07:39:56.803"/>
</branch>
<status status="PASS" starttime="20230731 07:39:56.800" endtime="20230731 07:39:56.804"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:39:59.266" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:39:56.807" endtime="20230731 07:39:59.266"/>
</kw>
<status status="PASS" starttime="20230731 07:39:56.804" endtime="20230731 07:39:59.266"/>
</kw>
<status status="PASS" starttime="20230731 07:39:54.336" endtime="20230731 07:39:59.266"/>
</kw>
<kw name="And User look title &quot;Danh sách nghỉ phép&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:59.271" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:59.270" endtime="20230731 07:39:59.271"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:59.279" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:59.272" endtime="20230731 07:39:59.279"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:39:59.280" endtime="20230731 07:39:59.281"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:59.280" endtime="20230731 07:39:59.281"/>
</branch>
<status status="PASS" starttime="20230731 07:39:59.280" endtime="20230731 07:39:59.281"/>
</if>
<status status="PASS" starttime="20230731 07:39:59.269" endtime="20230731 07:39:59.281"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:39:59.284" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:39:59.283" endtime="20230731 07:39:59.284"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:39:59.294" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:39:59.284" endtime="20230731 07:39:59.295"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:39:59.296" endtime="20230731 07:39:59.296"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:39:59.295" endtime="20230731 07:39:59.296"/>
</branch>
<status status="PASS" starttime="20230731 07:39:59.295" endtime="20230731 07:39:59.297"/>
</if>
<status status="PASS" starttime="20230731 07:39:59.282" endtime="20230731 07:39:59.297"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230731 07:39:59.305" level="INFO">Title: 'Thêm mới mã Position'</msg>
<msg timestamp="20230731 07:39:59.305" level="INFO">${actualTitle} = Thêm mới mã Position</msg>
<status status="PASS" starttime="20230731 07:39:59.297" endtime="20230731 07:39:59.306"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230731 07:39:59.309" level="FAIL">Thêm mới mã Position != Danh sách nghỉ phép</msg>
<status status="FAIL" starttime="20230731 07:39:59.306" endtime="20230731 07:39:59.309"/>
</kw>
<status status="FAIL" starttime="20230731 07:39:59.282" endtime="20230731 07:39:59.310"/>
</kw>
<status status="FAIL" starttime="20230731 07:39:59.268" endtime="20230731 07:39:59.311"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230731 07:40:00.688" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230731 07:39:59.317" endtime="20230731 07:40:00.689"/>
</kw>
<status status="PASS" starttime="20230731 07:39:59.316" endtime="20230731 07:40:00.689"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="FAIL" starttime="20230731 07:39:38.510" endtime="20230731 07:40:00.691">Thêm mới mã Position != Danh sách nghỉ phép</status>
</test>
<test id="s1-t12" name="EDC-12 Verify that the code can be successfully edited when changing &quot;Mô tả&quot; field &amp; &quot;Lưu lại&quot; button" line="99">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230731 07:40:00.711" endtime="20230731 07:40:00.712"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230731 07:40:00.714" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\0db1b585-b6fe-4b79-9308-ae051ff2747c"}</msg>
<msg timestamp="20230731 07:40:02.213" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\0db1b585-b6fe-4b79-9308-ae051ff2747c"}</msg>
<status status="PASS" starttime="20230731 07:40:00.713" endtime="20230731 07:40:02.213"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230731 07:40:03.944" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230731 07:40:03.944" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230731 07:40:02.214" endtime="20230731 07:40:03.944"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230731 07:40:03.945" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230731 07:40:03.944" endtime="20230731 07:40:03.945"/>
</kw>
<status status="PASS" starttime="20230731 07:40:00.710" endtime="20230731 07:40:03.946"/>
</kw>
<kw name="When Go to edit code page" library="common" sourcename="Go to ${name} code page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:03.952" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:40:03.951" endtime="20230731 07:40:03.952"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:03.954" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:40:03.953" endtime="20230731 07:40:03.954"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:40:03.955" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:40:03.955" endtime="20230731 07:40:03.955"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:03.956" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:40:03.956" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:40:03.956" endtime="20230731 07:40:03.956"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:40:03.958" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:40:03.957" endtime="20230731 07:40:03.958"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:03.958" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:40:03.959" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:40:03.958" endtime="20230731 07:40:03.959"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.960" endtime="20230731 07:40:03.961"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.961" endtime="20230731 07:40:03.961"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:03.960" endtime="20230731 07:40:03.961"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.962" endtime="20230731 07:40:03.963"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.963" endtime="20230731 07:40:03.963"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.964" endtime="20230731 07:40:03.964"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:03.962" endtime="20230731 07:40:03.964"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.966" endtime="20230731 07:40:03.966"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.967" endtime="20230731 07:40:03.967"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:03.965" endtime="20230731 07:40:03.967"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.968" endtime="20230731 07:40:03.969"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.969" endtime="20230731 07:40:03.970"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:03.967" endtime="20230731 07:40:03.970"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.971" endtime="20230731 07:40:03.971"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.972" endtime="20230731 07:40:03.972"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:03.970" endtime="20230731 07:40:03.973"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.974" endtime="20230731 07:40:03.974"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.974" endtime="20230731 07:40:03.975"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:03.973" endtime="20230731 07:40:03.975"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.976" endtime="20230731 07:40:03.976"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.977" endtime="20230731 07:40:03.977"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:03.975" endtime="20230731 07:40:03.977"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.979" endtime="20230731 07:40:03.979"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:03.977" endtime="20230731 07:40:03.979"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:40:03.981" endtime="20230731 07:40:03.981"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:03.979" endtime="20230731 07:40:03.981"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.983" endtime="20230731 07:40:03.984"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.989" endtime="20230731 07:40:03.989"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:03.982" endtime="20230731 07:40:03.990"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.992" endtime="20230731 07:40:03.992"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:03.990" endtime="20230731 07:40:03.993"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.995" endtime="20230731 07:40:03.995"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:03.994" endtime="20230731 07:40:03.995"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:40:03.997" endtime="20230731 07:40:03.999"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:03.996" endtime="20230731 07:40:04.000"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:40:04.004" endtime="20230731 07:40:04.005"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:04.001" endtime="20230731 07:40:04.006"/>
</branch>
<status status="PASS" starttime="20230731 07:40:03.959" endtime="20230731 07:40:04.007"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:04.011" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:40:04.011" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:40:04.010" endtime="20230731 07:40:04.011"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:40:04.014" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:40:04.013" endtime="20230731 07:40:04.014"/>
</kw>
<status status="PASS" starttime="20230731 07:40:04.012" endtime="20230731 07:40:04.014"/>
</branch>
<status status="PASS" starttime="20230731 07:40:04.011" endtime="20230731 07:40:04.015"/>
</if>
<msg timestamp="20230731 07:40:04.015" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:40:03.950" endtime="20230731 07:40:04.015"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:40:04.017" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:40:04.016" endtime="20230731 07:40:04.019"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:40:04.020" endtime="20230731 07:40:05.667"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:40:05.670" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230731 07:40:05.669" endtime="20230731 07:40:05.730"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:05.731" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:40:05.731" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:40:05.730" endtime="20230731 07:40:05.731"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:40:05.735" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:40:05.733" endtime="20230731 07:40:05.735"/>
</kw>
<status status="PASS" starttime="20230731 07:40:05.732" endtime="20230731 07:40:05.735"/>
</branch>
<status status="PASS" starttime="20230731 07:40:05.732" endtime="20230731 07:40:05.736"/>
</if>
<status status="PASS" starttime="20230731 07:40:03.949" endtime="20230731 07:40:05.736"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:05.740" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:40:05.739" endtime="20230731 07:40:05.740"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:05.741" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:40:05.740" endtime="20230731 07:40:05.741"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:40:05.742" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:40:05.741" endtime="20230731 07:40:05.742"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:05.743" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:40:05.743" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:40:05.742" endtime="20230731 07:40:05.743"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:40:05.744" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:40:05.744" endtime="20230731 07:40:05.745"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:05.746" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:40:05.746" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:40:05.745" endtime="20230731 07:40:05.746"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.747" endtime="20230731 07:40:05.747"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.748" endtime="20230731 07:40:05.748"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:05.746" endtime="20230731 07:40:05.748"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.750" endtime="20230731 07:40:05.750"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.750" endtime="20230731 07:40:05.751"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.752" endtime="20230731 07:40:05.752"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:05.748" endtime="20230731 07:40:05.753"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.754" endtime="20230731 07:40:05.754"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.755" endtime="20230731 07:40:05.755"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:05.753" endtime="20230731 07:40:05.755"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.756" endtime="20230731 07:40:05.757"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.757" endtime="20230731 07:40:05.757"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:05.756" endtime="20230731 07:40:05.757"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.758" endtime="20230731 07:40:05.758"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.759" endtime="20230731 07:40:05.760"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:05.757" endtime="20230731 07:40:05.760"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.762" endtime="20230731 07:40:05.762"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.762" endtime="20230731 07:40:05.763"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:05.761" endtime="20230731 07:40:05.763"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.764" endtime="20230731 07:40:05.764"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.765" endtime="20230731 07:40:05.765"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:05.763" endtime="20230731 07:40:05.765"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.766" endtime="20230731 07:40:05.766"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:05.765" endtime="20230731 07:40:05.767"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:40:05.768" endtime="20230731 07:40:05.768"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:05.767" endtime="20230731 07:40:05.768"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.770" endtime="20230731 07:40:05.770"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.771" endtime="20230731 07:40:05.771"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:05.769" endtime="20230731 07:40:05.771"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.772" endtime="20230731 07:40:05.772"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:05.771" endtime="20230731 07:40:05.773"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.773" endtime="20230731 07:40:05.773"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:05.773" endtime="20230731 07:40:05.774"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.775" endtime="20230731 07:40:05.775"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:05.774" endtime="20230731 07:40:05.776"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:40:05.776" endtime="20230731 07:40:05.776"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:05.776" endtime="20230731 07:40:05.776"/>
</branch>
<status status="PASS" starttime="20230731 07:40:05.746" endtime="20230731 07:40:05.777"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:05.777" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:40:05.777" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:40:05.777" endtime="20230731 07:40:05.777"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:40:05.779" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:40:05.779" endtime="20230731 07:40:05.779"/>
</kw>
<status status="PASS" starttime="20230731 07:40:05.777" endtime="20230731 07:40:05.779"/>
</branch>
<status status="PASS" starttime="20230731 07:40:05.777" endtime="20230731 07:40:05.780"/>
</if>
<msg timestamp="20230731 07:40:05.780" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:40:05.737" endtime="20230731 07:40:05.780"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:40:05.782" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:40:05.781" endtime="20230731 07:40:05.782"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:40:05.782" endtime="20230731 07:40:05.899"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:40:05.902" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230731 07:40:05.900" endtime="20230731 07:40:05.965"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:05.966" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:40:05.967" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:40:05.966" endtime="20230731 07:40:05.967"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:40:05.972" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:40:05.971" endtime="20230731 07:40:05.972"/>
</kw>
<status status="PASS" starttime="20230731 07:40:05.969" endtime="20230731 07:40:05.972"/>
</branch>
<status status="PASS" starttime="20230731 07:40:05.967" endtime="20230731 07:40:05.973"/>
</if>
<status status="PASS" starttime="20230731 07:40:05.737" endtime="20230731 07:40:05.973"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:40:05.975" endtime="20230731 07:40:06.176"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:06.177" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:40:06.177" endtime="20230731 07:40:06.177"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:40:06.198" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:40:06.177" endtime="20230731 07:40:06.198"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:40:06.199" endtime="20230731 07:40:06.199"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:40:06.200" endtime="20230731 07:40:06.200"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:06.198" endtime="20230731 07:40:06.202"/>
</branch>
<status status="PASS" starttime="20230731 07:40:06.198" endtime="20230731 07:40:06.203"/>
</if>
<status status="PASS" starttime="20230731 07:40:06.176" endtime="20230731 07:40:06.204"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:40:06.205" endtime="20230731 07:40:06.262"/>
</kw>
<status status="PASS" starttime="20230731 07:40:05.974" endtime="20230731 07:40:06.262"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:40:06.264" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:40:06.263" endtime="20230731 07:40:06.264"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:06.264" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:40:06.264" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:40:06.264" endtime="20230731 07:40:06.264"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:40:06.265" endtime="20230731 07:40:06.265"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:06.265" endtime="20230731 07:40:06.266"/>
</branch>
<status status="PASS" starttime="20230731 07:40:06.265" endtime="20230731 07:40:06.266"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:40:08.897" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230731 07:40:06.272" endtime="20230731 07:40:08.897"/>
</kw>
<status status="PASS" starttime="20230731 07:40:06.266" endtime="20230731 07:40:08.897"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:08.899" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:40:08.897" endtime="20230731 07:40:08.899"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:40:10.888" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-20.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-20.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:40:10.888" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:40:10.888" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:40:08.902" endtime="20230731 07:40:10.891"/>
</kw>
<status status="FAIL" starttime="20230731 07:40:08.899" endtime="20230731 07:40:10.891"/>
</kw>
<msg timestamp="20230731 07:40:10.892" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:40:08.899" endtime="20230731 07:40:10.892"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:40:10.893" endtime="20230731 07:40:10.893"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:10.892" endtime="20230731 07:40:10.894"/>
</branch>
<status status="PASS" starttime="20230731 07:40:10.892" endtime="20230731 07:40:10.894"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:40:11.327" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:40:10.897" endtime="20230731 07:40:11.327"/>
</kw>
<status status="PASS" starttime="20230731 07:40:10.894" endtime="20230731 07:40:11.327"/>
</kw>
<status status="PASS" starttime="20230731 07:40:06.263" endtime="20230731 07:40:11.327"/>
</kw>
<status status="PASS" starttime="20230731 07:40:03.948" endtime="20230731 07:40:11.327"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:40:11.329" endtime="20230731 07:40:12.341"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:12.342" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:40:12.342" endtime="20230731 07:40:12.342"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:40:12.350" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:40:12.343" endtime="20230731 07:40:12.350"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:40:12.351" endtime="20230731 07:40:12.351"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:12.350" endtime="20230731 07:40:12.352"/>
</branch>
<status status="PASS" starttime="20230731 07:40:12.350" endtime="20230731 07:40:12.352"/>
</if>
<status status="PASS" starttime="20230731 07:40:12.341" endtime="20230731 07:40:12.353"/>
</kw>
<status status="PASS" starttime="20230731 07:40:11.329" endtime="20230731 07:40:12.353"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:12.356" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:40:12.355" endtime="20230731 07:40:12.356"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:40:12.363" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:40:12.356" endtime="20230731 07:40:12.363"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:40:12.364" endtime="20230731 07:40:12.364"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:12.363" endtime="20230731 07:40:12.364"/>
</branch>
<status status="PASS" starttime="20230731 07:40:12.363" endtime="20230731 07:40:12.365"/>
</if>
<status status="PASS" starttime="20230731 07:40:12.355" endtime="20230731 07:40:12.365"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:40:12.366" endtime="20230731 07:40:13.731"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:13.734" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:40:13.733" endtime="20230731 07:40:13.734"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:40:13.752" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:40:13.734" endtime="20230731 07:40:13.752"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:40:16.121" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:40:13.756" endtime="20230731 07:40:16.121"/>
</kw>
<status status="PASS" starttime="20230731 07:40:13.754" endtime="20230731 07:40:16.121"/>
</kw>
<status status="PASS" starttime="20230731 07:40:13.753" endtime="20230731 07:40:16.122"/>
</branch>
<status status="PASS" starttime="20230731 07:40:13.753" endtime="20230731 07:40:16.122"/>
</if>
<status status="PASS" starttime="20230731 07:40:13.732" endtime="20230731 07:40:16.122"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:16.124" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:40:16.124" endtime="20230731 07:40:16.124"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:40:16.137" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:40:16.125" endtime="20230731 07:40:16.139"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:40:16.140" endtime="20230731 07:40:16.140"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:16.139" endtime="20230731 07:40:16.140"/>
</branch>
<status status="PASS" starttime="20230731 07:40:16.139" endtime="20230731 07:40:16.140"/>
</if>
<status status="PASS" starttime="20230731 07:40:16.123" endtime="20230731 07:40:16.141"/>
</kw>
<status status="PASS" starttime="20230731 07:40:12.354" endtime="20230731 07:40:16.141"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Thêm mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20230731 07:40:16.142" endtime="20230731 07:40:16.143"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:16.142" endtime="20230731 07:40:16.143"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'edit'">
<kw name="Select Code need to edit" library="common" sourcename="Select ${name} need to edit">
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230731 07:40:16.160" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230731 07:40:16.160" level="INFO">${elements} = ['element=37d70dbf-d465-4275-a7b1-276f6ffcb5b3', 'element=a9b08e94-8a3a-46a6-b8c3-0303982f7f4c', 'element=557ed8a2-4142-4b50-a92b-e63cd49c218e', 'element=724d1af8-c950-4dbd-ae0d-c450f1672b10', 'elemen...</msg>
<status status="PASS" starttime="20230731 07:40:16.145" endtime="20230731 07:40:16.160"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'Post'">
<kw name="Click" library="Browser">
<arg>${elements}[2]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:40:16.161" endtime="20230731 07:40:16.161"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:16.161" endtime="20230731 07:40:16.161"/>
</branch>
<branch type="ELSE IF" condition="'${name}' != 'post'">
<kw name="Click" library="Browser">
<arg>${elements}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:40:16.162" endtime="20230731 07:40:16.346"/>
</kw>
<status status="PASS" starttime="20230731 07:40:16.162" endtime="20230731 07:40:16.347"/>
</branch>
<status status="PASS" starttime="20230731 07:40:16.161" endtime="20230731 07:40:16.347"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:16.350" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:40:16.349" endtime="20230731 07:40:16.350"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:40:16.372" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:40:16.351" endtime="20230731 07:40:16.372"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:40:16.454" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:40:16.375" endtime="20230731 07:40:16.455"/>
</kw>
<status status="PASS" starttime="20230731 07:40:16.373" endtime="20230731 07:40:16.455"/>
</kw>
<status status="PASS" starttime="20230731 07:40:16.372" endtime="20230731 07:40:16.455"/>
</branch>
<status status="PASS" starttime="20230731 07:40:16.372" endtime="20230731 07:40:16.455"/>
</if>
<status status="PASS" starttime="20230731 07:40:16.347" endtime="20230731 07:40:16.456"/>
</kw>
<status status="PASS" starttime="20230731 07:40:16.144" endtime="20230731 07:40:16.456"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:40:18.458" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230731 07:40:16.457" endtime="20230731 07:40:18.458"/>
</kw>
<status status="PASS" starttime="20230731 07:40:16.143" endtime="20230731 07:40:18.458"/>
</branch>
<status status="PASS" starttime="20230731 07:40:16.141" endtime="20230731 07:40:18.458"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:18.459" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:40:18.459" endtime="20230731 07:40:18.460"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:40:18.469" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:40:18.460" endtime="20230731 07:40:18.469"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:40:18.470" endtime="20230731 07:40:18.470"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:18.469" endtime="20230731 07:40:18.470"/>
</branch>
<status status="PASS" starttime="20230731 07:40:18.469" endtime="20230731 07:40:18.470"/>
</if>
<status status="PASS" starttime="20230731 07:40:18.458" endtime="20230731 07:40:18.471"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:40:18.572" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230731 07:40:18.471" endtime="20230731 07:40:18.572"/>
</kw>
<status status="PASS" starttime="20230731 07:40:03.947" endtime="20230731 07:40:18.572"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:18.575" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:40:18.575" endtime="20230731 07:40:18.575"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:18.576" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:40:18.575" endtime="20230731 07:40:18.576"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:40:18.577" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:40:18.576" endtime="20230731 07:40:18.577"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:18.577" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:40:18.577" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:40:18.577" endtime="20230731 07:40:18.577"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:40:18.578" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230731 07:40:18.578" endtime="20230731 07:40:18.578"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:18.579" level="INFO">Length is 1</msg>
<msg timestamp="20230731 07:40:18.579" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230731 07:40:18.579" endtime="20230731 07:40:18.579"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.580" endtime="20230731 07:40:18.580"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.580" endtime="20230731 07:40:18.580"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:18.579" endtime="20230731 07:40:18.580"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.581" endtime="20230731 07:40:18.581"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.581" endtime="20230731 07:40:18.581"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.581" endtime="20230731 07:40:18.582"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:18.580" endtime="20230731 07:40:18.582"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.582" endtime="20230731 07:40:18.582"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.583" endtime="20230731 07:40:18.583"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:18.582" endtime="20230731 07:40:18.583"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.584" endtime="20230731 07:40:18.584"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.585" endtime="20230731 07:40:18.585"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:18.584" endtime="20230731 07:40:18.585"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.585" endtime="20230731 07:40:18.586"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.586" endtime="20230731 07:40:18.586"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:18.585" endtime="20230731 07:40:18.586"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.587" endtime="20230731 07:40:18.587"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.587" endtime="20230731 07:40:18.587"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:18.586" endtime="20230731 07:40:18.587"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.587" endtime="20230731 07:40:18.587"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.589" endtime="20230731 07:40:18.589"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:18.587" endtime="20230731 07:40:18.589"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.589" endtime="20230731 07:40:18.589"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:18.589" endtime="20230731 07:40:18.590"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:40:18.590" endtime="20230731 07:40:18.590"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:18.590" endtime="20230731 07:40:18.590"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.591" endtime="20230731 07:40:18.591"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.591" endtime="20230731 07:40:18.591"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:18.591" endtime="20230731 07:40:18.592"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.592" endtime="20230731 07:40:18.592"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:18.592" endtime="20230731 07:40:18.592"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.593" endtime="20230731 07:40:18.593"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:18.592" endtime="20230731 07:40:18.593"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:40:18.594" endtime="20230731 07:40:18.594"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:18.593" endtime="20230731 07:40:18.594"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230731 07:40:18.597" level="INFO">${new_text} = Unde voluptates aperiam saepe magni sequi rerum temporibus.</msg>
<status status="PASS" starttime="20230731 07:40:18.596" endtime="20230731 07:40:18.597"/>
</kw>
<status status="PASS" starttime="20230731 07:40:18.595" endtime="20230731 07:40:18.597"/>
</branch>
<status status="PASS" starttime="20230731 07:40:18.579" endtime="20230731 07:40:18.597"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:18.598" level="INFO">Length is 8</msg>
<msg timestamp="20230731 07:40:18.598" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230731 07:40:18.598" endtime="20230731 07:40:18.598"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:40:18.600" level="INFO">${text} = Unde voluptates aperiam saepe magni sequi rerum temporibus.</msg>
<status status="PASS" starttime="20230731 07:40:18.599" endtime="20230731 07:40:18.600"/>
</kw>
<status status="PASS" starttime="20230731 07:40:18.599" endtime="20230731 07:40:18.600"/>
</branch>
<status status="PASS" starttime="20230731 07:40:18.598" endtime="20230731 07:40:18.601"/>
</if>
<msg timestamp="20230731 07:40:18.601" level="INFO">${text} = Unde voluptates aperiam saepe magni sequi rerum temporibus.</msg>
<status status="PASS" starttime="20230731 07:40:18.574" endtime="20230731 07:40:18.601"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230731 07:40:18.603" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230731 07:40:18.602" endtime="20230731 07:40:18.603"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:40:18.604" endtime="20230731 07:40:18.647"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:40:18.649" level="INFO">Fills the text 'Unde voluptates aperiam saepe magni sequi rerum temporibus.' in the given field.</msg>
<status status="PASS" starttime="20230731 07:40:18.647" endtime="20230731 07:40:18.682"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:18.684" level="INFO">Length is 59</msg>
<msg timestamp="20230731 07:40:18.684" level="INFO">${cnt} = 59</msg>
<status status="PASS" starttime="20230731 07:40:18.683" endtime="20230731 07:40:18.684"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:40:18.685" level="INFO">${STATE["Mô tả"]} = Unde voluptates aperiam saepe magni sequi rerum temporibus.</msg>
<status status="PASS" starttime="20230731 07:40:18.685" endtime="20230731 07:40:18.685"/>
</kw>
<status status="PASS" starttime="20230731 07:40:18.684" endtime="20230731 07:40:18.686"/>
</branch>
<status status="PASS" starttime="20230731 07:40:18.684" endtime="20230731 07:40:18.686"/>
</if>
<status status="PASS" starttime="20230731 07:40:18.573" endtime="20230731 07:40:18.686"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:40:18.689" endtime="20230731 07:40:19.591"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:19.593" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:40:19.593" endtime="20230731 07:40:19.593"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:40:19.608" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:40:19.594" endtime="20230731 07:40:19.608"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:40:19.609" endtime="20230731 07:40:19.609"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:40:19.610" endtime="20230731 07:40:19.610"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:19.609" endtime="20230731 07:40:19.610"/>
</branch>
<status status="PASS" starttime="20230731 07:40:19.609" endtime="20230731 07:40:19.610"/>
</if>
<status status="PASS" starttime="20230731 07:40:19.592" endtime="20230731 07:40:19.611"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:40:19.611" endtime="20230731 07:40:19.646"/>
</kw>
<status status="PASS" starttime="20230731 07:40:18.687" endtime="20230731 07:40:19.646"/>
</kw>
<kw name="Then User look message &quot;Cập nhật thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:40:19.649" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:40:19.647" endtime="20230731 07:40:19.649"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:19.650" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:40:19.650" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:40:19.650" endtime="20230731 07:40:19.650"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:40:19.651" endtime="20230731 07:40:19.652"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:19.651" endtime="20230731 07:40:19.652"/>
</branch>
<status status="PASS" starttime="20230731 07:40:19.651" endtime="20230731 07:40:19.652"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:40:22.821" level="INFO">Text: 'Cập nhật thành công'</msg>
<status status="PASS" starttime="20230731 07:40:19.654" endtime="20230731 07:40:22.821"/>
</kw>
<status status="PASS" starttime="20230731 07:40:19.652" endtime="20230731 07:40:22.822"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:22.823" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:40:22.822" endtime="20230731 07:40:22.823"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:40:24.471" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-21.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-21.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:40:24.472" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:40:24.472" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:40:22.825" endtime="20230731 07:40:24.475"/>
</kw>
<status status="FAIL" starttime="20230731 07:40:22.823" endtime="20230731 07:40:24.476"/>
</kw>
<msg timestamp="20230731 07:40:24.476" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:40:22.823" endtime="20230731 07:40:24.476"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:40:24.477" endtime="20230731 07:40:24.477"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:24.477" endtime="20230731 07:40:24.479"/>
</branch>
<status status="PASS" starttime="20230731 07:40:24.477" endtime="20230731 07:40:24.479"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:40:26.437" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:40:24.482" endtime="20230731 07:40:26.439"/>
</kw>
<status status="PASS" starttime="20230731 07:40:24.479" endtime="20230731 07:40:26.439"/>
</kw>
<status status="PASS" starttime="20230731 07:40:19.647" endtime="20230731 07:40:26.439"/>
</kw>
<kw name="And User look title &quot;Danh sách Mã&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:26.441" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:40:26.441" endtime="20230731 07:40:26.441"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:40:26.448" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:40:26.442" endtime="20230731 07:40:26.448"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:40:26.450" endtime="20230731 07:40:26.450"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:26.449" endtime="20230731 07:40:26.450"/>
</branch>
<status status="PASS" starttime="20230731 07:40:26.449" endtime="20230731 07:40:26.450"/>
</if>
<status status="PASS" starttime="20230731 07:40:26.441" endtime="20230731 07:40:26.451"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:26.453" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:40:26.453" endtime="20230731 07:40:26.453"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:40:26.466" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:40:26.454" endtime="20230731 07:40:26.467"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:40:26.467" endtime="20230731 07:40:26.469"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:26.467" endtime="20230731 07:40:26.469"/>
</branch>
<status status="PASS" starttime="20230731 07:40:26.467" endtime="20230731 07:40:26.469"/>
</if>
<status status="PASS" starttime="20230731 07:40:26.452" endtime="20230731 07:40:26.469"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230731 07:40:26.476" level="INFO">Title: 'Danh sách Mã'</msg>
<msg timestamp="20230731 07:40:26.476" level="INFO">${actualTitle} = Danh sách Mã</msg>
<status status="PASS" starttime="20230731 07:40:26.470" endtime="20230731 07:40:26.476"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230731 07:40:26.476" endtime="20230731 07:40:26.477"/>
</kw>
<status status="PASS" starttime="20230731 07:40:26.451" endtime="20230731 07:40:26.477"/>
</kw>
<status status="PASS" starttime="20230731 07:40:26.440" endtime="20230731 07:40:26.477"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230731 07:40:27.771" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230731 07:40:26.479" endtime="20230731 07:40:27.771"/>
</kw>
<status status="PASS" starttime="20230731 07:40:26.478" endtime="20230731 07:40:27.771"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230731 07:40:00.704" endtime="20230731 07:40:27.849"/>
</test>
<test id="s1-t13" name="EDC-13 Verify that the code can be successfully edited when changing &quot;Mô tả&quot; field &amp; &quot;Lưu và tạo mới&quot; button" line="107">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230731 07:40:27.921" endtime="20230731 07:40:27.922"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230731 07:40:27.924" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\7b43d704-2a11-4ea1-a67c-c01ba0599122"}</msg>
<msg timestamp="20230731 07:40:29.640" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\7b43d704-2a11-4ea1-a67c-c01ba0599122"}</msg>
<status status="PASS" starttime="20230731 07:40:27.922" endtime="20230731 07:40:29.640"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230731 07:40:31.554" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230731 07:40:31.555" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230731 07:40:29.641" endtime="20230731 07:40:31.555"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230731 07:40:31.556" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230731 07:40:31.555" endtime="20230731 07:40:31.556"/>
</kw>
<status status="PASS" starttime="20230731 07:40:27.920" endtime="20230731 07:40:31.557"/>
</kw>
<kw name="When Go to edit code page" library="common" sourcename="Go to ${name} code page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:31.562" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:40:31.561" endtime="20230731 07:40:31.562"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:31.563" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:40:31.562" endtime="20230731 07:40:31.563"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:40:31.563" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:40:31.563" endtime="20230731 07:40:31.563"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:31.565" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:40:31.565" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:40:31.565" endtime="20230731 07:40:31.565"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:40:31.567" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:40:31.566" endtime="20230731 07:40:31.568"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:31.569" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:40:31.569" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:40:31.568" endtime="20230731 07:40:31.569"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.570" endtime="20230731 07:40:31.570"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.571" endtime="20230731 07:40:31.571"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:31.569" endtime="20230731 07:40:31.571"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.572" endtime="20230731 07:40:31.573"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.573" endtime="20230731 07:40:31.574"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.574" endtime="20230731 07:40:31.575"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:31.571" endtime="20230731 07:40:31.575"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.576" endtime="20230731 07:40:31.576"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.577" endtime="20230731 07:40:31.577"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:31.575" endtime="20230731 07:40:31.577"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.579" endtime="20230731 07:40:31.580"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.580" endtime="20230731 07:40:31.581"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:31.579" endtime="20230731 07:40:31.581"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.582" endtime="20230731 07:40:31.582"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.583" endtime="20230731 07:40:31.583"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:31.581" endtime="20230731 07:40:31.584"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.585" endtime="20230731 07:40:31.585"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.586" endtime="20230731 07:40:31.586"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:31.584" endtime="20230731 07:40:31.587"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.588" endtime="20230731 07:40:31.589"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.590" endtime="20230731 07:40:31.590"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:31.587" endtime="20230731 07:40:31.590"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.592" endtime="20230731 07:40:31.592"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:31.591" endtime="20230731 07:40:31.592"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:40:31.593" endtime="20230731 07:40:31.593"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:31.592" endtime="20230731 07:40:31.594"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.595" endtime="20230731 07:40:31.596"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.596" endtime="20230731 07:40:31.597"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:31.594" endtime="20230731 07:40:31.597"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.605" endtime="20230731 07:40:31.606"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:31.597" endtime="20230731 07:40:31.610"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.619" endtime="20230731 07:40:31.619"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:31.616" endtime="20230731 07:40:31.620"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.621" endtime="20230731 07:40:31.622"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:31.620" endtime="20230731 07:40:31.622"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:40:31.624" endtime="20230731 07:40:31.625"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:31.622" endtime="20230731 07:40:31.625"/>
</branch>
<status status="PASS" starttime="20230731 07:40:31.569" endtime="20230731 07:40:31.626"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:31.627" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:40:31.627" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:40:31.626" endtime="20230731 07:40:31.627"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:40:31.630" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:40:31.629" endtime="20230731 07:40:31.630"/>
</kw>
<status status="PASS" starttime="20230731 07:40:31.628" endtime="20230731 07:40:31.631"/>
</branch>
<status status="PASS" starttime="20230731 07:40:31.628" endtime="20230731 07:40:31.631"/>
</if>
<msg timestamp="20230731 07:40:31.632" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:40:31.560" endtime="20230731 07:40:31.632"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:40:31.637" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:40:31.632" endtime="20230731 07:40:31.638"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:40:31.639" endtime="20230731 07:40:34.037"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:40:34.039" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230731 07:40:34.038" endtime="20230731 07:40:34.129"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:34.130" level="INFO">Length is 19</msg>
<msg timestamp="20230731 07:40:34.130" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230731 07:40:34.129" endtime="20230731 07:40:34.130"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:40:34.133" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230731 07:40:34.131" endtime="20230731 07:40:34.133"/>
</kw>
<status status="PASS" starttime="20230731 07:40:34.130" endtime="20230731 07:40:34.133"/>
</branch>
<status status="PASS" starttime="20230731 07:40:34.130" endtime="20230731 07:40:34.133"/>
</if>
<status status="PASS" starttime="20230731 07:40:31.559" endtime="20230731 07:40:34.134"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:34.137" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:40:34.136" endtime="20230731 07:40:34.137"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:34.139" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:40:34.137" endtime="20230731 07:40:34.139"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:40:34.140" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:40:34.139" endtime="20230731 07:40:34.140"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:34.142" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:40:34.142" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:40:34.141" endtime="20230731 07:40:34.142"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:40:34.144" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:40:34.143" endtime="20230731 07:40:34.144"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:34.145" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:40:34.145" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:40:34.144" endtime="20230731 07:40:34.145"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.146" endtime="20230731 07:40:34.146"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.147" endtime="20230731 07:40:34.147"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:34.145" endtime="20230731 07:40:34.147"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.148" endtime="20230731 07:40:34.149"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.149" endtime="20230731 07:40:34.149"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.150" endtime="20230731 07:40:34.150"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:34.148" endtime="20230731 07:40:34.150"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.151" endtime="20230731 07:40:34.151"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.152" endtime="20230731 07:40:34.152"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:34.150" endtime="20230731 07:40:34.152"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.153" endtime="20230731 07:40:34.154"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.154" endtime="20230731 07:40:34.154"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:34.153" endtime="20230731 07:40:34.155"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.156" endtime="20230731 07:40:34.156"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.156" endtime="20230731 07:40:34.157"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:34.155" endtime="20230731 07:40:34.157"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.157" endtime="20230731 07:40:34.159"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.159" endtime="20230731 07:40:34.160"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:34.157" endtime="20230731 07:40:34.160"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.161" endtime="20230731 07:40:34.162"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.163" endtime="20230731 07:40:34.163"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:34.160" endtime="20230731 07:40:34.163"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.165" endtime="20230731 07:40:34.165"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:34.164" endtime="20230731 07:40:34.166"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:40:34.167" endtime="20230731 07:40:34.167"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:34.166" endtime="20230731 07:40:34.168"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.168" endtime="20230731 07:40:34.168"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.169" endtime="20230731 07:40:34.169"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:34.168" endtime="20230731 07:40:34.169"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.170" endtime="20230731 07:40:34.170"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:34.169" endtime="20230731 07:40:34.170"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.171" endtime="20230731 07:40:34.172"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:34.171" endtime="20230731 07:40:34.172"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.173" endtime="20230731 07:40:34.173"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:34.172" endtime="20230731 07:40:34.173"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.174" endtime="20230731 07:40:34.175"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:34.174" endtime="20230731 07:40:34.175"/>
</branch>
<status status="PASS" starttime="20230731 07:40:34.145" endtime="20230731 07:40:34.175"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:34.176" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:40:34.177" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:40:34.176" endtime="20230731 07:40:34.177"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:40:34.183" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:40:34.182" endtime="20230731 07:40:34.183"/>
</kw>
<status status="PASS" starttime="20230731 07:40:34.177" endtime="20230731 07:40:34.185"/>
</branch>
<status status="PASS" starttime="20230731 07:40:34.177" endtime="20230731 07:40:34.185"/>
</if>
<msg timestamp="20230731 07:40:34.187" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:40:34.135" endtime="20230731 07:40:34.187"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230731 07:40:34.189" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230731 07:40:34.187" endtime="20230731 07:40:34.190"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:40:34.190" endtime="20230731 07:40:34.307"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:40:34.310" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230731 07:40:34.309" endtime="20230731 07:40:34.379"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:34.379" level="INFO">Length is 13</msg>
<msg timestamp="20230731 07:40:34.380" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230731 07:40:34.379" endtime="20230731 07:40:34.380"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:40:34.383" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230731 07:40:34.381" endtime="20230731 07:40:34.383"/>
</kw>
<status status="PASS" starttime="20230731 07:40:34.380" endtime="20230731 07:40:34.383"/>
</branch>
<status status="PASS" starttime="20230731 07:40:34.380" endtime="20230731 07:40:34.384"/>
</if>
<status status="PASS" starttime="20230731 07:40:34.134" endtime="20230731 07:40:34.384"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:40:34.387" endtime="20230731 07:40:34.625"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:34.629" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:40:34.628" endtime="20230731 07:40:34.629"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:40:34.642" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:40:34.629" endtime="20230731 07:40:34.642"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.643" endtime="20230731 07:40:34.643"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.643" endtime="20230731 07:40:34.643"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:34.642" endtime="20230731 07:40:34.643"/>
</branch>
<status status="PASS" starttime="20230731 07:40:34.642" endtime="20230731 07:40:34.643"/>
</if>
<status status="PASS" starttime="20230731 07:40:34.627" endtime="20230731 07:40:34.644"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:40:34.644" endtime="20230731 07:40:34.730"/>
</kw>
<status status="PASS" starttime="20230731 07:40:34.385" endtime="20230731 07:40:34.730"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:40:34.733" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:40:34.732" endtime="20230731 07:40:34.733"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:34.734" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:40:34.734" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:40:34.733" endtime="20230731 07:40:34.734"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:40:34.736" endtime="20230731 07:40:34.736"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:34.735" endtime="20230731 07:40:34.736"/>
</branch>
<status status="PASS" starttime="20230731 07:40:34.734" endtime="20230731 07:40:34.736"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:40:37.019" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230731 07:40:34.742" endtime="20230731 07:40:37.020"/>
</kw>
<status status="PASS" starttime="20230731 07:40:34.737" endtime="20230731 07:40:37.020"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:37.021" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:40:37.021" endtime="20230731 07:40:37.022"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:40:38.028" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-22.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-22.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:40:38.028" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:40:38.029" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:40:37.025" endtime="20230731 07:40:38.031"/>
</kw>
<status status="FAIL" starttime="20230731 07:40:37.023" endtime="20230731 07:40:38.032"/>
</kw>
<msg timestamp="20230731 07:40:38.033" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:40:37.022" endtime="20230731 07:40:38.033"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:40:38.034" endtime="20230731 07:40:38.035"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:38.033" endtime="20230731 07:40:38.035"/>
</branch>
<status status="PASS" starttime="20230731 07:40:38.033" endtime="20230731 07:40:38.035"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:40:39.795" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:40:38.037" endtime="20230731 07:40:39.796"/>
</kw>
<status status="PASS" starttime="20230731 07:40:38.036" endtime="20230731 07:40:39.796"/>
</kw>
<status status="PASS" starttime="20230731 07:40:34.731" endtime="20230731 07:40:39.796"/>
</kw>
<status status="PASS" starttime="20230731 07:40:31.558" endtime="20230731 07:40:39.796"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:40:39.797" endtime="20230731 07:40:39.942"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:39.944" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:40:39.944" endtime="20230731 07:40:39.944"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:40:39.976" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:40:39.945" endtime="20230731 07:40:39.976"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:40:39.977" endtime="20230731 07:40:39.977"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:39.976" endtime="20230731 07:40:39.979"/>
</branch>
<status status="PASS" starttime="20230731 07:40:39.976" endtime="20230731 07:40:39.979"/>
</if>
<status status="PASS" starttime="20230731 07:40:39.943" endtime="20230731 07:40:39.980"/>
</kw>
<status status="PASS" starttime="20230731 07:40:39.797" endtime="20230731 07:40:39.980"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:39.986" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:40:39.985" endtime="20230731 07:40:39.986"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:40:39.996" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:40:39.987" endtime="20230731 07:40:39.996"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:40:39.997" endtime="20230731 07:40:39.997"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:39.997" endtime="20230731 07:40:39.999"/>
</branch>
<status status="PASS" starttime="20230731 07:40:39.997" endtime="20230731 07:40:40.000"/>
</if>
<status status="PASS" starttime="20230731 07:40:39.982" endtime="20230731 07:40:40.000"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:40:40.001" endtime="20230731 07:40:40.243"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:40.245" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:40:40.245" endtime="20230731 07:40:40.245"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:40:40.262" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:40:40.246" endtime="20230731 07:40:40.262"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:40:43.057" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:40:40.264" endtime="20230731 07:40:43.058"/>
</kw>
<status status="PASS" starttime="20230731 07:40:40.262" endtime="20230731 07:40:43.058"/>
</kw>
<status status="PASS" starttime="20230731 07:40:40.262" endtime="20230731 07:40:43.058"/>
</branch>
<status status="PASS" starttime="20230731 07:40:40.262" endtime="20230731 07:40:43.059"/>
</if>
<status status="PASS" starttime="20230731 07:40:40.244" endtime="20230731 07:40:43.059"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:43.061" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:40:43.060" endtime="20230731 07:40:43.061"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:40:43.077" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:40:43.061" endtime="20230731 07:40:43.077"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:40:43.079" endtime="20230731 07:40:43.079"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:43.077" endtime="20230731 07:40:43.079"/>
</branch>
<status status="PASS" starttime="20230731 07:40:43.077" endtime="20230731 07:40:43.079"/>
</if>
<status status="PASS" starttime="20230731 07:40:43.059" endtime="20230731 07:40:43.080"/>
</kw>
<status status="PASS" starttime="20230731 07:40:39.981" endtime="20230731 07:40:43.080"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'create'">
<kw name="Click &quot;Thêm mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20230731 07:40:43.082" endtime="20230731 07:40:43.084"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:43.081" endtime="20230731 07:40:43.084"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'edit'">
<kw name="Select Code need to edit" library="common" sourcename="Select ${name} need to edit">
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230731 07:40:43.117" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230731 07:40:43.118" level="INFO">${elements} = ['element=8ba1835c-358b-4f49-b826-e9b63feff037', 'element=e8348454-97f8-45b5-a0a1-7396ed3875c9', 'element=a4549090-99b8-4825-956a-a2cbf18d58f5', 'element=2f57dd48-ba66-4df3-bf3d-3420ae9d1407', 'elemen...</msg>
<status status="PASS" starttime="20230731 07:40:43.087" endtime="20230731 07:40:43.118"/>
</kw>
<if>
<branch type="IF" condition="'${name}' == 'Post'">
<kw name="Click" library="Browser">
<arg>${elements}[2]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:40:43.119" endtime="20230731 07:40:43.120"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:43.119" endtime="20230731 07:40:43.120"/>
</branch>
<branch type="ELSE IF" condition="'${name}' != 'post'">
<kw name="Click" library="Browser">
<arg>${elements}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:40:43.121" endtime="20230731 07:40:43.379"/>
</kw>
<status status="PASS" starttime="20230731 07:40:43.120" endtime="20230731 07:40:43.379"/>
</branch>
<status status="PASS" starttime="20230731 07:40:43.118" endtime="20230731 07:40:43.379"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:43.382" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:40:43.381" endtime="20230731 07:40:43.382"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:40:43.403" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230731 07:40:43.384" endtime="20230731 07:40:43.403"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:40:43.774" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230731 07:40:43.407" endtime="20230731 07:40:43.774"/>
</kw>
<status status="PASS" starttime="20230731 07:40:43.404" endtime="20230731 07:40:43.775"/>
</kw>
<status status="PASS" starttime="20230731 07:40:43.404" endtime="20230731 07:40:43.775"/>
</branch>
<status status="PASS" starttime="20230731 07:40:43.403" endtime="20230731 07:40:43.775"/>
</if>
<status status="PASS" starttime="20230731 07:40:43.380" endtime="20230731 07:40:43.776"/>
</kw>
<status status="PASS" starttime="20230731 07:40:43.086" endtime="20230731 07:40:43.776"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:40:45.777" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230731 07:40:43.776" endtime="20230731 07:40:45.777"/>
</kw>
<status status="PASS" starttime="20230731 07:40:43.085" endtime="20230731 07:40:45.777"/>
</branch>
<status status="PASS" starttime="20230731 07:40:43.080" endtime="20230731 07:40:45.777"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:45.780" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:40:45.779" endtime="20230731 07:40:45.780"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:40:45.790" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:40:45.780" endtime="20230731 07:40:45.790"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:40:45.791" endtime="20230731 07:40:45.792"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:45.791" endtime="20230731 07:40:45.792"/>
</branch>
<status status="PASS" starttime="20230731 07:40:45.791" endtime="20230731 07:40:45.792"/>
</if>
<status status="PASS" starttime="20230731 07:40:45.777" endtime="20230731 07:40:45.792"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230731 07:40:45.893" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230731 07:40:45.793" endtime="20230731 07:40:45.893"/>
</kw>
<status status="PASS" starttime="20230731 07:40:31.558" endtime="20230731 07:40:45.893"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:45.897" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230731 07:40:45.896" endtime="20230731 07:40:45.897"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:45.897" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230731 07:40:45.897" endtime="20230731 07:40:45.899"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:40:45.900" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230731 07:40:45.899" endtime="20230731 07:40:45.900"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:45.901" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:40:45.901" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230731 07:40:45.900" endtime="20230731 07:40:45.901"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:40:45.902" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230731 07:40:45.902" endtime="20230731 07:40:45.903"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:45.903" level="INFO">Length is 1</msg>
<msg timestamp="20230731 07:40:45.904" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230731 07:40:45.903" endtime="20230731 07:40:45.904"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.905" endtime="20230731 07:40:45.905"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.906" endtime="20230731 07:40:45.906"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:45.904" endtime="20230731 07:40:45.906"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.907" endtime="20230731 07:40:45.907"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.908" endtime="20230731 07:40:45.908"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.908" endtime="20230731 07:40:45.909"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:45.906" endtime="20230731 07:40:45.909"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.909" endtime="20230731 07:40:45.910"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.910" endtime="20230731 07:40:45.911"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:45.909" endtime="20230731 07:40:45.911"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.912" endtime="20230731 07:40:45.912"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.913" endtime="20230731 07:40:45.913"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:45.911" endtime="20230731 07:40:45.913"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.914" endtime="20230731 07:40:45.915"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.915" endtime="20230731 07:40:45.915"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:45.913" endtime="20230731 07:40:45.916"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.917" endtime="20230731 07:40:45.917"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.917" endtime="20230731 07:40:45.917"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:45.916" endtime="20230731 07:40:45.919"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.920" endtime="20230731 07:40:45.920"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.921" endtime="20230731 07:40:45.921"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:45.919" endtime="20230731 07:40:45.921"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.923" endtime="20230731 07:40:45.923"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:45.922" endtime="20230731 07:40:45.923"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230731 07:40:45.924" endtime="20230731 07:40:45.924"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:45.923" endtime="20230731 07:40:45.924"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.925" endtime="20230731 07:40:45.925"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.926" endtime="20230731 07:40:45.926"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:45.925" endtime="20230731 07:40:45.926"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.928" endtime="20230731 07:40:45.928"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:45.927" endtime="20230731 07:40:45.928"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.930" endtime="20230731 07:40:45.930"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:45.929" endtime="20230731 07:40:45.932"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230731 07:40:45.935" endtime="20230731 07:40:45.935"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:45.933" endtime="20230731 07:40:45.935"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230731 07:40:45.937" level="INFO">${new_text} = Dicta accusamus soluta maxime deserunt ea similique.</msg>
<status status="PASS" starttime="20230731 07:40:45.936" endtime="20230731 07:40:45.937"/>
</kw>
<status status="PASS" starttime="20230731 07:40:45.936" endtime="20230731 07:40:45.937"/>
</branch>
<status status="PASS" starttime="20230731 07:40:45.904" endtime="20230731 07:40:45.937"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:45.940" level="INFO">Length is 8</msg>
<msg timestamp="20230731 07:40:45.940" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230731 07:40:45.939" endtime="20230731 07:40:45.940"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 07:40:45.942" level="INFO">${text} = Dicta accusamus soluta maxime deserunt ea similique.</msg>
<status status="PASS" starttime="20230731 07:40:45.941" endtime="20230731 07:40:45.942"/>
</kw>
<status status="PASS" starttime="20230731 07:40:45.940" endtime="20230731 07:40:45.942"/>
</branch>
<status status="PASS" starttime="20230731 07:40:45.940" endtime="20230731 07:40:45.942"/>
</if>
<msg timestamp="20230731 07:40:45.943" level="INFO">${text} = Dicta accusamus soluta maxime deserunt ea similique.</msg>
<status status="PASS" starttime="20230731 07:40:45.895" endtime="20230731 07:40:45.943"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230731 07:40:45.944" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230731 07:40:45.943" endtime="20230731 07:40:45.944"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:40:45.945" endtime="20230731 07:40:46.075"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230731 07:40:46.076" level="INFO">Fills the text 'Dicta accusamus soluta maxime deserunt ea similique.' in the given field.</msg>
<status status="PASS" starttime="20230731 07:40:46.075" endtime="20230731 07:40:46.296"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:46.297" level="INFO">Length is 52</msg>
<msg timestamp="20230731 07:40:46.297" level="INFO">${cnt} = 52</msg>
<status status="PASS" starttime="20230731 07:40:46.297" endtime="20230731 07:40:46.298"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230731 07:40:46.301" level="INFO">${STATE["Mô tả"]} = Dicta accusamus soluta maxime deserunt ea similique.</msg>
<status status="PASS" starttime="20230731 07:40:46.300" endtime="20230731 07:40:46.301"/>
</kw>
<status status="PASS" starttime="20230731 07:40:46.299" endtime="20230731 07:40:46.302"/>
</branch>
<status status="PASS" starttime="20230731 07:40:46.299" endtime="20230731 07:40:46.302"/>
</if>
<status status="PASS" starttime="20230731 07:40:45.894" endtime="20230731 07:40:46.302"/>
</kw>
<kw name="And Click &quot;Lưu và tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230731 07:40:46.352" endtime="20230731 07:40:46.747"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:46.752" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230731 07:40:46.750" endtime="20230731 07:40:46.752"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:40:46.766" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:40:46.752" endtime="20230731 07:40:46.766"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:40:46.767" endtime="20230731 07:40:46.767"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230731 07:40:46.768" endtime="20230731 07:40:46.768"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:46.766" endtime="20230731 07:40:46.768"/>
</branch>
<status status="PASS" starttime="20230731 07:40:46.766" endtime="20230731 07:40:46.769"/>
</if>
<status status="PASS" starttime="20230731 07:40:46.749" endtime="20230731 07:40:46.770"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230731 07:40:46.771" endtime="20230731 07:40:46.850"/>
</kw>
<status status="PASS" starttime="20230731 07:40:46.351" endtime="20230731 07:40:46.851"/>
</kw>
<kw name="Then User look message &quot;Cập nhật thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230731 07:40:46.860" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230731 07:40:46.860" endtime="20230731 07:40:46.860"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230731 07:40:46.861" level="INFO">Length is 0</msg>
<msg timestamp="20230731 07:40:46.862" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230731 07:40:46.861" endtime="20230731 07:40:46.862"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230731 07:40:46.863" endtime="20230731 07:40:46.863"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:46.862" endtime="20230731 07:40:46.863"/>
</branch>
<status status="PASS" starttime="20230731 07:40:46.862" endtime="20230731 07:40:46.863"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230731 07:40:49.046" level="INFO">Text: 'Cập nhật thành công'</msg>
<status status="PASS" starttime="20230731 07:40:46.869" endtime="20230731 07:40:49.046"/>
</kw>
<status status="PASS" starttime="20230731 07:40:46.863" endtime="20230731 07:40:49.046"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:49.047" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230731 07:40:49.047" endtime="20230731 07:40:49.048"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:40:49.511" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-23.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-23.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230731 07:40:49.511" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230731 07:40:49.511" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230731 07:40:49.053" endtime="20230731 07:40:49.516"/>
</kw>
<status status="FAIL" starttime="20230731 07:40:49.050" endtime="20230731 07:40:49.516"/>
</kw>
<msg timestamp="20230731 07:40:49.516" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230731 07:40:49.049" endtime="20230731 07:40:49.517"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230731 07:40:49.518" endtime="20230731 07:40:49.518"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:49.517" endtime="20230731 07:40:49.518"/>
</branch>
<status status="PASS" starttime="20230731 07:40:49.517" endtime="20230731 07:40:49.519"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230731 07:40:52.061" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230731 07:40:49.521" endtime="20230731 07:40:52.061"/>
</kw>
<status status="PASS" starttime="20230731 07:40:49.519" endtime="20230731 07:40:52.061"/>
</kw>
<status status="PASS" starttime="20230731 07:40:46.859" endtime="20230731 07:40:52.062"/>
</kw>
<kw name="And User look title &quot;Danh sách nghỉ phép&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:52.065" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:40:52.065" endtime="20230731 07:40:52.065"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:40:52.075" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:40:52.066" endtime="20230731 07:40:52.075"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:40:52.076" endtime="20230731 07:40:52.076"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:52.075" endtime="20230731 07:40:52.076"/>
</branch>
<status status="PASS" starttime="20230731 07:40:52.075" endtime="20230731 07:40:52.077"/>
</if>
<status status="PASS" starttime="20230731 07:40:52.064" endtime="20230731 07:40:52.077"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 07:40:52.079" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230731 07:40:52.079" endtime="20230731 07:40:52.079"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230731 07:40:52.097" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230731 07:40:52.080" endtime="20230731 07:40:52.097"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230731 07:40:52.097" endtime="20230731 07:40:52.099"/>
</kw>
<status status="NOT RUN" starttime="20230731 07:40:52.097" endtime="20230731 07:40:52.099"/>
</branch>
<status status="PASS" starttime="20230731 07:40:52.097" endtime="20230731 07:40:52.099"/>
</if>
<status status="PASS" starttime="20230731 07:40:52.078" endtime="20230731 07:40:52.099"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230731 07:40:52.108" level="INFO">Title: 'Thêm mới mã Position'</msg>
<msg timestamp="20230731 07:40:52.109" level="INFO">${actualTitle} = Thêm mới mã Position</msg>
<status status="PASS" starttime="20230731 07:40:52.100" endtime="20230731 07:40:52.109"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230731 07:40:52.110" level="FAIL">Thêm mới mã Position != Danh sách nghỉ phép</msg>
<status status="FAIL" starttime="20230731 07:40:52.109" endtime="20230731 07:40:52.110"/>
</kw>
<status status="FAIL" starttime="20230731 07:40:52.077" endtime="20230731 07:40:52.110"/>
</kw>
<status status="FAIL" starttime="20230731 07:40:52.063" endtime="20230731 07:40:52.111"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230731 07:40:54.111" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230731 07:40:52.112" endtime="20230731 07:40:54.112"/>
</kw>
<status status="PASS" starttime="20230731 07:40:52.112" endtime="20230731 07:40:54.112"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="FAIL" starttime="20230731 07:40:27.902" endtime="20230731 07:40:54.115">Thêm mới mã Position != Danh sách nghỉ phép</status>
</test>
<status status="FAIL" starttime="20230731 07:35:50.783" endtime="20230731 07:40:54.135"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="3" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="10" fail="3" skip="0">@regression</stat>
<stat pass="10" fail="3" skip="0">@smoketest</stat>
</tag>
<suite>
<stat pass="10" fail="3" skip="0" id="s1" name="Test">Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

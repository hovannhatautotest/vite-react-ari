<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.11.4 on win32)" generated="20230729 15:54:05.097" rpa="false" schemaversion="4">
<suite id="s1" name="Admin Create Code" source="C:\Users\nhats\OneDrive\Desktop\ARI\vite-react-ari\test\testcases\Admin_Create_Code.robot">
<test id="s1-t1" name="EDC-05 Verify that error message display when changing &quot;Mã&quot; field &amp; &quot;Lưu lại&quot; button" line="204">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230729 15:54:11.135" endtime="20230729 15:54:11.159"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230729 15:54:11.163" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\4c92dafa-85ea-4b8f-b072-f92569c8a117"}</msg>
<msg timestamp="20230729 15:54:13.417" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\4c92dafa-85ea-4b8f-b072-f92569c8a117"}</msg>
<status status="PASS" starttime="20230729 15:54:11.159" endtime="20230729 15:54:13.417"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230729 15:54:16.228" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230729 15:54:16.228" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230729 15:54:13.418" endtime="20230729 15:54:16.229"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230729 15:54:16.232" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230729 15:54:16.230" endtime="20230729 15:54:16.232"/>
</kw>
<status status="PASS" starttime="20230729 15:54:11.134" endtime="20230729 15:54:16.232"/>
</kw>
<kw name="When Go to page edit code" library="common">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:16.249" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:54:16.248" endtime="20230729 15:54:16.249"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:16.252" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:54:16.250" endtime="20230729 15:54:16.252"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:54:16.255" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:54:16.252" endtime="20230729 15:54:16.255"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:16.257" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:54:16.257" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:54:16.256" endtime="20230729 15:54:16.257"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:54:16.260" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:54:16.258" endtime="20230729 15:54:16.260"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:16.262" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:54:16.262" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:54:16.262" endtime="20230729 15:54:16.262"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.265" endtime="20230729 15:54:16.265"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.266" endtime="20230729 15:54:16.267"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:16.263" endtime="20230729 15:54:16.267"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.268" endtime="20230729 15:54:16.268"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.269" endtime="20230729 15:54:16.270"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.271" endtime="20230729 15:54:16.271"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:16.267" endtime="20230729 15:54:16.272"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.274" endtime="20230729 15:54:16.276"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.278" endtime="20230729 15:54:16.278"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:16.273" endtime="20230729 15:54:16.278"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.281" endtime="20230729 15:54:16.281"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.285" endtime="20230729 15:54:16.285"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:16.279" endtime="20230729 15:54:16.286"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.287" endtime="20230729 15:54:16.287"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.288" endtime="20230729 15:54:16.288"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:16.286" endtime="20230729 15:54:16.289"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.290" endtime="20230729 15:54:16.290"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.291" endtime="20230729 15:54:16.293"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:16.289" endtime="20230729 15:54:16.294"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.299" endtime="20230729 15:54:16.299"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.300" endtime="20230729 15:54:16.300"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:16.295" endtime="20230729 15:54:16.300"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.301" endtime="20230729 15:54:16.302"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:16.300" endtime="20230729 15:54:16.302"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:54:16.302" endtime="20230729 15:54:16.303"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:16.302" endtime="20230729 15:54:16.303"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.304" endtime="20230729 15:54:16.304"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.305" endtime="20230729 15:54:16.305"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:16.303" endtime="20230729 15:54:16.305"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.306" endtime="20230729 15:54:16.307"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:16.306" endtime="20230729 15:54:16.307"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.312" endtime="20230729 15:54:16.313"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:16.307" endtime="20230729 15:54:16.313"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.316" endtime="20230729 15:54:16.316"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:16.314" endtime="20230729 15:54:16.316"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:54:16.318" endtime="20230729 15:54:16.318"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:16.317" endtime="20230729 15:54:16.318"/>
</branch>
<status status="PASS" starttime="20230729 15:54:16.263" endtime="20230729 15:54:16.318"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:16.320" level="INFO">Length is 19</msg>
<msg timestamp="20230729 15:54:16.321" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230729 15:54:16.319" endtime="20230729 15:54:16.321"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:54:16.331" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:54:16.323" endtime="20230729 15:54:16.331"/>
</kw>
<status status="PASS" starttime="20230729 15:54:16.321" endtime="20230729 15:54:16.332"/>
</branch>
<status status="PASS" starttime="20230729 15:54:16.321" endtime="20230729 15:54:16.332"/>
</if>
<msg timestamp="20230729 15:54:16.333" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:54:16.246" endtime="20230729 15:54:16.333"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:54:16.335" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:54:16.334" endtime="20230729 15:54:16.335"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:54:16.336" endtime="20230729 15:54:19.676"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:54:19.679" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230729 15:54:19.678" endtime="20230729 15:54:19.779"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:19.780" level="INFO">Length is 19</msg>
<msg timestamp="20230729 15:54:19.781" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230729 15:54:19.780" endtime="20230729 15:54:19.781"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:54:19.785" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:54:19.782" endtime="20230729 15:54:19.785"/>
</kw>
<status status="PASS" starttime="20230729 15:54:19.781" endtime="20230729 15:54:19.786"/>
</branch>
<status status="PASS" starttime="20230729 15:54:19.781" endtime="20230729 15:54:19.786"/>
</if>
<status status="PASS" starttime="20230729 15:54:16.244" endtime="20230729 15:54:19.786"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:19.789" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:54:19.788" endtime="20230729 15:54:19.789"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:19.790" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:54:19.789" endtime="20230729 15:54:19.790"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:54:19.792" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:54:19.791" endtime="20230729 15:54:19.792"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:19.793" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:54:19.793" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:54:19.792" endtime="20230729 15:54:19.794"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:54:19.795" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:54:19.794" endtime="20230729 15:54:19.795"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:19.797" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:54:19.797" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:54:19.796" endtime="20230729 15:54:19.797"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.799" endtime="20230729 15:54:19.799"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.800" endtime="20230729 15:54:19.800"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:19.798" endtime="20230729 15:54:19.800"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.801" endtime="20230729 15:54:19.802"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.802" endtime="20230729 15:54:19.802"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.803" endtime="20230729 15:54:19.803"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:19.801" endtime="20230729 15:54:19.803"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.805" endtime="20230729 15:54:19.805"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.805" endtime="20230729 15:54:19.806"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:19.804" endtime="20230729 15:54:19.806"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.807" endtime="20230729 15:54:19.808"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.808" endtime="20230729 15:54:19.809"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:19.806" endtime="20230729 15:54:19.809"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.810" endtime="20230729 15:54:19.810"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.811" endtime="20230729 15:54:19.811"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:19.809" endtime="20230729 15:54:19.811"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.813" endtime="20230729 15:54:19.814"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.815" endtime="20230729 15:54:19.816"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:19.812" endtime="20230729 15:54:19.817"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.820" endtime="20230729 15:54:19.821"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.822" endtime="20230729 15:54:19.822"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:19.819" endtime="20230729 15:54:19.822"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.823" endtime="20230729 15:54:19.825"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:19.823" endtime="20230729 15:54:19.826"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:54:19.827" endtime="20230729 15:54:19.828"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:19.826" endtime="20230729 15:54:19.829"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.830" endtime="20230729 15:54:19.832"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.832" endtime="20230729 15:54:19.832"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:19.829" endtime="20230729 15:54:19.833"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.834" endtime="20230729 15:54:19.835"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:19.833" endtime="20230729 15:54:19.835"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.836" endtime="20230729 15:54:19.836"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:19.835" endtime="20230729 15:54:19.836"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.837" endtime="20230729 15:54:19.838"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:19.837" endtime="20230729 15:54:19.838"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:54:19.839" endtime="20230729 15:54:19.839"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:19.838" endtime="20230729 15:54:19.839"/>
</branch>
<status status="PASS" starttime="20230729 15:54:19.797" endtime="20230729 15:54:19.840"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:19.845" level="INFO">Length is 13</msg>
<msg timestamp="20230729 15:54:19.845" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230729 15:54:19.840" endtime="20230729 15:54:19.845"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:54:19.848" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:54:19.847" endtime="20230729 15:54:19.848"/>
</kw>
<status status="PASS" starttime="20230729 15:54:19.846" endtime="20230729 15:54:19.848"/>
</branch>
<status status="PASS" starttime="20230729 15:54:19.846" endtime="20230729 15:54:19.848"/>
</if>
<msg timestamp="20230729 15:54:19.849" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:54:19.787" endtime="20230729 15:54:19.849"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:54:19.850" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:54:19.849" endtime="20230729 15:54:19.850"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:54:19.851" endtime="20230729 15:54:19.990"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:54:19.994" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230729 15:54:19.992" endtime="20230729 15:54:20.066"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:20.068" level="INFO">Length is 13</msg>
<msg timestamp="20230729 15:54:20.068" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230729 15:54:20.067" endtime="20230729 15:54:20.068"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:54:20.072" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:54:20.070" endtime="20230729 15:54:20.073"/>
</kw>
<status status="PASS" starttime="20230729 15:54:20.069" endtime="20230729 15:54:20.073"/>
</branch>
<status status="PASS" starttime="20230729 15:54:20.068" endtime="20230729 15:54:20.073"/>
</if>
<status status="PASS" starttime="20230729 15:54:19.787" endtime="20230729 15:54:20.075"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:54:20.079" endtime="20230729 15:54:20.389"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:20.392" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230729 15:54:20.391" endtime="20230729 15:54:20.392"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:54:20.485" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:54:20.395" endtime="20230729 15:54:20.485"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:54:20.487" endtime="20230729 15:54:20.487"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230729 15:54:20.488" endtime="20230729 15:54:20.488"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:20.486" endtime="20230729 15:54:20.488"/>
</branch>
<status status="PASS" starttime="20230729 15:54:20.485" endtime="20230729 15:54:20.489"/>
</if>
<status status="PASS" starttime="20230729 15:54:20.389" endtime="20230729 15:54:20.489"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230729 15:54:20.490" endtime="20230729 15:54:20.602"/>
</kw>
<status status="PASS" starttime="20230729 15:54:20.077" endtime="20230729 15:54:20.602"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:54:20.606" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:54:20.605" endtime="20230729 15:54:20.607"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:20.608" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:54:20.608" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:54:20.607" endtime="20230729 15:54:20.609"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230729 15:54:20.613" endtime="20230729 15:54:20.614"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:20.611" endtime="20230729 15:54:20.614"/>
</branch>
<status status="PASS" starttime="20230729 15:54:20.610" endtime="20230729 15:54:20.614"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230729 15:54:24.101" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230729 15:54:20.620" endtime="20230729 15:54:24.101"/>
</kw>
<status status="PASS" starttime="20230729 15:54:20.615" endtime="20230729 15:54:24.101"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:24.104" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230729 15:54:24.102" endtime="20230729 15:54:24.104"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:54:24.907" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230729 15:54:24.907" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230729 15:54:24.908" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230729 15:54:24.110" endtime="20230729 15:54:24.918"/>
</kw>
<status status="FAIL" starttime="20230729 15:54:24.106" endtime="20230729 15:54:24.918"/>
</kw>
<msg timestamp="20230729 15:54:24.919" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230729 15:54:24.105" endtime="20230729 15:54:24.919"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:54:24.921" endtime="20230729 15:54:24.921"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:24.920" endtime="20230729 15:54:24.921"/>
</branch>
<status status="PASS" starttime="20230729 15:54:24.920" endtime="20230729 15:54:24.921"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:54:25.887" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230729 15:54:24.926" endtime="20230729 15:54:25.888"/>
</kw>
<status status="PASS" starttime="20230729 15:54:24.923" endtime="20230729 15:54:25.888"/>
</kw>
<status status="PASS" starttime="20230729 15:54:20.604" endtime="20230729 15:54:25.889"/>
</kw>
<status status="PASS" starttime="20230729 15:54:16.241" endtime="20230729 15:54:25.889"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:54:25.895" endtime="20230729 15:54:26.043"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:26.046" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:54:26.045" endtime="20230729 15:54:26.046"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:54:26.062" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:54:26.046" endtime="20230729 15:54:26.062"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:54:26.063" endtime="20230729 15:54:26.063"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:26.062" endtime="20230729 15:54:26.064"/>
</branch>
<status status="PASS" starttime="20230729 15:54:26.062" endtime="20230729 15:54:26.064"/>
</if>
<status status="PASS" starttime="20230729 15:54:26.044" endtime="20230729 15:54:26.064"/>
</kw>
<status status="PASS" starttime="20230729 15:54:25.892" endtime="20230729 15:54:26.065"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:26.068" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:54:26.068" endtime="20230729 15:54:26.068"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:54:26.085" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:54:26.069" endtime="20230729 15:54:26.085"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:54:26.087" endtime="20230729 15:54:26.087"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:26.086" endtime="20230729 15:54:26.088"/>
</branch>
<status status="PASS" starttime="20230729 15:54:26.086" endtime="20230729 15:54:26.088"/>
</if>
<status status="PASS" starttime="20230729 15:54:26.067" endtime="20230729 15:54:26.088"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:54:26.089" endtime="20230729 15:54:26.347"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:26.351" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:54:26.350" endtime="20230729 15:54:26.351"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:54:26.382" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230729 15:54:26.352" endtime="20230729 15:54:26.382"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:54:27.026" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230729 15:54:26.388" endtime="20230729 15:54:27.030"/>
</kw>
<status status="PASS" starttime="20230729 15:54:26.383" endtime="20230729 15:54:27.031"/>
</kw>
<status status="PASS" starttime="20230729 15:54:26.382" endtime="20230729 15:54:27.031"/>
</branch>
<status status="PASS" starttime="20230729 15:54:26.382" endtime="20230729 15:54:27.032"/>
</if>
<status status="PASS" starttime="20230729 15:54:26.348" endtime="20230729 15:54:27.032"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:27.036" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:54:27.035" endtime="20230729 15:54:27.036"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:54:27.047" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230729 15:54:27.037" endtime="20230729 15:54:27.047"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:54:29.047" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230729 15:54:27.055" endtime="20230729 15:54:29.047"/>
</kw>
<status status="PASS" starttime="20230729 15:54:27.049" endtime="20230729 15:54:29.048"/>
</kw>
<status status="PASS" starttime="20230729 15:54:27.048" endtime="20230729 15:54:29.048"/>
</branch>
<status status="PASS" starttime="20230729 15:54:27.048" endtime="20230729 15:54:29.050"/>
</if>
<status status="PASS" starttime="20230729 15:54:27.033" endtime="20230729 15:54:29.050"/>
</kw>
<status status="PASS" starttime="20230729 15:54:26.066" endtime="20230729 15:54:29.051"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230729 15:54:29.078" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230729 15:54:29.078" level="INFO">${elements} = ['element=c7c4efc8-d6db-491d-9082-f07eafb66d14', 'element=0c0eca07-7fce-4ef0-88e1-90489197631b', 'element=34cc2349-dae7-4144-a33e-afaec395605a', 'element=78400fce-e07f-4d97-bcc9-71ca1cd6f481', 'elemen...</msg>
<status status="PASS" starttime="20230729 15:54:29.051" endtime="20230729 15:54:29.078"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elements}[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:54:29.079" endtime="20230729 15:54:29.348"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230729 15:54:31.350" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230729 15:54:29.349" endtime="20230729 15:54:31.350"/>
</kw>
<status status="PASS" starttime="20230729 15:54:16.240" endtime="20230729 15:54:31.351"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:31.353" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:54:31.353" endtime="20230729 15:54:31.353"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:31.354" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:54:31.353" endtime="20230729 15:54:31.354"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:54:31.355" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:54:31.355" endtime="20230729 15:54:31.355"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:31.356" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:54:31.357" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:54:31.356" endtime="20230729 15:54:31.357"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:54:31.358" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230729 15:54:31.357" endtime="20230729 15:54:31.358"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:31.359" level="INFO">Length is 1</msg>
<msg timestamp="20230729 15:54:31.359" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230729 15:54:31.358" endtime="20230729 15:54:31.359"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.360" endtime="20230729 15:54:31.361"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.361" endtime="20230729 15:54:31.361"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:31.360" endtime="20230729 15:54:31.362"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.363" endtime="20230729 15:54:31.363"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.364" endtime="20230729 15:54:31.364"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.365" endtime="20230729 15:54:31.365"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:31.362" endtime="20230729 15:54:31.365"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.367" endtime="20230729 15:54:31.368"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.368" endtime="20230729 15:54:31.369"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:31.366" endtime="20230729 15:54:31.369"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.370" endtime="20230729 15:54:31.370"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.371" endtime="20230729 15:54:31.371"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:31.369" endtime="20230729 15:54:31.371"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.372" endtime="20230729 15:54:31.373"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.373" endtime="20230729 15:54:31.373"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:31.372" endtime="20230729 15:54:31.373"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.375" endtime="20230729 15:54:31.375"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.376" endtime="20230729 15:54:31.376"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:31.374" endtime="20230729 15:54:31.377"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.379" endtime="20230729 15:54:31.379"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.380" endtime="20230729 15:54:31.380"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:31.377" endtime="20230729 15:54:31.380"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.383" endtime="20230729 15:54:31.384"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:31.380" endtime="20230729 15:54:31.384"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:54:31.385" endtime="20230729 15:54:31.385"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:31.384" endtime="20230729 15:54:31.386"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.387" endtime="20230729 15:54:31.387"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.387" endtime="20230729 15:54:31.387"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:31.386" endtime="20230729 15:54:31.388"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.389" endtime="20230729 15:54:31.389"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:31.388" endtime="20230729 15:54:31.389"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.390" endtime="20230729 15:54:31.390"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:31.389" endtime="20230729 15:54:31.390"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.392" endtime="20230729 15:54:31.392"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:31.391" endtime="20230729 15:54:31.393"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230729 15:54:31.395" level="INFO">${new_text} = Aspernatur adipisci odio sed vel.</msg>
<status status="PASS" starttime="20230729 15:54:31.394" endtime="20230729 15:54:31.395"/>
</kw>
<status status="PASS" starttime="20230729 15:54:31.393" endtime="20230729 15:54:31.395"/>
</branch>
<status status="PASS" starttime="20230729 15:54:31.359" endtime="20230729 15:54:31.395"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:31.397" level="INFO">Length is 8</msg>
<msg timestamp="20230729 15:54:31.397" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230729 15:54:31.396" endtime="20230729 15:54:31.397"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:54:31.399" level="INFO">${text} = Aspernatur adipisci odio sed vel.</msg>
<status status="PASS" starttime="20230729 15:54:31.399" endtime="20230729 15:54:31.400"/>
</kw>
<status status="PASS" starttime="20230729 15:54:31.398" endtime="20230729 15:54:31.400"/>
</branch>
<status status="PASS" starttime="20230729 15:54:31.398" endtime="20230729 15:54:31.400"/>
</if>
<msg timestamp="20230729 15:54:31.401" level="INFO">${text} = Aspernatur adipisci odio sed vel.</msg>
<status status="PASS" starttime="20230729 15:54:31.352" endtime="20230729 15:54:31.401"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:54:31.402" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:54:31.401" endtime="20230729 15:54:31.402"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:54:31.402" endtime="20230729 15:54:31.452"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:54:31.454" level="INFO">Fills the text 'Aspernatur adipisci odio sed vel.' in the given field.</msg>
<status status="PASS" starttime="20230729 15:54:31.453" endtime="20230729 15:54:31.489"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:31.491" level="INFO">Length is 33</msg>
<msg timestamp="20230729 15:54:31.491" level="INFO">${cnt} = 33</msg>
<status status="PASS" starttime="20230729 15:54:31.490" endtime="20230729 15:54:31.491"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:54:31.496" level="INFO">${STATE["Mã"]} = Aspernatur adipisci odio sed vel.</msg>
<status status="PASS" starttime="20230729 15:54:31.493" endtime="20230729 15:54:31.497"/>
</kw>
<status status="PASS" starttime="20230729 15:54:31.492" endtime="20230729 15:54:31.497"/>
</branch>
<status status="PASS" starttime="20230729 15:54:31.492" endtime="20230729 15:54:31.497"/>
</if>
<status status="PASS" starttime="20230729 15:54:31.352" endtime="20230729 15:54:31.498"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:54:31.500" endtime="20230729 15:54:31.683"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:31.686" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230729 15:54:31.685" endtime="20230729 15:54:31.686"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:54:31.712" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:54:31.686" endtime="20230729 15:54:31.712"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.713" endtime="20230729 15:54:31.713"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.714" endtime="20230729 15:54:31.715"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:31.712" endtime="20230729 15:54:31.715"/>
</branch>
<status status="PASS" starttime="20230729 15:54:31.712" endtime="20230729 15:54:31.716"/>
</if>
<status status="PASS" starttime="20230729 15:54:31.684" endtime="20230729 15:54:31.717"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230729 15:54:31.717" endtime="20230729 15:54:31.769"/>
</kw>
<status status="PASS" starttime="20230729 15:54:31.499" endtime="20230729 15:54:31.769"/>
</kw>
<kw name="Then User look message &quot;Internal server error&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:54:31.773" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:54:31.772" endtime="20230729 15:54:31.773"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:31.775" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:54:31.775" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:54:31.774" endtime="20230729 15:54:31.775"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230729 15:54:31.778" endtime="20230729 15:54:31.779"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:31.776" endtime="20230729 15:54:31.779"/>
</branch>
<status status="PASS" starttime="20230729 15:54:31.776" endtime="20230729 15:54:31.779"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230729 15:54:33.719" level="INFO">Text: 'Internal server error'</msg>
<status status="PASS" starttime="20230729 15:54:31.783" endtime="20230729 15:54:33.719"/>
</kw>
<status status="PASS" starttime="20230729 15:54:31.780" endtime="20230729 15:54:33.720"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:33.721" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230729 15:54:33.720" endtime="20230729 15:54:33.721"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:54:34.178" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230729 15:54:34.179" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230729 15:54:34.179" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230729 15:54:33.728" endtime="20230729 15:54:34.182"/>
</kw>
<status status="FAIL" starttime="20230729 15:54:33.722" endtime="20230729 15:54:34.184"/>
</kw>
<msg timestamp="20230729 15:54:34.185" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230729 15:54:33.721" endtime="20230729 15:54:34.185"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:54:34.187" endtime="20230729 15:54:34.187"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:34.186" endtime="20230729 15:54:34.188"/>
</branch>
<status status="PASS" starttime="20230729 15:54:34.186" endtime="20230729 15:54:34.188"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:54:39.729" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230729 15:54:34.191" endtime="20230729 15:54:39.729"/>
</kw>
<status status="PASS" starttime="20230729 15:54:34.188" endtime="20230729 15:54:39.729"/>
</kw>
<status status="PASS" starttime="20230729 15:54:31.771" endtime="20230729 15:54:39.731"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230729 15:54:41.389" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230729 15:54:39.732" endtime="20230729 15:54:41.389"/>
</kw>
<status status="PASS" starttime="20230729 15:54:39.732" endtime="20230729 15:54:41.389"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230729 15:54:11.120" endtime="20230729 15:54:41.390"/>
</test>
<test id="s1-t2" name="EDC-06 Verify that error message display when changing &quot;Mã&quot; field &amp; &quot;Lưu và tạo mới&quot; button" line="211">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230729 15:54:41.411" endtime="20230729 15:54:41.412"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230729 15:54:41.418" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\32979030-ecb5-4718-bc09-1730e4512aa8"}</msg>
<msg timestamp="20230729 15:54:42.952" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\32979030-ecb5-4718-bc09-1730e4512aa8"}</msg>
<status status="PASS" starttime="20230729 15:54:41.414" endtime="20230729 15:54:42.952"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230729 15:54:44.870" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230729 15:54:44.871" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230729 15:54:42.953" endtime="20230729 15:54:44.871"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230729 15:54:44.874" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230729 15:54:44.872" endtime="20230729 15:54:44.874"/>
</kw>
<status status="PASS" starttime="20230729 15:54:41.410" endtime="20230729 15:54:44.874"/>
</kw>
<kw name="When Go to page edit code" library="common">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:44.880" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:54:44.880" endtime="20230729 15:54:44.880"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:44.882" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:54:44.881" endtime="20230729 15:54:44.882"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:54:44.883" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:54:44.882" endtime="20230729 15:54:44.883"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:44.884" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:54:44.884" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:54:44.883" endtime="20230729 15:54:44.884"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:54:44.886" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:54:44.885" endtime="20230729 15:54:44.886"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:44.887" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:54:44.887" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:54:44.886" endtime="20230729 15:54:44.887"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.889" endtime="20230729 15:54:44.890"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.890" endtime="20230729 15:54:44.890"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:44.888" endtime="20230729 15:54:44.891"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.892" endtime="20230729 15:54:44.892"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.892" endtime="20230729 15:54:44.893"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.894" endtime="20230729 15:54:44.895"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:44.891" endtime="20230729 15:54:44.895"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.896" endtime="20230729 15:54:44.896"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.897" endtime="20230729 15:54:44.898"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:44.895" endtime="20230729 15:54:44.898"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.899" endtime="20230729 15:54:44.899"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.900" endtime="20230729 15:54:44.900"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:44.898" endtime="20230729 15:54:44.901"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.902" endtime="20230729 15:54:44.902"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.902" endtime="20230729 15:54:44.902"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:44.901" endtime="20230729 15:54:44.903"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.904" endtime="20230729 15:54:44.904"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.905" endtime="20230729 15:54:44.906"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:44.903" endtime="20230729 15:54:44.907"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.908" endtime="20230729 15:54:44.909"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.909" endtime="20230729 15:54:44.910"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:44.907" endtime="20230729 15:54:44.910"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.912" endtime="20230729 15:54:44.913"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:44.911" endtime="20230729 15:54:44.914"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:54:44.915" endtime="20230729 15:54:44.916"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:44.914" endtime="20230729 15:54:44.916"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.917" endtime="20230729 15:54:44.917"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.918" endtime="20230729 15:54:44.919"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:44.916" endtime="20230729 15:54:44.919"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.920" endtime="20230729 15:54:44.921"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:44.920" endtime="20230729 15:54:44.921"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.922" endtime="20230729 15:54:44.925"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:44.921" endtime="20230729 15:54:44.926"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.927" endtime="20230729 15:54:44.927"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:44.926" endtime="20230729 15:54:44.928"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:54:44.929" endtime="20230729 15:54:44.929"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:44.928" endtime="20230729 15:54:44.929"/>
</branch>
<status status="PASS" starttime="20230729 15:54:44.888" endtime="20230729 15:54:44.929"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:44.930" level="INFO">Length is 19</msg>
<msg timestamp="20230729 15:54:44.930" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230729 15:54:44.930" endtime="20230729 15:54:44.930"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:54:44.933" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:54:44.932" endtime="20230729 15:54:44.933"/>
</kw>
<status status="PASS" starttime="20230729 15:54:44.931" endtime="20230729 15:54:44.933"/>
</branch>
<status status="PASS" starttime="20230729 15:54:44.931" endtime="20230729 15:54:44.934"/>
</if>
<msg timestamp="20230729 15:54:44.934" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:54:44.878" endtime="20230729 15:54:44.934"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:54:44.938" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:54:44.936" endtime="20230729 15:54:44.938"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:54:44.939" endtime="20230729 15:54:46.415"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:54:46.416" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230729 15:54:46.416" endtime="20230729 15:54:46.515"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:46.516" level="INFO">Length is 19</msg>
<msg timestamp="20230729 15:54:46.517" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230729 15:54:46.516" endtime="20230729 15:54:46.517"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:54:46.519" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:54:46.518" endtime="20230729 15:54:46.519"/>
</kw>
<status status="PASS" starttime="20230729 15:54:46.517" endtime="20230729 15:54:46.519"/>
</branch>
<status status="PASS" starttime="20230729 15:54:46.517" endtime="20230729 15:54:46.520"/>
</if>
<status status="PASS" starttime="20230729 15:54:44.877" endtime="20230729 15:54:46.520"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:46.523" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:54:46.522" endtime="20230729 15:54:46.523"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:46.524" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:54:46.524" endtime="20230729 15:54:46.524"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:54:46.526" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:54:46.525" endtime="20230729 15:54:46.526"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:46.527" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:54:46.528" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:54:46.527" endtime="20230729 15:54:46.528"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:54:46.529" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:54:46.528" endtime="20230729 15:54:46.529"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:46.530" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:54:46.530" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:54:46.530" endtime="20230729 15:54:46.530"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.532" endtime="20230729 15:54:46.532"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.532" endtime="20230729 15:54:46.533"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:46.531" endtime="20230729 15:54:46.533"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.535" endtime="20230729 15:54:46.535"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.536" endtime="20230729 15:54:46.536"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.537" endtime="20230729 15:54:46.537"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:46.533" endtime="20230729 15:54:46.537"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.538" endtime="20230729 15:54:46.539"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.540" endtime="20230729 15:54:46.540"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:46.537" endtime="20230729 15:54:46.540"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.541" endtime="20230729 15:54:46.542"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.542" endtime="20230729 15:54:46.542"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:46.540" endtime="20230729 15:54:46.542"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.544" endtime="20230729 15:54:46.544"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.545" endtime="20230729 15:54:46.545"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:46.543" endtime="20230729 15:54:46.545"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.546" endtime="20230729 15:54:46.546"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.547" endtime="20230729 15:54:46.547"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:46.545" endtime="20230729 15:54:46.547"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.548" endtime="20230729 15:54:46.549"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.549" endtime="20230729 15:54:46.549"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:46.548" endtime="20230729 15:54:46.549"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.550" endtime="20230729 15:54:46.551"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:46.550" endtime="20230729 15:54:46.551"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:54:46.552" endtime="20230729 15:54:46.552"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:46.551" endtime="20230729 15:54:46.552"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.553" endtime="20230729 15:54:46.554"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.554" endtime="20230729 15:54:46.555"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:46.552" endtime="20230729 15:54:46.555"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.557" endtime="20230729 15:54:46.557"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:46.555" endtime="20230729 15:54:46.557"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.558" endtime="20230729 15:54:46.558"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:46.557" endtime="20230729 15:54:46.559"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.560" endtime="20230729 15:54:46.560"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:46.559" endtime="20230729 15:54:46.560"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:54:46.561" endtime="20230729 15:54:46.561"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:46.560" endtime="20230729 15:54:46.561"/>
</branch>
<status status="PASS" starttime="20230729 15:54:46.531" endtime="20230729 15:54:46.561"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:46.562" level="INFO">Length is 13</msg>
<msg timestamp="20230729 15:54:46.562" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230729 15:54:46.562" endtime="20230729 15:54:46.562"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:54:46.564" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:54:46.563" endtime="20230729 15:54:46.564"/>
</kw>
<status status="PASS" starttime="20230729 15:54:46.563" endtime="20230729 15:54:46.565"/>
</branch>
<status status="PASS" starttime="20230729 15:54:46.562" endtime="20230729 15:54:46.565"/>
</if>
<msg timestamp="20230729 15:54:46.565" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:54:46.521" endtime="20230729 15:54:46.566"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:54:46.567" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:54:46.566" endtime="20230729 15:54:46.567"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:54:46.568" endtime="20230729 15:54:46.668"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:54:46.669" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230729 15:54:46.669" endtime="20230729 15:54:46.738"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:46.740" level="INFO">Length is 13</msg>
<msg timestamp="20230729 15:54:46.740" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230729 15:54:46.739" endtime="20230729 15:54:46.740"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:54:46.743" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:54:46.741" endtime="20230729 15:54:46.743"/>
</kw>
<status status="PASS" starttime="20230729 15:54:46.741" endtime="20230729 15:54:46.744"/>
</branch>
<status status="PASS" starttime="20230729 15:54:46.740" endtime="20230729 15:54:46.745"/>
</if>
<status status="PASS" starttime="20230729 15:54:46.521" endtime="20230729 15:54:46.745"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:54:46.750" endtime="20230729 15:54:47.171"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:47.176" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230729 15:54:47.172" endtime="20230729 15:54:47.177"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:54:47.206" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:54:47.178" endtime="20230729 15:54:47.207"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:54:47.210" endtime="20230729 15:54:47.211"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230729 15:54:47.212" endtime="20230729 15:54:47.212"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:47.208" endtime="20230729 15:54:47.214"/>
</branch>
<status status="PASS" starttime="20230729 15:54:47.207" endtime="20230729 15:54:47.214"/>
</if>
<status status="PASS" starttime="20230729 15:54:47.171" endtime="20230729 15:54:47.215"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230729 15:54:47.215" endtime="20230729 15:54:47.287"/>
</kw>
<status status="PASS" starttime="20230729 15:54:46.747" endtime="20230729 15:54:47.288"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:54:47.294" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:54:47.290" endtime="20230729 15:54:47.295"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:47.296" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:54:47.296" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:54:47.295" endtime="20230729 15:54:47.296"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230729 15:54:47.297" endtime="20230729 15:54:47.298"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:47.297" endtime="20230729 15:54:47.298"/>
</branch>
<status status="PASS" starttime="20230729 15:54:47.296" endtime="20230729 15:54:47.298"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230729 15:54:49.461" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230729 15:54:47.303" endtime="20230729 15:54:49.461"/>
</kw>
<status status="PASS" starttime="20230729 15:54:47.299" endtime="20230729 15:54:49.461"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:49.461" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230729 15:54:49.461" endtime="20230729 15:54:49.461"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:54:50.261" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230729 15:54:50.261" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230729 15:54:50.262" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230729 15:54:49.467" endtime="20230729 15:54:50.265"/>
</kw>
<status status="FAIL" starttime="20230729 15:54:49.464" endtime="20230729 15:54:50.266"/>
</kw>
<msg timestamp="20230729 15:54:50.266" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230729 15:54:49.463" endtime="20230729 15:54:50.266"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:54:50.268" endtime="20230729 15:54:50.268"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:50.267" endtime="20230729 15:54:50.268"/>
</branch>
<status status="PASS" starttime="20230729 15:54:50.267" endtime="20230729 15:54:50.269"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:54:52.330" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230729 15:54:50.272" endtime="20230729 15:54:52.331"/>
</kw>
<status status="PASS" starttime="20230729 15:54:50.269" endtime="20230729 15:54:52.331"/>
</kw>
<status status="PASS" starttime="20230729 15:54:47.288" endtime="20230729 15:54:52.332"/>
</kw>
<status status="PASS" starttime="20230729 15:54:44.876" endtime="20230729 15:54:52.332"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:54:52.333" endtime="20230729 15:54:52.421"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:52.424" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:54:52.422" endtime="20230729 15:54:52.425"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:54:52.436" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:54:52.426" endtime="20230729 15:54:52.436"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:54:52.437" endtime="20230729 15:54:52.438"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:52.437" endtime="20230729 15:54:52.438"/>
</branch>
<status status="PASS" starttime="20230729 15:54:52.437" endtime="20230729 15:54:52.438"/>
</if>
<status status="PASS" starttime="20230729 15:54:52.421" endtime="20230729 15:54:52.438"/>
</kw>
<status status="PASS" starttime="20230729 15:54:52.333" endtime="20230729 15:54:52.439"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:52.442" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:54:52.442" endtime="20230729 15:54:52.442"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:54:52.456" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:54:52.443" endtime="20230729 15:54:52.457"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:54:52.458" endtime="20230729 15:54:52.459"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:52.458" endtime="20230729 15:54:52.459"/>
</branch>
<status status="PASS" starttime="20230729 15:54:52.457" endtime="20230729 15:54:52.459"/>
</if>
<status status="PASS" starttime="20230729 15:54:52.442" endtime="20230729 15:54:52.460"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:54:52.460" endtime="20230729 15:54:52.661"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:52.665" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:54:52.662" endtime="20230729 15:54:52.665"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:54:52.685" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230729 15:54:52.666" endtime="20230729 15:54:52.685"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:54:53.337" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230729 15:54:52.691" endtime="20230729 15:54:53.338"/>
</kw>
<status status="PASS" starttime="20230729 15:54:52.687" endtime="20230729 15:54:53.338"/>
</kw>
<status status="PASS" starttime="20230729 15:54:52.686" endtime="20230729 15:54:53.340"/>
</branch>
<status status="PASS" starttime="20230729 15:54:52.686" endtime="20230729 15:54:53.340"/>
</if>
<status status="PASS" starttime="20230729 15:54:52.661" endtime="20230729 15:54:53.340"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:53.343" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:54:53.342" endtime="20230729 15:54:53.343"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:54:53.362" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230729 15:54:53.345" endtime="20230729 15:54:53.363"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:54:55.719" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230729 15:54:53.367" endtime="20230729 15:54:55.719"/>
</kw>
<status status="PASS" starttime="20230729 15:54:53.364" endtime="20230729 15:54:55.719"/>
</kw>
<status status="PASS" starttime="20230729 15:54:53.364" endtime="20230729 15:54:55.720"/>
</branch>
<status status="PASS" starttime="20230729 15:54:53.363" endtime="20230729 15:54:55.720"/>
</if>
<status status="PASS" starttime="20230729 15:54:53.341" endtime="20230729 15:54:55.720"/>
</kw>
<status status="PASS" starttime="20230729 15:54:52.440" endtime="20230729 15:54:55.721"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230729 15:54:55.737" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230729 15:54:55.737" level="INFO">${elements} = ['element=e5b6875d-ff1f-4b33-b911-cde59944f003', 'element=d8177c28-4068-4b7d-b9eb-79669613c3fa', 'element=9213cd2e-9b26-4bda-a2d8-3fa46ed36063', 'element=872e0f74-b984-4213-ae04-54dfc53df1a2', 'elemen...</msg>
<status status="PASS" starttime="20230729 15:54:55.721" endtime="20230729 15:54:55.737"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elements}[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:54:55.738" endtime="20230729 15:54:55.908"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230729 15:54:57.910" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230729 15:54:55.909" endtime="20230729 15:54:57.910"/>
</kw>
<status status="PASS" starttime="20230729 15:54:44.876" endtime="20230729 15:54:57.910"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:57.915" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:54:57.914" endtime="20230729 15:54:57.915"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:57.916" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:54:57.915" endtime="20230729 15:54:57.916"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:54:57.917" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:54:57.916" endtime="20230729 15:54:57.917"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:57.918" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:54:57.918" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:54:57.917" endtime="20230729 15:54:57.918"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:54:57.919" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230729 15:54:57.919" endtime="20230729 15:54:57.919"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:57.920" level="INFO">Length is 1</msg>
<msg timestamp="20230729 15:54:57.920" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230729 15:54:57.920" endtime="20230729 15:54:57.920"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.921" endtime="20230729 15:54:57.921"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.921" endtime="20230729 15:54:57.922"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:57.920" endtime="20230729 15:54:57.922"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.922" endtime="20230729 15:54:57.922"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.923" endtime="20230729 15:54:57.923"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.923" endtime="20230729 15:54:57.924"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:57.922" endtime="20230729 15:54:57.924"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.925" endtime="20230729 15:54:57.925"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.925" endtime="20230729 15:54:57.926"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:57.924" endtime="20230729 15:54:57.926"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.927" endtime="20230729 15:54:57.927"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.928" endtime="20230729 15:54:57.928"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:57.926" endtime="20230729 15:54:57.928"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.929" endtime="20230729 15:54:57.930"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.930" endtime="20230729 15:54:57.931"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:57.928" endtime="20230729 15:54:57.931"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.932" endtime="20230729 15:54:57.932"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.932" endtime="20230729 15:54:57.932"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:57.931" endtime="20230729 15:54:57.933"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.934" endtime="20230729 15:54:57.934"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.935" endtime="20230729 15:54:57.935"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:57.933" endtime="20230729 15:54:57.935"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.937" endtime="20230729 15:54:57.937"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:57.935" endtime="20230729 15:54:57.938"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:54:57.940" endtime="20230729 15:54:57.940"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:57.938" endtime="20230729 15:54:57.941"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.942" endtime="20230729 15:54:57.943"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.943" endtime="20230729 15:54:57.945"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:57.942" endtime="20230729 15:54:57.945"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.946" endtime="20230729 15:54:57.947"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:57.945" endtime="20230729 15:54:57.947"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.948" endtime="20230729 15:54:57.948"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:57.947" endtime="20230729 15:54:57.948"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:54:57.949" endtime="20230729 15:54:57.949"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:57.949" endtime="20230729 15:54:57.950"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230729 15:54:57.951" level="INFO">${new_text} = Aliquam non consequuntur ex vel nobis sed.</msg>
<status status="PASS" starttime="20230729 15:54:57.951" endtime="20230729 15:54:57.951"/>
</kw>
<status status="PASS" starttime="20230729 15:54:57.950" endtime="20230729 15:54:57.951"/>
</branch>
<status status="PASS" starttime="20230729 15:54:57.920" endtime="20230729 15:54:57.952"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:57.952" level="INFO">Length is 8</msg>
<msg timestamp="20230729 15:54:57.952" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230729 15:54:57.952" endtime="20230729 15:54:57.952"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:54:57.954" level="INFO">${text} = Aliquam non consequuntur ex vel nobis sed.</msg>
<status status="PASS" starttime="20230729 15:54:57.953" endtime="20230729 15:54:57.954"/>
</kw>
<status status="PASS" starttime="20230729 15:54:57.953" endtime="20230729 15:54:57.954"/>
</branch>
<status status="PASS" starttime="20230729 15:54:57.953" endtime="20230729 15:54:57.954"/>
</if>
<msg timestamp="20230729 15:54:57.955" level="INFO">${text} = Aliquam non consequuntur ex vel nobis sed.</msg>
<status status="PASS" starttime="20230729 15:54:57.913" endtime="20230729 15:54:57.955"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:54:57.958" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:54:57.955" endtime="20230729 15:54:57.958"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:54:57.958" endtime="20230729 15:54:58.010"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:54:58.012" level="INFO">Fills the text 'Aliquam non consequuntur ex vel nobis sed.' in the given field.</msg>
<status status="PASS" starttime="20230729 15:54:58.011" endtime="20230729 15:54:58.050"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:58.051" level="INFO">Length is 42</msg>
<msg timestamp="20230729 15:54:58.051" level="INFO">${cnt} = 42</msg>
<status status="PASS" starttime="20230729 15:54:58.051" endtime="20230729 15:54:58.051"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:54:58.054" level="INFO">${STATE["Mã"]} = Aliquam non consequuntur ex vel nobis sed.</msg>
<status status="PASS" starttime="20230729 15:54:58.053" endtime="20230729 15:54:58.054"/>
</kw>
<status status="PASS" starttime="20230729 15:54:58.053" endtime="20230729 15:54:58.055"/>
</branch>
<status status="PASS" starttime="20230729 15:54:58.053" endtime="20230729 15:54:58.055"/>
</if>
<status status="PASS" starttime="20230729 15:54:57.912" endtime="20230729 15:54:58.056"/>
</kw>
<kw name="And Click &quot;Lưu và tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:54:58.057" endtime="20230729 15:54:58.257"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:54:58.259" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230729 15:54:58.258" endtime="20230729 15:54:58.259"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:54:58.278" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:54:58.260" endtime="20230729 15:54:58.278"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:54:58.280" endtime="20230729 15:54:58.281"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230729 15:54:58.281" endtime="20230729 15:54:58.281"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:58.279" endtime="20230729 15:54:58.282"/>
</branch>
<status status="PASS" starttime="20230729 15:54:58.279" endtime="20230729 15:54:58.282"/>
</if>
<status status="PASS" starttime="20230729 15:54:58.257" endtime="20230729 15:54:58.282"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230729 15:54:58.283" endtime="20230729 15:54:58.323"/>
</kw>
<status status="PASS" starttime="20230729 15:54:58.056" endtime="20230729 15:54:58.323"/>
</kw>
<kw name="Then User look message &quot;Internal server error&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:54:58.328" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:54:58.326" endtime="20230729 15:54:58.328"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:54:58.329" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:54:58.329" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:54:58.328" endtime="20230729 15:54:58.329"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230729 15:54:58.330" endtime="20230729 15:54:58.330"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:54:58.329" endtime="20230729 15:54:58.330"/>
</branch>
<status status="PASS" starttime="20230729 15:54:58.329" endtime="20230729 15:54:58.331"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230729 15:55:00.336" level="INFO">Text: 'Internal server error'</msg>
<status status="PASS" starttime="20230729 15:54:58.335" endtime="20230729 15:55:00.336"/>
</kw>
<status status="PASS" starttime="20230729 15:54:58.331" endtime="20230729 15:55:00.336"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:00.338" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230729 15:55:00.337" endtime="20230729 15:55:00.338"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:55:00.796" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-4.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-4.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230729 15:55:00.796" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230729 15:55:00.797" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230729 15:55:00.345" endtime="20230729 15:55:00.802"/>
</kw>
<status status="FAIL" starttime="20230729 15:55:00.340" endtime="20230729 15:55:00.803"/>
</kw>
<msg timestamp="20230729 15:55:00.804" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230729 15:55:00.338" endtime="20230729 15:55:00.804"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:55:00.806" endtime="20230729 15:55:00.806"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:00.804" endtime="20230729 15:55:00.806"/>
</branch>
<status status="PASS" starttime="20230729 15:55:00.804" endtime="20230729 15:55:00.807"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:55:06.347" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230729 15:55:00.809" endtime="20230729 15:55:06.348"/>
</kw>
<status status="PASS" starttime="20230729 15:55:00.807" endtime="20230729 15:55:06.348"/>
</kw>
<status status="PASS" starttime="20230729 15:54:58.325" endtime="20230729 15:55:06.348"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230729 15:55:07.286" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230729 15:55:06.350" endtime="20230729 15:55:07.286"/>
</kw>
<status status="PASS" starttime="20230729 15:55:06.349" endtime="20230729 15:55:07.287"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230729 15:54:41.402" endtime="20230729 15:55:07.288"/>
</test>
<test id="s1-t3" name="EDC-07 Verify that the code can be successfully edited when changing the &quot;Tên mã&quot; field &amp; &quot;Lưu lại&quot; button" line="219">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230729 15:55:07.308" endtime="20230729 15:55:07.309"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230729 15:55:07.312" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\09b662e1-a01b-46d9-92d4-a6309f9ba94b"}</msg>
<msg timestamp="20230729 15:55:08.595" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\09b662e1-a01b-46d9-92d4-a6309f9ba94b"}</msg>
<status status="PASS" starttime="20230729 15:55:07.310" endtime="20230729 15:55:08.595"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230729 15:55:10.291" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230729 15:55:10.291" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230729 15:55:08.596" endtime="20230729 15:55:10.292"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230729 15:55:10.294" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230729 15:55:10.292" endtime="20230729 15:55:10.294"/>
</kw>
<status status="PASS" starttime="20230729 15:55:07.307" endtime="20230729 15:55:10.295"/>
</kw>
<kw name="When Go to edit code page" library="common">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:10.304" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:55:10.304" endtime="20230729 15:55:10.305"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:10.306" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:55:10.305" endtime="20230729 15:55:10.306"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:10.308" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:55:10.307" endtime="20230729 15:55:10.308"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:10.310" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:55:10.310" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:55:10.309" endtime="20230729 15:55:10.310"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:10.313" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:55:10.311" endtime="20230729 15:55:10.313"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:10.315" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:55:10.315" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:55:10.314" endtime="20230729 15:55:10.315"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.317" endtime="20230729 15:55:10.317"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.318" endtime="20230729 15:55:10.318"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:10.316" endtime="20230729 15:55:10.319"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.320" endtime="20230729 15:55:10.320"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.321" endtime="20230729 15:55:10.322"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.322" endtime="20230729 15:55:10.322"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:10.319" endtime="20230729 15:55:10.323"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.325" endtime="20230729 15:55:10.326"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.327" endtime="20230729 15:55:10.327"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:10.323" endtime="20230729 15:55:10.329"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.331" endtime="20230729 15:55:10.332"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.333" endtime="20230729 15:55:10.334"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:10.329" endtime="20230729 15:55:10.334"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.335" endtime="20230729 15:55:10.335"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.335" endtime="20230729 15:55:10.336"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:10.334" endtime="20230729 15:55:10.336"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.337" endtime="20230729 15:55:10.341"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.342" endtime="20230729 15:55:10.342"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:10.336" endtime="20230729 15:55:10.343"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.344" endtime="20230729 15:55:10.344"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.345" endtime="20230729 15:55:10.345"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:10.343" endtime="20230729 15:55:10.345"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.346" endtime="20230729 15:55:10.347"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:10.346" endtime="20230729 15:55:10.347"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:55:10.348" endtime="20230729 15:55:10.348"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:10.347" endtime="20230729 15:55:10.348"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.349" endtime="20230729 15:55:10.350"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.350" endtime="20230729 15:55:10.350"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:10.349" endtime="20230729 15:55:10.351"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.351" endtime="20230729 15:55:10.352"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:10.351" endtime="20230729 15:55:10.352"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.353" endtime="20230729 15:55:10.353"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:10.352" endtime="20230729 15:55:10.356"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.358" endtime="20230729 15:55:10.358"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:10.357" endtime="20230729 15:55:10.358"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:10.359" endtime="20230729 15:55:10.359"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:10.358" endtime="20230729 15:55:10.360"/>
</branch>
<status status="PASS" starttime="20230729 15:55:10.316" endtime="20230729 15:55:10.360"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:10.361" level="INFO">Length is 19</msg>
<msg timestamp="20230729 15:55:10.361" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230729 15:55:10.361" endtime="20230729 15:55:10.361"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:55:10.362" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:55:10.362" endtime="20230729 15:55:10.363"/>
</kw>
<status status="PASS" starttime="20230729 15:55:10.362" endtime="20230729 15:55:10.363"/>
</branch>
<status status="PASS" starttime="20230729 15:55:10.362" endtime="20230729 15:55:10.363"/>
</if>
<msg timestamp="20230729 15:55:10.363" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:55:10.302" endtime="20230729 15:55:10.363"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:55:10.365" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:55:10.363" endtime="20230729 15:55:10.365"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:55:10.365" endtime="20230729 15:55:11.756"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:55:11.758" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230729 15:55:11.757" endtime="20230729 15:55:11.830"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:11.831" level="INFO">Length is 19</msg>
<msg timestamp="20230729 15:55:11.831" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230729 15:55:11.830" endtime="20230729 15:55:11.831"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:55:11.834" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:55:11.832" endtime="20230729 15:55:11.834"/>
</kw>
<status status="PASS" starttime="20230729 15:55:11.832" endtime="20230729 15:55:11.834"/>
</branch>
<status status="PASS" starttime="20230729 15:55:11.831" endtime="20230729 15:55:11.835"/>
</if>
<status status="PASS" starttime="20230729 15:55:10.301" endtime="20230729 15:55:11.835"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:11.839" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:55:11.838" endtime="20230729 15:55:11.839"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:11.840" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:55:11.839" endtime="20230729 15:55:11.840"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:11.841" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:55:11.840" endtime="20230729 15:55:11.841"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:11.842" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:55:11.842" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:55:11.841" endtime="20230729 15:55:11.842"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:11.843" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:55:11.843" endtime="20230729 15:55:11.843"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:11.845" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:55:11.845" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:55:11.843" endtime="20230729 15:55:11.845"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.846" endtime="20230729 15:55:11.846"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.847" endtime="20230729 15:55:11.847"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:11.845" endtime="20230729 15:55:11.848"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.849" endtime="20230729 15:55:11.849"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.849" endtime="20230729 15:55:11.850"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.850" endtime="20230729 15:55:11.850"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:11.848" endtime="20230729 15:55:11.851"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.852" endtime="20230729 15:55:11.852"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.852" endtime="20230729 15:55:11.853"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:11.851" endtime="20230729 15:55:11.853"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.854" endtime="20230729 15:55:11.855"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.855" endtime="20230729 15:55:11.855"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:11.853" endtime="20230729 15:55:11.855"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.856" endtime="20230729 15:55:11.857"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.857" endtime="20230729 15:55:11.857"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:11.856" endtime="20230729 15:55:11.857"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.858" endtime="20230729 15:55:11.859"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.859" endtime="20230729 15:55:11.859"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:11.858" endtime="20230729 15:55:11.859"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.860" endtime="20230729 15:55:11.860"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.861" endtime="20230729 15:55:11.861"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:11.860" endtime="20230729 15:55:11.861"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.862" endtime="20230729 15:55:11.862"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:11.862" endtime="20230729 15:55:11.863"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:55:11.865" endtime="20230729 15:55:11.865"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:11.863" endtime="20230729 15:55:11.865"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.866" endtime="20230729 15:55:11.866"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.867" endtime="20230729 15:55:11.867"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:11.865" endtime="20230729 15:55:11.867"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.868" endtime="20230729 15:55:11.869"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:11.868" endtime="20230729 15:55:11.869"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.870" endtime="20230729 15:55:11.870"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:11.869" endtime="20230729 15:55:11.871"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.872" endtime="20230729 15:55:11.872"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:11.871" endtime="20230729 15:55:11.872"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:11.873" endtime="20230729 15:55:11.873"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:11.872" endtime="20230729 15:55:11.873"/>
</branch>
<status status="PASS" starttime="20230729 15:55:11.845" endtime="20230729 15:55:11.873"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:11.875" level="INFO">Length is 13</msg>
<msg timestamp="20230729 15:55:11.875" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230729 15:55:11.874" endtime="20230729 15:55:11.875"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:55:11.877" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:55:11.877" endtime="20230729 15:55:11.878"/>
</kw>
<status status="PASS" starttime="20230729 15:55:11.876" endtime="20230729 15:55:11.878"/>
</branch>
<status status="PASS" starttime="20230729 15:55:11.876" endtime="20230729 15:55:11.878"/>
</if>
<msg timestamp="20230729 15:55:11.879" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:55:11.837" endtime="20230729 15:55:11.879"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:55:11.880" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:55:11.879" endtime="20230729 15:55:11.880"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:55:11.880" endtime="20230729 15:55:11.992"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:55:11.996" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230729 15:55:11.995" endtime="20230729 15:55:12.077"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:12.079" level="INFO">Length is 13</msg>
<msg timestamp="20230729 15:55:12.079" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230729 15:55:12.078" endtime="20230729 15:55:12.080"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:55:12.083" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:55:12.082" endtime="20230729 15:55:12.083"/>
</kw>
<status status="PASS" starttime="20230729 15:55:12.081" endtime="20230729 15:55:12.084"/>
</branch>
<status status="PASS" starttime="20230729 15:55:12.080" endtime="20230729 15:55:12.084"/>
</if>
<status status="PASS" starttime="20230729 15:55:11.836" endtime="20230729 15:55:12.084"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:55:12.086" endtime="20230729 15:55:12.310"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:12.311" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230729 15:55:12.311" endtime="20230729 15:55:12.311"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:55:12.345" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:55:12.312" endtime="20230729 15:55:12.345"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:55:12.346" endtime="20230729 15:55:12.347"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230729 15:55:12.347" endtime="20230729 15:55:12.348"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:12.346" endtime="20230729 15:55:12.349"/>
</branch>
<status status="PASS" starttime="20230729 15:55:12.345" endtime="20230729 15:55:12.349"/>
</if>
<status status="PASS" starttime="20230729 15:55:12.310" endtime="20230729 15:55:12.349"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230729 15:55:12.349" endtime="20230729 15:55:12.401"/>
</kw>
<status status="PASS" starttime="20230729 15:55:12.085" endtime="20230729 15:55:12.401"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:12.403" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:55:12.402" endtime="20230729 15:55:12.403"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:12.404" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:55:12.404" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:55:12.403" endtime="20230729 15:55:12.404"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230729 15:55:12.410" endtime="20230729 15:55:12.411"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:12.408" endtime="20230729 15:55:12.411"/>
</branch>
<status status="PASS" starttime="20230729 15:55:12.406" endtime="20230729 15:55:12.412"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230729 15:55:15.146" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230729 15:55:12.415" endtime="20230729 15:55:15.147"/>
</kw>
<status status="PASS" starttime="20230729 15:55:12.412" endtime="20230729 15:55:15.147"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:15.148" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230729 15:55:15.148" endtime="20230729 15:55:15.148"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:55:15.932" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-5.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-5.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230729 15:55:15.933" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230729 15:55:15.933" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230729 15:55:15.153" endtime="20230729 15:55:15.939"/>
</kw>
<status status="FAIL" starttime="20230729 15:55:15.150" endtime="20230729 15:55:15.939"/>
</kw>
<msg timestamp="20230729 15:55:15.940" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230729 15:55:15.149" endtime="20230729 15:55:15.940"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:55:15.941" endtime="20230729 15:55:15.941"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:15.940" endtime="20230729 15:55:15.942"/>
</branch>
<status status="PASS" starttime="20230729 15:55:15.940" endtime="20230729 15:55:15.942"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:55:17.588" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230729 15:55:15.943" endtime="20230729 15:55:17.589"/>
</kw>
<status status="PASS" starttime="20230729 15:55:15.942" endtime="20230729 15:55:17.589"/>
</kw>
<status status="PASS" starttime="20230729 15:55:12.401" endtime="20230729 15:55:17.589"/>
</kw>
<status status="PASS" starttime="20230729 15:55:10.300" endtime="20230729 15:55:17.589"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:55:17.590" endtime="20230729 15:55:17.669"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:17.671" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:55:17.670" endtime="20230729 15:55:17.671"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:55:17.682" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:55:17.672" endtime="20230729 15:55:17.682"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:55:17.683" endtime="20230729 15:55:17.683"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:17.683" endtime="20230729 15:55:17.684"/>
</branch>
<status status="PASS" starttime="20230729 15:55:17.682" endtime="20230729 15:55:17.684"/>
</if>
<status status="PASS" starttime="20230729 15:55:17.669" endtime="20230729 15:55:17.684"/>
</kw>
<status status="PASS" starttime="20230729 15:55:17.590" endtime="20230729 15:55:17.684"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:17.686" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:55:17.686" endtime="20230729 15:55:17.686"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:55:17.698" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:55:17.687" endtime="20230729 15:55:17.698"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:55:17.699" endtime="20230729 15:55:17.699"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:17.698" endtime="20230729 15:55:17.699"/>
</branch>
<status status="PASS" starttime="20230729 15:55:17.698" endtime="20230729 15:55:17.699"/>
</if>
<status status="PASS" starttime="20230729 15:55:17.685" endtime="20230729 15:55:17.699"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:55:17.700" endtime="20230729 15:55:17.870"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:17.876" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:55:17.873" endtime="20230729 15:55:17.877"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:55:17.902" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230729 15:55:17.877" endtime="20230729 15:55:17.902"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:55:18.311" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230729 15:55:17.907" endtime="20230729 15:55:18.311"/>
</kw>
<status status="PASS" starttime="20230729 15:55:17.902" endtime="20230729 15:55:18.312"/>
</kw>
<status status="PASS" starttime="20230729 15:55:17.902" endtime="20230729 15:55:18.312"/>
</branch>
<status status="PASS" starttime="20230729 15:55:17.902" endtime="20230729 15:55:18.312"/>
</if>
<status status="PASS" starttime="20230729 15:55:17.871" endtime="20230729 15:55:18.313"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:18.316" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:55:18.315" endtime="20230729 15:55:18.316"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:55:18.336" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230729 15:55:18.316" endtime="20230729 15:55:18.336"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:55:20.551" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230729 15:55:18.340" endtime="20230729 15:55:20.551"/>
</kw>
<status status="PASS" starttime="20230729 15:55:18.337" endtime="20230729 15:55:20.551"/>
</kw>
<status status="PASS" starttime="20230729 15:55:18.336" endtime="20230729 15:55:20.552"/>
</branch>
<status status="PASS" starttime="20230729 15:55:18.336" endtime="20230729 15:55:20.552"/>
</if>
<status status="PASS" starttime="20230729 15:55:18.314" endtime="20230729 15:55:20.552"/>
</kw>
<status status="PASS" starttime="20230729 15:55:17.685" endtime="20230729 15:55:20.553"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230729 15:55:20.573" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230729 15:55:20.575" level="INFO">${elements} = ['element=b790deee-4bf7-43dd-b52d-6994b64032f3', 'element=057dcf43-d295-4bc5-8801-1b5cd37f5098', 'element=708ce8b7-85b8-4427-a3ae-840f22a92d58', 'element=90ae4f32-0241-4e26-bcef-72f14a1f4a04', 'elemen...</msg>
<status status="PASS" starttime="20230729 15:55:20.555" endtime="20230729 15:55:20.575"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elements}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:55:20.576" endtime="20230729 15:55:20.746"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230729 15:55:22.748" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230729 15:55:20.747" endtime="20230729 15:55:22.748"/>
</kw>
<status status="PASS" starttime="20230729 15:55:10.299" endtime="20230729 15:55:22.749"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Tên mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:22.750" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:55:22.750" endtime="20230729 15:55:22.750"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:22.751" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:55:22.750" endtime="20230729 15:55:22.751"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:22.751" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:55:22.751" endtime="20230729 15:55:22.751"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:22.752" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:55:22.752" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:55:22.752" endtime="20230729 15:55:22.752"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:22.755" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230729 15:55:22.753" endtime="20230729 15:55:22.755"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:22.755" level="INFO">Length is 1</msg>
<msg timestamp="20230729 15:55:22.755" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230729 15:55:22.755" endtime="20230729 15:55:22.755"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.756" endtime="20230729 15:55:22.756"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.757" endtime="20230729 15:55:22.757"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:22.756" endtime="20230729 15:55:22.757"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.757" endtime="20230729 15:55:22.758"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.758" endtime="20230729 15:55:22.758"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.758" endtime="20230729 15:55:22.758"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:22.757" endtime="20230729 15:55:22.758"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.759" endtime="20230729 15:55:22.759"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.759" endtime="20230729 15:55:22.759"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:22.758" endtime="20230729 15:55:22.759"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.760" endtime="20230729 15:55:22.760"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.760" endtime="20230729 15:55:22.760"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:22.760" endtime="20230729 15:55:22.761"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.761" endtime="20230729 15:55:22.761"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.761" endtime="20230729 15:55:22.761"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:22.761" endtime="20230729 15:55:22.762"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.762" endtime="20230729 15:55:22.762"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.762" endtime="20230729 15:55:22.762"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:22.762" endtime="20230729 15:55:22.762"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.763" endtime="20230729 15:55:22.763"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.763" endtime="20230729 15:55:22.763"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:22.762" endtime="20230729 15:55:22.763"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.764" endtime="20230729 15:55:22.764"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:22.763" endtime="20230729 15:55:22.764"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:55:22.765" endtime="20230729 15:55:22.765"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:22.764" endtime="20230729 15:55:22.765"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.766" endtime="20230729 15:55:22.766"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.767" endtime="20230729 15:55:22.767"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:22.766" endtime="20230729 15:55:22.767"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.769" endtime="20230729 15:55:22.769"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:22.768" endtime="20230729 15:55:22.769"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.770" endtime="20230729 15:55:22.771"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:22.770" endtime="20230729 15:55:22.771"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:22.772" endtime="20230729 15:55:22.772"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:22.771" endtime="20230729 15:55:22.772"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230729 15:55:22.774" level="INFO">${new_text} = Voluptatibus voluptas eveniet quo.</msg>
<status status="PASS" starttime="20230729 15:55:22.773" endtime="20230729 15:55:22.774"/>
</kw>
<status status="PASS" starttime="20230729 15:55:22.772" endtime="20230729 15:55:22.774"/>
</branch>
<status status="PASS" starttime="20230729 15:55:22.756" endtime="20230729 15:55:22.774"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:22.775" level="INFO">Length is 8</msg>
<msg timestamp="20230729 15:55:22.775" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230729 15:55:22.775" endtime="20230729 15:55:22.775"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:55:22.778" level="INFO">${text} = Voluptatibus voluptas eveniet quo.</msg>
<status status="PASS" starttime="20230729 15:55:22.777" endtime="20230729 15:55:22.778"/>
</kw>
<status status="PASS" starttime="20230729 15:55:22.776" endtime="20230729 15:55:22.778"/>
</branch>
<status status="PASS" starttime="20230729 15:55:22.776" endtime="20230729 15:55:22.779"/>
</if>
<msg timestamp="20230729 15:55:22.781" level="INFO">${text} = Voluptatibus voluptas eveniet quo.</msg>
<status status="PASS" starttime="20230729 15:55:22.750" endtime="20230729 15:55:22.781"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:55:22.782" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:55:22.781" endtime="20230729 15:55:22.782"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:55:22.783" endtime="20230729 15:55:22.834"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:55:22.835" level="INFO">Fills the text 'Voluptatibus voluptas eveniet quo.' in the given field.</msg>
<status status="PASS" starttime="20230729 15:55:22.835" endtime="20230729 15:55:22.868"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:22.870" level="INFO">Length is 34</msg>
<msg timestamp="20230729 15:55:22.870" level="INFO">${cnt} = 34</msg>
<status status="PASS" starttime="20230729 15:55:22.869" endtime="20230729 15:55:22.870"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:55:22.875" level="INFO">${STATE["Tên mã"]} = Voluptatibus voluptas eveniet quo.</msg>
<status status="PASS" starttime="20230729 15:55:22.871" endtime="20230729 15:55:22.875"/>
</kw>
<status status="PASS" starttime="20230729 15:55:22.871" endtime="20230729 15:55:22.876"/>
</branch>
<status status="PASS" starttime="20230729 15:55:22.870" endtime="20230729 15:55:22.876"/>
</if>
<status status="PASS" starttime="20230729 15:55:22.749" endtime="20230729 15:55:22.876"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:55:22.878" endtime="20230729 15:55:23.051"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:23.052" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230729 15:55:23.052" endtime="20230729 15:55:23.052"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:55:23.076" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:55:23.053" endtime="20230729 15:55:23.076"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:55:23.079" endtime="20230729 15:55:23.079"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230729 15:55:23.080" endtime="20230729 15:55:23.080"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:23.077" endtime="20230729 15:55:23.080"/>
</branch>
<status status="PASS" starttime="20230729 15:55:23.077" endtime="20230729 15:55:23.081"/>
</if>
<status status="PASS" starttime="20230729 15:55:23.052" endtime="20230729 15:55:23.081"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230729 15:55:23.081" endtime="20230729 15:55:23.123"/>
</kw>
<status status="PASS" starttime="20230729 15:55:22.877" endtime="20230729 15:55:23.123"/>
</kw>
<kw name="Then User look message &quot;Cập nhật thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:23.128" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:55:23.127" endtime="20230729 15:55:23.128"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:23.129" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:55:23.130" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:55:23.129" endtime="20230729 15:55:23.130"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230729 15:55:23.131" endtime="20230729 15:55:23.131"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:23.130" endtime="20230729 15:55:23.131"/>
</branch>
<status status="PASS" starttime="20230729 15:55:23.130" endtime="20230729 15:55:23.132"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230729 15:55:25.793" level="INFO">Text: 'Cập nhật thành công'</msg>
<status status="PASS" starttime="20230729 15:55:23.135" endtime="20230729 15:55:25.793"/>
</kw>
<status status="PASS" starttime="20230729 15:55:23.132" endtime="20230729 15:55:25.794"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:25.798" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230729 15:55:25.796" endtime="20230729 15:55:25.799"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:55:26.450" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-6.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-6.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230729 15:55:26.451" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230729 15:55:26.455" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230729 15:55:25.817" endtime="20230729 15:55:26.459"/>
</kw>
<status status="FAIL" starttime="20230729 15:55:25.809" endtime="20230729 15:55:26.460"/>
</kw>
<msg timestamp="20230729 15:55:26.460" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230729 15:55:25.802" endtime="20230729 15:55:26.460"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:55:26.463" endtime="20230729 15:55:26.463"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:26.461" endtime="20230729 15:55:26.463"/>
</branch>
<status status="PASS" starttime="20230729 15:55:26.461" endtime="20230729 15:55:26.464"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:55:28.947" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230729 15:55:26.467" endtime="20230729 15:55:28.947"/>
</kw>
<status status="PASS" starttime="20230729 15:55:26.464" endtime="20230729 15:55:28.947"/>
</kw>
<status status="PASS" starttime="20230729 15:55:23.126" endtime="20230729 15:55:28.947"/>
</kw>
<kw name="And User look title &quot;Danh sách Mã&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:28.950" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:55:28.950" endtime="20230729 15:55:28.950"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:55:28.957" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:55:28.950" endtime="20230729 15:55:28.957"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:55:28.957" endtime="20230729 15:55:28.957"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:28.957" endtime="20230729 15:55:28.958"/>
</branch>
<status status="PASS" starttime="20230729 15:55:28.957" endtime="20230729 15:55:28.958"/>
</if>
<status status="PASS" starttime="20230729 15:55:28.949" endtime="20230729 15:55:28.958"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:28.961" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:55:28.960" endtime="20230729 15:55:28.961"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:55:28.970" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:55:28.961" endtime="20230729 15:55:28.970"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:55:28.971" endtime="20230729 15:55:28.971"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:28.970" endtime="20230729 15:55:28.971"/>
</branch>
<status status="PASS" starttime="20230729 15:55:28.970" endtime="20230729 15:55:28.971"/>
</if>
<status status="PASS" starttime="20230729 15:55:28.959" endtime="20230729 15:55:28.972"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230729 15:55:28.980" level="INFO">Title: 'Danh sách Mã'</msg>
<msg timestamp="20230729 15:55:28.980" level="INFO">${actualTitle} = Danh sách Mã</msg>
<status status="PASS" starttime="20230729 15:55:28.972" endtime="20230729 15:55:28.980"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230729 15:55:28.981" endtime="20230729 15:55:28.981"/>
</kw>
<status status="PASS" starttime="20230729 15:55:28.958" endtime="20230729 15:55:28.981"/>
</kw>
<status status="PASS" starttime="20230729 15:55:28.949" endtime="20230729 15:55:28.982"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230729 15:55:29.923" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230729 15:55:28.982" endtime="20230729 15:55:29.923"/>
</kw>
<status status="PASS" starttime="20230729 15:55:28.982" endtime="20230729 15:55:29.923"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230729 15:55:07.300" endtime="20230729 15:55:29.924"/>
</test>
<test id="s1-t4" name="EDC-08 Verify that the code can be successfully edited when changing the &quot;Tên mã&quot; field &amp; &quot;Lưu và tạo mới&quot; button" line="227">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230729 15:55:29.942" endtime="20230729 15:55:29.943"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230729 15:55:29.946" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\634009af-20f8-4979-87a2-ebe651e989a0"}</msg>
<msg timestamp="20230729 15:55:31.151" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\634009af-20f8-4979-87a2-ebe651e989a0"}</msg>
<status status="PASS" starttime="20230729 15:55:29.944" endtime="20230729 15:55:31.151"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230729 15:55:32.789" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230729 15:55:32.789" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230729 15:55:31.152" endtime="20230729 15:55:32.790"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230729 15:55:32.791" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230729 15:55:32.790" endtime="20230729 15:55:32.791"/>
</kw>
<status status="PASS" starttime="20230729 15:55:29.942" endtime="20230729 15:55:32.791"/>
</kw>
<kw name="When Go to edit code page" library="common">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:32.795" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:55:32.794" endtime="20230729 15:55:32.795"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:32.795" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:55:32.795" endtime="20230729 15:55:32.796"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:32.797" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:55:32.796" endtime="20230729 15:55:32.797"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:32.798" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:55:32.798" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:55:32.797" endtime="20230729 15:55:32.799"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:32.802" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:55:32.801" endtime="20230729 15:55:32.802"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:32.805" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:55:32.805" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:55:32.804" endtime="20230729 15:55:32.805"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.809" endtime="20230729 15:55:32.810"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.810" endtime="20230729 15:55:32.811"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:32.808" endtime="20230729 15:55:32.811"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.812" endtime="20230729 15:55:32.812"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.812" endtime="20230729 15:55:32.813"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.813" endtime="20230729 15:55:32.814"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:32.811" endtime="20230729 15:55:32.814"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.817" endtime="20230729 15:55:32.817"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.817" endtime="20230729 15:55:32.818"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:32.815" endtime="20230729 15:55:32.818"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.821" endtime="20230729 15:55:32.821"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.822" endtime="20230729 15:55:32.822"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:32.819" endtime="20230729 15:55:32.823"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.826" endtime="20230729 15:55:32.827"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.827" endtime="20230729 15:55:32.828"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:32.824" endtime="20230729 15:55:32.828"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.830" endtime="20230729 15:55:32.832"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.833" endtime="20230729 15:55:32.834"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:32.829" endtime="20230729 15:55:32.834"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.835" endtime="20230729 15:55:32.836"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.838" endtime="20230729 15:55:32.838"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:32.834" endtime="20230729 15:55:32.838"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.839" endtime="20230729 15:55:32.840"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:32.839" endtime="20230729 15:55:32.842"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:55:32.843" endtime="20230729 15:55:32.844"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:32.842" endtime="20230729 15:55:32.844"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.845" endtime="20230729 15:55:32.845"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.846" endtime="20230729 15:55:32.846"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:32.844" endtime="20230729 15:55:32.846"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.847" endtime="20230729 15:55:32.848"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:32.847" endtime="20230729 15:55:32.848"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.852" endtime="20230729 15:55:32.852"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:32.851" endtime="20230729 15:55:32.857"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.860" endtime="20230729 15:55:32.861"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:32.858" endtime="20230729 15:55:32.862"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:32.863" endtime="20230729 15:55:32.863"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:32.862" endtime="20230729 15:55:32.864"/>
</branch>
<status status="PASS" starttime="20230729 15:55:32.808" endtime="20230729 15:55:32.864"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:32.866" level="INFO">Length is 19</msg>
<msg timestamp="20230729 15:55:32.866" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230729 15:55:32.865" endtime="20230729 15:55:32.866"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:55:32.869" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:55:32.868" endtime="20230729 15:55:32.870"/>
</kw>
<status status="PASS" starttime="20230729 15:55:32.867" endtime="20230729 15:55:32.876"/>
</branch>
<status status="PASS" starttime="20230729 15:55:32.867" endtime="20230729 15:55:32.876"/>
</if>
<msg timestamp="20230729 15:55:32.876" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:55:32.794" endtime="20230729 15:55:32.876"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:55:32.878" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:55:32.877" endtime="20230729 15:55:32.878"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:55:32.879" endtime="20230729 15:55:34.807"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:55:34.808" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230729 15:55:34.807" endtime="20230729 15:55:34.866"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:34.868" level="INFO">Length is 19</msg>
<msg timestamp="20230729 15:55:34.868" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230729 15:55:34.867" endtime="20230729 15:55:34.868"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:55:34.870" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:55:34.870" endtime="20230729 15:55:34.871"/>
</kw>
<status status="PASS" starttime="20230729 15:55:34.868" endtime="20230729 15:55:34.871"/>
</branch>
<status status="PASS" starttime="20230729 15:55:34.868" endtime="20230729 15:55:34.871"/>
</if>
<status status="PASS" starttime="20230729 15:55:32.793" endtime="20230729 15:55:34.872"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:34.874" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:55:34.873" endtime="20230729 15:55:34.874"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:34.875" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:55:34.875" endtime="20230729 15:55:34.876"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:34.877" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:55:34.876" endtime="20230729 15:55:34.877"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:34.878" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:55:34.878" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:55:34.877" endtime="20230729 15:55:34.878"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:34.879" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:55:34.879" endtime="20230729 15:55:34.879"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:34.880" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:55:34.881" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:55:34.880" endtime="20230729 15:55:34.881"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.882" endtime="20230729 15:55:34.882"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.883" endtime="20230729 15:55:34.883"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:34.881" endtime="20230729 15:55:34.883"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.885" endtime="20230729 15:55:34.885"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.886" endtime="20230729 15:55:34.887"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.887" endtime="20230729 15:55:34.887"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:34.884" endtime="20230729 15:55:34.888"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.889" endtime="20230729 15:55:34.889"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.890" endtime="20230729 15:55:34.890"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:34.888" endtime="20230729 15:55:34.890"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.891" endtime="20230729 15:55:34.892"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.892" endtime="20230729 15:55:34.892"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:34.890" endtime="20230729 15:55:34.892"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.892" endtime="20230729 15:55:34.893"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.893" endtime="20230729 15:55:34.893"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:34.892" endtime="20230729 15:55:34.893"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.894" endtime="20230729 15:55:34.894"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.895" endtime="20230729 15:55:34.895"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:34.893" endtime="20230729 15:55:34.895"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.897" endtime="20230729 15:55:34.897"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.898" endtime="20230729 15:55:34.898"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:34.896" endtime="20230729 15:55:34.898"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.899" endtime="20230729 15:55:34.899"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:34.898" endtime="20230729 15:55:34.899"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:55:34.900" endtime="20230729 15:55:34.900"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:34.899" endtime="20230729 15:55:34.900"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.900" endtime="20230729 15:55:34.900"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.902" endtime="20230729 15:55:34.902"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:34.900" endtime="20230729 15:55:34.903"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.905" endtime="20230729 15:55:34.905"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:34.904" endtime="20230729 15:55:34.905"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.906" endtime="20230729 15:55:34.906"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:34.905" endtime="20230729 15:55:34.907"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.908" endtime="20230729 15:55:34.909"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:34.907" endtime="20230729 15:55:34.909"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:34.911" endtime="20230729 15:55:34.911"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:34.909" endtime="20230729 15:55:34.912"/>
</branch>
<status status="PASS" starttime="20230729 15:55:34.881" endtime="20230729 15:55:34.912"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:34.913" level="INFO">Length is 13</msg>
<msg timestamp="20230729 15:55:34.914" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230729 15:55:34.913" endtime="20230729 15:55:34.914"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:55:34.917" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:55:34.915" endtime="20230729 15:55:34.917"/>
</kw>
<status status="PASS" starttime="20230729 15:55:34.914" endtime="20230729 15:55:34.918"/>
</branch>
<status status="PASS" starttime="20230729 15:55:34.914" endtime="20230729 15:55:34.919"/>
</if>
<msg timestamp="20230729 15:55:34.919" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:55:34.872" endtime="20230729 15:55:34.920"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:55:34.922" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:55:34.920" endtime="20230729 15:55:34.922"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:55:34.924" endtime="20230729 15:55:34.997"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:55:35.006" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230729 15:55:34.998" endtime="20230729 15:55:35.089"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:35.090" level="INFO">Length is 13</msg>
<msg timestamp="20230729 15:55:35.091" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230729 15:55:35.090" endtime="20230729 15:55:35.091"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:55:35.094" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:55:35.093" endtime="20230729 15:55:35.094"/>
</kw>
<status status="PASS" starttime="20230729 15:55:35.092" endtime="20230729 15:55:35.094"/>
</branch>
<status status="PASS" starttime="20230729 15:55:35.092" endtime="20230729 15:55:35.094"/>
</if>
<status status="PASS" starttime="20230729 15:55:34.872" endtime="20230729 15:55:35.094"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:55:35.097" endtime="20230729 15:55:35.293"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:35.294" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230729 15:55:35.294" endtime="20230729 15:55:35.294"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:55:35.304" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:55:35.295" endtime="20230729 15:55:35.304"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:55:35.311" endtime="20230729 15:55:35.311"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230729 15:55:35.312" endtime="20230729 15:55:35.312"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:35.306" endtime="20230729 15:55:35.312"/>
</branch>
<status status="PASS" starttime="20230729 15:55:35.306" endtime="20230729 15:55:35.313"/>
</if>
<status status="PASS" starttime="20230729 15:55:35.293" endtime="20230729 15:55:35.313"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230729 15:55:35.315" endtime="20230729 15:55:35.383"/>
</kw>
<status status="PASS" starttime="20230729 15:55:35.096" endtime="20230729 15:55:35.384"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:35.388" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:55:35.386" endtime="20230729 15:55:35.388"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:35.392" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:55:35.392" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:55:35.391" endtime="20230729 15:55:35.392"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230729 15:55:35.393" endtime="20230729 15:55:35.394"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:35.392" endtime="20230729 15:55:35.394"/>
</branch>
<status status="PASS" starttime="20230729 15:55:35.392" endtime="20230729 15:55:35.394"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230729 15:55:36.557" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230729 15:55:35.397" endtime="20230729 15:55:36.557"/>
</kw>
<status status="PASS" starttime="20230729 15:55:35.394" endtime="20230729 15:55:36.558"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:36.559" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230729 15:55:36.558" endtime="20230729 15:55:36.559"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:55:37.376" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-7.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-7.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230729 15:55:37.376" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230729 15:55:37.377" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230729 15:55:36.563" endtime="20230729 15:55:37.380"/>
</kw>
<status status="FAIL" starttime="20230729 15:55:36.560" endtime="20230729 15:55:37.381"/>
</kw>
<msg timestamp="20230729 15:55:37.381" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230729 15:55:36.559" endtime="20230729 15:55:37.381"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:55:37.383" endtime="20230729 15:55:37.384"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:37.382" endtime="20230729 15:55:37.384"/>
</branch>
<status status="PASS" starttime="20230729 15:55:37.382" endtime="20230729 15:55:37.384"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:55:39.870" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230729 15:55:37.388" endtime="20230729 15:55:39.870"/>
</kw>
<status status="PASS" starttime="20230729 15:55:37.385" endtime="20230729 15:55:39.870"/>
</kw>
<status status="PASS" starttime="20230729 15:55:35.384" endtime="20230729 15:55:39.871"/>
</kw>
<status status="PASS" starttime="20230729 15:55:32.793" endtime="20230729 15:55:39.871"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:55:39.872" endtime="20230729 15:55:39.921"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:39.924" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:55:39.923" endtime="20230729 15:55:39.924"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:55:39.932" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:55:39.925" endtime="20230729 15:55:39.932"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:55:39.932" endtime="20230729 15:55:39.933"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:39.932" endtime="20230729 15:55:39.933"/>
</branch>
<status status="PASS" starttime="20230729 15:55:39.932" endtime="20230729 15:55:39.933"/>
</if>
<status status="PASS" starttime="20230729 15:55:39.923" endtime="20230729 15:55:39.934"/>
</kw>
<status status="PASS" starttime="20230729 15:55:39.871" endtime="20230729 15:55:39.934"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:39.937" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:55:39.936" endtime="20230729 15:55:39.937"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:55:39.947" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:55:39.938" endtime="20230729 15:55:39.947"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:55:39.949" endtime="20230729 15:55:39.949"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:39.948" endtime="20230729 15:55:39.949"/>
</branch>
<status status="PASS" starttime="20230729 15:55:39.948" endtime="20230729 15:55:39.950"/>
</if>
<status status="PASS" starttime="20230729 15:55:39.935" endtime="20230729 15:55:39.950"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:55:39.951" endtime="20230729 15:55:40.160"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:40.162" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:55:40.161" endtime="20230729 15:55:40.162"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:55:40.174" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230729 15:55:40.163" endtime="20230729 15:55:40.174"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:55:42.756" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230729 15:55:40.180" endtime="20230729 15:55:42.756"/>
</kw>
<status status="PASS" starttime="20230729 15:55:40.177" endtime="20230729 15:55:42.757"/>
</kw>
<status status="PASS" starttime="20230729 15:55:40.175" endtime="20230729 15:55:42.757"/>
</branch>
<status status="PASS" starttime="20230729 15:55:40.174" endtime="20230729 15:55:42.758"/>
</if>
<status status="PASS" starttime="20230729 15:55:40.160" endtime="20230729 15:55:42.759"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:42.761" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:55:42.760" endtime="20230729 15:55:42.761"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:55:42.769" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:55:42.761" endtime="20230729 15:55:42.770"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:55:42.772" endtime="20230729 15:55:42.772"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:42.771" endtime="20230729 15:55:42.772"/>
</branch>
<status status="PASS" starttime="20230729 15:55:42.770" endtime="20230729 15:55:42.773"/>
</if>
<status status="PASS" starttime="20230729 15:55:42.760" endtime="20230729 15:55:42.773"/>
</kw>
<status status="PASS" starttime="20230729 15:55:39.934" endtime="20230729 15:55:42.773"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230729 15:55:42.794" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230729 15:55:42.795" level="INFO">${elements} = ['element=ab682778-2603-4edd-8efc-ed44161b507c', 'element=73c356ad-1ced-457d-b172-ff19737bd9a4', 'element=3cb5ab7c-15c6-4883-9f7b-39a0f5dcebd7', 'element=ea4b69ac-8878-4e79-b2df-1591eeaa68af', 'elemen...</msg>
<status status="PASS" starttime="20230729 15:55:42.774" endtime="20230729 15:55:42.795"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elements}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:55:42.796" endtime="20230729 15:55:42.989"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230729 15:55:44.990" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230729 15:55:42.989" endtime="20230729 15:55:44.990"/>
</kw>
<status status="PASS" starttime="20230729 15:55:32.792" endtime="20230729 15:55:44.990"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Tên mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:44.992" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:55:44.991" endtime="20230729 15:55:44.992"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:44.992" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:55:44.992" endtime="20230729 15:55:44.992"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:44.993" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:55:44.993" endtime="20230729 15:55:44.993"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:44.994" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:55:44.994" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:55:44.994" endtime="20230729 15:55:44.994"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:44.995" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230729 15:55:44.994" endtime="20230729 15:55:44.995"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:44.995" level="INFO">Length is 1</msg>
<msg timestamp="20230729 15:55:44.996" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230729 15:55:44.995" endtime="20230729 15:55:44.996"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:44.996" endtime="20230729 15:55:44.996"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:44.997" endtime="20230729 15:55:44.997"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:44.996" endtime="20230729 15:55:44.997"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:44.997" endtime="20230729 15:55:44.997"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:44.998" endtime="20230729 15:55:44.998"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:44.998" endtime="20230729 15:55:44.998"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:44.997" endtime="20230729 15:55:44.998"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:44.999" endtime="20230729 15:55:45.000"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:45.000" endtime="20230729 15:55:45.001"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:44.998" endtime="20230729 15:55:45.001"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:45.002" endtime="20230729 15:55:45.002"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:45.003" endtime="20230729 15:55:45.003"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:45.001" endtime="20230729 15:55:45.003"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:45.004" endtime="20230729 15:55:45.004"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:45.004" endtime="20230729 15:55:45.005"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:45.003" endtime="20230729 15:55:45.005"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:45.006" endtime="20230729 15:55:45.006"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:45.007" endtime="20230729 15:55:45.008"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:45.005" endtime="20230729 15:55:45.008"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:45.009" endtime="20230729 15:55:45.011"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:45.011" endtime="20230729 15:55:45.011"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:45.008" endtime="20230729 15:55:45.013"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:55:45.013" endtime="20230729 15:55:45.014"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:45.013" endtime="20230729 15:55:45.014"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:55:45.015" endtime="20230729 15:55:45.015"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:45.014" endtime="20230729 15:55:45.015"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:45.016" endtime="20230729 15:55:45.017"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:45.017" endtime="20230729 15:55:45.017"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:45.016" endtime="20230729 15:55:45.017"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:55:45.018" endtime="20230729 15:55:45.019"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:45.018" endtime="20230729 15:55:45.019"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:55:45.020" endtime="20230729 15:55:45.021"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:45.019" endtime="20230729 15:55:45.021"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:45.022" endtime="20230729 15:55:45.022"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:45.021" endtime="20230729 15:55:45.022"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230729 15:55:45.023" level="INFO">${new_text} = Omnis repellat magni quisquam quod.</msg>
<status status="PASS" starttime="20230729 15:55:45.022" endtime="20230729 15:55:45.023"/>
</kw>
<status status="PASS" starttime="20230729 15:55:45.022" endtime="20230729 15:55:45.023"/>
</branch>
<status status="PASS" starttime="20230729 15:55:44.996" endtime="20230729 15:55:45.023"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:45.024" level="INFO">Length is 8</msg>
<msg timestamp="20230729 15:55:45.024" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230729 15:55:45.024" endtime="20230729 15:55:45.024"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:55:45.026" level="INFO">${text} = Omnis repellat magni quisquam quod.</msg>
<status status="PASS" starttime="20230729 15:55:45.025" endtime="20230729 15:55:45.026"/>
</kw>
<status status="PASS" starttime="20230729 15:55:45.025" endtime="20230729 15:55:45.026"/>
</branch>
<status status="PASS" starttime="20230729 15:55:45.024" endtime="20230729 15:55:45.026"/>
</if>
<msg timestamp="20230729 15:55:45.026" level="INFO">${text} = Omnis repellat magni quisquam quod.</msg>
<status status="PASS" starttime="20230729 15:55:44.991" endtime="20230729 15:55:45.026"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:55:45.027" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:55:45.027" endtime="20230729 15:55:45.027"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:55:45.028" endtime="20230729 15:55:45.074"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:55:45.075" level="INFO">Fills the text 'Omnis repellat magni quisquam quod.' in the given field.</msg>
<status status="PASS" starttime="20230729 15:55:45.075" endtime="20230729 15:55:45.114"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:45.115" level="INFO">Length is 35</msg>
<msg timestamp="20230729 15:55:45.116" level="INFO">${cnt} = 35</msg>
<status status="PASS" starttime="20230729 15:55:45.115" endtime="20230729 15:55:45.116"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:55:45.118" level="INFO">${STATE["Tên mã"]} = Omnis repellat magni quisquam quod.</msg>
<status status="PASS" starttime="20230729 15:55:45.117" endtime="20230729 15:55:45.118"/>
</kw>
<status status="PASS" starttime="20230729 15:55:45.116" endtime="20230729 15:55:45.119"/>
</branch>
<status status="PASS" starttime="20230729 15:55:45.116" endtime="20230729 15:55:45.119"/>
</if>
<status status="PASS" starttime="20230729 15:55:44.990" endtime="20230729 15:55:45.119"/>
</kw>
<kw name="And Click &quot;Lưu và tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:55:45.120" endtime="20230729 15:55:45.315"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:45.317" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230729 15:55:45.316" endtime="20230729 15:55:45.317"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:55:45.340" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:55:45.318" endtime="20230729 15:55:45.340"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:55:45.342" endtime="20230729 15:55:45.342"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230729 15:55:45.342" endtime="20230729 15:55:45.343"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:45.341" endtime="20230729 15:55:45.343"/>
</branch>
<status status="PASS" starttime="20230729 15:55:45.341" endtime="20230729 15:55:45.343"/>
</if>
<status status="PASS" starttime="20230729 15:55:45.316" endtime="20230729 15:55:45.344"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230729 15:55:45.344" endtime="20230729 15:55:45.380"/>
</kw>
<status status="PASS" starttime="20230729 15:55:45.120" endtime="20230729 15:55:45.380"/>
</kw>
<kw name="Then User look message &quot;Cập nhật thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:45.382" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:55:45.382" endtime="20230729 15:55:45.382"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:45.383" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:55:45.383" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:55:45.383" endtime="20230729 15:55:45.383"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230729 15:55:45.384" endtime="20230729 15:55:45.384"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:45.383" endtime="20230729 15:55:45.384"/>
</branch>
<status status="PASS" starttime="20230729 15:55:45.383" endtime="20230729 15:55:45.385"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230729 15:55:47.628" level="INFO">Text: 'Cập nhật thành công'</msg>
<status status="PASS" starttime="20230729 15:55:45.391" endtime="20230729 15:55:47.628"/>
</kw>
<status status="PASS" starttime="20230729 15:55:45.385" endtime="20230729 15:55:47.629"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:47.630" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230729 15:55:47.630" endtime="20230729 15:55:47.630"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:55:48.151" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-8.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-8.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230729 15:55:48.152" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230729 15:55:48.152" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230729 15:55:47.635" endtime="20230729 15:55:48.156"/>
</kw>
<status status="FAIL" starttime="20230729 15:55:47.631" endtime="20230729 15:55:48.156"/>
</kw>
<msg timestamp="20230729 15:55:48.157" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230729 15:55:47.631" endtime="20230729 15:55:48.157"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:55:48.159" endtime="20230729 15:55:48.159"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:48.158" endtime="20230729 15:55:48.160"/>
</branch>
<status status="PASS" starttime="20230729 15:55:48.158" endtime="20230729 15:55:48.160"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:55:50.655" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230729 15:55:48.162" endtime="20230729 15:55:50.655"/>
</kw>
<status status="PASS" starttime="20230729 15:55:48.160" endtime="20230729 15:55:50.656"/>
</kw>
<status status="PASS" starttime="20230729 15:55:45.382" endtime="20230729 15:55:50.656"/>
</kw>
<kw name="And User look title &quot;Danh sách nghỉ phép&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:50.658" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:55:50.658" endtime="20230729 15:55:50.658"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:55:50.666" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:55:50.659" endtime="20230729 15:55:50.666"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:55:50.668" endtime="20230729 15:55:50.668"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:50.667" endtime="20230729 15:55:50.668"/>
</branch>
<status status="PASS" starttime="20230729 15:55:50.667" endtime="20230729 15:55:50.668"/>
</if>
<status status="PASS" starttime="20230729 15:55:50.657" endtime="20230729 15:55:50.669"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:50.671" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:55:50.670" endtime="20230729 15:55:50.671"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:55:50.677" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:55:50.671" endtime="20230729 15:55:50.677"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:55:50.678" endtime="20230729 15:55:50.678"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:50.677" endtime="20230729 15:55:50.678"/>
</branch>
<status status="PASS" starttime="20230729 15:55:50.677" endtime="20230729 15:55:50.678"/>
</if>
<status status="PASS" starttime="20230729 15:55:50.669" endtime="20230729 15:55:50.678"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230729 15:55:50.685" level="INFO">Title: 'Danh sách nghỉ phép'</msg>
<msg timestamp="20230729 15:55:50.686" level="INFO">${actualTitle} = Danh sách nghỉ phép</msg>
<status status="PASS" starttime="20230729 15:55:50.679" endtime="20230729 15:55:50.686"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230729 15:55:50.686" endtime="20230729 15:55:50.687"/>
</kw>
<status status="PASS" starttime="20230729 15:55:50.669" endtime="20230729 15:55:50.687"/>
</kw>
<status status="PASS" starttime="20230729 15:55:50.657" endtime="20230729 15:55:50.687"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230729 15:55:51.726" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230729 15:55:50.688" endtime="20230729 15:55:51.727"/>
</kw>
<status status="PASS" starttime="20230729 15:55:50.688" endtime="20230729 15:55:51.727"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230729 15:55:29.936" endtime="20230729 15:55:51.728"/>
</test>
<test id="s1-t5" name="EDC-09 Verify that the code can be successfully edited when changing the &quot;Mã&quot; field &amp; &quot;Lưu lại&quot; button" line="235">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230729 15:55:51.746" endtime="20230729 15:55:51.747"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230729 15:55:51.750" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\43eab46f-bb4d-4c9f-9983-1592ae3c05f2"}</msg>
<msg timestamp="20230729 15:55:53.239" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\43eab46f-bb4d-4c9f-9983-1592ae3c05f2"}</msg>
<status status="PASS" starttime="20230729 15:55:51.747" endtime="20230729 15:55:53.240"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230729 15:55:55.064" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230729 15:55:55.064" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230729 15:55:53.241" endtime="20230729 15:55:55.066"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230729 15:55:55.068" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230729 15:55:55.067" endtime="20230729 15:55:55.068"/>
</kw>
<status status="PASS" starttime="20230729 15:55:51.745" endtime="20230729 15:55:55.069"/>
</kw>
<kw name="When Go to edit code page" library="common">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:55.077" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:55:55.077" endtime="20230729 15:55:55.077"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:55.078" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:55:55.077" endtime="20230729 15:55:55.078"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:55.078" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:55:55.078" endtime="20230729 15:55:55.078"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:55.079" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:55:55.079" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:55:55.079" endtime="20230729 15:55:55.079"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:55.081" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:55:55.079" endtime="20230729 15:55:55.082"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:55.083" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:55:55.083" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:55:55.082" endtime="20230729 15:55:55.083"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.087" endtime="20230729 15:55:55.087"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.088" endtime="20230729 15:55:55.088"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:55.085" endtime="20230729 15:55:55.089"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.091" endtime="20230729 15:55:55.092"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.092" endtime="20230729 15:55:55.093"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.094" endtime="20230729 15:55:55.094"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:55.090" endtime="20230729 15:55:55.095"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.096" endtime="20230729 15:55:55.097"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.098" endtime="20230729 15:55:55.099"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:55.095" endtime="20230729 15:55:55.099"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.100" endtime="20230729 15:55:55.102"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.102" endtime="20230729 15:55:55.102"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:55.099" endtime="20230729 15:55:55.103"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.104" endtime="20230729 15:55:55.104"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.105" endtime="20230729 15:55:55.106"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:55.103" endtime="20230729 15:55:55.106"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.110" endtime="20230729 15:55:55.110"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.112" endtime="20230729 15:55:55.114"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:55.107" endtime="20230729 15:55:55.114"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.116" endtime="20230729 15:55:55.117"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.118" endtime="20230729 15:55:55.119"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:55.115" endtime="20230729 15:55:55.120"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.121" endtime="20230729 15:55:55.121"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:55.120" endtime="20230729 15:55:55.122"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:55:55.122" endtime="20230729 15:55:55.122"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:55.122" endtime="20230729 15:55:55.124"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.127" endtime="20230729 15:55:55.128"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.128" endtime="20230729 15:55:55.129"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:55.125" endtime="20230729 15:55:55.129"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.130" endtime="20230729 15:55:55.130"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:55.129" endtime="20230729 15:55:55.130"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.132" endtime="20230729 15:55:55.133"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:55.131" endtime="20230729 15:55:55.133"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.135" endtime="20230729 15:55:55.135"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:55.133" endtime="20230729 15:55:55.136"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:55.137" endtime="20230729 15:55:55.137"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:55.136" endtime="20230729 15:55:55.137"/>
</branch>
<status status="PASS" starttime="20230729 15:55:55.084" endtime="20230729 15:55:55.137"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:55.138" level="INFO">Length is 19</msg>
<msg timestamp="20230729 15:55:55.138" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230729 15:55:55.137" endtime="20230729 15:55:55.138"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:55:55.139" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:55:55.139" endtime="20230729 15:55:55.139"/>
</kw>
<status status="PASS" starttime="20230729 15:55:55.138" endtime="20230729 15:55:55.139"/>
</branch>
<status status="PASS" starttime="20230729 15:55:55.138" endtime="20230729 15:55:55.139"/>
</if>
<msg timestamp="20230729 15:55:55.140" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:55:55.076" endtime="20230729 15:55:55.140"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:55:55.145" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:55:55.142" endtime="20230729 15:55:55.145"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:55:55.145" endtime="20230729 15:55:56.777"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:55:56.779" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230729 15:55:56.778" endtime="20230729 15:55:56.842"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:56.844" level="INFO">Length is 19</msg>
<msg timestamp="20230729 15:55:56.844" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230729 15:55:56.843" endtime="20230729 15:55:56.844"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:55:56.846" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:55:56.845" endtime="20230729 15:55:56.846"/>
</kw>
<status status="PASS" starttime="20230729 15:55:56.845" endtime="20230729 15:55:56.847"/>
</branch>
<status status="PASS" starttime="20230729 15:55:56.844" endtime="20230729 15:55:56.847"/>
</if>
<status status="PASS" starttime="20230729 15:55:55.074" endtime="20230729 15:55:56.847"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:56.850" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:55:56.849" endtime="20230729 15:55:56.850"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:56.852" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:55:56.851" endtime="20230729 15:55:56.852"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:56.853" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:55:56.852" endtime="20230729 15:55:56.853"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:56.854" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:55:56.855" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:55:56.854" endtime="20230729 15:55:56.855"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:56.857" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:55:56.856" endtime="20230729 15:55:56.857"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:56.858" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:55:56.858" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:55:56.857" endtime="20230729 15:55:56.858"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.860" endtime="20230729 15:55:56.860"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.861" endtime="20230729 15:55:56.861"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:56.859" endtime="20230729 15:55:56.861"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.863" endtime="20230729 15:55:56.863"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.864" endtime="20230729 15:55:56.864"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.865" endtime="20230729 15:55:56.865"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:56.862" endtime="20230729 15:55:56.865"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.866" endtime="20230729 15:55:56.866"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.867" endtime="20230729 15:55:56.867"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:56.865" endtime="20230729 15:55:56.868"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.869" endtime="20230729 15:55:56.869"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.870" endtime="20230729 15:55:56.870"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:56.868" endtime="20230729 15:55:56.870"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.871" endtime="20230729 15:55:56.872"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.872" endtime="20230729 15:55:56.872"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:56.871" endtime="20230729 15:55:56.873"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.875" endtime="20230729 15:55:56.876"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.876" endtime="20230729 15:55:56.877"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:56.873" endtime="20230729 15:55:56.877"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.878" endtime="20230729 15:55:56.878"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.879" endtime="20230729 15:55:56.879"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:56.877" endtime="20230729 15:55:56.879"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.880" endtime="20230729 15:55:56.881"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:56.879" endtime="20230729 15:55:56.881"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:55:56.882" endtime="20230729 15:55:56.882"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:56.881" endtime="20230729 15:55:56.882"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.882" endtime="20230729 15:55:56.883"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.883" endtime="20230729 15:55:56.884"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:56.882" endtime="20230729 15:55:56.885"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.885" endtime="20230729 15:55:56.886"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:56.885" endtime="20230729 15:55:56.886"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.888" endtime="20230729 15:55:56.888"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:56.887" endtime="20230729 15:55:56.889"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.890" endtime="20230729 15:55:56.890"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:56.889" endtime="20230729 15:55:56.890"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:55:56.891" endtime="20230729 15:55:56.891"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:56.890" endtime="20230729 15:55:56.891"/>
</branch>
<status status="PASS" starttime="20230729 15:55:56.859" endtime="20230729 15:55:56.892"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:56.893" level="INFO">Length is 13</msg>
<msg timestamp="20230729 15:55:56.893" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230729 15:55:56.892" endtime="20230729 15:55:56.893"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:55:56.896" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:55:56.895" endtime="20230729 15:55:56.896"/>
</kw>
<status status="PASS" starttime="20230729 15:55:56.894" endtime="20230729 15:55:56.896"/>
</branch>
<status status="PASS" starttime="20230729 15:55:56.894" endtime="20230729 15:55:56.897"/>
</if>
<msg timestamp="20230729 15:55:56.897" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:55:56.848" endtime="20230729 15:55:56.897"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:55:56.899" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:55:56.897" endtime="20230729 15:55:56.899"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:55:56.899" endtime="20230729 15:55:57.006"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:55:57.007" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230729 15:55:57.006" endtime="20230729 15:55:57.097"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:57.099" level="INFO">Length is 13</msg>
<msg timestamp="20230729 15:55:57.099" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230729 15:55:57.098" endtime="20230729 15:55:57.099"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:55:57.106" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:55:57.100" endtime="20230729 15:55:57.106"/>
</kw>
<status status="PASS" starttime="20230729 15:55:57.099" endtime="20230729 15:55:57.106"/>
</branch>
<status status="PASS" starttime="20230729 15:55:57.099" endtime="20230729 15:55:57.107"/>
</if>
<status status="PASS" starttime="20230729 15:55:56.848" endtime="20230729 15:55:57.107"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:55:57.109" endtime="20230729 15:55:57.332"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:57.337" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230729 15:55:57.335" endtime="20230729 15:55:57.337"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:55:57.360" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:55:57.339" endtime="20230729 15:55:57.360"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:55:57.362" endtime="20230729 15:55:57.362"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230729 15:55:57.362" endtime="20230729 15:55:57.362"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:57.361" endtime="20230729 15:55:57.363"/>
</branch>
<status status="PASS" starttime="20230729 15:55:57.360" endtime="20230729 15:55:57.363"/>
</if>
<status status="PASS" starttime="20230729 15:55:57.332" endtime="20230729 15:55:57.363"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230729 15:55:57.363" endtime="20230729 15:55:57.419"/>
</kw>
<status status="PASS" starttime="20230729 15:55:57.108" endtime="20230729 15:55:57.422"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:55:57.427" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:55:57.425" endtime="20230729 15:55:57.427"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:55:57.429" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:55:57.429" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:55:57.428" endtime="20230729 15:55:57.429"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230729 15:55:57.431" endtime="20230729 15:55:57.431"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:57.430" endtime="20230729 15:55:57.431"/>
</branch>
<status status="PASS" starttime="20230729 15:55:57.429" endtime="20230729 15:55:57.432"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230729 15:55:59.042" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230729 15:55:57.433" endtime="20230729 15:55:59.043"/>
</kw>
<status status="PASS" starttime="20230729 15:55:57.432" endtime="20230729 15:55:59.044"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:55:59.045" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230729 15:55:59.045" endtime="20230729 15:55:59.045"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:55:59.557" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-9.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-9.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230729 15:55:59.558" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230729 15:55:59.558" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230729 15:55:59.049" endtime="20230729 15:55:59.561"/>
</kw>
<status status="FAIL" starttime="20230729 15:55:59.047" endtime="20230729 15:55:59.562"/>
</kw>
<msg timestamp="20230729 15:55:59.562" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230729 15:55:59.046" endtime="20230729 15:55:59.562"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:55:59.563" endtime="20230729 15:55:59.563"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:55:59.562" endtime="20230729 15:55:59.563"/>
</branch>
<status status="PASS" starttime="20230729 15:55:59.562" endtime="20230729 15:55:59.564"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:56:02.122" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230729 15:55:59.568" endtime="20230729 15:56:02.122"/>
</kw>
<status status="PASS" starttime="20230729 15:55:59.564" endtime="20230729 15:56:02.122"/>
</kw>
<status status="PASS" starttime="20230729 15:55:57.424" endtime="20230729 15:56:02.122"/>
</kw>
<status status="PASS" starttime="20230729 15:55:55.071" endtime="20230729 15:56:02.123"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:02.126" endtime="20230729 15:56:02.195"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:02.196" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:56:02.196" endtime="20230729 15:56:02.196"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:02.206" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:56:02.196" endtime="20230729 15:56:02.206"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:56:02.207" endtime="20230729 15:56:02.207"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:02.206" endtime="20230729 15:56:02.207"/>
</branch>
<status status="PASS" starttime="20230729 15:56:02.206" endtime="20230729 15:56:02.208"/>
</if>
<status status="PASS" starttime="20230729 15:56:02.195" endtime="20230729 15:56:02.208"/>
</kw>
<status status="PASS" starttime="20230729 15:56:02.125" endtime="20230729 15:56:02.208"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:02.210" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:56:02.210" endtime="20230729 15:56:02.210"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:02.217" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:56:02.210" endtime="20230729 15:56:02.217"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:56:02.219" endtime="20230729 15:56:02.219"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:02.218" endtime="20230729 15:56:02.219"/>
</branch>
<status status="PASS" starttime="20230729 15:56:02.218" endtime="20230729 15:56:02.219"/>
</if>
<status status="PASS" starttime="20230729 15:56:02.209" endtime="20230729 15:56:02.219"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:02.220" endtime="20230729 15:56:02.450"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:02.453" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:56:02.452" endtime="20230729 15:56:02.453"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:02.479" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230729 15:56:02.454" endtime="20230729 15:56:02.479"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:56:03.049" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230729 15:56:02.484" endtime="20230729 15:56:03.049"/>
</kw>
<status status="PASS" starttime="20230729 15:56:02.480" endtime="20230729 15:56:03.050"/>
</kw>
<status status="PASS" starttime="20230729 15:56:02.479" endtime="20230729 15:56:03.051"/>
</branch>
<status status="PASS" starttime="20230729 15:56:02.479" endtime="20230729 15:56:03.051"/>
</if>
<status status="PASS" starttime="20230729 15:56:02.451" endtime="20230729 15:56:03.051"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:03.054" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:56:03.053" endtime="20230729 15:56:03.054"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:03.081" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230729 15:56:03.055" endtime="20230729 15:56:03.082"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:56:05.111" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230729 15:56:03.091" endtime="20230729 15:56:05.112"/>
</kw>
<status status="PASS" starttime="20230729 15:56:03.087" endtime="20230729 15:56:05.112"/>
</kw>
<status status="PASS" starttime="20230729 15:56:03.083" endtime="20230729 15:56:05.112"/>
</branch>
<status status="PASS" starttime="20230729 15:56:03.082" endtime="20230729 15:56:05.112"/>
</if>
<status status="PASS" starttime="20230729 15:56:03.052" endtime="20230729 15:56:05.113"/>
</kw>
<status status="PASS" starttime="20230729 15:56:02.209" endtime="20230729 15:56:05.113"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230729 15:56:05.132" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230729 15:56:05.132" level="INFO">${elements} = ['element=bf407aac-d8f7-466e-b7d6-2dfaf056364a', 'element=7352b8b9-59cc-407b-9b84-89d0e3c8e851', 'element=e7857d41-39a3-417d-9831-429a7589ab85', 'element=0fbf3f36-8ad9-4320-ad3f-d11d93840566', 'elemen...</msg>
<status status="PASS" starttime="20230729 15:56:05.113" endtime="20230729 15:56:05.132"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elements}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:05.135" endtime="20230729 15:56:05.313"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230729 15:56:07.315" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230729 15:56:05.314" endtime="20230729 15:56:07.315"/>
</kw>
<status status="PASS" starttime="20230729 15:55:55.070" endtime="20230729 15:56:07.315"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:07.317" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:56:07.317" endtime="20230729 15:56:07.318"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:07.318" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:56:07.318" endtime="20230729 15:56:07.318"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:56:07.319" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:56:07.318" endtime="20230729 15:56:07.319"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:07.319" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:56:07.319" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:56:07.319" endtime="20230729 15:56:07.319"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:56:07.320" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230729 15:56:07.320" endtime="20230729 15:56:07.320"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:07.321" level="INFO">Length is 1</msg>
<msg timestamp="20230729 15:56:07.321" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230729 15:56:07.320" endtime="20230729 15:56:07.321"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.322" endtime="20230729 15:56:07.322"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.323" endtime="20230729 15:56:07.323"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:07.322" endtime="20230729 15:56:07.324"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.324" endtime="20230729 15:56:07.324"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.325" endtime="20230729 15:56:07.325"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.325" endtime="20230729 15:56:07.326"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:07.324" endtime="20230729 15:56:07.326"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.326" endtime="20230729 15:56:07.327"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.327" endtime="20230729 15:56:07.327"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:07.326" endtime="20230729 15:56:07.327"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.328" endtime="20230729 15:56:07.328"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.328" endtime="20230729 15:56:07.328"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:07.327" endtime="20230729 15:56:07.328"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.329" endtime="20230729 15:56:07.329"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.329" endtime="20230729 15:56:07.329"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:07.329" endtime="20230729 15:56:07.329"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.330" endtime="20230729 15:56:07.330"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.330" endtime="20230729 15:56:07.330"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:07.330" endtime="20230729 15:56:07.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.331" endtime="20230729 15:56:07.331"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.331" endtime="20230729 15:56:07.332"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:07.331" endtime="20230729 15:56:07.332"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.332" endtime="20230729 15:56:07.332"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:07.332" endtime="20230729 15:56:07.333"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:56:07.335" endtime="20230729 15:56:07.335"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:07.333" endtime="20230729 15:56:07.335"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.336" endtime="20230729 15:56:07.336"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.337" endtime="20230729 15:56:07.337"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:07.335" endtime="20230729 15:56:07.337"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.338" endtime="20230729 15:56:07.339"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:07.338" endtime="20230729 15:56:07.339"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.340" endtime="20230729 15:56:07.340"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:07.339" endtime="20230729 15:56:07.341"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.342" endtime="20230729 15:56:07.342"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:07.341" endtime="20230729 15:56:07.342"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230729 15:56:07.343" level="INFO">${new_text} = Tempora adipisci nesciunt repudiandae voluptas.</msg>
<status status="PASS" starttime="20230729 15:56:07.343" endtime="20230729 15:56:07.343"/>
</kw>
<status status="PASS" starttime="20230729 15:56:07.342" endtime="20230729 15:56:07.343"/>
</branch>
<status status="PASS" starttime="20230729 15:56:07.321" endtime="20230729 15:56:07.344"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:07.344" level="INFO">Length is 8</msg>
<msg timestamp="20230729 15:56:07.345" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230729 15:56:07.344" endtime="20230729 15:56:07.345"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:56:07.347" level="INFO">${text} = Tempora adipisci nesciunt repudiandae voluptas.</msg>
<status status="PASS" starttime="20230729 15:56:07.346" endtime="20230729 15:56:07.347"/>
</kw>
<status status="PASS" starttime="20230729 15:56:07.345" endtime="20230729 15:56:07.348"/>
</branch>
<status status="PASS" starttime="20230729 15:56:07.345" endtime="20230729 15:56:07.348"/>
</if>
<msg timestamp="20230729 15:56:07.348" level="INFO">${text} = Tempora adipisci nesciunt repudiandae voluptas.</msg>
<status status="PASS" starttime="20230729 15:56:07.317" endtime="20230729 15:56:07.348"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:56:07.350" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:56:07.349" endtime="20230729 15:56:07.350"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:07.351" endtime="20230729 15:56:07.407"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:56:07.409" level="INFO">Fills the text 'Tempora adipisci nesciunt repudiandae voluptas.' in the given field.</msg>
<status status="PASS" starttime="20230729 15:56:07.408" endtime="20230729 15:56:07.444"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:07.446" level="INFO">Length is 47</msg>
<msg timestamp="20230729 15:56:07.446" level="INFO">${cnt} = 47</msg>
<status status="PASS" starttime="20230729 15:56:07.444" endtime="20230729 15:56:07.446"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:56:07.448" level="INFO">${STATE["Mã"]} = Tempora adipisci nesciunt repudiandae voluptas.</msg>
<status status="PASS" starttime="20230729 15:56:07.447" endtime="20230729 15:56:07.448"/>
</kw>
<status status="PASS" starttime="20230729 15:56:07.447" endtime="20230729 15:56:07.449"/>
</branch>
<status status="PASS" starttime="20230729 15:56:07.446" endtime="20230729 15:56:07.449"/>
</if>
<status status="PASS" starttime="20230729 15:56:07.316" endtime="20230729 15:56:07.449"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:07.451" endtime="20230729 15:56:07.599"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:07.602" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230729 15:56:07.601" endtime="20230729 15:56:07.602"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:07.628" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:56:07.602" endtime="20230729 15:56:07.628"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.630" endtime="20230729 15:56:07.630"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.631" endtime="20230729 15:56:07.631"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:07.628" endtime="20230729 15:56:07.632"/>
</branch>
<status status="PASS" starttime="20230729 15:56:07.628" endtime="20230729 15:56:07.632"/>
</if>
<status status="PASS" starttime="20230729 15:56:07.599" endtime="20230729 15:56:07.632"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230729 15:56:07.633" endtime="20230729 15:56:07.677"/>
</kw>
<status status="PASS" starttime="20230729 15:56:07.450" endtime="20230729 15:56:07.678"/>
</kw>
<kw name="Then User look message &quot;Cập nhật thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:56:07.680" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:56:07.680" endtime="20230729 15:56:07.681"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:07.681" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:56:07.681" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:56:07.681" endtime="20230729 15:56:07.681"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230729 15:56:07.682" endtime="20230729 15:56:07.682"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:07.682" endtime="20230729 15:56:07.682"/>
</branch>
<status status="PASS" starttime="20230729 15:56:07.681" endtime="20230729 15:56:07.682"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230729 15:56:10.536" level="INFO">Text: 'Cập nhật thành công'</msg>
<status status="PASS" starttime="20230729 15:56:07.688" endtime="20230729 15:56:10.536"/>
</kw>
<status status="PASS" starttime="20230729 15:56:07.684" endtime="20230729 15:56:10.537"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:10.544" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230729 15:56:10.540" endtime="20230729 15:56:10.545"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:56:11.212" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-10.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-10.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230729 15:56:11.212" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230729 15:56:11.212" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230729 15:56:10.550" endtime="20230729 15:56:11.218"/>
</kw>
<status status="FAIL" starttime="20230729 15:56:10.547" endtime="20230729 15:56:11.219"/>
</kw>
<msg timestamp="20230729 15:56:11.219" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230729 15:56:10.546" endtime="20230729 15:56:11.219"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:56:11.221" endtime="20230729 15:56:11.221"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:11.220" endtime="20230729 15:56:11.221"/>
</branch>
<status status="PASS" starttime="20230729 15:56:11.220" endtime="20230729 15:56:11.222"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:56:13.674" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230729 15:56:11.224" endtime="20230729 15:56:13.675"/>
</kw>
<status status="PASS" starttime="20230729 15:56:11.222" endtime="20230729 15:56:13.675"/>
</kw>
<status status="PASS" starttime="20230729 15:56:07.679" endtime="20230729 15:56:13.675"/>
</kw>
<kw name="And User look title &quot;Danh sách Mã&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:13.678" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:56:13.678" endtime="20230729 15:56:13.678"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:13.684" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:56:13.678" endtime="20230729 15:56:13.684"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:56:13.686" endtime="20230729 15:56:13.686"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:13.685" endtime="20230729 15:56:13.686"/>
</branch>
<status status="PASS" starttime="20230729 15:56:13.684" endtime="20230729 15:56:13.686"/>
</if>
<status status="PASS" starttime="20230729 15:56:13.677" endtime="20230729 15:56:13.687"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:13.689" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:56:13.688" endtime="20230729 15:56:13.689"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:13.697" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:56:13.689" endtime="20230729 15:56:13.697"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:56:13.698" endtime="20230729 15:56:13.698"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:13.698" endtime="20230729 15:56:13.698"/>
</branch>
<status status="PASS" starttime="20230729 15:56:13.698" endtime="20230729 15:56:13.698"/>
</if>
<status status="PASS" starttime="20230729 15:56:13.688" endtime="20230729 15:56:13.698"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230729 15:56:13.706" level="INFO">Title: 'Danh sách Mã'</msg>
<msg timestamp="20230729 15:56:13.706" level="INFO">${actualTitle} = Danh sách Mã</msg>
<status status="PASS" starttime="20230729 15:56:13.699" endtime="20230729 15:56:13.706"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230729 15:56:13.707" endtime="20230729 15:56:13.707"/>
</kw>
<status status="PASS" starttime="20230729 15:56:13.687" endtime="20230729 15:56:13.707"/>
</kw>
<status status="PASS" starttime="20230729 15:56:13.677" endtime="20230729 15:56:13.708"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230729 15:56:14.660" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230729 15:56:13.709" endtime="20230729 15:56:14.661"/>
</kw>
<status status="PASS" starttime="20230729 15:56:13.709" endtime="20230729 15:56:14.661"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230729 15:55:51.737" endtime="20230729 15:56:14.662"/>
</test>
<test id="s1-t6" name="EDC-10 Verify that the code can be successfully edited when changing the &quot;Mã&quot; field &amp; &quot;Lưu và tạo mới&quot; button" line="243">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230729 15:56:14.680" endtime="20230729 15:56:14.681"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230729 15:56:14.683" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\c7f6500f-cebd-4524-a915-4766c5de5e89"}</msg>
<msg timestamp="20230729 15:56:15.878" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\c7f6500f-cebd-4524-a915-4766c5de5e89"}</msg>
<status status="PASS" starttime="20230729 15:56:14.682" endtime="20230729 15:56:15.878"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230729 15:56:17.663" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230729 15:56:17.663" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230729 15:56:15.879" endtime="20230729 15:56:17.663"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230729 15:56:17.664" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230729 15:56:17.664" endtime="20230729 15:56:17.665"/>
</kw>
<status status="PASS" starttime="20230729 15:56:14.679" endtime="20230729 15:56:17.665"/>
</kw>
<kw name="When Go to edit code page" library="common">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:17.673" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:56:17.673" endtime="20230729 15:56:17.673"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:17.674" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:56:17.673" endtime="20230729 15:56:17.674"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:56:17.675" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:56:17.674" endtime="20230729 15:56:17.675"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:17.676" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:56:17.676" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:56:17.676" endtime="20230729 15:56:17.676"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:56:17.678" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:56:17.677" endtime="20230729 15:56:17.678"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:17.679" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:56:17.680" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:56:17.679" endtime="20230729 15:56:17.680"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.682" endtime="20230729 15:56:17.682"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.684" endtime="20230729 15:56:17.684"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:17.681" endtime="20230729 15:56:17.685"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.686" endtime="20230729 15:56:17.687"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.687" endtime="20230729 15:56:17.688"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.688" endtime="20230729 15:56:17.689"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:17.685" endtime="20230729 15:56:17.689"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.690" endtime="20230729 15:56:17.690"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.691" endtime="20230729 15:56:17.691"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:17.689" endtime="20230729 15:56:17.692"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.692" endtime="20230729 15:56:17.693"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.693" endtime="20230729 15:56:17.695"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:17.692" endtime="20230729 15:56:17.696"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.697" endtime="20230729 15:56:17.698"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.699" endtime="20230729 15:56:17.700"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:17.696" endtime="20230729 15:56:17.700"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.701" endtime="20230729 15:56:17.702"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.702" endtime="20230729 15:56:17.703"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:17.700" endtime="20230729 15:56:17.703"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.704" endtime="20230729 15:56:17.705"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.706" endtime="20230729 15:56:17.706"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:17.704" endtime="20230729 15:56:17.707"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.708" endtime="20230729 15:56:17.708"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:17.707" endtime="20230729 15:56:17.708"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:56:17.709" endtime="20230729 15:56:17.709"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:17.709" endtime="20230729 15:56:17.710"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.711" endtime="20230729 15:56:17.711"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.711" endtime="20230729 15:56:17.712"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:17.710" endtime="20230729 15:56:17.712"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.714" endtime="20230729 15:56:17.718"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:17.712" endtime="20230729 15:56:17.718"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.720" endtime="20230729 15:56:17.721"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:17.718" endtime="20230729 15:56:17.721"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.724" endtime="20230729 15:56:17.725"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:17.722" endtime="20230729 15:56:17.727"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:56:17.729" endtime="20230729 15:56:17.730"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:17.728" endtime="20230729 15:56:17.730"/>
</branch>
<status status="PASS" starttime="20230729 15:56:17.680" endtime="20230729 15:56:17.731"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:17.732" level="INFO">Length is 19</msg>
<msg timestamp="20230729 15:56:17.734" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230729 15:56:17.732" endtime="20230729 15:56:17.734"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:56:17.738" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:56:17.736" endtime="20230729 15:56:17.738"/>
</kw>
<status status="PASS" starttime="20230729 15:56:17.735" endtime="20230729 15:56:17.739"/>
</branch>
<status status="PASS" starttime="20230729 15:56:17.735" endtime="20230729 15:56:17.740"/>
</if>
<msg timestamp="20230729 15:56:17.742" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:56:17.671" endtime="20230729 15:56:17.742"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:56:17.742" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:56:17.742" endtime="20230729 15:56:17.743"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:17.743" endtime="20230729 15:56:19.793"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:56:19.794" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230729 15:56:19.793" endtime="20230729 15:56:19.847"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:19.848" level="INFO">Length is 19</msg>
<msg timestamp="20230729 15:56:19.849" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230729 15:56:19.848" endtime="20230729 15:56:19.849"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:56:19.852" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:56:19.851" endtime="20230729 15:56:19.852"/>
</kw>
<status status="PASS" starttime="20230729 15:56:19.850" endtime="20230729 15:56:19.852"/>
</branch>
<status status="PASS" starttime="20230729 15:56:19.849" endtime="20230729 15:56:19.852"/>
</if>
<status status="PASS" starttime="20230729 15:56:17.671" endtime="20230729 15:56:19.853"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:19.855" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:56:19.855" endtime="20230729 15:56:19.855"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:19.856" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:56:19.856" endtime="20230729 15:56:19.856"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:56:19.858" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:56:19.857" endtime="20230729 15:56:19.858"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:19.858" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:56:19.859" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:56:19.858" endtime="20230729 15:56:19.859"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:56:19.860" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:56:19.859" endtime="20230729 15:56:19.860"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:19.860" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:56:19.860" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:56:19.860" endtime="20230729 15:56:19.860"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.861" endtime="20230729 15:56:19.861"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.861" endtime="20230729 15:56:19.861"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:19.861" endtime="20230729 15:56:19.862"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.862" endtime="20230729 15:56:19.862"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.862" endtime="20230729 15:56:19.863"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.864" endtime="20230729 15:56:19.864"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:19.862" endtime="20230729 15:56:19.865"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.866" endtime="20230729 15:56:19.866"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.867" endtime="20230729 15:56:19.867"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:19.865" endtime="20230729 15:56:19.867"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.868" endtime="20230729 15:56:19.869"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.869" endtime="20230729 15:56:19.870"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:19.867" endtime="20230729 15:56:19.870"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.871" endtime="20230729 15:56:19.871"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.871" endtime="20230729 15:56:19.871"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:19.870" endtime="20230729 15:56:19.872"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.872" endtime="20230729 15:56:19.872"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.872" endtime="20230729 15:56:19.872"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:19.872" endtime="20230729 15:56:19.872"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.873" endtime="20230729 15:56:19.873"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.874" endtime="20230729 15:56:19.874"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:19.872" endtime="20230729 15:56:19.874"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.875" endtime="20230729 15:56:19.875"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:19.874" endtime="20230729 15:56:19.876"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:56:19.876" endtime="20230729 15:56:19.877"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:19.876" endtime="20230729 15:56:19.877"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.878" endtime="20230729 15:56:19.878"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.878" endtime="20230729 15:56:19.878"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:19.877" endtime="20230729 15:56:19.879"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.879" endtime="20230729 15:56:19.880"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:19.879" endtime="20230729 15:56:19.880"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.881" endtime="20230729 15:56:19.881"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:19.880" endtime="20230729 15:56:19.881"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.882" endtime="20230729 15:56:19.882"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:19.881" endtime="20230729 15:56:19.882"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:56:19.883" endtime="20230729 15:56:19.883"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:19.883" endtime="20230729 15:56:19.884"/>
</branch>
<status status="PASS" starttime="20230729 15:56:19.860" endtime="20230729 15:56:19.884"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:19.885" level="INFO">Length is 13</msg>
<msg timestamp="20230729 15:56:19.885" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230729 15:56:19.885" endtime="20230729 15:56:19.885"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:56:19.887" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:56:19.886" endtime="20230729 15:56:19.887"/>
</kw>
<status status="PASS" starttime="20230729 15:56:19.886" endtime="20230729 15:56:19.887"/>
</branch>
<status status="PASS" starttime="20230729 15:56:19.886" endtime="20230729 15:56:19.887"/>
</if>
<msg timestamp="20230729 15:56:19.887" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:56:19.854" endtime="20230729 15:56:19.887"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:56:19.888" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:56:19.888" endtime="20230729 15:56:19.888"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:19.889" endtime="20230729 15:56:19.967"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:56:19.970" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230729 15:56:19.969" endtime="20230729 15:56:20.045"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:20.046" level="INFO">Length is 13</msg>
<msg timestamp="20230729 15:56:20.046" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230729 15:56:20.045" endtime="20230729 15:56:20.046"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:56:20.048" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:56:20.047" endtime="20230729 15:56:20.048"/>
</kw>
<status status="PASS" starttime="20230729 15:56:20.047" endtime="20230729 15:56:20.048"/>
</branch>
<status status="PASS" starttime="20230729 15:56:20.047" endtime="20230729 15:56:20.048"/>
</if>
<status status="PASS" starttime="20230729 15:56:19.853" endtime="20230729 15:56:20.049"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:20.052" endtime="20230729 15:56:20.254"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:20.257" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230729 15:56:20.256" endtime="20230729 15:56:20.257"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:20.265" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:56:20.258" endtime="20230729 15:56:20.265"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:56:20.271" endtime="20230729 15:56:20.272"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230729 15:56:20.272" endtime="20230729 15:56:20.273"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:20.266" endtime="20230729 15:56:20.275"/>
</branch>
<status status="PASS" starttime="20230729 15:56:20.265" endtime="20230729 15:56:20.275"/>
</if>
<status status="PASS" starttime="20230729 15:56:20.254" endtime="20230729 15:56:20.275"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230729 15:56:20.276" endtime="20230729 15:56:20.326"/>
</kw>
<status status="PASS" starttime="20230729 15:56:20.050" endtime="20230729 15:56:20.327"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:56:20.328" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:56:20.327" endtime="20230729 15:56:20.328"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:20.328" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:56:20.328" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:56:20.328" endtime="20230729 15:56:20.328"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230729 15:56:20.329" endtime="20230729 15:56:20.329"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:20.329" endtime="20230729 15:56:20.329"/>
</branch>
<status status="PASS" starttime="20230729 15:56:20.329" endtime="20230729 15:56:20.329"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230729 15:56:21.959" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230729 15:56:20.331" endtime="20230729 15:56:21.959"/>
</kw>
<status status="PASS" starttime="20230729 15:56:20.330" endtime="20230729 15:56:21.960"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:21.961" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230729 15:56:21.960" endtime="20230729 15:56:21.961"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:56:22.878" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-11.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-11.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230729 15:56:22.879" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230729 15:56:22.880" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230729 15:56:21.964" endtime="20230729 15:56:22.886"/>
</kw>
<status status="FAIL" starttime="20230729 15:56:21.962" endtime="20230729 15:56:22.887"/>
</kw>
<msg timestamp="20230729 15:56:22.887" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230729 15:56:21.961" endtime="20230729 15:56:22.887"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:56:22.889" endtime="20230729 15:56:22.890"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:22.888" endtime="20230729 15:56:22.891"/>
</branch>
<status status="PASS" starttime="20230729 15:56:22.888" endtime="20230729 15:56:22.892"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:56:24.828" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230729 15:56:22.893" endtime="20230729 15:56:24.828"/>
</kw>
<status status="PASS" starttime="20230729 15:56:22.892" endtime="20230729 15:56:24.828"/>
</kw>
<status status="PASS" starttime="20230729 15:56:20.327" endtime="20230729 15:56:24.828"/>
</kw>
<status status="PASS" starttime="20230729 15:56:17.670" endtime="20230729 15:56:24.829"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:24.830" endtime="20230729 15:56:24.894"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:24.896" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:56:24.895" endtime="20230729 15:56:24.896"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:24.909" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:56:24.896" endtime="20230729 15:56:24.909"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:56:24.910" endtime="20230729 15:56:24.910"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:24.910" endtime="20230729 15:56:24.910"/>
</branch>
<status status="PASS" starttime="20230729 15:56:24.909" endtime="20230729 15:56:24.910"/>
</if>
<status status="PASS" starttime="20230729 15:56:24.895" endtime="20230729 15:56:24.911"/>
</kw>
<status status="PASS" starttime="20230729 15:56:24.829" endtime="20230729 15:56:24.911"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:24.912" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:56:24.912" endtime="20230729 15:56:24.912"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:24.923" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:56:24.913" endtime="20230729 15:56:24.923"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:56:24.924" endtime="20230729 15:56:24.924"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:24.924" endtime="20230729 15:56:24.924"/>
</branch>
<status status="PASS" starttime="20230729 15:56:24.923" endtime="20230729 15:56:24.925"/>
</if>
<status status="PASS" starttime="20230729 15:56:24.912" endtime="20230729 15:56:24.925"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:24.925" endtime="20230729 15:56:25.092"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:25.095" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:56:25.094" endtime="20230729 15:56:25.095"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:25.119" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230729 15:56:25.096" endtime="20230729 15:56:25.119"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:56:25.470" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230729 15:56:25.123" endtime="20230729 15:56:25.470"/>
</kw>
<status status="PASS" starttime="20230729 15:56:25.120" endtime="20230729 15:56:25.471"/>
</kw>
<status status="PASS" starttime="20230729 15:56:25.120" endtime="20230729 15:56:25.471"/>
</branch>
<status status="PASS" starttime="20230729 15:56:25.120" endtime="20230729 15:56:25.471"/>
</if>
<status status="PASS" starttime="20230729 15:56:25.092" endtime="20230729 15:56:25.472"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:25.476" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:56:25.475" endtime="20230729 15:56:25.476"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:25.502" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230729 15:56:25.477" endtime="20230729 15:56:25.502"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:56:27.907" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230729 15:56:25.506" endtime="20230729 15:56:27.907"/>
</kw>
<status status="PASS" starttime="20230729 15:56:25.503" endtime="20230729 15:56:27.907"/>
</kw>
<status status="PASS" starttime="20230729 15:56:25.502" endtime="20230729 15:56:27.908"/>
</branch>
<status status="PASS" starttime="20230729 15:56:25.502" endtime="20230729 15:56:27.908"/>
</if>
<status status="PASS" starttime="20230729 15:56:25.473" endtime="20230729 15:56:27.909"/>
</kw>
<status status="PASS" starttime="20230729 15:56:24.911" endtime="20230729 15:56:27.909"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230729 15:56:27.926" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230729 15:56:27.927" level="INFO">${elements} = ['element=43730824-e715-434e-b273-d7f1ffcc7597', 'element=c55f4235-035e-49d0-b805-2296863d3d7f', 'element=3574a81b-dd7b-4255-b1ea-464747475abb', 'element=4e71f5dc-bc21-4f6d-b52b-2f9ff18057e5', 'elemen...</msg>
<status status="PASS" starttime="20230729 15:56:27.910" endtime="20230729 15:56:27.927"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elements}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:27.928" endtime="20230729 15:56:28.075"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230729 15:56:30.077" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230729 15:56:28.076" endtime="20230729 15:56:30.077"/>
</kw>
<status status="PASS" starttime="20230729 15:56:17.669" endtime="20230729 15:56:30.077"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:30.079" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:56:30.079" endtime="20230729 15:56:30.079"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:30.080" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:56:30.079" endtime="20230729 15:56:30.080"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:56:30.080" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:56:30.080" endtime="20230729 15:56:30.080"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:30.081" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:56:30.081" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:56:30.081" endtime="20230729 15:56:30.081"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:56:30.081" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230729 15:56:30.081" endtime="20230729 15:56:30.081"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:30.083" level="INFO">Length is 1</msg>
<msg timestamp="20230729 15:56:30.083" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230729 15:56:30.083" endtime="20230729 15:56:30.083"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.084" endtime="20230729 15:56:30.084"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.084" endtime="20230729 15:56:30.085"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:30.083" endtime="20230729 15:56:30.085"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.086" endtime="20230729 15:56:30.086"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.086" endtime="20230729 15:56:30.087"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.087" endtime="20230729 15:56:30.087"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:30.085" endtime="20230729 15:56:30.087"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.088" endtime="20230729 15:56:30.089"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.089" endtime="20230729 15:56:30.089"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:30.088" endtime="20230729 15:56:30.089"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.090" endtime="20230729 15:56:30.090"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.091" endtime="20230729 15:56:30.091"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:30.090" endtime="20230729 15:56:30.091"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.092" endtime="20230729 15:56:30.093"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.093" endtime="20230729 15:56:30.094"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:30.092" endtime="20230729 15:56:30.094"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.095" endtime="20230729 15:56:30.095"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.095" endtime="20230729 15:56:30.095"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:30.094" endtime="20230729 15:56:30.095"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.096" endtime="20230729 15:56:30.096"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.096" endtime="20230729 15:56:30.096"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:30.095" endtime="20230729 15:56:30.096"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.097" endtime="20230729 15:56:30.098"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:30.096" endtime="20230729 15:56:30.098"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:56:30.099" endtime="20230729 15:56:30.100"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:30.099" endtime="20230729 15:56:30.100"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.101" endtime="20230729 15:56:30.101"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.101" endtime="20230729 15:56:30.102"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:30.100" endtime="20230729 15:56:30.102"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.102" endtime="20230729 15:56:30.103"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:30.102" endtime="20230729 15:56:30.103"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.105" endtime="20230729 15:56:30.106"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:30.104" endtime="20230729 15:56:30.106"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.107" endtime="20230729 15:56:30.108"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:30.107" endtime="20230729 15:56:30.108"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230729 15:56:30.109" level="INFO">${new_text} = Expedita ipsam exercitationem totam.</msg>
<status status="PASS" starttime="20230729 15:56:30.109" endtime="20230729 15:56:30.109"/>
</kw>
<status status="PASS" starttime="20230729 15:56:30.108" endtime="20230729 15:56:30.110"/>
</branch>
<status status="PASS" starttime="20230729 15:56:30.083" endtime="20230729 15:56:30.110"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:30.110" level="INFO">Length is 8</msg>
<msg timestamp="20230729 15:56:30.111" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230729 15:56:30.110" endtime="20230729 15:56:30.111"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:56:30.112" level="INFO">${text} = Expedita ipsam exercitationem totam.</msg>
<status status="PASS" starttime="20230729 15:56:30.111" endtime="20230729 15:56:30.112"/>
</kw>
<status status="PASS" starttime="20230729 15:56:30.111" endtime="20230729 15:56:30.112"/>
</branch>
<status status="PASS" starttime="20230729 15:56:30.111" endtime="20230729 15:56:30.113"/>
</if>
<msg timestamp="20230729 15:56:30.113" level="INFO">${text} = Expedita ipsam exercitationem totam.</msg>
<status status="PASS" starttime="20230729 15:56:30.078" endtime="20230729 15:56:30.113"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:56:30.115" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:56:30.114" endtime="20230729 15:56:30.115"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:30.116" endtime="20230729 15:56:30.161"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:56:30.162" level="INFO">Fills the text 'Expedita ipsam exercitationem totam.' in the given field.</msg>
<status status="PASS" starttime="20230729 15:56:30.161" endtime="20230729 15:56:30.193"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:30.194" level="INFO">Length is 36</msg>
<msg timestamp="20230729 15:56:30.194" level="INFO">${cnt} = 36</msg>
<status status="PASS" starttime="20230729 15:56:30.193" endtime="20230729 15:56:30.194"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:56:30.195" level="INFO">${STATE["Mã"]} = Expedita ipsam exercitationem totam.</msg>
<status status="PASS" starttime="20230729 15:56:30.195" endtime="20230729 15:56:30.195"/>
</kw>
<status status="PASS" starttime="20230729 15:56:30.194" endtime="20230729 15:56:30.196"/>
</branch>
<status status="PASS" starttime="20230729 15:56:30.194" endtime="20230729 15:56:30.196"/>
</if>
<status status="PASS" starttime="20230729 15:56:30.078" endtime="20230729 15:56:30.196"/>
</kw>
<kw name="And Click &quot;Lưu và tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:30.197" endtime="20230729 15:56:30.390"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:30.395" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230729 15:56:30.393" endtime="20230729 15:56:30.395"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:30.407" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:56:30.396" endtime="20230729 15:56:30.407"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.408" endtime="20230729 15:56:30.409"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.409" endtime="20230729 15:56:30.409"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:30.407" endtime="20230729 15:56:30.410"/>
</branch>
<status status="PASS" starttime="20230729 15:56:30.407" endtime="20230729 15:56:30.410"/>
</if>
<status status="PASS" starttime="20230729 15:56:30.391" endtime="20230729 15:56:30.410"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230729 15:56:30.411" endtime="20230729 15:56:30.457"/>
</kw>
<status status="PASS" starttime="20230729 15:56:30.197" endtime="20230729 15:56:30.457"/>
</kw>
<kw name="Then User look message &quot;Cập nhật thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:56:30.461" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:56:30.460" endtime="20230729 15:56:30.461"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:30.462" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:56:30.462" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:56:30.461" endtime="20230729 15:56:30.462"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230729 15:56:30.463" endtime="20230729 15:56:30.463"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:30.462" endtime="20230729 15:56:30.463"/>
</branch>
<status status="PASS" starttime="20230729 15:56:30.462" endtime="20230729 15:56:30.463"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230729 15:56:32.695" level="INFO">Text: 'Cập nhật thành công'</msg>
<status status="PASS" starttime="20230729 15:56:30.469" endtime="20230729 15:56:32.695"/>
</kw>
<status status="PASS" starttime="20230729 15:56:30.464" endtime="20230729 15:56:32.696"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:32.697" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230729 15:56:32.696" endtime="20230729 15:56:32.697"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:56:33.242" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-12.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-12.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230729 15:56:33.242" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230729 15:56:33.242" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230729 15:56:32.700" endtime="20230729 15:56:33.246"/>
</kw>
<status status="FAIL" starttime="20230729 15:56:32.698" endtime="20230729 15:56:33.246"/>
</kw>
<msg timestamp="20230729 15:56:33.247" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230729 15:56:32.697" endtime="20230729 15:56:33.247"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:56:33.249" endtime="20230729 15:56:33.249"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:33.248" endtime="20230729 15:56:33.249"/>
</branch>
<status status="PASS" starttime="20230729 15:56:33.247" endtime="20230729 15:56:33.250"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:56:35.744" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230729 15:56:33.252" endtime="20230729 15:56:35.745"/>
</kw>
<status status="PASS" starttime="20230729 15:56:33.250" endtime="20230729 15:56:35.745"/>
</kw>
<status status="PASS" starttime="20230729 15:56:30.459" endtime="20230729 15:56:35.745"/>
</kw>
<kw name="And User look title &quot;Danh sách nghỉ phép&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:35.747" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:56:35.747" endtime="20230729 15:56:35.747"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:35.754" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:56:35.748" endtime="20230729 15:56:35.754"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:56:35.756" endtime="20230729 15:56:35.756"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:35.755" endtime="20230729 15:56:35.757"/>
</branch>
<status status="PASS" starttime="20230729 15:56:35.755" endtime="20230729 15:56:35.757"/>
</if>
<status status="PASS" starttime="20230729 15:56:35.746" endtime="20230729 15:56:35.757"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:35.760" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:56:35.760" endtime="20230729 15:56:35.761"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:35.773" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:56:35.761" endtime="20230729 15:56:35.773"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:56:35.774" endtime="20230729 15:56:35.775"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:35.774" endtime="20230729 15:56:35.775"/>
</branch>
<status status="PASS" starttime="20230729 15:56:35.773" endtime="20230729 15:56:35.775"/>
</if>
<status status="PASS" starttime="20230729 15:56:35.759" endtime="20230729 15:56:35.776"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230729 15:56:35.784" level="INFO">Title: 'Danh sách nghỉ phép'</msg>
<msg timestamp="20230729 15:56:35.785" level="INFO">${actualTitle} = Danh sách nghỉ phép</msg>
<status status="PASS" starttime="20230729 15:56:35.776" endtime="20230729 15:56:35.785"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230729 15:56:35.785" endtime="20230729 15:56:35.786"/>
</kw>
<status status="PASS" starttime="20230729 15:56:35.758" endtime="20230729 15:56:35.786"/>
</kw>
<status status="PASS" starttime="20230729 15:56:35.746" endtime="20230729 15:56:35.786"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230729 15:56:36.842" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230729 15:56:35.788" endtime="20230729 15:56:36.842"/>
</kw>
<status status="PASS" starttime="20230729 15:56:35.787" endtime="20230729 15:56:36.842"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230729 15:56:14.672" endtime="20230729 15:56:36.843"/>
</test>
<test id="s1-t7" name="EDC-11 Verify that the code can be successfully edited when changing &quot;Mô tả&quot; field &amp; &quot;Lưu lại&quot; button" line="251">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230729 15:56:36.859" endtime="20230729 15:56:36.860"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230729 15:56:36.862" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\17515485-0264-4e46-b324-ce0daf8b6762"}</msg>
<msg timestamp="20230729 15:56:38.105" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\17515485-0264-4e46-b324-ce0daf8b6762"}</msg>
<status status="PASS" starttime="20230729 15:56:36.861" endtime="20230729 15:56:38.105"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230729 15:56:39.759" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230729 15:56:39.759" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230729 15:56:38.106" endtime="20230729 15:56:39.759"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230729 15:56:39.760" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230729 15:56:39.760" endtime="20230729 15:56:39.761"/>
</kw>
<status status="PASS" starttime="20230729 15:56:36.858" endtime="20230729 15:56:39.761"/>
</kw>
<kw name="When Go to edit code page" library="common">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:39.767" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:56:39.766" endtime="20230729 15:56:39.767"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:39.767" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:56:39.767" endtime="20230729 15:56:39.767"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:56:39.768" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:56:39.768" endtime="20230729 15:56:39.768"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:39.768" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:56:39.769" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:56:39.768" endtime="20230729 15:56:39.769"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:56:39.769" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:56:39.769" endtime="20230729 15:56:39.769"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:39.770" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:56:39.770" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:56:39.770" endtime="20230729 15:56:39.770"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.771" endtime="20230729 15:56:39.771"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.771" endtime="20230729 15:56:39.771"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:39.770" endtime="20230729 15:56:39.771"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.772" endtime="20230729 15:56:39.772"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.772" endtime="20230729 15:56:39.772"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.772" endtime="20230729 15:56:39.772"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:39.771" endtime="20230729 15:56:39.772"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.773" endtime="20230729 15:56:39.773"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.773" endtime="20230729 15:56:39.773"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:39.772" endtime="20230729 15:56:39.774"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.775" endtime="20230729 15:56:39.775"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.775" endtime="20230729 15:56:39.775"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:39.774" endtime="20230729 15:56:39.776"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.777" endtime="20230729 15:56:39.777"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.777" endtime="20230729 15:56:39.777"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:39.776" endtime="20230729 15:56:39.778"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.779" endtime="20230729 15:56:39.779"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.780" endtime="20230729 15:56:39.780"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:39.778" endtime="20230729 15:56:39.780"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.783" endtime="20230729 15:56:39.784"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.784" endtime="20230729 15:56:39.785"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:39.781" endtime="20230729 15:56:39.785"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.786" endtime="20230729 15:56:39.787"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:39.785" endtime="20230729 15:56:39.787"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:56:39.788" endtime="20230729 15:56:39.788"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:39.787" endtime="20230729 15:56:39.788"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.789" endtime="20230729 15:56:39.789"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.790" endtime="20230729 15:56:39.790"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:39.788" endtime="20230729 15:56:39.791"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.792" endtime="20230729 15:56:39.792"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:39.791" endtime="20230729 15:56:39.794"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.796" endtime="20230729 15:56:39.796"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:39.794" endtime="20230729 15:56:39.796"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.800" endtime="20230729 15:56:39.802"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:39.797" endtime="20230729 15:56:39.804"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:56:39.807" endtime="20230729 15:56:39.807"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:39.805" endtime="20230729 15:56:39.808"/>
</branch>
<status status="PASS" starttime="20230729 15:56:39.770" endtime="20230729 15:56:39.808"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:39.812" level="INFO">Length is 19</msg>
<msg timestamp="20230729 15:56:39.812" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230729 15:56:39.809" endtime="20230729 15:56:39.812"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:56:39.821" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:56:39.818" endtime="20230729 15:56:39.821"/>
</kw>
<status status="PASS" starttime="20230729 15:56:39.813" endtime="20230729 15:56:39.822"/>
</branch>
<status status="PASS" starttime="20230729 15:56:39.813" endtime="20230729 15:56:39.825"/>
</if>
<msg timestamp="20230729 15:56:39.826" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:56:39.766" endtime="20230729 15:56:39.826"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:56:39.828" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:56:39.826" endtime="20230729 15:56:39.828"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:39.829" endtime="20230729 15:56:41.827"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:56:41.829" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230729 15:56:41.828" endtime="20230729 15:56:41.879"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:41.880" level="INFO">Length is 19</msg>
<msg timestamp="20230729 15:56:41.881" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230729 15:56:41.880" endtime="20230729 15:56:41.881"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:56:41.883" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:56:41.882" endtime="20230729 15:56:41.883"/>
</kw>
<status status="PASS" starttime="20230729 15:56:41.882" endtime="20230729 15:56:41.884"/>
</branch>
<status status="PASS" starttime="20230729 15:56:41.881" endtime="20230729 15:56:41.884"/>
</if>
<status status="PASS" starttime="20230729 15:56:39.764" endtime="20230729 15:56:41.885"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:41.888" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:56:41.888" endtime="20230729 15:56:41.888"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:41.889" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:56:41.889" endtime="20230729 15:56:41.889"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:56:41.891" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:56:41.891" endtime="20230729 15:56:41.891"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:41.892" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:56:41.892" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:56:41.892" endtime="20230729 15:56:41.892"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:56:41.894" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:56:41.893" endtime="20230729 15:56:41.894"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:41.895" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:56:41.895" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:56:41.894" endtime="20230729 15:56:41.895"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.896" endtime="20230729 15:56:41.897"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.897" endtime="20230729 15:56:41.898"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:41.896" endtime="20230729 15:56:41.898"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.899" endtime="20230729 15:56:41.900"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.900" endtime="20230729 15:56:41.900"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.901" endtime="20230729 15:56:41.901"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:41.899" endtime="20230729 15:56:41.901"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.902" endtime="20230729 15:56:41.902"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.903" endtime="20230729 15:56:41.904"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:41.902" endtime="20230729 15:56:41.904"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.905" endtime="20230729 15:56:41.906"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.906" endtime="20230729 15:56:41.906"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:41.904" endtime="20230729 15:56:41.907"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.908" endtime="20230729 15:56:41.908"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.909" endtime="20230729 15:56:41.909"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:41.907" endtime="20230729 15:56:41.909"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.910" endtime="20230729 15:56:41.910"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.911" endtime="20230729 15:56:41.911"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:41.909" endtime="20230729 15:56:41.912"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.912" endtime="20230729 15:56:41.915"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.915" endtime="20230729 15:56:41.916"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:41.912" endtime="20230729 15:56:41.916"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.917" endtime="20230729 15:56:41.917"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:41.916" endtime="20230729 15:56:41.917"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:56:41.918" endtime="20230729 15:56:41.918"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:41.917" endtime="20230729 15:56:41.919"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.920" endtime="20230729 15:56:41.920"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.920" endtime="20230729 15:56:41.921"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:41.919" endtime="20230729 15:56:41.921"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.922" endtime="20230729 15:56:41.922"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:41.921" endtime="20230729 15:56:41.922"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.924" endtime="20230729 15:56:41.924"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:41.922" endtime="20230729 15:56:41.924"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.925" endtime="20230729 15:56:41.926"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:41.925" endtime="20230729 15:56:41.926"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:56:41.927" endtime="20230729 15:56:41.927"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:41.926" endtime="20230729 15:56:41.928"/>
</branch>
<status status="PASS" starttime="20230729 15:56:41.895" endtime="20230729 15:56:41.928"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:41.929" level="INFO">Length is 13</msg>
<msg timestamp="20230729 15:56:41.930" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230729 15:56:41.929" endtime="20230729 15:56:41.930"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:56:41.932" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:56:41.932" endtime="20230729 15:56:41.932"/>
</kw>
<status status="PASS" starttime="20230729 15:56:41.930" endtime="20230729 15:56:41.932"/>
</branch>
<status status="PASS" starttime="20230729 15:56:41.930" endtime="20230729 15:56:41.933"/>
</if>
<msg timestamp="20230729 15:56:41.933" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:56:41.886" endtime="20230729 15:56:41.933"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:56:41.935" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:56:41.933" endtime="20230729 15:56:41.935"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:41.936" endtime="20230729 15:56:42.026"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:56:42.028" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230729 15:56:42.027" endtime="20230729 15:56:42.093"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:42.094" level="INFO">Length is 13</msg>
<msg timestamp="20230729 15:56:42.094" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230729 15:56:42.093" endtime="20230729 15:56:42.094"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:56:42.095" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:56:42.095" endtime="20230729 15:56:42.095"/>
</kw>
<status status="PASS" starttime="20230729 15:56:42.094" endtime="20230729 15:56:42.095"/>
</branch>
<status status="PASS" starttime="20230729 15:56:42.094" endtime="20230729 15:56:42.096"/>
</if>
<status status="PASS" starttime="20230729 15:56:41.885" endtime="20230729 15:56:42.096"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:42.099" endtime="20230729 15:56:42.293"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:42.296" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230729 15:56:42.295" endtime="20230729 15:56:42.296"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:42.323" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:56:42.296" endtime="20230729 15:56:42.323"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:56:42.324" endtime="20230729 15:56:42.325"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230729 15:56:42.325" endtime="20230729 15:56:42.326"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:42.323" endtime="20230729 15:56:42.326"/>
</branch>
<status status="PASS" starttime="20230729 15:56:42.323" endtime="20230729 15:56:42.327"/>
</if>
<status status="PASS" starttime="20230729 15:56:42.295" endtime="20230729 15:56:42.328"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230729 15:56:42.328" endtime="20230729 15:56:42.378"/>
</kw>
<status status="PASS" starttime="20230729 15:56:42.096" endtime="20230729 15:56:42.378"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:56:42.380" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:56:42.379" endtime="20230729 15:56:42.380"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:42.382" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:56:42.383" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:56:42.381" endtime="20230729 15:56:42.384"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230729 15:56:42.387" endtime="20230729 15:56:42.387"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:42.386" endtime="20230729 15:56:42.388"/>
</branch>
<status status="PASS" starttime="20230729 15:56:42.386" endtime="20230729 15:56:42.388"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230729 15:56:43.936" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230729 15:56:42.392" endtime="20230729 15:56:43.937"/>
</kw>
<status status="PASS" starttime="20230729 15:56:42.388" endtime="20230729 15:56:43.937"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:43.938" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230729 15:56:43.938" endtime="20230729 15:56:43.938"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:56:44.613" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-13.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-13.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230729 15:56:44.614" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230729 15:56:44.614" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230729 15:56:43.942" endtime="20230729 15:56:44.617"/>
</kw>
<status status="FAIL" starttime="20230729 15:56:43.939" endtime="20230729 15:56:44.617"/>
</kw>
<msg timestamp="20230729 15:56:44.618" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230729 15:56:43.938" endtime="20230729 15:56:44.618"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:56:44.619" endtime="20230729 15:56:44.619"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:44.618" endtime="20230729 15:56:44.619"/>
</branch>
<status status="PASS" starttime="20230729 15:56:44.618" endtime="20230729 15:56:44.619"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:56:46.610" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230729 15:56:44.621" endtime="20230729 15:56:46.610"/>
</kw>
<status status="PASS" starttime="20230729 15:56:44.619" endtime="20230729 15:56:46.611"/>
</kw>
<status status="PASS" starttime="20230729 15:56:42.379" endtime="20230729 15:56:46.611"/>
</kw>
<status status="PASS" starttime="20230729 15:56:39.762" endtime="20230729 15:56:46.611"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:46.616" endtime="20230729 15:56:46.668"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:46.670" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:56:46.670" endtime="20230729 15:56:46.670"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:46.677" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:56:46.671" endtime="20230729 15:56:46.677"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:56:46.677" endtime="20230729 15:56:46.677"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:46.677" endtime="20230729 15:56:46.678"/>
</branch>
<status status="PASS" starttime="20230729 15:56:46.677" endtime="20230729 15:56:46.678"/>
</if>
<status status="PASS" starttime="20230729 15:56:46.669" endtime="20230729 15:56:46.678"/>
</kw>
<status status="PASS" starttime="20230729 15:56:46.614" endtime="20230729 15:56:46.678"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:46.679" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:56:46.679" endtime="20230729 15:56:46.679"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:46.690" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:56:46.680" endtime="20230729 15:56:46.690"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:56:46.691" endtime="20230729 15:56:46.691"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:46.690" endtime="20230729 15:56:46.691"/>
</branch>
<status status="PASS" starttime="20230729 15:56:46.690" endtime="20230729 15:56:46.692"/>
</if>
<status status="PASS" starttime="20230729 15:56:46.679" endtime="20230729 15:56:46.692"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:46.693" endtime="20230729 15:56:46.878"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:46.879" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:56:46.879" endtime="20230729 15:56:46.879"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:46.892" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230729 15:56:46.879" endtime="20230729 15:56:46.892"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:56:47.232" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230729 15:56:46.895" endtime="20230729 15:56:47.232"/>
</kw>
<status status="PASS" starttime="20230729 15:56:46.893" endtime="20230729 15:56:47.233"/>
</kw>
<status status="PASS" starttime="20230729 15:56:46.893" endtime="20230729 15:56:47.234"/>
</branch>
<status status="PASS" starttime="20230729 15:56:46.892" endtime="20230729 15:56:47.234"/>
</if>
<status status="PASS" starttime="20230729 15:56:46.878" endtime="20230729 15:56:47.235"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:47.239" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:56:47.236" endtime="20230729 15:56:47.239"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:47.258" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230729 15:56:47.240" endtime="20230729 15:56:47.258"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:56:49.259" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230729 15:56:47.260" endtime="20230729 15:56:49.260"/>
</kw>
<status status="PASS" starttime="20230729 15:56:47.259" endtime="20230729 15:56:49.260"/>
</kw>
<status status="PASS" starttime="20230729 15:56:47.258" endtime="20230729 15:56:49.260"/>
</branch>
<status status="PASS" starttime="20230729 15:56:47.258" endtime="20230729 15:56:49.260"/>
</if>
<status status="PASS" starttime="20230729 15:56:47.235" endtime="20230729 15:56:49.260"/>
</kw>
<status status="PASS" starttime="20230729 15:56:46.678" endtime="20230729 15:56:49.261"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230729 15:56:49.278" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230729 15:56:49.278" level="INFO">${elements} = ['element=86a17832-c6f2-4aa8-8dcd-baaee5f2e4e0', 'element=28f085c3-9834-4494-a78e-b69f62484a82', 'element=c4e2d1cb-86ff-436e-8909-cfb33f51378b', 'element=d3f0afd9-30fa-4475-9de1-ed58604fac9b', 'elemen...</msg>
<status status="PASS" starttime="20230729 15:56:49.261" endtime="20230729 15:56:49.278"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elements}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:49.279" endtime="20230729 15:56:49.506"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230729 15:56:51.507" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230729 15:56:49.506" endtime="20230729 15:56:51.507"/>
</kw>
<status status="PASS" starttime="20230729 15:56:39.762" endtime="20230729 15:56:51.507"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:51.509" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:56:51.509" endtime="20230729 15:56:51.509"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:51.510" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:56:51.510" endtime="20230729 15:56:51.510"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:56:51.511" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:56:51.510" endtime="20230729 15:56:51.511"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:51.511" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:56:51.511" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:56:51.511" endtime="20230729 15:56:51.511"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:56:51.512" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230729 15:56:51.511" endtime="20230729 15:56:51.512"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:51.512" level="INFO">Length is 1</msg>
<msg timestamp="20230729 15:56:51.512" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230729 15:56:51.512" endtime="20230729 15:56:51.512"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.514" endtime="20230729 15:56:51.515"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.515" endtime="20230729 15:56:51.515"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:51.514" endtime="20230729 15:56:51.515"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.516" endtime="20230729 15:56:51.516"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.516" endtime="20230729 15:56:51.516"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.516" endtime="20230729 15:56:51.516"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:51.515" endtime="20230729 15:56:51.517"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.517" endtime="20230729 15:56:51.517"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.517" endtime="20230729 15:56:51.518"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:51.517" endtime="20230729 15:56:51.518"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.518" endtime="20230729 15:56:51.518"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.519" endtime="20230729 15:56:51.519"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:51.518" endtime="20230729 15:56:51.519"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.519" endtime="20230729 15:56:51.520"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.520" endtime="20230729 15:56:51.520"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:51.519" endtime="20230729 15:56:51.520"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.521" endtime="20230729 15:56:51.521"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.521" endtime="20230729 15:56:51.521"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:51.520" endtime="20230729 15:56:51.521"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.522" endtime="20230729 15:56:51.522"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.522" endtime="20230729 15:56:51.522"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:51.521" endtime="20230729 15:56:51.522"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.522" endtime="20230729 15:56:51.523"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:51.522" endtime="20230729 15:56:51.523"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:56:51.523" endtime="20230729 15:56:51.523"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:51.523" endtime="20230729 15:56:51.523"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.524" endtime="20230729 15:56:51.524"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.524" endtime="20230729 15:56:51.524"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:51.523" endtime="20230729 15:56:51.524"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.526" endtime="20230729 15:56:51.526"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:51.526" endtime="20230729 15:56:51.526"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.527" endtime="20230729 15:56:51.527"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:51.526" endtime="20230729 15:56:51.527"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.528" endtime="20230729 15:56:51.528"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:51.527" endtime="20230729 15:56:51.528"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230729 15:56:51.530" level="INFO">${new_text} = Aliquam minima minus quisquam est atque officiis.</msg>
<status status="PASS" starttime="20230729 15:56:51.529" endtime="20230729 15:56:51.530"/>
</kw>
<status status="PASS" starttime="20230729 15:56:51.528" endtime="20230729 15:56:51.530"/>
</branch>
<status status="PASS" starttime="20230729 15:56:51.514" endtime="20230729 15:56:51.530"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:51.531" level="INFO">Length is 8</msg>
<msg timestamp="20230729 15:56:51.531" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230729 15:56:51.531" endtime="20230729 15:56:51.531"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:56:51.532" level="INFO">${text} = Aliquam minima minus quisquam est atque officiis.</msg>
<status status="PASS" starttime="20230729 15:56:51.532" endtime="20230729 15:56:51.532"/>
</kw>
<status status="PASS" starttime="20230729 15:56:51.532" endtime="20230729 15:56:51.532"/>
</branch>
<status status="PASS" starttime="20230729 15:56:51.531" endtime="20230729 15:56:51.532"/>
</if>
<msg timestamp="20230729 15:56:51.532" level="INFO">${text} = Aliquam minima minus quisquam est atque officiis.</msg>
<status status="PASS" starttime="20230729 15:56:51.509" endtime="20230729 15:56:51.532"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230729 15:56:51.534" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230729 15:56:51.533" endtime="20230729 15:56:51.534"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:51.535" endtime="20230729 15:56:51.569"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:56:51.570" level="INFO">Fills the text 'Aliquam minima minus quisquam est atque officiis.' in the given field.</msg>
<status status="PASS" starttime="20230729 15:56:51.569" endtime="20230729 15:56:51.604"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:51.606" level="INFO">Length is 49</msg>
<msg timestamp="20230729 15:56:51.606" level="INFO">${cnt} = 49</msg>
<status status="PASS" starttime="20230729 15:56:51.605" endtime="20230729 15:56:51.606"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:56:51.610" level="INFO">${STATE["Mô tả"]} = Aliquam minima minus quisquam est atque officiis.</msg>
<status status="PASS" starttime="20230729 15:56:51.607" endtime="20230729 15:56:51.610"/>
</kw>
<status status="PASS" starttime="20230729 15:56:51.607" endtime="20230729 15:56:51.610"/>
</branch>
<status status="PASS" starttime="20230729 15:56:51.606" endtime="20230729 15:56:51.610"/>
</if>
<status status="PASS" starttime="20230729 15:56:51.508" endtime="20230729 15:56:51.611"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:56:51.612" endtime="20230729 15:56:51.717"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:51.719" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230729 15:56:51.719" endtime="20230729 15:56:51.719"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:51.740" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:56:51.720" endtime="20230729 15:56:51.740"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.741" endtime="20230729 15:56:51.741"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.742" endtime="20230729 15:56:51.742"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:51.741" endtime="20230729 15:56:51.742"/>
</branch>
<status status="PASS" starttime="20230729 15:56:51.741" endtime="20230729 15:56:51.742"/>
</if>
<status status="PASS" starttime="20230729 15:56:51.718" endtime="20230729 15:56:51.742"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230729 15:56:51.742" endtime="20230729 15:56:51.776"/>
</kw>
<status status="PASS" starttime="20230729 15:56:51.612" endtime="20230729 15:56:51.777"/>
</kw>
<kw name="Then User look message &quot;Cập nhật thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:56:51.779" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:56:51.778" endtime="20230729 15:56:51.779"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:56:51.779" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:56:51.780" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:56:51.779" endtime="20230729 15:56:51.780"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230729 15:56:51.781" endtime="20230729 15:56:51.782"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:51.780" endtime="20230729 15:56:51.782"/>
</branch>
<status status="PASS" starttime="20230729 15:56:51.780" endtime="20230729 15:56:51.783"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230729 15:56:55.411" level="INFO">Text: 'Cập nhật thành công'</msg>
<status status="PASS" starttime="20230729 15:56:51.787" endtime="20230729 15:56:55.411"/>
</kw>
<status status="PASS" starttime="20230729 15:56:51.784" endtime="20230729 15:56:55.412"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:55.421" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230729 15:56:55.415" endtime="20230729 15:56:55.421"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:56:55.967" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-14.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-14.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230729 15:56:55.968" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230729 15:56:55.968" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230729 15:56:55.430" endtime="20230729 15:56:55.970"/>
</kw>
<status status="FAIL" starttime="20230729 15:56:55.427" endtime="20230729 15:56:55.970"/>
</kw>
<msg timestamp="20230729 15:56:55.971" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230729 15:56:55.423" endtime="20230729 15:56:55.971"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:56:55.971" endtime="20230729 15:56:55.972"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:55.971" endtime="20230729 15:56:55.972"/>
</branch>
<status status="PASS" starttime="20230729 15:56:55.971" endtime="20230729 15:56:55.972"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:56:57.893" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230729 15:56:55.974" endtime="20230729 15:56:57.894"/>
</kw>
<status status="PASS" starttime="20230729 15:56:55.972" endtime="20230729 15:56:57.894"/>
</kw>
<status status="PASS" starttime="20230729 15:56:51.778" endtime="20230729 15:56:57.895"/>
</kw>
<kw name="And User look title &quot;Danh sách Mã&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:57.898" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:56:57.898" endtime="20230729 15:56:57.899"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:57.910" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:56:57.899" endtime="20230729 15:56:57.910"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:56:57.911" endtime="20230729 15:56:57.911"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:57.910" endtime="20230729 15:56:57.912"/>
</branch>
<status status="PASS" starttime="20230729 15:56:57.910" endtime="20230729 15:56:57.912"/>
</if>
<status status="PASS" starttime="20230729 15:56:57.897" endtime="20230729 15:56:57.912"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:56:57.916" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:56:57.915" endtime="20230729 15:56:57.916"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:56:57.929" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:56:57.917" endtime="20230729 15:56:57.929"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:56:57.932" endtime="20230729 15:56:57.932"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:56:57.930" endtime="20230729 15:56:57.932"/>
</branch>
<status status="PASS" starttime="20230729 15:56:57.929" endtime="20230729 15:56:57.932"/>
</if>
<status status="PASS" starttime="20230729 15:56:57.914" endtime="20230729 15:56:57.932"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230729 15:56:57.941" level="INFO">Title: 'Danh sách Mã'</msg>
<msg timestamp="20230729 15:56:57.942" level="INFO">${actualTitle} = Danh sách Mã</msg>
<status status="PASS" starttime="20230729 15:56:57.933" endtime="20230729 15:56:57.942"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230729 15:56:57.942" endtime="20230729 15:56:57.944"/>
</kw>
<status status="PASS" starttime="20230729 15:56:57.912" endtime="20230729 15:56:57.944"/>
</kw>
<status status="PASS" starttime="20230729 15:56:57.895" endtime="20230729 15:56:57.945"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230729 15:56:59.007" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230729 15:56:57.948" endtime="20230729 15:56:59.007"/>
</kw>
<status status="PASS" starttime="20230729 15:56:57.946" endtime="20230729 15:56:59.007"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230729 15:56:36.851" endtime="20230729 15:56:59.008"/>
</test>
<test id="s1-t8" name="EDC-12 Verify that the code can be successfully edited when changing &quot;Mô tả&quot; field &amp; &quot;Lưu và tạo mới&quot; button" line="259">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230729 15:56:59.024" endtime="20230729 15:56:59.025"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230729 15:56:59.028" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\a4996895-aa67-44ab-9fbb-58cc4bf797f7"}</msg>
<msg timestamp="20230729 15:57:00.240" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\a4996895-aa67-44ab-9fbb-58cc4bf797f7"}</msg>
<status status="PASS" starttime="20230729 15:56:59.026" endtime="20230729 15:57:00.241"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230729 15:57:01.929" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230729 15:57:01.929" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230729 15:57:00.242" endtime="20230729 15:57:01.930"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230729 15:57:01.932" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230729 15:57:01.931" endtime="20230729 15:57:01.932"/>
</kw>
<status status="PASS" starttime="20230729 15:56:59.022" endtime="20230729 15:57:01.932"/>
</kw>
<kw name="When Go to edit code page" library="common">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:57:01.936" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:57:01.936" endtime="20230729 15:57:01.936"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:57:01.937" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:57:01.936" endtime="20230729 15:57:01.937"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:57:01.937" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:57:01.937" endtime="20230729 15:57:01.937"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:57:01.938" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:57:01.938" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:57:01.937" endtime="20230729 15:57:01.938"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:57:01.939" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:57:01.938" endtime="20230729 15:57:01.939"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:57:01.939" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:57:01.939" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:57:01.939" endtime="20230729 15:57:01.939"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.940" endtime="20230729 15:57:01.940"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.940" endtime="20230729 15:57:01.941"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:01.940" endtime="20230729 15:57:01.941"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.941" endtime="20230729 15:57:01.941"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.941" endtime="20230729 15:57:01.942"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.942" endtime="20230729 15:57:01.942"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:01.941" endtime="20230729 15:57:01.942"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.942" endtime="20230729 15:57:01.942"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.943" endtime="20230729 15:57:01.943"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:01.942" endtime="20230729 15:57:01.943"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.943" endtime="20230729 15:57:01.943"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.944" endtime="20230729 15:57:01.944"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:01.943" endtime="20230729 15:57:01.944"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.945" endtime="20230729 15:57:01.945"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.946" endtime="20230729 15:57:01.946"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:01.944" endtime="20230729 15:57:01.947"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.948" endtime="20230729 15:57:01.948"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.949" endtime="20230729 15:57:01.949"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:01.947" endtime="20230729 15:57:01.949"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.951" endtime="20230729 15:57:01.951"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.951" endtime="20230729 15:57:01.952"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:01.950" endtime="20230729 15:57:01.952"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.953" endtime="20230729 15:57:01.953"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:01.952" endtime="20230729 15:57:01.953"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:57:01.955" endtime="20230729 15:57:01.956"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:01.953" endtime="20230729 15:57:01.956"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.957" endtime="20230729 15:57:01.957"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.958" endtime="20230729 15:57:01.958"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:01.956" endtime="20230729 15:57:01.959"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.960" endtime="20230729 15:57:01.960"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:01.959" endtime="20230729 15:57:01.961"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.968" endtime="20230729 15:57:01.969"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:01.962" endtime="20230729 15:57:01.971"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.974" endtime="20230729 15:57:01.977"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:01.971" endtime="20230729 15:57:01.978"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:57:01.981" endtime="20230729 15:57:01.984"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:01.978" endtime="20230729 15:57:01.984"/>
</branch>
<status status="PASS" starttime="20230729 15:57:01.940" endtime="20230729 15:57:01.985"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:57:01.986" level="INFO">Length is 19</msg>
<msg timestamp="20230729 15:57:01.987" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230729 15:57:01.986" endtime="20230729 15:57:01.987"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:57:01.990" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:57:01.989" endtime="20230729 15:57:01.990"/>
</kw>
<status status="PASS" starttime="20230729 15:57:01.988" endtime="20230729 15:57:01.990"/>
</branch>
<status status="PASS" starttime="20230729 15:57:01.988" endtime="20230729 15:57:01.990"/>
</if>
<msg timestamp="20230729 15:57:01.991" level="INFO">${text} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:57:01.934" endtime="20230729 15:57:01.991"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:57:01.992" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:57:01.991" endtime="20230729 15:57:01.992"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:57:01.992" endtime="20230729 15:57:03.400"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:57:03.401" level="INFO">Fills the text 'hovannhat@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230729 15:57:03.401" endtime="20230729 15:57:03.468"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:57:03.469" level="INFO">Length is 19</msg>
<msg timestamp="20230729 15:57:03.469" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230729 15:57:03.469" endtime="20230729 15:57:03.469"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:57:03.471" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat@admin.com</msg>
<status status="PASS" starttime="20230729 15:57:03.471" endtime="20230729 15:57:03.471"/>
</kw>
<status status="PASS" starttime="20230729 15:57:03.470" endtime="20230729 15:57:03.472"/>
</branch>
<status status="PASS" starttime="20230729 15:57:03.470" endtime="20230729 15:57:03.472"/>
</if>
<status status="PASS" starttime="20230729 15:57:01.934" endtime="20230729 15:57:03.472"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:57:03.475" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:57:03.474" endtime="20230729 15:57:03.475"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:57:03.476" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:57:03.476" endtime="20230729 15:57:03.476"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:57:03.477" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:57:03.476" endtime="20230729 15:57:03.477"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:57:03.479" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:57:03.479" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:57:03.478" endtime="20230729 15:57:03.479"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:57:03.480" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:57:03.480" endtime="20230729 15:57:03.481"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:57:03.481" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:57:03.481" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:57:03.481" endtime="20230729 15:57:03.481"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.482" endtime="20230729 15:57:03.482"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.482" endtime="20230729 15:57:03.482"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:03.482" endtime="20230729 15:57:03.482"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.483" endtime="20230729 15:57:03.483"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.483" endtime="20230729 15:57:03.483"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.484" endtime="20230729 15:57:03.484"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:03.482" endtime="20230729 15:57:03.484"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.486" endtime="20230729 15:57:03.486"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.486" endtime="20230729 15:57:03.486"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:03.484" endtime="20230729 15:57:03.486"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.486" endtime="20230729 15:57:03.486"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.487" endtime="20230729 15:57:03.487"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:03.486" endtime="20230729 15:57:03.487"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.488" endtime="20230729 15:57:03.488"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.488" endtime="20230729 15:57:03.488"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:03.487" endtime="20230729 15:57:03.489"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.490" endtime="20230729 15:57:03.490"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.490" endtime="20230729 15:57:03.491"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:03.489" endtime="20230729 15:57:03.491"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.492" endtime="20230729 15:57:03.492"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.492" endtime="20230729 15:57:03.493"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:03.491" endtime="20230729 15:57:03.493"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.494" endtime="20230729 15:57:03.494"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:03.493" endtime="20230729 15:57:03.494"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:57:03.495" endtime="20230729 15:57:03.496"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:03.495" endtime="20230729 15:57:03.496"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.497" endtime="20230729 15:57:03.497"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.499" endtime="20230729 15:57:03.499"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:03.497" endtime="20230729 15:57:03.499"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.500" endtime="20230729 15:57:03.500"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:03.499" endtime="20230729 15:57:03.500"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.500" endtime="20230729 15:57:03.501"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:03.500" endtime="20230729 15:57:03.501"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.501" endtime="20230729 15:57:03.502"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:03.501" endtime="20230729 15:57:03.502"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.502" endtime="20230729 15:57:03.502"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:03.502" endtime="20230729 15:57:03.502"/>
</branch>
<status status="PASS" starttime="20230729 15:57:03.481" endtime="20230729 15:57:03.502"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:57:03.503" level="INFO">Length is 13</msg>
<msg timestamp="20230729 15:57:03.504" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230729 15:57:03.503" endtime="20230729 15:57:03.504"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:57:03.506" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:57:03.506" endtime="20230729 15:57:03.506"/>
</kw>
<status status="PASS" starttime="20230729 15:57:03.505" endtime="20230729 15:57:03.507"/>
</branch>
<status status="PASS" starttime="20230729 15:57:03.505" endtime="20230729 15:57:03.507"/>
</if>
<msg timestamp="20230729 15:57:03.507" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:57:03.473" endtime="20230729 15:57:03.507"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230729 15:57:03.509" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230729 15:57:03.508" endtime="20230729 15:57:03.509"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:57:03.510" endtime="20230729 15:57:03.640"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:57:03.643" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230729 15:57:03.641" endtime="20230729 15:57:03.706"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:57:03.708" level="INFO">Length is 13</msg>
<msg timestamp="20230729 15:57:03.708" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230729 15:57:03.707" endtime="20230729 15:57:03.709"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:57:03.716" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230729 15:57:03.714" endtime="20230729 15:57:03.716"/>
</kw>
<status status="PASS" starttime="20230729 15:57:03.711" endtime="20230729 15:57:03.716"/>
</branch>
<status status="PASS" starttime="20230729 15:57:03.709" endtime="20230729 15:57:03.717"/>
</if>
<status status="PASS" starttime="20230729 15:57:03.472" endtime="20230729 15:57:03.718"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:57:03.721" endtime="20230729 15:57:03.949"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:57:03.950" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230729 15:57:03.950" endtime="20230729 15:57:03.950"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:57:03.960" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:57:03.951" endtime="20230729 15:57:03.960"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.962" endtime="20230729 15:57:03.962"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230729 15:57:03.962" endtime="20230729 15:57:03.963"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:03.961" endtime="20230729 15:57:03.963"/>
</branch>
<status status="PASS" starttime="20230729 15:57:03.961" endtime="20230729 15:57:03.963"/>
</if>
<status status="PASS" starttime="20230729 15:57:03.949" endtime="20230729 15:57:03.963"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230729 15:57:03.964" endtime="20230729 15:57:04.060"/>
</kw>
<status status="PASS" starttime="20230729 15:57:03.720" endtime="20230729 15:57:04.060"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:57:04.062" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:57:04.061" endtime="20230729 15:57:04.062"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:57:04.065" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:57:04.065" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:57:04.063" endtime="20230729 15:57:04.066"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230729 15:57:04.071" endtime="20230729 15:57:04.071"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:04.069" endtime="20230729 15:57:04.071"/>
</branch>
<status status="PASS" starttime="20230729 15:57:04.069" endtime="20230729 15:57:04.071"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230729 15:57:05.802" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230729 15:57:04.074" endtime="20230729 15:57:05.802"/>
</kw>
<status status="PASS" starttime="20230729 15:57:04.072" endtime="20230729 15:57:05.804"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:57:05.806" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230729 15:57:05.805" endtime="20230729 15:57:05.806"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:57:06.336" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-15.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-15.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230729 15:57:06.337" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230729 15:57:06.337" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230729 15:57:05.811" endtime="20230729 15:57:06.340"/>
</kw>
<status status="FAIL" starttime="20230729 15:57:05.808" endtime="20230729 15:57:06.341"/>
</kw>
<msg timestamp="20230729 15:57:06.341" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230729 15:57:05.807" endtime="20230729 15:57:06.341"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:57:06.345" endtime="20230729 15:57:06.345"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:06.342" endtime="20230729 15:57:06.346"/>
</branch>
<status status="PASS" starttime="20230729 15:57:06.342" endtime="20230729 15:57:06.347"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:57:08.363" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230729 15:57:06.351" endtime="20230729 15:57:08.363"/>
</kw>
<status status="PASS" starttime="20230729 15:57:06.347" endtime="20230729 15:57:08.364"/>
</kw>
<status status="PASS" starttime="20230729 15:57:04.060" endtime="20230729 15:57:08.364"/>
</kw>
<status status="PASS" starttime="20230729 15:57:01.933" endtime="20230729 15:57:08.364"/>
</kw>
<kw name="When Click &quot;Thiết lập&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:57:08.367" endtime="20230729 15:57:08.458"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:57:08.459" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:57:08.459" endtime="20230729 15:57:08.459"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:57:08.472" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:57:08.459" endtime="20230729 15:57:08.472"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:57:08.473" endtime="20230729 15:57:08.473"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:08.472" endtime="20230729 15:57:08.473"/>
</branch>
<status status="PASS" starttime="20230729 15:57:08.472" endtime="20230729 15:57:08.473"/>
</if>
<status status="PASS" starttime="20230729 15:57:08.458" endtime="20230729 15:57:08.473"/>
</kw>
<status status="PASS" starttime="20230729 15:57:08.365" endtime="20230729 15:57:08.473"/>
</kw>
<kw name="And Click &quot;Mã&quot; sub menu" library="common" sourcename="Click &quot;${text}&quot; sub menu">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:57:08.477" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:57:08.476" endtime="20230729 15:57:08.477"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:57:08.488" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:57:08.477" endtime="20230729 15:57:08.488"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:57:08.489" endtime="20230729 15:57:08.489"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:08.488" endtime="20230729 15:57:08.489"/>
</branch>
<status status="PASS" starttime="20230729 15:57:08.488" endtime="20230729 15:57:08.489"/>
</if>
<status status="PASS" starttime="20230729 15:57:08.475" endtime="20230729 15:57:08.489"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:57:08.489" endtime="20230729 15:57:08.661"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:57:08.663" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:57:08.662" endtime="20230729 15:57:08.663"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:57:08.691" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230729 15:57:08.665" endtime="20230729 15:57:08.692"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:57:09.050" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230729 15:57:08.696" endtime="20230729 15:57:09.051"/>
</kw>
<status status="PASS" starttime="20230729 15:57:08.693" endtime="20230729 15:57:09.052"/>
</kw>
<status status="PASS" starttime="20230729 15:57:08.692" endtime="20230729 15:57:09.052"/>
</branch>
<status status="PASS" starttime="20230729 15:57:08.692" endtime="20230729 15:57:09.053"/>
</if>
<status status="PASS" starttime="20230729 15:57:08.661" endtime="20230729 15:57:09.053"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:57:09.055" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:57:09.055" endtime="20230729 15:57:09.055"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:57:09.073" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230729 15:57:09.056" endtime="20230729 15:57:09.074"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:57:11.301" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230729 15:57:09.081" endtime="20230729 15:57:11.301"/>
</kw>
<status status="PASS" starttime="20230729 15:57:09.077" endtime="20230729 15:57:11.301"/>
</kw>
<status status="PASS" starttime="20230729 15:57:09.074" endtime="20230729 15:57:11.301"/>
</branch>
<status status="PASS" starttime="20230729 15:57:09.074" endtime="20230729 15:57:11.302"/>
</if>
<status status="PASS" starttime="20230729 15:57:09.054" endtime="20230729 15:57:11.302"/>
</kw>
<status status="PASS" starttime="20230729 15:57:08.474" endtime="20230729 15:57:11.302"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//button[@title="Sửa"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230729 15:57:11.313" level="INFO">Found 10 Locators successfully.</msg>
<msg timestamp="20230729 15:57:11.313" level="INFO">${elements} = ['element=28fa2eaf-53b4-4323-a0fc-5105b6bc4e19', 'element=f34a7017-b7b0-4d98-ad6c-22c9549b7591', 'element=a4b96991-8370-44ba-a3c1-8f02714eb3e7', 'element=8b9569e4-602a-4348-8b24-2618b43d3b1f', 'elemen...</msg>
<status status="PASS" starttime="20230729 15:57:11.302" endtime="20230729 15:57:11.313"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elements}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:57:11.315" endtime="20230729 15:57:11.455"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230729 15:57:13.456" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230729 15:57:11.456" endtime="20230729 15:57:13.456"/>
</kw>
<status status="PASS" starttime="20230729 15:57:01.933" endtime="20230729 15:57:13.456"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:57:13.461" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230729 15:57:13.460" endtime="20230729 15:57:13.461"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:57:13.462" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230729 15:57:13.461" endtime="20230729 15:57:13.462"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:57:13.464" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230729 15:57:13.463" endtime="20230729 15:57:13.464"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:57:13.465" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:57:13.466" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230729 15:57:13.465" endtime="20230729 15:57:13.466"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:57:13.467" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230729 15:57:13.466" endtime="20230729 15:57:13.467"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:57:13.468" level="INFO">Length is 1</msg>
<msg timestamp="20230729 15:57:13.468" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230729 15:57:13.468" endtime="20230729 15:57:13.468"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.469" endtime="20230729 15:57:13.470"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.470" endtime="20230729 15:57:13.471"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:13.469" endtime="20230729 15:57:13.471"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.472" endtime="20230729 15:57:13.472"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.472" endtime="20230729 15:57:13.473"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.473" endtime="20230729 15:57:13.473"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:13.471" endtime="20230729 15:57:13.474"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.475" endtime="20230729 15:57:13.475"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.475" endtime="20230729 15:57:13.476"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:13.474" endtime="20230729 15:57:13.476"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.477" endtime="20230729 15:57:13.477"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.478" endtime="20230729 15:57:13.479"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:13.476" endtime="20230729 15:57:13.479"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.482" endtime="20230729 15:57:13.483"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.484" endtime="20230729 15:57:13.484"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:13.480" endtime="20230729 15:57:13.484"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.486" endtime="20230729 15:57:13.486"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.486" endtime="20230729 15:57:13.487"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:13.484" endtime="20230729 15:57:13.487"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.489" endtime="20230729 15:57:13.489"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.489" endtime="20230729 15:57:13.489"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:13.488" endtime="20230729 15:57:13.490"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.490" endtime="20230729 15:57:13.490"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:13.490" endtime="20230729 15:57:13.490"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230729 15:57:13.491" endtime="20230729 15:57:13.491"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:13.491" endtime="20230729 15:57:13.491"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.492" endtime="20230729 15:57:13.492"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.492" endtime="20230729 15:57:13.492"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:13.491" endtime="20230729 15:57:13.492"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.492" endtime="20230729 15:57:13.492"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:13.492" endtime="20230729 15:57:13.493"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.493" endtime="20230729 15:57:13.493"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:13.493" endtime="20230729 15:57:13.493"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.494" endtime="20230729 15:57:13.494"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:13.493" endtime="20230729 15:57:13.494"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230729 15:57:13.496" level="INFO">${new_text} = Autem quas tenetur qui perspiciatis ab a.</msg>
<status status="PASS" starttime="20230729 15:57:13.495" endtime="20230729 15:57:13.496"/>
</kw>
<status status="PASS" starttime="20230729 15:57:13.494" endtime="20230729 15:57:13.496"/>
</branch>
<status status="PASS" starttime="20230729 15:57:13.469" endtime="20230729 15:57:13.496"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:57:13.498" level="INFO">Length is 8</msg>
<msg timestamp="20230729 15:57:13.498" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230729 15:57:13.498" endtime="20230729 15:57:13.499"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230729 15:57:13.501" level="INFO">${text} = Autem quas tenetur qui perspiciatis ab a.</msg>
<status status="PASS" starttime="20230729 15:57:13.500" endtime="20230729 15:57:13.501"/>
</kw>
<status status="PASS" starttime="20230729 15:57:13.499" endtime="20230729 15:57:13.501"/>
</branch>
<status status="PASS" starttime="20230729 15:57:13.499" endtime="20230729 15:57:13.502"/>
</if>
<msg timestamp="20230729 15:57:13.502" level="INFO">${text} = Autem quas tenetur qui perspiciatis ab a.</msg>
<status status="PASS" starttime="20230729 15:57:13.459" endtime="20230729 15:57:13.502"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230729 15:57:13.503" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230729 15:57:13.502" endtime="20230729 15:57:13.503"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:57:13.504" endtime="20230729 15:57:13.554"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230729 15:57:13.555" level="INFO">Fills the text 'Autem quas tenetur qui perspiciatis ab a.' in the given field.</msg>
<status status="PASS" starttime="20230729 15:57:13.554" endtime="20230729 15:57:13.590"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:57:13.592" level="INFO">Length is 41</msg>
<msg timestamp="20230729 15:57:13.592" level="INFO">${cnt} = 41</msg>
<status status="PASS" starttime="20230729 15:57:13.591" endtime="20230729 15:57:13.592"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230729 15:57:13.595" level="INFO">${STATE["Mô tả"]} = Autem quas tenetur qui perspiciatis ab a.</msg>
<status status="PASS" starttime="20230729 15:57:13.594" endtime="20230729 15:57:13.595"/>
</kw>
<status status="PASS" starttime="20230729 15:57:13.592" endtime="20230729 15:57:13.596"/>
</branch>
<status status="PASS" starttime="20230729 15:57:13.592" endtime="20230729 15:57:13.596"/>
</if>
<status status="PASS" starttime="20230729 15:57:13.458" endtime="20230729 15:57:13.597"/>
</kw>
<kw name="And Click &quot;Lưu và tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230729 15:57:13.598" endtime="20230729 15:57:13.777"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:57:13.779" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230729 15:57:13.778" endtime="20230729 15:57:13.779"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:57:13.800" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:57:13.780" endtime="20230729 15:57:13.800"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.801" endtime="20230729 15:57:13.802"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.802" endtime="20230729 15:57:13.802"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:13.800" endtime="20230729 15:57:13.802"/>
</branch>
<status status="PASS" starttime="20230729 15:57:13.800" endtime="20230729 15:57:13.802"/>
</if>
<status status="PASS" starttime="20230729 15:57:13.777" endtime="20230729 15:57:13.803"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230729 15:57:13.804" endtime="20230729 15:57:13.849"/>
</kw>
<status status="PASS" starttime="20230729 15:57:13.597" endtime="20230729 15:57:13.850"/>
</kw>
<kw name="Then User look message &quot;Cập nhật thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230729 15:57:13.855" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230729 15:57:13.855" endtime="20230729 15:57:13.855"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230729 15:57:13.856" level="INFO">Length is 0</msg>
<msg timestamp="20230729 15:57:13.856" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230729 15:57:13.856" endtime="20230729 15:57:13.856"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230729 15:57:13.857" endtime="20230729 15:57:13.857"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:13.857" endtime="20230729 15:57:13.857"/>
</branch>
<status status="PASS" starttime="20230729 15:57:13.857" endtime="20230729 15:57:13.858"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230729 15:57:16.119" level="INFO">Text: 'Cập nhật thành công'</msg>
<status status="PASS" starttime="20230729 15:57:13.860" endtime="20230729 15:57:16.119"/>
</kw>
<status status="PASS" starttime="20230729 15:57:13.858" endtime="20230729 15:57:16.120"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:57:16.121" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230729 15:57:16.120" endtime="20230729 15:57:16.121"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:57:16.647" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-16.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-16.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230729 15:57:16.647" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230729 15:57:16.648" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230729 15:57:16.125" endtime="20230729 15:57:16.650"/>
</kw>
<status status="FAIL" starttime="20230729 15:57:16.122" endtime="20230729 15:57:16.651"/>
</kw>
<msg timestamp="20230729 15:57:16.651" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230729 15:57:16.121" endtime="20230729 15:57:16.651"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230729 15:57:16.652" endtime="20230729 15:57:16.652"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:16.652" endtime="20230729 15:57:16.653"/>
</branch>
<status status="PASS" starttime="20230729 15:57:16.652" endtime="20230729 15:57:16.653"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230729 15:57:19.110" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230729 15:57:16.656" endtime="20230729 15:57:19.110"/>
</kw>
<status status="PASS" starttime="20230729 15:57:16.653" endtime="20230729 15:57:19.111"/>
</kw>
<status status="PASS" starttime="20230729 15:57:13.853" endtime="20230729 15:57:19.111"/>
</kw>
<kw name="And User look title &quot;Danh sách nghỉ phép&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:57:19.114" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:57:19.113" endtime="20230729 15:57:19.114"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:57:19.121" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:57:19.114" endtime="20230729 15:57:19.121"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:57:19.122" endtime="20230729 15:57:19.123"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:19.122" endtime="20230729 15:57:19.123"/>
</branch>
<status status="PASS" starttime="20230729 15:57:19.121" endtime="20230729 15:57:19.124"/>
</if>
<status status="PASS" starttime="20230729 15:57:19.113" endtime="20230729 15:57:19.124"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230729 15:57:19.127" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230729 15:57:19.126" endtime="20230729 15:57:19.127"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230729 15:57:19.138" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230729 15:57:19.127" endtime="20230729 15:57:19.138"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230729 15:57:19.139" endtime="20230729 15:57:19.139"/>
</kw>
<status status="NOT RUN" starttime="20230729 15:57:19.139" endtime="20230729 15:57:19.140"/>
</branch>
<status status="PASS" starttime="20230729 15:57:19.139" endtime="20230729 15:57:19.140"/>
</if>
<status status="PASS" starttime="20230729 15:57:19.126" endtime="20230729 15:57:19.140"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230729 15:57:19.149" level="INFO">Title: 'Danh sách nghỉ phép'</msg>
<msg timestamp="20230729 15:57:19.149" level="INFO">${actualTitle} = Danh sách nghỉ phép</msg>
<status status="PASS" starttime="20230729 15:57:19.141" endtime="20230729 15:57:19.149"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230729 15:57:19.150" endtime="20230729 15:57:19.151"/>
</kw>
<status status="PASS" starttime="20230729 15:57:19.125" endtime="20230729 15:57:19.151"/>
</kw>
<status status="PASS" starttime="20230729 15:57:19.112" endtime="20230729 15:57:19.151"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230729 15:57:20.240" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230729 15:57:19.152" endtime="20230729 15:57:20.240"/>
</kw>
<status status="PASS" starttime="20230729 15:57:19.152" endtime="20230729 15:57:20.240"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230729 15:56:59.015" endtime="20230729 15:57:20.241"/>
</test>
<status status="PASS" starttime="20230729 15:54:05.100" endtime="20230729 15:57:20.251"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="8" fail="0" skip="0">@regression</stat>
<stat pass="8" fail="0" skip="0">@smoketest</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Admin Create Code">Admin Create Code</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

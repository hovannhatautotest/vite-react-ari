<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.11.4 on win32)" generated="20230718 11:01:49.192" rpa="false" schemaversion="4">
<suite id="s1" name="Login" source="C:\Users\nhats\OneDrive\Desktop\ARI\vite-react-ari\test\testcases\login.robot">
<test id="s1-t1" name="DN-01 Validation text with &quot;Tên đăng nhập&quot; field" line="10">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230718 11:01:52.422" endtime="20230718 11:01:52.438"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230718 11:01:52.438" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\71459904-5878-4607-9aca-fe4fa6b0e5e2"}</msg>
<msg timestamp="20230718 11:01:53.817" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\71459904-5878-4607-9aca-fe4fa6b0e5e2"}</msg>
<status status="PASS" starttime="20230718 11:01:52.438" endtime="20230718 11:01:53.817"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230718 11:01:56.337" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230718 11:01:56.338" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230718 11:01:53.817" endtime="20230718 11:01:56.338"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230718 11:01:56.340" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230718 11:01:56.340" endtime="20230718 11:01:56.340"/>
</kw>
<status status="PASS" starttime="20230718 11:01:52.422" endtime="20230718 11:01:56.340"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:01:56.346" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:01:56.346" endtime="20230718 11:01:56.346"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:01:56.347" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:01:56.346" endtime="20230718 11:01:56.347"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:01:56.348" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:01:56.347" endtime="20230718 11:01:56.348"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:01:56.349" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:01:56.349" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:01:56.348" endtime="20230718 11:01:56.349"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:01:56.351" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230718 11:01:56.350" endtime="20230718 11:01:56.351"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:01:56.352" level="INFO">Length is 1</msg>
<msg timestamp="20230718 11:01:56.353" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230718 11:01:56.352" endtime="20230718 11:01:56.353"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:01:56.354" endtime="20230718 11:01:56.355"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:01:56.355" endtime="20230718 11:01:56.355"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:01:56.353" endtime="20230718 11:01:56.356"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:01:56.357" endtime="20230718 11:01:56.357"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:01:56.357" endtime="20230718 11:01:56.357"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:01:56.357" endtime="20230718 11:01:56.357"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:01:56.356" endtime="20230718 11:01:56.358"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:01:56.358" endtime="20230718 11:01:56.358"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:01:56.359" endtime="20230718 11:01:56.360"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:01:56.358" endtime="20230718 11:01:56.360"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:01:56.361" endtime="20230718 11:01:56.361"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:01:56.361" endtime="20230718 11:01:56.361"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:01:56.360" endtime="20230718 11:01:56.361"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:01:56.361" endtime="20230718 11:01:56.361"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:01:56.361" endtime="20230718 11:01:56.361"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:01:56.361" endtime="20230718 11:01:56.366"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:01:56.367" endtime="20230718 11:01:56.367"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:01:56.366" endtime="20230718 11:01:56.367"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230718 11:01:56.368" endtime="20230718 11:01:56.369"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:01:56.367" endtime="20230718 11:01:56.369"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:01:56.370" endtime="20230718 11:01:56.370"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:01:56.371" endtime="20230718 11:01:56.371"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:01:56.369" endtime="20230718 11:01:56.371"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:01:56.373" endtime="20230718 11:01:56.373"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:01:56.372" endtime="20230718 11:01:56.373"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:01:56.374" endtime="20230718 11:01:56.374"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:01:56.373" endtime="20230718 11:01:56.374"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:01:56.376" endtime="20230718 11:01:56.376"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:01:56.375" endtime="20230718 11:01:56.377"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230718 11:01:56.380" level="INFO">${new_text} = Placeat fugit aliquam ipsum doloribus.</msg>
<status status="PASS" starttime="20230718 11:01:56.378" endtime="20230718 11:01:56.380"/>
</kw>
<status status="PASS" starttime="20230718 11:01:56.377" endtime="20230718 11:01:56.381"/>
</branch>
<status status="PASS" starttime="20230718 11:01:56.353" endtime="20230718 11:01:56.381"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:01:56.383" level="INFO">Length is 8</msg>
<msg timestamp="20230718 11:01:56.383" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230718 11:01:56.382" endtime="20230718 11:01:56.383"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:01:56.384" level="INFO">${text} = Placeat fugit aliquam ipsum doloribus.</msg>
<status status="PASS" starttime="20230718 11:01:56.384" endtime="20230718 11:01:56.384"/>
</kw>
<status status="PASS" starttime="20230718 11:01:56.383" endtime="20230718 11:01:56.385"/>
</branch>
<status status="PASS" starttime="20230718 11:01:56.383" endtime="20230718 11:01:56.385"/>
</if>
<msg timestamp="20230718 11:01:56.385" level="INFO">${text} = Placeat fugit aliquam ipsum doloribus.</msg>
<status status="PASS" starttime="20230718 11:01:56.345" endtime="20230718 11:01:56.385"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:01:56.386" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:01:56.385" endtime="20230718 11:01:56.386"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:01:56.386" endtime="20230718 11:01:58.527"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:01:58.529" level="INFO">Fills the text 'Placeat fugit aliquam ipsum doloribus.' in the given field.</msg>
<status status="PASS" starttime="20230718 11:01:58.528" endtime="20230718 11:01:58.591"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:01:58.591" level="INFO">Length is 38</msg>
<msg timestamp="20230718 11:01:58.591" level="INFO">${cnt} = 38</msg>
<status status="PASS" starttime="20230718 11:01:58.591" endtime="20230718 11:01:58.591"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:01:58.591" level="INFO">${STATE["Mật khẩu"]} = Placeat fugit aliquam ipsum doloribus.</msg>
<status status="PASS" starttime="20230718 11:01:58.591" endtime="20230718 11:01:58.591"/>
</kw>
<status status="PASS" starttime="20230718 11:01:58.591" endtime="20230718 11:01:58.591"/>
</branch>
<status status="PASS" starttime="20230718 11:01:58.591" endtime="20230718 11:01:58.591"/>
</if>
<status status="PASS" starttime="20230718 11:01:56.344" endtime="20230718 11:01:58.591"/>
</kw>
<kw name="And Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:01:58.606" endtime="20230718 11:01:59.003"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:01:59.003" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230718 11:01:59.003" endtime="20230718 11:01:59.003"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230718 11:01:59.044" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230718 11:01:59.003" endtime="20230718 11:01:59.044"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230718 11:01:59.046" endtime="20230718 11:01:59.046"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230718 11:01:59.047" endtime="20230718 11:01:59.047"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:01:59.045" endtime="20230718 11:01:59.047"/>
</branch>
<status status="PASS" starttime="20230718 11:01:59.045" endtime="20230718 11:01:59.047"/>
</if>
<status status="PASS" starttime="20230718 11:01:59.003" endtime="20230718 11:01:59.048"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230718 11:01:59.048" endtime="20230718 11:01:59.120"/>
</kw>
<status status="PASS" starttime="20230718 11:01:58.591" endtime="20230718 11:01:59.120"/>
</kw>
<kw name="Then Required message &quot;Tên đăng nhập&quot; displayed under &quot;Xin vui lòng nhập tên đăng nhập&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230718 11:01:59.130" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230718 11:01:59.127" endtime="20230718 11:01:59.130"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:01:59.166" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230718 11:01:59.134" endtime="20230718 11:01:59.166"/>
</kw>
<status status="PASS" starttime="20230718 11:01:59.130" endtime="20230718 11:01:59.167"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:01:59.251" level="INFO">Text: 'Xin vui lòng nhập tên đăng nhập'</msg>
<status status="PASS" starttime="20230718 11:01:59.170" endtime="20230718 11:01:59.251"/>
</kw>
<status status="PASS" starttime="20230718 11:01:59.167" endtime="20230718 11:01:59.251"/>
</kw>
<status status="PASS" starttime="20230718 11:01:59.126" endtime="20230718 11:01:59.251"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230718 11:02:00.374" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230718 11:01:59.261" endtime="20230718 11:02:00.374"/>
</kw>
<status status="PASS" starttime="20230718 11:01:59.251" endtime="20230718 11:02:00.375"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230718 11:01:52.422" endtime="20230718 11:02:00.375"/>
</test>
<test id="s1-t2" name="DN-02 Validation text with &quot;Mật khẩu&quot; field" line="16">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230718 11:02:00.394" endtime="20230718 11:02:00.395"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230718 11:02:00.399" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\0cf75178-1447-4add-a7e3-df6166efd7d3"}</msg>
<msg timestamp="20230718 11:02:01.653" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\0cf75178-1447-4add-a7e3-df6166efd7d3"}</msg>
<status status="PASS" starttime="20230718 11:02:00.396" endtime="20230718 11:02:01.653"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230718 11:02:03.839" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230718 11:02:03.839" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230718 11:02:01.653" endtime="20230718 11:02:03.840"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230718 11:02:03.843" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230718 11:02:03.840" endtime="20230718 11:02:03.843"/>
</kw>
<status status="PASS" starttime="20230718 11:02:00.393" endtime="20230718 11:02:03.844"/>
</kw>
<kw name="When Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:03.852" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:02:03.852" endtime="20230718 11:02:03.852"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:03.853" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:02:03.852" endtime="20230718 11:02:03.853"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:03.853" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:02:03.853" endtime="20230718 11:02:03.853"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:03.854" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:02:03.854" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:02:03.854" endtime="20230718 11:02:03.854"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:03.855" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230718 11:02:03.854" endtime="20230718 11:02:03.855"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:03.855" level="INFO">Length is 1</msg>
<msg timestamp="20230718 11:02:03.855" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230718 11:02:03.855" endtime="20230718 11:02:03.855"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:03.856" endtime="20230718 11:02:03.856"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:03.856" endtime="20230718 11:02:03.857"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:03.856" endtime="20230718 11:02:03.857"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:03.857" endtime="20230718 11:02:03.857"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:03.858" endtime="20230718 11:02:03.859"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:03.859" endtime="20230718 11:02:03.860"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:03.857" endtime="20230718 11:02:03.860"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:03.860" endtime="20230718 11:02:03.860"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:03.860" endtime="20230718 11:02:03.864"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:03.860" endtime="20230718 11:02:03.864"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:03.865" endtime="20230718 11:02:03.866"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:03.866" endtime="20230718 11:02:03.866"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:03.864" endtime="20230718 11:02:03.867"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:03.868" endtime="20230718 11:02:03.868"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:03.869" endtime="20230718 11:02:03.869"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:03.867" endtime="20230718 11:02:03.869"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:02:03.871" endtime="20230718 11:02:03.871"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:03.870" endtime="20230718 11:02:03.871"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<msg timestamp="20230718 11:02:03.873" level="INFO">${new_text} = mehul15@example.org</msg>
<status status="PASS" starttime="20230718 11:02:03.872" endtime="20230718 11:02:03.873"/>
</kw>
<status status="PASS" starttime="20230718 11:02:03.871" endtime="20230718 11:02:03.874"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:03.874" endtime="20230718 11:02:03.875"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:03.876" endtime="20230718 11:02:03.876"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:03.874" endtime="20230718 11:02:03.876"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:02:03.877" endtime="20230718 11:02:03.877"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:03.877" endtime="20230718 11:02:03.878"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:02:03.879" endtime="20230718 11:02:03.879"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:03.878" endtime="20230718 11:02:03.880"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:03.881" endtime="20230718 11:02:03.881"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:03.880" endtime="20230718 11:02:03.882"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:03.884" endtime="20230718 11:02:03.884"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:03.883" endtime="20230718 11:02:03.884"/>
</branch>
<status status="PASS" starttime="20230718 11:02:03.856" endtime="20230718 11:02:03.885"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:03.886" level="INFO">Length is 8</msg>
<msg timestamp="20230718 11:02:03.886" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230718 11:02:03.885" endtime="20230718 11:02:03.886"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:02:03.888" level="INFO">${text} = mehul15@example.org</msg>
<status status="PASS" starttime="20230718 11:02:03.887" endtime="20230718 11:02:03.888"/>
</kw>
<status status="PASS" starttime="20230718 11:02:03.886" endtime="20230718 11:02:03.888"/>
</branch>
<status status="PASS" starttime="20230718 11:02:03.886" endtime="20230718 11:02:03.888"/>
</if>
<msg timestamp="20230718 11:02:03.889" level="INFO">${text} = mehul15@example.org</msg>
<status status="PASS" starttime="20230718 11:02:03.851" endtime="20230718 11:02:03.889"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:02:03.891" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:02:03.889" endtime="20230718 11:02:03.891"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:02:03.893" endtime="20230718 11:02:06.006"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:02:06.007" level="INFO">Fills the text 'mehul15@example.org' in the given field.</msg>
<status status="PASS" starttime="20230718 11:02:06.006" endtime="20230718 11:02:06.063"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:06.063" level="INFO">Length is 19</msg>
<msg timestamp="20230718 11:02:06.063" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230718 11:02:06.063" endtime="20230718 11:02:06.063"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:02:06.063" level="INFO">${STATE["Tên đăng nhập"]} = mehul15@example.org</msg>
<status status="PASS" starttime="20230718 11:02:06.063" endtime="20230718 11:02:06.063"/>
</kw>
<status status="PASS" starttime="20230718 11:02:06.063" endtime="20230718 11:02:06.063"/>
</branch>
<status status="PASS" starttime="20230718 11:02:06.063" endtime="20230718 11:02:06.063"/>
</if>
<status status="PASS" starttime="20230718 11:02:03.850" endtime="20230718 11:02:06.063"/>
</kw>
<kw name="And Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:02:06.079" endtime="20230718 11:02:06.484"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:06.486" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230718 11:02:06.486" endtime="20230718 11:02:06.486"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230718 11:02:06.521" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230718 11:02:06.487" endtime="20230718 11:02:06.521"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230718 11:02:06.523" endtime="20230718 11:02:06.523"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230718 11:02:06.524" endtime="20230718 11:02:06.524"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:06.522" endtime="20230718 11:02:06.525"/>
</branch>
<status status="PASS" starttime="20230718 11:02:06.522" endtime="20230718 11:02:06.525"/>
</if>
<status status="PASS" starttime="20230718 11:02:06.485" endtime="20230718 11:02:06.526"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230718 11:02:06.526" endtime="20230718 11:02:06.598"/>
</kw>
<status status="PASS" starttime="20230718 11:02:06.079" endtime="20230718 11:02:06.598"/>
</kw>
<kw name="Then Required message &quot;Mật khẩu&quot; displayed under &quot;Xin vui lòng nhập mật khẩu&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230718 11:02:06.601" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230718 11:02:06.601" endtime="20230718 11:02:06.601"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:02:06.623" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230718 11:02:06.601" endtime="20230718 11:02:06.624"/>
</kw>
<status status="PASS" starttime="20230718 11:02:06.601" endtime="20230718 11:02:06.624"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:02:06.719" level="INFO">Text: 'Xin vui lòng nhập mật khẩu'</msg>
<status status="PASS" starttime="20230718 11:02:06.632" endtime="20230718 11:02:06.720"/>
</kw>
<status status="PASS" starttime="20230718 11:02:06.625" endtime="20230718 11:02:06.720"/>
</kw>
<status status="PASS" starttime="20230718 11:02:06.601" endtime="20230718 11:02:06.720"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230718 11:02:07.675" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230718 11:02:06.722" endtime="20230718 11:02:07.675"/>
</kw>
<status status="PASS" starttime="20230718 11:02:06.721" endtime="20230718 11:02:07.675"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230718 11:02:00.387" endtime="20230718 11:02:07.675"/>
</test>
<test id="s1-t3" name="DN-03 Validation text with &quot;Tên đăng nhập&quot; field and &quot;Mật khẩu&quot; field" line="22">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230718 11:02:07.707" endtime="20230718 11:02:07.707"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230718 11:02:07.707" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\a38276e9-2d8f-402d-94e9-84ee2cb4fa7a"}</msg>
<msg timestamp="20230718 11:02:08.930" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\a38276e9-2d8f-402d-94e9-84ee2cb4fa7a"}</msg>
<status status="PASS" starttime="20230718 11:02:07.707" endtime="20230718 11:02:08.930"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230718 11:02:11.223" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230718 11:02:11.223" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230718 11:02:08.945" endtime="20230718 11:02:11.223"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230718 11:02:11.226" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230718 11:02:11.225" endtime="20230718 11:02:11.226"/>
</kw>
<status status="PASS" starttime="20230718 11:02:07.707" endtime="20230718 11:02:11.226"/>
</kw>
<kw name="When Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:02:11.230" endtime="20230718 11:02:13.857"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:13.861" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230718 11:02:13.861" endtime="20230718 11:02:13.861"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230718 11:02:13.870" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230718 11:02:13.862" endtime="20230718 11:02:13.874"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230718 11:02:13.875" endtime="20230718 11:02:13.875"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230718 11:02:13.876" endtime="20230718 11:02:13.876"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:13.874" endtime="20230718 11:02:13.876"/>
</branch>
<status status="PASS" starttime="20230718 11:02:13.874" endtime="20230718 11:02:13.876"/>
</if>
<status status="PASS" starttime="20230718 11:02:13.857" endtime="20230718 11:02:13.877"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230718 11:02:13.877" endtime="20230718 11:02:13.987"/>
</kw>
<status status="PASS" starttime="20230718 11:02:11.229" endtime="20230718 11:02:13.989"/>
</kw>
<kw name="Then Required message &quot;Tên đăng nhập&quot; displayed under &quot;Xin vui lòng nhập tên đăng nhập&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230718 11:02:13.996" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230718 11:02:13.994" endtime="20230718 11:02:13.996"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:02:14.021" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230718 11:02:13.998" endtime="20230718 11:02:14.022"/>
</kw>
<status status="PASS" starttime="20230718 11:02:13.996" endtime="20230718 11:02:14.023"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:02:14.133" level="INFO">Text: 'Xin vui lòng nhập tên đăng nhập'</msg>
<status status="PASS" starttime="20230718 11:02:14.033" endtime="20230718 11:02:14.133"/>
</kw>
<status status="PASS" starttime="20230718 11:02:14.024" endtime="20230718 11:02:14.133"/>
</kw>
<status status="PASS" starttime="20230718 11:02:13.993" endtime="20230718 11:02:14.133"/>
</kw>
<kw name="And Required message &quot;Mật khẩu&quot; displayed under &quot;Xin vui lòng nhập mật khẩu&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230718 11:02:14.149" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230718 11:02:14.149" endtime="20230718 11:02:14.149"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:02:14.197" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230718 11:02:14.149" endtime="20230718 11:02:14.197"/>
</kw>
<status status="PASS" starttime="20230718 11:02:14.149" endtime="20230718 11:02:14.198"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:02:14.293" level="INFO">Text: 'Xin vui lòng nhập mật khẩu'</msg>
<status status="PASS" starttime="20230718 11:02:14.202" endtime="20230718 11:02:14.293"/>
</kw>
<status status="PASS" starttime="20230718 11:02:14.199" endtime="20230718 11:02:14.293"/>
</kw>
<status status="PASS" starttime="20230718 11:02:14.149" endtime="20230718 11:02:14.293"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230718 11:02:15.539" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230718 11:02:14.305" endtime="20230718 11:02:15.539"/>
</kw>
<status status="PASS" starttime="20230718 11:02:14.293" endtime="20230718 11:02:15.539"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230718 11:02:07.692" endtime="20230718 11:02:15.539"/>
</test>
<test id="s1-t4" name="DN-04 SI-04: Validation text with &quot;Tên đăng nhập&quot; field when enter invalid email format" line="28">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230718 11:02:15.568" endtime="20230718 11:02:15.569"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230718 11:02:15.572" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\6602ddf3-1cbe-46ea-bd1e-0e953cc51b99"}</msg>
<msg timestamp="20230718 11:02:16.872" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\6602ddf3-1cbe-46ea-bd1e-0e953cc51b99"}</msg>
<status status="PASS" starttime="20230718 11:02:15.570" endtime="20230718 11:02:16.872"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230718 11:02:19.223" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230718 11:02:19.223" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230718 11:02:16.872" endtime="20230718 11:02:19.223"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230718 11:02:19.225" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230718 11:02:19.224" endtime="20230718 11:02:19.226"/>
</kw>
<status status="PASS" starttime="20230718 11:02:15.568" endtime="20230718 11:02:19.226"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Tên đăng nhập&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:19.232" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:02:19.231" endtime="20230718 11:02:19.232"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:19.233" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:02:19.233" endtime="20230718 11:02:19.233"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:19.235" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:02:19.234" endtime="20230718 11:02:19.235"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:19.236" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:02:19.236" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:02:19.235" endtime="20230718 11:02:19.236"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:19.237" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230718 11:02:19.236" endtime="20230718 11:02:19.237"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:19.239" level="INFO">Length is 1</msg>
<msg timestamp="20230718 11:02:19.239" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230718 11:02:19.238" endtime="20230718 11:02:19.239"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:19.240" endtime="20230718 11:02:19.241"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:19.242" endtime="20230718 11:02:19.242"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:19.239" endtime="20230718 11:02:19.242"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:19.242" endtime="20230718 11:02:19.242"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:19.242" endtime="20230718 11:02:19.242"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:19.242" endtime="20230718 11:02:19.242"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:19.242" endtime="20230718 11:02:19.242"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:19.247" endtime="20230718 11:02:19.248"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:19.248" endtime="20230718 11:02:19.249"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:19.247" endtime="20230718 11:02:19.249"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:19.250" endtime="20230718 11:02:19.250"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:19.251" endtime="20230718 11:02:19.251"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:19.249" endtime="20230718 11:02:19.251"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:19.253" endtime="20230718 11:02:19.253"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:19.253" endtime="20230718 11:02:19.254"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:19.252" endtime="20230718 11:02:19.254"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:02:19.255" endtime="20230718 11:02:19.255"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:19.254" endtime="20230718 11:02:19.255"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230718 11:02:19.259" endtime="20230718 11:02:19.261"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:19.256" endtime="20230718 11:02:19.261"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:19.264" endtime="20230718 11:02:19.265"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:19.265" endtime="20230718 11:02:19.266"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:19.262" endtime="20230718 11:02:19.266"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:02:19.267" endtime="20230718 11:02:19.267"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:19.266" endtime="20230718 11:02:19.268"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:02:19.269" endtime="20230718 11:02:19.269"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:19.268" endtime="20230718 11:02:19.269"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:19.270" endtime="20230718 11:02:19.271"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:19.270" endtime="20230718 11:02:19.271"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230718 11:02:19.273" level="INFO">${new_text} = Quae nostrum atque ea veniam.</msg>
<status status="PASS" starttime="20230718 11:02:19.272" endtime="20230718 11:02:19.273"/>
</kw>
<status status="PASS" starttime="20230718 11:02:19.271" endtime="20230718 11:02:19.273"/>
</branch>
<status status="PASS" starttime="20230718 11:02:19.239" endtime="20230718 11:02:19.274"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:19.276" level="INFO">Length is 8</msg>
<msg timestamp="20230718 11:02:19.276" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230718 11:02:19.275" endtime="20230718 11:02:19.276"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:02:19.279" level="INFO">${text} = Quae nostrum atque ea veniam.</msg>
<status status="PASS" starttime="20230718 11:02:19.278" endtime="20230718 11:02:19.279"/>
</kw>
<status status="PASS" starttime="20230718 11:02:19.277" endtime="20230718 11:02:19.279"/>
</branch>
<status status="PASS" starttime="20230718 11:02:19.277" endtime="20230718 11:02:19.280"/>
</if>
<msg timestamp="20230718 11:02:19.280" level="INFO">${text} = Quae nostrum atque ea veniam.</msg>
<status status="PASS" starttime="20230718 11:02:19.230" endtime="20230718 11:02:19.280"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:02:19.282" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:02:19.281" endtime="20230718 11:02:19.282"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:02:19.282" endtime="20230718 11:02:21.834"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:02:21.834" level="INFO">Fills the text 'Quae nostrum atque ea veniam.' in the given field.</msg>
<status status="PASS" starttime="20230718 11:02:21.834" endtime="20230718 11:02:21.903"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:21.903" level="INFO">Length is 29</msg>
<msg timestamp="20230718 11:02:21.903" level="INFO">${cnt} = 29</msg>
<status status="PASS" starttime="20230718 11:02:21.903" endtime="20230718 11:02:21.903"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:02:21.903" level="INFO">${STATE["Tên đăng nhập"]} = Quae nostrum atque ea veniam.</msg>
<status status="PASS" starttime="20230718 11:02:21.903" endtime="20230718 11:02:21.903"/>
</kw>
<status status="PASS" starttime="20230718 11:02:21.903" endtime="20230718 11:02:21.903"/>
</branch>
<status status="PASS" starttime="20230718 11:02:21.903" endtime="20230718 11:02:21.903"/>
</if>
<status status="PASS" starttime="20230718 11:02:19.229" endtime="20230718 11:02:21.903"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:21.919" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:02:21.919" endtime="20230718 11:02:21.919"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:21.919" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:02:21.919" endtime="20230718 11:02:21.919"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:21.919" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:02:21.919" endtime="20230718 11:02:21.919"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:21.919" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:02:21.919" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:02:21.919" endtime="20230718 11:02:21.919"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:21.919" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230718 11:02:21.919" endtime="20230718 11:02:21.919"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:21.919" level="INFO">Length is 1</msg>
<msg timestamp="20230718 11:02:21.919" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230718 11:02:21.919" endtime="20230718 11:02:21.919"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:21.919" endtime="20230718 11:02:21.919"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:21.919" endtime="20230718 11:02:21.919"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:21.919" endtime="20230718 11:02:21.919"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:21.919" endtime="20230718 11:02:21.919"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:21.919" endtime="20230718 11:02:21.919"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:21.919" endtime="20230718 11:02:21.919"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:21.919" endtime="20230718 11:02:21.919"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:21.919" endtime="20230718 11:02:21.919"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:21.919" endtime="20230718 11:02:21.919"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:21.919" endtime="20230718 11:02:21.919"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:21.935" endtime="20230718 11:02:21.935"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:21.935" endtime="20230718 11:02:21.935"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:21.919" endtime="20230718 11:02:21.935"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:21.935" endtime="20230718 11:02:21.939"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:21.939" endtime="20230718 11:02:21.940"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:21.935" endtime="20230718 11:02:21.940"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:02:21.941" endtime="20230718 11:02:21.942"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:21.941" endtime="20230718 11:02:21.942"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230718 11:02:21.944" endtime="20230718 11:02:21.944"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:21.942" endtime="20230718 11:02:21.944"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:21.945" endtime="20230718 11:02:21.946"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:21.946" endtime="20230718 11:02:21.946"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:21.945" endtime="20230718 11:02:21.946"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:02:21.947" endtime="20230718 11:02:21.948"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:21.947" endtime="20230718 11:02:21.948"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:02:21.949" endtime="20230718 11:02:21.949"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:21.948" endtime="20230718 11:02:21.949"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:21.950" endtime="20230718 11:02:21.951"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:21.950" endtime="20230718 11:02:21.951"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230718 11:02:21.954" level="INFO">${new_text} = Sunt perferendis quis illo atque totam nostrum.</msg>
<status status="PASS" starttime="20230718 11:02:21.952" endtime="20230718 11:02:21.954"/>
</kw>
<status status="PASS" starttime="20230718 11:02:21.952" endtime="20230718 11:02:21.954"/>
</branch>
<status status="PASS" starttime="20230718 11:02:21.919" endtime="20230718 11:02:21.955"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:21.956" level="INFO">Length is 8</msg>
<msg timestamp="20230718 11:02:21.956" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230718 11:02:21.955" endtime="20230718 11:02:21.956"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:02:21.961" level="INFO">${text} = Sunt perferendis quis illo atque totam nostrum.</msg>
<status status="PASS" starttime="20230718 11:02:21.959" endtime="20230718 11:02:21.961"/>
</kw>
<status status="PASS" starttime="20230718 11:02:21.957" endtime="20230718 11:02:21.961"/>
</branch>
<status status="PASS" starttime="20230718 11:02:21.956" endtime="20230718 11:02:21.962"/>
</if>
<msg timestamp="20230718 11:02:21.963" level="INFO">${text} = Sunt perferendis quis illo atque totam nostrum.</msg>
<status status="PASS" starttime="20230718 11:02:21.903" endtime="20230718 11:02:21.963"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:02:21.965" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:02:21.964" endtime="20230718 11:02:21.965"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:02:21.966" endtime="20230718 11:02:22.187"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:02:22.188" level="INFO">Fills the text 'Sunt perferendis quis illo atque totam nostrum.' in the given field.</msg>
<status status="PASS" starttime="20230718 11:02:22.187" endtime="20230718 11:02:22.299"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:22.299" level="INFO">Length is 47</msg>
<msg timestamp="20230718 11:02:22.299" level="INFO">${cnt} = 47</msg>
<status status="PASS" starttime="20230718 11:02:22.299" endtime="20230718 11:02:22.299"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:02:22.299" level="INFO">${STATE["Mật khẩu"]} = Sunt perferendis quis illo atque totam nostrum.</msg>
<status status="PASS" starttime="20230718 11:02:22.299" endtime="20230718 11:02:22.299"/>
</kw>
<status status="PASS" starttime="20230718 11:02:22.299" endtime="20230718 11:02:22.299"/>
</branch>
<status status="PASS" starttime="20230718 11:02:22.299" endtime="20230718 11:02:22.299"/>
</if>
<status status="PASS" starttime="20230718 11:02:21.903" endtime="20230718 11:02:22.299"/>
</kw>
<kw name="And Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:02:22.304" endtime="20230718 11:02:22.617"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:22.617" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230718 11:02:22.617" endtime="20230718 11:02:22.628"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230718 11:02:22.635" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230718 11:02:22.628" endtime="20230718 11:02:22.635"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230718 11:02:22.635" endtime="20230718 11:02:22.635"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230718 11:02:22.635" endtime="20230718 11:02:22.635"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:22.635" endtime="20230718 11:02:22.635"/>
</branch>
<status status="PASS" starttime="20230718 11:02:22.635" endtime="20230718 11:02:22.635"/>
</if>
<status status="PASS" starttime="20230718 11:02:22.617" endtime="20230718 11:02:22.635"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230718 11:02:22.635" endtime="20230718 11:02:22.680"/>
</kw>
<status status="PASS" starttime="20230718 11:02:22.304" endtime="20230718 11:02:22.680"/>
</kw>
<kw name="Then Required message &quot;Tên đăng nhập&quot; displayed under &quot;Xin vui lòng nhập địa chỉ email hợp lệ!&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230718 11:02:22.680" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230718 11:02:22.680" endtime="20230718 11:02:22.680"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:02:22.713" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230718 11:02:22.693" endtime="20230718 11:02:22.714"/>
</kw>
<status status="PASS" starttime="20230718 11:02:22.680" endtime="20230718 11:02:22.714"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:02:22.779" level="INFO">Text: 'Xin vui lòng nhập địa chỉ email hợp lệ!'</msg>
<status status="PASS" starttime="20230718 11:02:22.718" endtime="20230718 11:02:22.779"/>
</kw>
<status status="PASS" starttime="20230718 11:02:22.714" endtime="20230718 11:02:22.779"/>
</kw>
<status status="PASS" starttime="20230718 11:02:22.680" endtime="20230718 11:02:22.779"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230718 11:02:23.873" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230718 11:02:22.779" endtime="20230718 11:02:23.873"/>
</kw>
<status status="PASS" starttime="20230718 11:02:22.779" endtime="20230718 11:02:23.873"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230718 11:02:15.561" endtime="20230718 11:02:23.889"/>
</test>
<test id="s1-t5" name="DN-05 Verify that Đăng nhập unsuccessfully because enter incorrect Email" line="36">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230718 11:02:23.926" endtime="20230718 11:02:23.927"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230718 11:02:23.930" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\f221c528-6265-46b4-ab61-735ee81dd82d"}</msg>
<msg timestamp="20230718 11:02:25.088" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\f221c528-6265-46b4-ab61-735ee81dd82d"}</msg>
<status status="PASS" starttime="20230718 11:02:23.928" endtime="20230718 11:02:25.088"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230718 11:02:27.423" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230718 11:02:27.424" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230718 11:02:25.088" endtime="20230718 11:02:27.424"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230718 11:02:27.426" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230718 11:02:27.425" endtime="20230718 11:02:27.426"/>
</kw>
<status status="PASS" starttime="20230718 11:02:23.925" endtime="20230718 11:02:27.426"/>
</kw>
<kw name="When Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:27.432" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:02:27.431" endtime="20230718 11:02:27.432"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:27.433" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:02:27.433" endtime="20230718 11:02:27.434"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:27.435" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:02:27.434" endtime="20230718 11:02:27.435"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:27.436" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:02:27.436" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:02:27.435" endtime="20230718 11:02:27.436"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:27.438" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230718 11:02:27.437" endtime="20230718 11:02:27.438"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:27.439" level="INFO">Length is 1</msg>
<msg timestamp="20230718 11:02:27.440" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230718 11:02:27.438" endtime="20230718 11:02:27.440"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:27.441" endtime="20230718 11:02:27.442"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:27.442" endtime="20230718 11:02:27.442"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:27.440" endtime="20230718 11:02:27.442"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:27.442" endtime="20230718 11:02:27.442"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:27.442" endtime="20230718 11:02:27.446"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:27.446" endtime="20230718 11:02:27.447"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:27.442" endtime="20230718 11:02:27.447"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:27.448" endtime="20230718 11:02:27.448"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:27.449" endtime="20230718 11:02:27.449"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:27.447" endtime="20230718 11:02:27.450"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:27.451" endtime="20230718 11:02:27.451"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:27.451" endtime="20230718 11:02:27.452"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:27.450" endtime="20230718 11:02:27.452"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:27.453" endtime="20230718 11:02:27.453"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:27.454" endtime="20230718 11:02:27.454"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:27.452" endtime="20230718 11:02:27.454"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:02:27.456" endtime="20230718 11:02:27.458"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:27.455" endtime="20230718 11:02:27.459"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<msg timestamp="20230718 11:02:27.463" level="INFO">${new_text} = krishnamurthyyuvaan@example.net</msg>
<status status="PASS" starttime="20230718 11:02:27.461" endtime="20230718 11:02:27.463"/>
</kw>
<status status="PASS" starttime="20230718 11:02:27.460" endtime="20230718 11:02:27.463"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:27.464" endtime="20230718 11:02:27.464"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:27.465" endtime="20230718 11:02:27.465"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:27.464" endtime="20230718 11:02:27.465"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:02:27.466" endtime="20230718 11:02:27.466"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:27.466" endtime="20230718 11:02:27.467"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:02:27.468" endtime="20230718 11:02:27.468"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:27.467" endtime="20230718 11:02:27.468"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:27.469" endtime="20230718 11:02:27.469"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:27.468" endtime="20230718 11:02:27.469"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:27.470" endtime="20230718 11:02:27.470"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:27.470" endtime="20230718 11:02:27.470"/>
</branch>
<status status="PASS" starttime="20230718 11:02:27.440" endtime="20230718 11:02:27.471"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:27.472" level="INFO">Length is 8</msg>
<msg timestamp="20230718 11:02:27.473" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230718 11:02:27.471" endtime="20230718 11:02:27.473"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:02:27.479" level="INFO">${text} = krishnamurthyyuvaan@example.net</msg>
<status status="PASS" starttime="20230718 11:02:27.478" endtime="20230718 11:02:27.479"/>
</kw>
<status status="PASS" starttime="20230718 11:02:27.476" endtime="20230718 11:02:27.479"/>
</branch>
<status status="PASS" starttime="20230718 11:02:27.475" endtime="20230718 11:02:27.479"/>
</if>
<msg timestamp="20230718 11:02:27.480" level="INFO">${text} = krishnamurthyyuvaan@example.net</msg>
<status status="PASS" starttime="20230718 11:02:27.429" endtime="20230718 11:02:27.480"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:02:27.481" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:02:27.480" endtime="20230718 11:02:27.481"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:02:27.482" endtime="20230718 11:02:29.474"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:02:29.475" level="INFO">Fills the text 'krishnamurthyyuvaan@example.net' in the given field.</msg>
<status status="PASS" starttime="20230718 11:02:29.475" endtime="20230718 11:02:29.536"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:29.536" level="INFO">Length is 31</msg>
<msg timestamp="20230718 11:02:29.536" level="INFO">${cnt} = 31</msg>
<status status="PASS" starttime="20230718 11:02:29.536" endtime="20230718 11:02:29.536"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:02:29.536" level="INFO">${STATE["Tên đăng nhập"]} = krishnamurthyyuvaan@example.net</msg>
<status status="PASS" starttime="20230718 11:02:29.536" endtime="20230718 11:02:29.536"/>
</kw>
<status status="PASS" starttime="20230718 11:02:29.536" endtime="20230718 11:02:29.536"/>
</branch>
<status status="PASS" starttime="20230718 11:02:29.536" endtime="20230718 11:02:29.536"/>
</if>
<status status="PASS" starttime="20230718 11:02:27.427" endtime="20230718 11:02:29.536"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Password1!&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:29.551" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:02:29.551" endtime="20230718 11:02:29.551"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:29.567" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:02:29.567" endtime="20230718 11:02:29.567"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:29.567" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:02:29.567" endtime="20230718 11:02:29.567"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:29.567" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:02:29.567" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:02:29.567" endtime="20230718 11:02:29.567"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:29.567" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230718 11:02:29.567" endtime="20230718 11:02:29.567"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:29.567" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:02:29.567" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230718 11:02:29.567" endtime="20230718 11:02:29.567"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:29.567" endtime="20230718 11:02:29.567"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:29.567" endtime="20230718 11:02:29.567"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:29.567" endtime="20230718 11:02:29.567"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:29.567" endtime="20230718 11:02:29.567"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:29.567" endtime="20230718 11:02:29.567"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:29.567" endtime="20230718 11:02:29.567"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:29.567" endtime="20230718 11:02:29.567"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:29.567" endtime="20230718 11:02:29.567"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:29.567" endtime="20230718 11:02:29.567"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:29.567" endtime="20230718 11:02:29.583"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:29.583" endtime="20230718 11:02:29.583"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:29.583" endtime="20230718 11:02:29.583"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:29.583" endtime="20230718 11:02:29.583"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:29.583" endtime="20230718 11:02:29.583"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:29.583" endtime="20230718 11:02:29.583"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:29.583" endtime="20230718 11:02:29.583"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:02:29.583" endtime="20230718 11:02:29.583"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:29.583" endtime="20230718 11:02:29.583"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230718 11:02:29.583" endtime="20230718 11:02:29.583"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:29.583" endtime="20230718 11:02:29.583"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:29.583" endtime="20230718 11:02:29.583"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:29.583" endtime="20230718 11:02:29.583"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:29.583" endtime="20230718 11:02:29.583"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:02:29.583" endtime="20230718 11:02:29.583"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:29.583" endtime="20230718 11:02:29.583"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:02:29.597" endtime="20230718 11:02:29.597"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:29.596" endtime="20230718 11:02:29.597"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:29.598" endtime="20230718 11:02:29.599"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:29.598" endtime="20230718 11:02:29.599"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:29.600" endtime="20230718 11:02:29.600"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:29.599" endtime="20230718 11:02:29.600"/>
</branch>
<status status="PASS" starttime="20230718 11:02:29.567" endtime="20230718 11:02:29.601"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:29.602" level="INFO">Length is 10</msg>
<msg timestamp="20230718 11:02:29.602" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230718 11:02:29.601" endtime="20230718 11:02:29.602"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:02:29.604" level="INFO">${text} = Password1!</msg>
<status status="PASS" starttime="20230718 11:02:29.604" endtime="20230718 11:02:29.605"/>
</kw>
<status status="PASS" starttime="20230718 11:02:29.602" endtime="20230718 11:02:29.605"/>
</branch>
<status status="PASS" starttime="20230718 11:02:29.602" endtime="20230718 11:02:29.606"/>
</if>
<msg timestamp="20230718 11:02:29.607" level="INFO">${text} = Password1!</msg>
<status status="PASS" starttime="20230718 11:02:29.551" endtime="20230718 11:02:29.607"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:02:29.612" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:02:29.608" endtime="20230718 11:02:29.612"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:02:29.613" endtime="20230718 11:02:29.733"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:02:29.734" level="INFO">Fills the text 'Password1!' in the given field.</msg>
<status status="PASS" starttime="20230718 11:02:29.733" endtime="20230718 11:02:29.804"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:29.804" level="INFO">Length is 10</msg>
<msg timestamp="20230718 11:02:29.804" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230718 11:02:29.804" endtime="20230718 11:02:29.804"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:02:29.804" level="INFO">${STATE["Mật khẩu"]} = Password1!</msg>
<status status="PASS" starttime="20230718 11:02:29.804" endtime="20230718 11:02:29.804"/>
</kw>
<status status="PASS" starttime="20230718 11:02:29.804" endtime="20230718 11:02:29.817"/>
</branch>
<status status="PASS" starttime="20230718 11:02:29.804" endtime="20230718 11:02:29.817"/>
</if>
<status status="PASS" starttime="20230718 11:02:29.551" endtime="20230718 11:02:29.817"/>
</kw>
<kw name="And Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:02:29.822" endtime="20230718 11:02:30.133"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:30.133" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230718 11:02:30.133" endtime="20230718 11:02:30.133"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230718 11:02:30.163" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230718 11:02:30.133" endtime="20230718 11:02:30.163"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230718 11:02:30.163" endtime="20230718 11:02:30.163"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230718 11:02:30.163" endtime="20230718 11:02:30.163"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:30.163" endtime="20230718 11:02:30.163"/>
</branch>
<status status="PASS" starttime="20230718 11:02:30.163" endtime="20230718 11:02:30.163"/>
</if>
<status status="PASS" starttime="20230718 11:02:30.133" endtime="20230718 11:02:30.163"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230718 11:02:30.163" endtime="20230718 11:02:30.211"/>
</kw>
<status status="PASS" starttime="20230718 11:02:29.821" endtime="20230718 11:02:30.211"/>
</kw>
<kw name="Then User look message &quot;Người dùng _@Tên đăng nhập@_ không tồn tại!&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:30.211" level="INFO">${contains} = ['Tên đăng nhập']</msg>
<status status="PASS" starttime="20230718 11:02:30.211" endtime="20230718 11:02:30.211"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:30.211" level="INFO">Length is 1</msg>
<msg timestamp="20230718 11:02:30.211" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230718 11:02:30.211" endtime="20230718 11:02:30.211"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:02:30.227" level="INFO">${message} = Người dùng krishnamurthyyuvaan@example.net không tồn tại!</msg>
<status status="PASS" starttime="20230718 11:02:30.211" endtime="20230718 11:02:30.227"/>
</kw>
<status status="PASS" starttime="20230718 11:02:30.211" endtime="20230718 11:02:30.228"/>
</branch>
<status status="PASS" starttime="20230718 11:02:30.211" endtime="20230718 11:02:30.228"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:02:31.666" level="INFO">Text: 'Người dùng krishnamurthyyuvaan@example.net không tồn tại!'</msg>
<status status="PASS" starttime="20230718 11:02:30.232" endtime="20230718 11:02:31.666"/>
</kw>
<status status="PASS" starttime="20230718 11:02:30.228" endtime="20230718 11:02:31.666"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:31.666" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230718 11:02:31.666" endtime="20230718 11:02:31.666"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:02:32.129" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230718 11:02:32.129" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230718 11:02:32.130" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230718 11:02:31.679" endtime="20230718 11:02:32.143"/>
</kw>
<status status="FAIL" starttime="20230718 11:02:31.666" endtime="20230718 11:02:32.143"/>
</kw>
<msg timestamp="20230718 11:02:32.144" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230718 11:02:31.666" endtime="20230718 11:02:32.145"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230718 11:02:32.147" endtime="20230718 11:02:32.147"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:32.146" endtime="20230718 11:02:32.147"/>
</branch>
<status status="PASS" starttime="20230718 11:02:32.146" endtime="20230718 11:02:32.148"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:02:37.712" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230718 11:02:32.150" endtime="20230718 11:02:37.712"/>
</kw>
<status status="PASS" starttime="20230718 11:02:32.148" endtime="20230718 11:02:37.712"/>
</kw>
<status status="PASS" starttime="20230718 11:02:30.211" endtime="20230718 11:02:37.712"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230718 11:02:40.599" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230718 11:02:37.712" endtime="20230718 11:02:40.599"/>
</kw>
<status status="PASS" starttime="20230718 11:02:37.712" endtime="20230718 11:02:40.599"/>
</kw>
<status status="PASS" starttime="20230718 11:02:23.916" endtime="20230718 11:02:40.599"/>
</test>
<test id="s1-t6" name="DN-06 Verify that Đăng nhập unsuccessfully because enter incorrect password" line="42">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230718 11:02:40.630" endtime="20230718 11:02:40.631"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230718 11:02:40.633" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\8389ca2e-e78f-41aa-9440-37d273a3893f"}</msg>
<msg timestamp="20230718 11:02:41.877" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\8389ca2e-e78f-41aa-9440-37d273a3893f"}</msg>
<status status="PASS" starttime="20230718 11:02:40.631" endtime="20230718 11:02:41.877"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230718 11:02:44.311" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230718 11:02:44.311" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230718 11:02:41.877" endtime="20230718 11:02:44.312"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230718 11:02:44.314" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230718 11:02:44.313" endtime="20230718 11:02:44.314"/>
</kw>
<status status="PASS" starttime="20230718 11:02:40.629" endtime="20230718 11:02:44.316"/>
</kw>
<kw name="When Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;admin@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:44.324" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:02:44.324" endtime="20230718 11:02:44.324"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:44.327" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:02:44.326" endtime="20230718 11:02:44.327"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:44.331" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:02:44.328" endtime="20230718 11:02:44.331"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:44.332" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:02:44.332" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:02:44.332" endtime="20230718 11:02:44.332"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:44.335" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230718 11:02:44.333" endtime="20230718 11:02:44.335"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:44.336" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:02:44.336" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230718 11:02:44.335" endtime="20230718 11:02:44.336"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:44.338" endtime="20230718 11:02:44.338"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:44.339" endtime="20230718 11:02:44.340"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:44.337" endtime="20230718 11:02:44.340"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:44.342" endtime="20230718 11:02:44.342"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:44.343" endtime="20230718 11:02:44.343"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:44.344" endtime="20230718 11:02:44.345"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:44.341" endtime="20230718 11:02:44.346"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:44.348" endtime="20230718 11:02:44.348"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:44.350" endtime="20230718 11:02:44.350"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:44.346" endtime="20230718 11:02:44.350"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:44.351" endtime="20230718 11:02:44.352"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:44.352" endtime="20230718 11:02:44.353"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:44.351" endtime="20230718 11:02:44.353"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:44.354" endtime="20230718 11:02:44.354"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:44.354" endtime="20230718 11:02:44.359"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:44.353" endtime="20230718 11:02:44.359"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:02:44.361" endtime="20230718 11:02:44.361"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:44.360" endtime="20230718 11:02:44.361"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230718 11:02:44.362" endtime="20230718 11:02:44.363"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:44.361" endtime="20230718 11:02:44.363"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:44.364" endtime="20230718 11:02:44.364"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:44.365" endtime="20230718 11:02:44.365"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:44.363" endtime="20230718 11:02:44.365"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:02:44.367" endtime="20230718 11:02:44.367"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:44.366" endtime="20230718 11:02:44.367"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:02:44.370" endtime="20230718 11:02:44.370"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:44.368" endtime="20230718 11:02:44.370"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:44.371" endtime="20230718 11:02:44.372"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:44.370" endtime="20230718 11:02:44.373"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:44.374" endtime="20230718 11:02:44.374"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:44.373" endtime="20230718 11:02:44.374"/>
</branch>
<status status="PASS" starttime="20230718 11:02:44.336" endtime="20230718 11:02:44.375"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:44.376" level="INFO">Length is 15</msg>
<msg timestamp="20230718 11:02:44.376" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230718 11:02:44.375" endtime="20230718 11:02:44.376"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:02:44.378" level="INFO">${text} = admin@admin.com</msg>
<status status="PASS" starttime="20230718 11:02:44.377" endtime="20230718 11:02:44.378"/>
</kw>
<status status="PASS" starttime="20230718 11:02:44.376" endtime="20230718 11:02:44.378"/>
</branch>
<status status="PASS" starttime="20230718 11:02:44.376" endtime="20230718 11:02:44.379"/>
</if>
<msg timestamp="20230718 11:02:44.379" level="INFO">${text} = admin@admin.com</msg>
<status status="PASS" starttime="20230718 11:02:44.323" endtime="20230718 11:02:44.379"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:02:44.381" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:02:44.380" endtime="20230718 11:02:44.381"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:02:44.382" endtime="20230718 11:02:47.111"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:02:47.111" level="INFO">Fills the text 'admin@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230718 11:02:47.111" endtime="20230718 11:02:47.169"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:47.169" level="INFO">Length is 15</msg>
<msg timestamp="20230718 11:02:47.169" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230718 11:02:47.169" endtime="20230718 11:02:47.169"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:02:47.169" level="INFO">${STATE["Tên đăng nhập"]} = admin@admin.com</msg>
<status status="PASS" starttime="20230718 11:02:47.169" endtime="20230718 11:02:47.169"/>
</kw>
<status status="PASS" starttime="20230718 11:02:47.169" endtime="20230718 11:02:47.169"/>
</branch>
<status status="PASS" starttime="20230718 11:02:47.169" endtime="20230718 11:02:47.169"/>
</if>
<status status="PASS" starttime="20230718 11:02:44.319" endtime="20230718 11:02:47.169"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:47.169" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:02:47.169" endtime="20230718 11:02:47.169"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:47.169" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:02:47.169" endtime="20230718 11:02:47.169"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:47.185" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:02:47.185" endtime="20230718 11:02:47.185"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:47.185" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:02:47.185" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:02:47.185" endtime="20230718 11:02:47.185"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:47.185" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230718 11:02:47.185" endtime="20230718 11:02:47.185"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:47.185" level="INFO">Length is 1</msg>
<msg timestamp="20230718 11:02:47.185" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230718 11:02:47.185" endtime="20230718 11:02:47.185"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:47.185" endtime="20230718 11:02:47.185"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:47.185" endtime="20230718 11:02:47.185"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:47.185" endtime="20230718 11:02:47.185"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:47.185" endtime="20230718 11:02:47.185"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:47.185" endtime="20230718 11:02:47.185"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:47.185" endtime="20230718 11:02:47.185"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:47.185" endtime="20230718 11:02:47.185"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:47.185" endtime="20230718 11:02:47.185"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:47.185" endtime="20230718 11:02:47.185"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:47.185" endtime="20230718 11:02:47.185"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:47.185" endtime="20230718 11:02:47.185"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:47.185" endtime="20230718 11:02:47.185"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:47.185" endtime="20230718 11:02:47.185"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:47.200" endtime="20230718 11:02:47.200"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:47.200" endtime="20230718 11:02:47.202"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:47.200" endtime="20230718 11:02:47.202"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:02:47.203" endtime="20230718 11:02:47.203"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:47.202" endtime="20230718 11:02:47.203"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230718 11:02:47.205" endtime="20230718 11:02:47.205"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:47.204" endtime="20230718 11:02:47.205"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:47.206" endtime="20230718 11:02:47.208"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:47.208" endtime="20230718 11:02:47.208"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:47.206" endtime="20230718 11:02:47.208"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:02:47.209" endtime="20230718 11:02:47.210"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:47.209" endtime="20230718 11:02:47.210"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:02:47.210" endtime="20230718 11:02:47.210"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:47.210" endtime="20230718 11:02:47.214"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:47.217" endtime="20230718 11:02:47.217"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:47.215" endtime="20230718 11:02:47.219"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230718 11:02:47.220" level="INFO">${new_text} = Excepturi libero dolores laudantium beatae voluptatum perferendis.</msg>
<status status="PASS" starttime="20230718 11:02:47.219" endtime="20230718 11:02:47.220"/>
</kw>
<status status="PASS" starttime="20230718 11:02:47.219" endtime="20230718 11:02:47.220"/>
</branch>
<status status="PASS" starttime="20230718 11:02:47.185" endtime="20230718 11:02:47.220"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:47.223" level="INFO">Length is 8</msg>
<msg timestamp="20230718 11:02:47.223" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230718 11:02:47.222" endtime="20230718 11:02:47.223"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:02:47.227" level="INFO">${text} = Excepturi libero dolores laudantium beatae voluptatum perferendis.</msg>
<status status="PASS" starttime="20230718 11:02:47.226" endtime="20230718 11:02:47.227"/>
</kw>
<status status="PASS" starttime="20230718 11:02:47.225" endtime="20230718 11:02:47.227"/>
</branch>
<status status="PASS" starttime="20230718 11:02:47.224" endtime="20230718 11:02:47.228"/>
</if>
<msg timestamp="20230718 11:02:47.228" level="INFO">${text} = Excepturi libero dolores laudantium beatae voluptatum perferendis.</msg>
<status status="PASS" starttime="20230718 11:02:47.169" endtime="20230718 11:02:47.228"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:02:47.230" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:02:47.229" endtime="20230718 11:02:47.230"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:02:47.230" endtime="20230718 11:02:47.331"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:02:47.331" level="INFO">Fills the text 'Excepturi libero dolores laudantium beatae voluptatum perferendis.' in the given field.</msg>
<status status="PASS" starttime="20230718 11:02:47.331" endtime="20230718 11:02:47.396"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:47.396" level="INFO">Length is 66</msg>
<msg timestamp="20230718 11:02:47.396" level="INFO">${cnt} = 66</msg>
<status status="PASS" starttime="20230718 11:02:47.396" endtime="20230718 11:02:47.396"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:02:47.396" level="INFO">${STATE["Mật khẩu"]} = Excepturi libero dolores laudantium beatae voluptatum perferendis.</msg>
<status status="PASS" starttime="20230718 11:02:47.396" endtime="20230718 11:02:47.396"/>
</kw>
<status status="PASS" starttime="20230718 11:02:47.396" endtime="20230718 11:02:47.396"/>
</branch>
<status status="PASS" starttime="20230718 11:02:47.396" endtime="20230718 11:02:47.396"/>
</if>
<status status="PASS" starttime="20230718 11:02:47.169" endtime="20230718 11:02:47.396"/>
</kw>
<kw name="And Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:02:47.396" endtime="20230718 11:02:47.701"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:47.703" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230718 11:02:47.702" endtime="20230718 11:02:47.703"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230718 11:02:47.733" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230718 11:02:47.703" endtime="20230718 11:02:47.733"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230718 11:02:47.743" endtime="20230718 11:02:47.743"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230718 11:02:47.745" endtime="20230718 11:02:47.746"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:47.733" endtime="20230718 11:02:47.746"/>
</branch>
<status status="PASS" starttime="20230718 11:02:47.733" endtime="20230718 11:02:47.746"/>
</if>
<status status="PASS" starttime="20230718 11:02:47.702" endtime="20230718 11:02:47.747"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230718 11:02:47.748" endtime="20230718 11:02:48.129"/>
</kw>
<status status="PASS" starttime="20230718 11:02:47.396" endtime="20230718 11:02:48.129"/>
</kw>
<kw name="Then User look message &quot;Thông tin đăng nhập không hợp lệ cho người dùng _@Tên đăng nhập@_&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:48.129" level="INFO">${contains} = ['Tên đăng nhập']</msg>
<status status="PASS" starttime="20230718 11:02:48.129" endtime="20230718 11:02:48.129"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:48.129" level="INFO">Length is 1</msg>
<msg timestamp="20230718 11:02:48.129" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230718 11:02:48.129" endtime="20230718 11:02:48.129"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:02:48.142" level="INFO">${message} = Thông tin đăng nhập không hợp lệ cho người dùng admin@admin.com</msg>
<status status="PASS" starttime="20230718 11:02:48.138" endtime="20230718 11:02:48.142"/>
</kw>
<status status="PASS" starttime="20230718 11:02:48.129" endtime="20230718 11:02:48.142"/>
</branch>
<status status="PASS" starttime="20230718 11:02:48.129" endtime="20230718 11:02:48.143"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:02:49.294" level="INFO">Text: 'password must be shorter than or equal to 59 characters'</msg>
<msg timestamp="20230718 11:02:49.692" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230718 11:02:49.692" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230718 11:02:49.692" level="FAIL">Text 'password must be shorter than or equal to 59 characters' (str) should be 'Thông tin đăng nhập không hợp lệ cho người dùng admin@admin.com' (str)</msg>
<status status="FAIL" starttime="20230718 11:02:48.147" endtime="20230718 11:02:49.772"/>
</kw>
<status status="FAIL" starttime="20230718 11:02:48.143" endtime="20230718 11:02:49.776"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:49.776" endtime="20230718 11:02:49.776"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:49.776" endtime="20230718 11:02:49.776"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230718 11:02:49.776" endtime="20230718 11:02:49.776"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:49.776" endtime="20230718 11:02:49.776"/>
</branch>
<status status="NOT RUN" starttime="20230718 11:02:49.776" endtime="20230718 11:02:49.776"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230718 11:02:49.776" endtime="20230718 11:02:49.776"/>
</kw>
<status status="FAIL" starttime="20230718 11:02:48.129" endtime="20230718 11:02:49.776"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230718 11:02:51.004" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230718 11:02:49.776" endtime="20230718 11:02:51.004"/>
</kw>
<status status="PASS" starttime="20230718 11:02:49.776" endtime="20230718 11:02:51.004"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="FAIL" starttime="20230718 11:02:40.617" endtime="20230718 11:02:51.004">Text 'password must be shorter than or equal to 59 characters' (str) should be 'Thông tin đăng nhập không hợp lệ cho người dùng admin@admin.com' (str)</status>
</test>
<test id="s1-t7" name="DN-07 Verify that Đăng nhập unsuccessfully because enter incorrect username and password" line="49">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230718 11:02:51.049" endtime="20230718 11:02:51.050"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230718 11:02:51.055" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\48f85f4b-e8fc-49d3-8178-c27afa47699d"}</msg>
<msg timestamp="20230718 11:02:52.304" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\48f85f4b-e8fc-49d3-8178-c27afa47699d"}</msg>
<status status="PASS" starttime="20230718 11:02:51.051" endtime="20230718 11:02:52.304"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230718 11:02:54.745" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230718 11:02:54.745" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230718 11:02:52.305" endtime="20230718 11:02:54.745"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230718 11:02:54.747" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230718 11:02:54.746" endtime="20230718 11:02:54.747"/>
</kw>
<status status="PASS" starttime="20230718 11:02:51.048" endtime="20230718 11:02:54.747"/>
</kw>
<kw name="When Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:54.752" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:02:54.751" endtime="20230718 11:02:54.752"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:54.753" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:02:54.752" endtime="20230718 11:02:54.753"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:54.756" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:02:54.755" endtime="20230718 11:02:54.756"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:54.757" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:02:54.757" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:02:54.756" endtime="20230718 11:02:54.757"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:54.759" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230718 11:02:54.758" endtime="20230718 11:02:54.760"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:54.762" level="INFO">Length is 1</msg>
<msg timestamp="20230718 11:02:54.762" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230718 11:02:54.761" endtime="20230718 11:02:54.762"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:54.764" endtime="20230718 11:02:54.764"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:54.765" endtime="20230718 11:02:54.765"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:54.763" endtime="20230718 11:02:54.766"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:54.767" endtime="20230718 11:02:54.767"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:54.768" endtime="20230718 11:02:54.768"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:54.768" endtime="20230718 11:02:54.769"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:54.766" endtime="20230718 11:02:54.769"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:54.770" endtime="20230718 11:02:54.770"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:54.771" endtime="20230718 11:02:54.771"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:54.769" endtime="20230718 11:02:54.772"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:54.773" endtime="20230718 11:02:54.773"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:54.773" endtime="20230718 11:02:54.773"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:54.772" endtime="20230718 11:02:54.773"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:54.776" endtime="20230718 11:02:54.776"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:54.777" endtime="20230718 11:02:54.777"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:54.773" endtime="20230718 11:02:54.778"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:02:54.779" endtime="20230718 11:02:54.779"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:54.778" endtime="20230718 11:02:54.779"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<msg timestamp="20230718 11:02:54.781" level="INFO">${new_text} = senlagan@example.net</msg>
<status status="PASS" starttime="20230718 11:02:54.780" endtime="20230718 11:02:54.781"/>
</kw>
<status status="PASS" starttime="20230718 11:02:54.780" endtime="20230718 11:02:54.782"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:54.782" endtime="20230718 11:02:54.783"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:54.783" endtime="20230718 11:02:54.783"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:54.782" endtime="20230718 11:02:54.784"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:02:54.785" endtime="20230718 11:02:54.785"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:54.784" endtime="20230718 11:02:54.786"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:02:54.788" endtime="20230718 11:02:54.789"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:54.786" endtime="20230718 11:02:54.789"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:54.791" endtime="20230718 11:02:54.791"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:54.790" endtime="20230718 11:02:54.791"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:54.793" endtime="20230718 11:02:54.793"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:54.792" endtime="20230718 11:02:54.793"/>
</branch>
<status status="PASS" starttime="20230718 11:02:54.763" endtime="20230718 11:02:54.794"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:54.795" level="INFO">Length is 8</msg>
<msg timestamp="20230718 11:02:54.795" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230718 11:02:54.795" endtime="20230718 11:02:54.795"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:02:54.798" level="INFO">${text} = senlagan@example.net</msg>
<status status="PASS" starttime="20230718 11:02:54.797" endtime="20230718 11:02:54.798"/>
</kw>
<status status="PASS" starttime="20230718 11:02:54.796" endtime="20230718 11:02:54.798"/>
</branch>
<status status="PASS" starttime="20230718 11:02:54.796" endtime="20230718 11:02:54.799"/>
</if>
<msg timestamp="20230718 11:02:54.799" level="INFO">${text} = senlagan@example.net</msg>
<status status="PASS" starttime="20230718 11:02:54.750" endtime="20230718 11:02:54.799"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:02:54.801" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:02:54.800" endtime="20230718 11:02:54.801"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:02:54.801" endtime="20230718 11:02:56.799"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:02:56.799" level="INFO">Fills the text 'senlagan@example.net' in the given field.</msg>
<status status="PASS" starttime="20230718 11:02:56.799" endtime="20230718 11:02:56.867"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:56.867" level="INFO">Length is 20</msg>
<msg timestamp="20230718 11:02:56.867" level="INFO">${cnt} = 20</msg>
<status status="PASS" starttime="20230718 11:02:56.867" endtime="20230718 11:02:56.867"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:02:56.867" level="INFO">${STATE["Tên đăng nhập"]} = senlagan@example.net</msg>
<status status="PASS" starttime="20230718 11:02:56.867" endtime="20230718 11:02:56.867"/>
</kw>
<status status="PASS" starttime="20230718 11:02:56.867" endtime="20230718 11:02:56.867"/>
</branch>
<status status="PASS" starttime="20230718 11:02:56.867" endtime="20230718 11:02:56.867"/>
</if>
<status status="PASS" starttime="20230718 11:02:54.749" endtime="20230718 11:02:56.867"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:56.867" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:02:56.867" endtime="20230718 11:02:56.867"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:56.883" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:02:56.867" endtime="20230718 11:02:56.883"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:56.883" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:02:56.883" endtime="20230718 11:02:56.883"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:56.883" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:02:56.883" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:02:56.883" endtime="20230718 11:02:56.883"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:56.883" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230718 11:02:56.883" endtime="20230718 11:02:56.883"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:56.883" level="INFO">Length is 1</msg>
<msg timestamp="20230718 11:02:56.883" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230718 11:02:56.883" endtime="20230718 11:02:56.883"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:56.883" endtime="20230718 11:02:56.883"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:56.883" endtime="20230718 11:02:56.883"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:56.883" endtime="20230718 11:02:56.883"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:56.883" endtime="20230718 11:02:56.883"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:56.883" endtime="20230718 11:02:56.883"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:02:56.883" endtime="20230718 11:02:56.883"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:56.883" endtime="20230718 11:02:56.883"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:56.883" endtime="20230718 11:02:56.883"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:56.883" endtime="20230718 11:02:56.883"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:56.883" endtime="20230718 11:02:56.883"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:56.883" endtime="20230718 11:02:56.883"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:56.883" endtime="20230718 11:02:56.883"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:56.883" endtime="20230718 11:02:56.883"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:56.898" endtime="20230718 11:02:56.898"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:56.898" endtime="20230718 11:02:56.898"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:56.883" endtime="20230718 11:02:56.900"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:02:56.901" endtime="20230718 11:02:56.901"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:56.900" endtime="20230718 11:02:56.901"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230718 11:02:56.902" endtime="20230718 11:02:56.903"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:56.901" endtime="20230718 11:02:56.903"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:02:56.905" endtime="20230718 11:02:56.905"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:02:56.906" endtime="20230718 11:02:56.906"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:56.904" endtime="20230718 11:02:56.906"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:02:56.907" endtime="20230718 11:02:56.908"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:56.906" endtime="20230718 11:02:56.908"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:02:56.910" endtime="20230718 11:02:56.910"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:56.908" endtime="20230718 11:02:56.917"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:02:56.918" endtime="20230718 11:02:56.919"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:56.918" endtime="20230718 11:02:56.919"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230718 11:02:56.922" level="INFO">${new_text} = Tempore optio aperiam neque sint.</msg>
<status status="PASS" starttime="20230718 11:02:56.921" endtime="20230718 11:02:56.922"/>
</kw>
<status status="PASS" starttime="20230718 11:02:56.919" endtime="20230718 11:02:56.922"/>
</branch>
<status status="PASS" starttime="20230718 11:02:56.883" endtime="20230718 11:02:56.923"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:56.925" level="INFO">Length is 8</msg>
<msg timestamp="20230718 11:02:56.926" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230718 11:02:56.925" endtime="20230718 11:02:56.926"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:02:56.927" level="INFO">${text} = Tempore optio aperiam neque sint.</msg>
<status status="PASS" starttime="20230718 11:02:56.927" endtime="20230718 11:02:56.927"/>
</kw>
<status status="PASS" starttime="20230718 11:02:56.926" endtime="20230718 11:02:56.929"/>
</branch>
<status status="PASS" starttime="20230718 11:02:56.926" endtime="20230718 11:02:56.929"/>
</if>
<msg timestamp="20230718 11:02:56.929" level="INFO">${text} = Tempore optio aperiam neque sint.</msg>
<status status="PASS" starttime="20230718 11:02:56.867" endtime="20230718 11:02:56.930"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:02:56.931" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:02:56.930" endtime="20230718 11:02:56.931"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:02:56.931" endtime="20230718 11:02:57.044"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:02:57.047" level="INFO">Fills the text 'Tempore optio aperiam neque sint.' in the given field.</msg>
<status status="PASS" starttime="20230718 11:02:57.044" endtime="20230718 11:02:57.143"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:57.146" level="INFO">Length is 33</msg>
<msg timestamp="20230718 11:02:57.147" level="INFO">${cnt} = 33</msg>
<status status="PASS" starttime="20230718 11:02:57.144" endtime="20230718 11:02:57.147"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:02:57.149" level="INFO">${STATE["Mật khẩu"]} = Tempore optio aperiam neque sint.</msg>
<status status="PASS" starttime="20230718 11:02:57.148" endtime="20230718 11:02:57.149"/>
</kw>
<status status="PASS" starttime="20230718 11:02:57.147" endtime="20230718 11:02:57.149"/>
</branch>
<status status="PASS" starttime="20230718 11:02:57.147" endtime="20230718 11:02:57.150"/>
</if>
<status status="PASS" starttime="20230718 11:02:56.867" endtime="20230718 11:02:57.150"/>
</kw>
<kw name="And Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:02:57.152" endtime="20230718 11:02:57.430"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:57.430" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230718 11:02:57.430" endtime="20230718 11:02:57.430"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230718 11:02:57.460" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230718 11:02:57.438" endtime="20230718 11:02:57.460"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230718 11:02:57.460" endtime="20230718 11:02:57.460"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230718 11:02:57.460" endtime="20230718 11:02:57.460"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:57.460" endtime="20230718 11:02:57.460"/>
</branch>
<status status="PASS" starttime="20230718 11:02:57.460" endtime="20230718 11:02:57.460"/>
</if>
<status status="PASS" starttime="20230718 11:02:57.430" endtime="20230718 11:02:57.460"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230718 11:02:57.460" endtime="20230718 11:02:57.530"/>
</kw>
<status status="PASS" starttime="20230718 11:02:57.151" endtime="20230718 11:02:57.530"/>
</kw>
<kw name="Then User look message &quot;Người dùng _@Tên đăng nhập@_ không tồn tại!&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:02:57.530" level="INFO">${contains} = ['Tên đăng nhập']</msg>
<status status="PASS" starttime="20230718 11:02:57.530" endtime="20230718 11:02:57.530"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:02:57.530" level="INFO">Length is 1</msg>
<msg timestamp="20230718 11:02:57.530" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230718 11:02:57.530" endtime="20230718 11:02:57.530"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:02:57.530" level="INFO">${message} = Người dùng senlagan@example.net không tồn tại!</msg>
<status status="PASS" starttime="20230718 11:02:57.530" endtime="20230718 11:02:57.530"/>
</kw>
<status status="PASS" starttime="20230718 11:02:57.530" endtime="20230718 11:02:57.530"/>
</branch>
<status status="PASS" starttime="20230718 11:02:57.530" endtime="20230718 11:02:57.530"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:02:59.014" level="INFO">Text: 'Người dùng senlagan@example.net không tồn tại!'</msg>
<status status="PASS" starttime="20230718 11:02:57.544" endtime="20230718 11:02:59.030"/>
</kw>
<status status="PASS" starttime="20230718 11:02:57.538" endtime="20230718 11:02:59.030"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:02:59.030" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230718 11:02:59.030" endtime="20230718 11:02:59.032"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:02:59.494" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230718 11:02:59.494" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230718 11:02:59.494" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230718 11:02:59.032" endtime="20230718 11:02:59.506"/>
</kw>
<status status="FAIL" starttime="20230718 11:02:59.032" endtime="20230718 11:02:59.507"/>
</kw>
<msg timestamp="20230718 11:02:59.507" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230718 11:02:59.032" endtime="20230718 11:02:59.507"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230718 11:02:59.509" endtime="20230718 11:02:59.510"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:02:59.508" endtime="20230718 11:02:59.511"/>
</branch>
<status status="PASS" starttime="20230718 11:02:59.508" endtime="20230718 11:02:59.511"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:03:05.047" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230718 11:02:59.515" endtime="20230718 11:03:05.047"/>
</kw>
<status status="PASS" starttime="20230718 11:02:59.512" endtime="20230718 11:03:05.047"/>
</kw>
<status status="PASS" starttime="20230718 11:02:57.530" endtime="20230718 11:03:05.047"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230718 11:03:06.385" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230718 11:03:05.047" endtime="20230718 11:03:06.385"/>
</kw>
<status status="PASS" starttime="20230718 11:03:05.047" endtime="20230718 11:03:06.385"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230718 11:02:51.042" endtime="20230718 11:03:06.385"/>
</test>
<test id="s1-t8" name="DN-08 Verify that Đăng nhập unsuccessfully because enter password less than 6 characters" line="56">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230718 11:03:06.405" endtime="20230718 11:03:06.406"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230718 11:03:06.408" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\471bd62b-03f6-4401-8792-34b665fe274a"}</msg>
<msg timestamp="20230718 11:03:07.600" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\471bd62b-03f6-4401-8792-34b665fe274a"}</msg>
<status status="PASS" starttime="20230718 11:03:06.406" endtime="20230718 11:03:07.600"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230718 11:03:09.953" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230718 11:03:09.953" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230718 11:03:07.600" endtime="20230718 11:03:09.954"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230718 11:03:09.956" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230718 11:03:09.954" endtime="20230718 11:03:09.956"/>
</kw>
<status status="PASS" starttime="20230718 11:03:06.403" endtime="20230718 11:03:09.956"/>
</kw>
<kw name="When Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:09.957" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:03:09.957" endtime="20230718 11:03:09.957"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:09.957" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:03:09.957" endtime="20230718 11:03:09.957"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:03:09.957" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:03:09.957" endtime="20230718 11:03:09.957"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:09.957" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:03:09.957" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:03:09.957" endtime="20230718 11:03:09.957"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:03:09.957" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230718 11:03:09.957" endtime="20230718 11:03:09.957"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:09.957" level="INFO">Length is 1</msg>
<msg timestamp="20230718 11:03:09.957" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230718 11:03:09.957" endtime="20230718 11:03:09.957"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:09.957" endtime="20230718 11:03:09.957"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:09.957" endtime="20230718 11:03:09.957"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:09.957" endtime="20230718 11:03:09.957"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:09.957" endtime="20230718 11:03:09.957"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:09.957" endtime="20230718 11:03:09.957"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:09.957" endtime="20230718 11:03:09.970"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:09.957" endtime="20230718 11:03:09.970"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:09.972" endtime="20230718 11:03:09.972"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:09.973" endtime="20230718 11:03:09.974"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:09.971" endtime="20230718 11:03:09.974"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:09.975" endtime="20230718 11:03:09.975"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:09.976" endtime="20230718 11:03:09.976"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:09.974" endtime="20230718 11:03:09.977"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:09.978" endtime="20230718 11:03:09.978"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:09.979" endtime="20230718 11:03:09.979"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:09.977" endtime="20230718 11:03:09.980"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:03:09.981" endtime="20230718 11:03:09.981"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:09.980" endtime="20230718 11:03:09.982"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<msg timestamp="20230718 11:03:09.983" level="INFO">${new_text} = misha10@example.org</msg>
<status status="PASS" starttime="20230718 11:03:09.983" endtime="20230718 11:03:09.984"/>
</kw>
<status status="PASS" starttime="20230718 11:03:09.982" endtime="20230718 11:03:09.984"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:09.985" endtime="20230718 11:03:09.985"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:09.985" endtime="20230718 11:03:09.985"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:09.984" endtime="20230718 11:03:09.986"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:03:09.987" endtime="20230718 11:03:09.987"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:09.986" endtime="20230718 11:03:09.988"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:03:09.990" endtime="20230718 11:03:09.990"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:09.988" endtime="20230718 11:03:09.991"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:09.992" endtime="20230718 11:03:09.993"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:09.991" endtime="20230718 11:03:09.993"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:09.994" endtime="20230718 11:03:09.994"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:09.993" endtime="20230718 11:03:09.995"/>
</branch>
<status status="PASS" starttime="20230718 11:03:09.957" endtime="20230718 11:03:09.995"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:09.997" level="INFO">Length is 8</msg>
<msg timestamp="20230718 11:03:09.997" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230718 11:03:09.996" endtime="20230718 11:03:09.997"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:03:09.999" level="INFO">${text} = misha10@example.org</msg>
<status status="PASS" starttime="20230718 11:03:09.998" endtime="20230718 11:03:09.999"/>
</kw>
<status status="PASS" starttime="20230718 11:03:09.997" endtime="20230718 11:03:09.999"/>
</branch>
<status status="PASS" starttime="20230718 11:03:09.997" endtime="20230718 11:03:09.999"/>
</if>
<msg timestamp="20230718 11:03:10.000" level="INFO">${text} = misha10@example.org</msg>
<status status="PASS" starttime="20230718 11:03:09.957" endtime="20230718 11:03:10.000"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:03:10.001" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:03:10.000" endtime="20230718 11:03:10.001"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:03:10.001" endtime="20230718 11:03:12.225"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:03:12.226" level="INFO">Fills the text 'misha10@example.org' in the given field.</msg>
<status status="PASS" starttime="20230718 11:03:12.225" endtime="20230718 11:03:12.283"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:12.283" level="INFO">Length is 19</msg>
<msg timestamp="20230718 11:03:12.283" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20230718 11:03:12.283" endtime="20230718 11:03:12.283"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:03:12.283" level="INFO">${STATE["Tên đăng nhập"]} = misha10@example.org</msg>
<status status="PASS" starttime="20230718 11:03:12.283" endtime="20230718 11:03:12.283"/>
</kw>
<status status="PASS" starttime="20230718 11:03:12.283" endtime="20230718 11:03:12.283"/>
</branch>
<status status="PASS" starttime="20230718 11:03:12.283" endtime="20230718 11:03:12.283"/>
</if>
<status status="PASS" starttime="20230718 11:03:09.957" endtime="20230718 11:03:12.283"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:12.298" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:03:12.298" endtime="20230718 11:03:12.298"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:12.298" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:03:12.298" endtime="20230718 11:03:12.298"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:03:12.298" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:03:12.298" endtime="20230718 11:03:12.298"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:12.298" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:03:12.298" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:03:12.298" endtime="20230718 11:03:12.298"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:03:12.298" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230718 11:03:12.298" endtime="20230718 11:03:12.298"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:12.298" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:03:12.298" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230718 11:03:12.298" endtime="20230718 11:03:12.298"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:12.298" endtime="20230718 11:03:12.298"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:12.298" endtime="20230718 11:03:12.298"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:12.298" endtime="20230718 11:03:12.298"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:12.298" endtime="20230718 11:03:12.298"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:12.298" endtime="20230718 11:03:12.298"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:12.298" endtime="20230718 11:03:12.298"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:12.298" endtime="20230718 11:03:12.298"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:12.314" endtime="20230718 11:03:12.314"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:12.314" endtime="20230718 11:03:12.314"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:12.314" endtime="20230718 11:03:12.316"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:12.317" endtime="20230718 11:03:12.317"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:12.317" endtime="20230718 11:03:12.318"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:12.316" endtime="20230718 11:03:12.318"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:12.319" endtime="20230718 11:03:12.320"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:12.320" endtime="20230718 11:03:12.321"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:12.318" endtime="20230718 11:03:12.321"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:03:12.322" endtime="20230718 11:03:12.322"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:12.321" endtime="20230718 11:03:12.322"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230718 11:03:12.324" endtime="20230718 11:03:12.324"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:12.323" endtime="20230718 11:03:12.324"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:12.328" endtime="20230718 11:03:12.328"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:12.329" endtime="20230718 11:03:12.329"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:12.324" endtime="20230718 11:03:12.330"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:03:12.338" endtime="20230718 11:03:12.339"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:12.330" endtime="20230718 11:03:12.340"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:03:12.341" endtime="20230718 11:03:12.341"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:12.340" endtime="20230718 11:03:12.343"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:12.344" endtime="20230718 11:03:12.344"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:12.343" endtime="20230718 11:03:12.344"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:12.345" endtime="20230718 11:03:12.346"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:12.345" endtime="20230718 11:03:12.346"/>
</branch>
<status status="PASS" starttime="20230718 11:03:12.298" endtime="20230718 11:03:12.346"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:12.347" level="INFO">Length is 4</msg>
<msg timestamp="20230718 11:03:12.348" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20230718 11:03:12.347" endtime="20230718 11:03:12.348"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:03:12.349" level="INFO">${text} = Nhat</msg>
<status status="PASS" starttime="20230718 11:03:12.349" endtime="20230718 11:03:12.349"/>
</kw>
<status status="PASS" starttime="20230718 11:03:12.348" endtime="20230718 11:03:12.349"/>
</branch>
<status status="PASS" starttime="20230718 11:03:12.348" endtime="20230718 11:03:12.349"/>
</if>
<msg timestamp="20230718 11:03:12.349" level="INFO">${text} = Nhat</msg>
<status status="PASS" starttime="20230718 11:03:12.298" endtime="20230718 11:03:12.349"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:03:12.353" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:03:12.349" endtime="20230718 11:03:12.353"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:03:12.355" endtime="20230718 11:03:12.488"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:03:12.490" level="INFO">Fills the text 'Nhat' in the given field.</msg>
<status status="PASS" starttime="20230718 11:03:12.489" endtime="20230718 11:03:12.563"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:12.563" level="INFO">Length is 4</msg>
<msg timestamp="20230718 11:03:12.563" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20230718 11:03:12.563" endtime="20230718 11:03:12.563"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:03:12.573" level="INFO">${STATE["Mật khẩu"]} = Nhat</msg>
<status status="PASS" starttime="20230718 11:03:12.570" endtime="20230718 11:03:12.574"/>
</kw>
<status status="PASS" starttime="20230718 11:03:12.563" endtime="20230718 11:03:12.574"/>
</branch>
<status status="PASS" starttime="20230718 11:03:12.563" endtime="20230718 11:03:12.575"/>
</if>
<status status="PASS" starttime="20230718 11:03:12.298" endtime="20230718 11:03:12.575"/>
</kw>
<kw name="And Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:03:12.577" endtime="20230718 11:03:12.843"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:12.843" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230718 11:03:12.843" endtime="20230718 11:03:12.843"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230718 11:03:12.861" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230718 11:03:12.843" endtime="20230718 11:03:12.861"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230718 11:03:12.861" endtime="20230718 11:03:12.862"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230718 11:03:12.862" endtime="20230718 11:03:12.862"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:12.861" endtime="20230718 11:03:12.862"/>
</branch>
<status status="PASS" starttime="20230718 11:03:12.861" endtime="20230718 11:03:12.862"/>
</if>
<status status="PASS" starttime="20230718 11:03:12.843" endtime="20230718 11:03:12.863"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230718 11:03:12.863" endtime="20230718 11:03:13.128"/>
</kw>
<status status="PASS" starttime="20230718 11:03:12.576" endtime="20230718 11:03:13.128"/>
</kw>
<kw name="Then User look message &quot;password must be longer than or equal to 6 characters&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:03:13.128" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230718 11:03:13.128" endtime="20230718 11:03:13.128"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:13.128" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:03:13.128" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230718 11:03:13.128" endtime="20230718 11:03:13.144"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230718 11:03:13.144" endtime="20230718 11:03:13.144"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:13.144" endtime="20230718 11:03:13.144"/>
</branch>
<status status="PASS" starttime="20230718 11:03:13.144" endtime="20230718 11:03:13.144"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:03:13.248" level="INFO">Text: 'password must be longer than or equal to 6 characters'</msg>
<status status="PASS" starttime="20230718 11:03:13.144" endtime="20230718 11:03:13.248"/>
</kw>
<status status="PASS" starttime="20230718 11:03:13.144" endtime="20230718 11:03:13.249"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:13.250" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230718 11:03:13.249" endtime="20230718 11:03:13.250"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:03:13.748" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-4.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-4.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230718 11:03:13.753" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230718 11:03:13.753" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230718 11:03:13.252" endtime="20230718 11:03:13.756"/>
</kw>
<status status="FAIL" starttime="20230718 11:03:13.250" endtime="20230718 11:03:13.757"/>
</kw>
<msg timestamp="20230718 11:03:13.758" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230718 11:03:13.250" endtime="20230718 11:03:13.759"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230718 11:03:13.760" endtime="20230718 11:03:13.761"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:13.759" endtime="20230718 11:03:13.761"/>
</branch>
<status status="PASS" starttime="20230718 11:03:13.759" endtime="20230718 11:03:13.761"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:03:19.296" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230718 11:03:13.764" endtime="20230718 11:03:19.296"/>
</kw>
<status status="PASS" starttime="20230718 11:03:13.762" endtime="20230718 11:03:19.296"/>
</kw>
<status status="PASS" starttime="20230718 11:03:13.128" endtime="20230718 11:03:19.296"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230718 11:03:20.415" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230718 11:03:19.296" endtime="20230718 11:03:20.415"/>
</kw>
<status status="PASS" starttime="20230718 11:03:19.296" endtime="20230718 11:03:20.415"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230718 11:03:06.385" endtime="20230718 11:03:20.415"/>
</test>
<test id="s1-t9" name="DN-09 Verify that Đăng nhập successfully accout Admin with valid Email and Mật khẩu" line="64">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230718 11:03:20.435" endtime="20230718 11:03:20.436"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230718 11:03:20.439" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\8da91e3a-c091-42b0-b93e-ea629c7e441c"}</msg>
<msg timestamp="20230718 11:03:21.587" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\8da91e3a-c091-42b0-b93e-ea629c7e441c"}</msg>
<status status="PASS" starttime="20230718 11:03:20.437" endtime="20230718 11:03:21.587"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230718 11:03:23.582" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230718 11:03:23.582" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230718 11:03:21.588" endtime="20230718 11:03:23.582"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230718 11:03:23.584" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230718 11:03:23.583" endtime="20230718 11:03:23.584"/>
</kw>
<status status="PASS" starttime="20230718 11:03:20.434" endtime="20230718 11:03:23.584"/>
</kw>
<kw name="When Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;admin@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:23.593" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:03:23.593" endtime="20230718 11:03:23.593"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:23.594" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:03:23.593" endtime="20230718 11:03:23.594"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:03:23.594" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:03:23.594" endtime="20230718 11:03:23.594"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:23.595" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:03:23.595" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:03:23.594" endtime="20230718 11:03:23.595"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:03:23.596" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230718 11:03:23.595" endtime="20230718 11:03:23.596"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:23.596" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:03:23.596" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230718 11:03:23.596" endtime="20230718 11:03:23.596"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:23.597" endtime="20230718 11:03:23.597"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:23.598" endtime="20230718 11:03:23.598"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:23.597" endtime="20230718 11:03:23.599"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:23.600" endtime="20230718 11:03:23.600"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:23.601" endtime="20230718 11:03:23.601"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:23.602" endtime="20230718 11:03:23.602"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:23.599" endtime="20230718 11:03:23.603"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:23.604" endtime="20230718 11:03:23.604"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:23.604" endtime="20230718 11:03:23.604"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:23.603" endtime="20230718 11:03:23.604"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:23.604" endtime="20230718 11:03:23.604"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:23.604" endtime="20230718 11:03:23.609"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:23.604" endtime="20230718 11:03:23.609"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:23.609" endtime="20230718 11:03:23.610"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:23.610" endtime="20230718 11:03:23.610"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:23.609" endtime="20230718 11:03:23.610"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:03:23.611" endtime="20230718 11:03:23.611"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:23.610" endtime="20230718 11:03:23.611"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230718 11:03:23.612" endtime="20230718 11:03:23.612"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:23.611" endtime="20230718 11:03:23.613"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:23.614" endtime="20230718 11:03:23.614"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:23.614" endtime="20230718 11:03:23.615"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:23.613" endtime="20230718 11:03:23.615"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:03:23.616" endtime="20230718 11:03:23.616"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:23.615" endtime="20230718 11:03:23.617"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:03:23.618" endtime="20230718 11:03:23.618"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:23.617" endtime="20230718 11:03:23.618"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:23.618" endtime="20230718 11:03:23.618"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:23.618" endtime="20230718 11:03:23.619"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:23.620" endtime="20230718 11:03:23.622"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:23.619" endtime="20230718 11:03:23.622"/>
</branch>
<status status="PASS" starttime="20230718 11:03:23.596" endtime="20230718 11:03:23.623"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:23.625" level="INFO">Length is 15</msg>
<msg timestamp="20230718 11:03:23.625" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230718 11:03:23.624" endtime="20230718 11:03:23.625"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:03:23.626" level="INFO">${text} = admin@admin.com</msg>
<status status="PASS" starttime="20230718 11:03:23.626" endtime="20230718 11:03:23.626"/>
</kw>
<status status="PASS" starttime="20230718 11:03:23.626" endtime="20230718 11:03:23.627"/>
</branch>
<status status="PASS" starttime="20230718 11:03:23.625" endtime="20230718 11:03:23.627"/>
</if>
<msg timestamp="20230718 11:03:23.627" level="INFO">${text} = admin@admin.com</msg>
<status status="PASS" starttime="20230718 11:03:23.592" endtime="20230718 11:03:23.627"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:03:23.628" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:03:23.627" endtime="20230718 11:03:23.628"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:03:23.628" endtime="20230718 11:03:25.585"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:03:25.586" level="INFO">Fills the text 'admin@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230718 11:03:25.585" endtime="20230718 11:03:25.633"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:25.633" level="INFO">Length is 15</msg>
<msg timestamp="20230718 11:03:25.633" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230718 11:03:25.633" endtime="20230718 11:03:25.633"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:03:25.633" level="INFO">${STATE["Tên đăng nhập"]} = admin@admin.com</msg>
<status status="PASS" starttime="20230718 11:03:25.633" endtime="20230718 11:03:25.633"/>
</kw>
<status status="PASS" starttime="20230718 11:03:25.633" endtime="20230718 11:03:25.633"/>
</branch>
<status status="PASS" starttime="20230718 11:03:25.633" endtime="20230718 11:03:25.633"/>
</if>
<status status="PASS" starttime="20230718 11:03:23.591" endtime="20230718 11:03:25.633"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Password1!&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:25.649" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:03:25.633" endtime="20230718 11:03:25.649"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:25.649" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:03:25.649" endtime="20230718 11:03:25.649"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:03:25.649" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:03:25.649" endtime="20230718 11:03:25.649"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:25.649" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:03:25.649" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:03:25.649" endtime="20230718 11:03:25.649"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:03:25.649" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230718 11:03:25.649" endtime="20230718 11:03:25.649"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:25.654" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:03:25.654" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230718 11:03:25.654" endtime="20230718 11:03:25.654"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:25.654" endtime="20230718 11:03:25.654"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:25.654" endtime="20230718 11:03:25.654"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:25.654" endtime="20230718 11:03:25.654"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:25.654" endtime="20230718 11:03:25.654"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:25.654" endtime="20230718 11:03:25.654"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:25.654" endtime="20230718 11:03:25.654"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:25.654" endtime="20230718 11:03:25.654"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:25.654" endtime="20230718 11:03:25.654"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:25.654" endtime="20230718 11:03:25.654"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:25.654" endtime="20230718 11:03:25.654"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:25.654" endtime="20230718 11:03:25.654"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:25.654" endtime="20230718 11:03:25.654"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:25.654" endtime="20230718 11:03:25.654"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:25.654" endtime="20230718 11:03:25.654"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:25.654" endtime="20230718 11:03:25.654"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:25.654" endtime="20230718 11:03:25.654"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:03:25.665" endtime="20230718 11:03:25.665"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:25.654" endtime="20230718 11:03:25.665"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230718 11:03:25.665" endtime="20230718 11:03:25.665"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:25.665" endtime="20230718 11:03:25.665"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:25.665" endtime="20230718 11:03:25.665"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:25.665" endtime="20230718 11:03:25.665"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:25.665" endtime="20230718 11:03:25.665"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:03:25.665" endtime="20230718 11:03:25.665"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:25.665" endtime="20230718 11:03:25.665"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:03:25.665" endtime="20230718 11:03:25.665"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:25.665" endtime="20230718 11:03:25.665"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:25.665" endtime="20230718 11:03:25.665"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:25.665" endtime="20230718 11:03:25.665"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:25.665" endtime="20230718 11:03:25.665"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:25.665" endtime="20230718 11:03:25.665"/>
</branch>
<status status="PASS" starttime="20230718 11:03:25.654" endtime="20230718 11:03:25.665"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:25.665" level="INFO">Length is 10</msg>
<msg timestamp="20230718 11:03:25.665" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230718 11:03:25.665" endtime="20230718 11:03:25.665"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:03:25.665" level="INFO">${text} = Password1!</msg>
<status status="PASS" starttime="20230718 11:03:25.665" endtime="20230718 11:03:25.665"/>
</kw>
<status status="PASS" starttime="20230718 11:03:25.665" endtime="20230718 11:03:25.665"/>
</branch>
<status status="PASS" starttime="20230718 11:03:25.665" endtime="20230718 11:03:25.665"/>
</if>
<msg timestamp="20230718 11:03:25.665" level="INFO">${text} = Password1!</msg>
<status status="PASS" starttime="20230718 11:03:25.633" endtime="20230718 11:03:25.665"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:03:25.665" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:03:25.665" endtime="20230718 11:03:25.665"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:03:25.680" endtime="20230718 11:03:25.749"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:03:25.751" level="INFO">Fills the text 'Password1!' in the given field.</msg>
<status status="PASS" starttime="20230718 11:03:25.749" endtime="20230718 11:03:25.825"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:25.825" level="INFO">Length is 10</msg>
<msg timestamp="20230718 11:03:25.825" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230718 11:03:25.825" endtime="20230718 11:03:25.825"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:03:25.841" level="INFO">${STATE["Mật khẩu"]} = Password1!</msg>
<status status="PASS" starttime="20230718 11:03:25.841" endtime="20230718 11:03:25.841"/>
</kw>
<status status="PASS" starttime="20230718 11:03:25.825" endtime="20230718 11:03:25.841"/>
</branch>
<status status="PASS" starttime="20230718 11:03:25.825" endtime="20230718 11:03:25.841"/>
</if>
<status status="PASS" starttime="20230718 11:03:25.633" endtime="20230718 11:03:25.841"/>
</kw>
<kw name="Enter at &quot;Mật khẩu&quot; field to Login" library="common" sourcename="Enter at &quot;${name}&quot; field to Login">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:03:25.841" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:03:25.841" endtime="20230718 11:03:25.841"/>
</kw>
<kw name="Press Keys" library="Browser">
<arg>${element}</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given key combination into element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:03:25.841" endtime="20230718 11:03:25.974"/>
</kw>
<status status="PASS" starttime="20230718 11:03:25.841" endtime="20230718 11:03:25.974"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:03:25.977" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230718 11:03:25.976" endtime="20230718 11:03:25.977"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:25.978" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:03:25.978" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230718 11:03:25.978" endtime="20230718 11:03:25.979"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230718 11:03:25.980" endtime="20230718 11:03:25.981"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:25.979" endtime="20230718 11:03:25.981"/>
</branch>
<status status="PASS" starttime="20230718 11:03:25.979" endtime="20230718 11:03:25.982"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:03:28.485" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230718 11:03:25.992" endtime="20230718 11:03:28.485"/>
</kw>
<status status="PASS" starttime="20230718 11:03:25.983" endtime="20230718 11:03:28.485"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:28.485" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230718 11:03:28.485" endtime="20230718 11:03:28.485"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:03:28.926" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-5.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-5.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230718 11:03:28.926" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230718 11:03:28.926" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230718 11:03:28.500" endtime="20230718 11:03:28.929"/>
</kw>
<status status="FAIL" starttime="20230718 11:03:28.500" endtime="20230718 11:03:28.930"/>
</kw>
<msg timestamp="20230718 11:03:28.931" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230718 11:03:28.485" endtime="20230718 11:03:28.931"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230718 11:03:28.934" endtime="20230718 11:03:28.935"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:28.932" endtime="20230718 11:03:28.935"/>
</branch>
<status status="PASS" starttime="20230718 11:03:28.931" endtime="20230718 11:03:28.936"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:03:30.857" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230718 11:03:28.940" endtime="20230718 11:03:30.857"/>
</kw>
<status status="PASS" starttime="20230718 11:03:28.936" endtime="20230718 11:03:30.857"/>
</kw>
<status status="PASS" starttime="20230718 11:03:25.975" endtime="20230718 11:03:30.858"/>
</kw>
<status status="PASS" starttime="20230718 11:03:23.591" endtime="20230718 11:03:30.858"/>
</kw>
<kw name="Then User look title &quot;Danh sách nghỉ phép&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:30.861" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230718 11:03:30.860" endtime="20230718 11:03:30.861"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230718 11:03:30.871" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230718 11:03:30.861" endtime="20230718 11:03:30.871"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230718 11:03:30.872" endtime="20230718 11:03:30.873"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:30.871" endtime="20230718 11:03:30.873"/>
</branch>
<status status="PASS" starttime="20230718 11:03:30.871" endtime="20230718 11:03:30.873"/>
</if>
<status status="PASS" starttime="20230718 11:03:30.859" endtime="20230718 11:03:30.873"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230718 11:03:30.886" level="INFO">Title: 'Danh sách nghỉ phép'</msg>
<msg timestamp="20230718 11:03:30.887" level="INFO">${actualTitle} = Danh sách nghỉ phép</msg>
<status status="PASS" starttime="20230718 11:03:30.875" endtime="20230718 11:03:30.887"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230718 11:03:30.887" endtime="20230718 11:03:30.888"/>
</kw>
<status status="PASS" starttime="20230718 11:03:30.874" endtime="20230718 11:03:30.889"/>
</kw>
<status status="PASS" starttime="20230718 11:03:30.859" endtime="20230718 11:03:30.889"/>
</kw>
<kw name="And User look menu &quot;Người Dùng&quot;" library="common" sourcename="User look menu &quot;${text}&quot;">
<kw name="Element Text Should Be" library="common">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:03:30.922" level="INFO">Text: 'Người Dùng'</msg>
<status status="PASS" starttime="20230718 11:03:30.894" endtime="20230718 11:03:30.922"/>
</kw>
<status status="PASS" starttime="20230718 11:03:30.891" endtime="20230718 11:03:30.923"/>
</kw>
<status status="PASS" starttime="20230718 11:03:30.890" endtime="20230718 11:03:30.923"/>
</kw>
<kw name="And User look menu &quot;Nghỉ phép&quot;" library="common" sourcename="User look menu &quot;${text}&quot;">
<kw name="Element Text Should Be" library="common">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:03:30.950" level="INFO">Text: 'Nghỉ phép'</msg>
<status status="PASS" starttime="20230718 11:03:30.927" endtime="20230718 11:03:30.950"/>
</kw>
<status status="PASS" starttime="20230718 11:03:30.925" endtime="20230718 11:03:30.951"/>
</kw>
<status status="PASS" starttime="20230718 11:03:30.924" endtime="20230718 11:03:30.951"/>
</kw>
<kw name="And User look menu &quot;Thiết lập&quot;" library="common" sourcename="User look menu &quot;${text}&quot;">
<kw name="Element Text Should Be" library="common">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:03:30.986" level="INFO">Text: 'Thiết lập'</msg>
<status status="PASS" starttime="20230718 11:03:30.955" endtime="20230718 11:03:30.986"/>
</kw>
<status status="PASS" starttime="20230718 11:03:30.953" endtime="20230718 11:03:30.987"/>
</kw>
<status status="PASS" starttime="20230718 11:03:30.952" endtime="20230718 11:03:30.987"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230718 11:03:31.983" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230718 11:03:30.990" endtime="20230718 11:03:31.983"/>
</kw>
<status status="PASS" starttime="20230718 11:03:30.989" endtime="20230718 11:03:31.983"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230718 11:03:20.415" endtime="20230718 11:03:31.983"/>
</test>
<test id="s1-t10" name="DN-10 Verify that Đăng nhập successfully account Manager with valid Email and Mật khẩu" line="72">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230718 11:03:32.012" endtime="20230718 11:03:32.013"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230718 11:03:32.015" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\6a68e940-e0ed-4462-8b1b-e90b59c241fd"}</msg>
<msg timestamp="20230718 11:03:33.157" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\6a68e940-e0ed-4462-8b1b-e90b59c241fd"}</msg>
<status status="PASS" starttime="20230718 11:03:32.014" endtime="20230718 11:03:33.157"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230718 11:03:35.294" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230718 11:03:35.295" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230718 11:03:33.157" endtime="20230718 11:03:35.295"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230718 11:03:35.296" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230718 11:03:35.296" endtime="20230718 11:03:35.297"/>
</kw>
<status status="PASS" starttime="20230718 11:03:32.011" endtime="20230718 11:03:35.297"/>
</kw>
<kw name="When Login to Manager" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat_manager@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:35.302" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:03:35.301" endtime="20230718 11:03:35.302"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:35.304" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:03:35.303" endtime="20230718 11:03:35.304"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:03:35.306" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:03:35.304" endtime="20230718 11:03:35.306"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:35.308" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:03:35.308" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:03:35.307" endtime="20230718 11:03:35.308"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:03:35.310" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230718 11:03:35.309" endtime="20230718 11:03:35.310"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:35.311" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:03:35.312" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230718 11:03:35.311" endtime="20230718 11:03:35.312"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:35.313" endtime="20230718 11:03:35.313"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:35.314" endtime="20230718 11:03:35.314"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:35.312" endtime="20230718 11:03:35.315"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:35.316" endtime="20230718 11:03:35.316"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:35.316" endtime="20230718 11:03:35.317"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:35.317" endtime="20230718 11:03:35.317"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:35.315" endtime="20230718 11:03:35.318"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:35.320" endtime="20230718 11:03:35.320"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:35.321" endtime="20230718 11:03:35.322"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:35.319" endtime="20230718 11:03:35.322"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:35.323" endtime="20230718 11:03:35.324"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:35.324" endtime="20230718 11:03:35.325"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:35.322" endtime="20230718 11:03:35.325"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:35.326" endtime="20230718 11:03:35.326"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:35.327" endtime="20230718 11:03:35.327"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:35.325" endtime="20230718 11:03:35.327"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:03:35.328" endtime="20230718 11:03:35.328"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:35.327" endtime="20230718 11:03:35.329"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230718 11:03:35.330" endtime="20230718 11:03:35.330"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:35.329" endtime="20230718 11:03:35.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:35.332" endtime="20230718 11:03:35.333"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:35.333" endtime="20230718 11:03:35.334"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:35.331" endtime="20230718 11:03:35.334"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:03:35.337" endtime="20230718 11:03:35.338"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:35.336" endtime="20230718 11:03:35.338"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:03:35.339" endtime="20230718 11:03:35.340"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:35.338" endtime="20230718 11:03:35.340"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:35.341" endtime="20230718 11:03:35.342"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:35.340" endtime="20230718 11:03:35.342"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:35.343" endtime="20230718 11:03:35.343"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:35.342" endtime="20230718 11:03:35.343"/>
</branch>
<status status="PASS" starttime="20230718 11:03:35.312" endtime="20230718 11:03:35.344"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:35.345" level="INFO">Length is 27</msg>
<msg timestamp="20230718 11:03:35.345" level="INFO">${cnt} = 27</msg>
<status status="PASS" starttime="20230718 11:03:35.344" endtime="20230718 11:03:35.345"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:03:35.349" level="INFO">${text} = hovannhat_manager@gmail.com</msg>
<status status="PASS" starttime="20230718 11:03:35.347" endtime="20230718 11:03:35.349"/>
</kw>
<status status="PASS" starttime="20230718 11:03:35.346" endtime="20230718 11:03:35.349"/>
</branch>
<status status="PASS" starttime="20230718 11:03:35.346" endtime="20230718 11:03:35.349"/>
</if>
<msg timestamp="20230718 11:03:35.350" level="INFO">${text} = hovannhat_manager@gmail.com</msg>
<status status="PASS" starttime="20230718 11:03:35.300" endtime="20230718 11:03:35.350"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:03:35.352" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:03:35.350" endtime="20230718 11:03:35.352"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:03:35.353" endtime="20230718 11:03:37.343"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:03:37.345" level="INFO">Fills the text 'hovannhat_manager@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230718 11:03:37.344" endtime="20230718 11:03:37.410"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:37.412" level="INFO">Length is 27</msg>
<msg timestamp="20230718 11:03:37.412" level="INFO">${cnt} = 27</msg>
<status status="PASS" starttime="20230718 11:03:37.410" endtime="20230718 11:03:37.412"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:03:37.415" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat_manager@gmail.com</msg>
<status status="PASS" starttime="20230718 11:03:37.413" endtime="20230718 11:03:37.415"/>
</kw>
<status status="PASS" starttime="20230718 11:03:37.412" endtime="20230718 11:03:37.415"/>
</branch>
<status status="PASS" starttime="20230718 11:03:37.412" endtime="20230718 11:03:37.416"/>
</if>
<status status="PASS" starttime="20230718 11:03:35.299" endtime="20230718 11:03:37.416"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:37.420" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:03:37.419" endtime="20230718 11:03:37.420"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:37.421" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:03:37.420" endtime="20230718 11:03:37.421"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:03:37.422" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:03:37.421" endtime="20230718 11:03:37.422"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:37.423" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:03:37.423" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:03:37.423" endtime="20230718 11:03:37.423"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:03:37.424" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230718 11:03:37.424" endtime="20230718 11:03:37.424"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:37.425" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:03:37.425" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230718 11:03:37.425" endtime="20230718 11:03:37.425"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:37.427" endtime="20230718 11:03:37.427"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:37.427" endtime="20230718 11:03:37.428"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:37.426" endtime="20230718 11:03:37.428"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:37.429" endtime="20230718 11:03:37.429"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:37.429" endtime="20230718 11:03:37.430"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:37.430" endtime="20230718 11:03:37.430"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:37.428" endtime="20230718 11:03:37.431"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:37.432" endtime="20230718 11:03:37.432"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:37.433" endtime="20230718 11:03:37.433"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:37.431" endtime="20230718 11:03:37.433"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:37.434" endtime="20230718 11:03:37.435"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:37.435" endtime="20230718 11:03:37.435"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:37.434" endtime="20230718 11:03:37.436"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:37.437" endtime="20230718 11:03:37.437"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:37.437" endtime="20230718 11:03:37.437"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:37.436" endtime="20230718 11:03:37.438"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:03:37.439" endtime="20230718 11:03:37.439"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:37.438" endtime="20230718 11:03:37.439"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230718 11:03:37.440" endtime="20230718 11:03:37.440"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:37.439" endtime="20230718 11:03:37.440"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:37.441" endtime="20230718 11:03:37.442"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:37.442" endtime="20230718 11:03:37.442"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:37.441" endtime="20230718 11:03:37.443"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:03:37.444" endtime="20230718 11:03:37.444"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:37.443" endtime="20230718 11:03:37.444"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:03:37.446" endtime="20230718 11:03:37.446"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:37.445" endtime="20230718 11:03:37.447"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:37.448" endtime="20230718 11:03:37.448"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:37.447" endtime="20230718 11:03:37.448"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:37.449" endtime="20230718 11:03:37.449"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:37.448" endtime="20230718 11:03:37.450"/>
</branch>
<status status="PASS" starttime="20230718 11:03:37.426" endtime="20230718 11:03:37.450"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:37.452" level="INFO">Length is 13</msg>
<msg timestamp="20230718 11:03:37.452" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230718 11:03:37.451" endtime="20230718 11:03:37.452"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:03:37.455" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230718 11:03:37.454" endtime="20230718 11:03:37.455"/>
</kw>
<status status="PASS" starttime="20230718 11:03:37.453" endtime="20230718 11:03:37.455"/>
</branch>
<status status="PASS" starttime="20230718 11:03:37.452" endtime="20230718 11:03:37.455"/>
</if>
<msg timestamp="20230718 11:03:37.456" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230718 11:03:37.418" endtime="20230718 11:03:37.456"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:03:37.458" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:03:37.456" endtime="20230718 11:03:37.458"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:03:37.458" endtime="20230718 11:03:37.616"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:03:37.617" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230718 11:03:37.616" endtime="20230718 11:03:37.718"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:37.720" level="INFO">Length is 13</msg>
<msg timestamp="20230718 11:03:37.721" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230718 11:03:37.719" endtime="20230718 11:03:37.722"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:03:37.725" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230718 11:03:37.724" endtime="20230718 11:03:37.725"/>
</kw>
<status status="PASS" starttime="20230718 11:03:37.723" endtime="20230718 11:03:37.725"/>
</branch>
<status status="PASS" starttime="20230718 11:03:37.723" endtime="20230718 11:03:37.726"/>
</if>
<status status="PASS" starttime="20230718 11:03:37.417" endtime="20230718 11:03:37.727"/>
</kw>
<kw name="Enter at &quot;Mật khẩu&quot; field to Login" library="common" sourcename="Enter at &quot;${name}&quot; field to Login">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:03:37.729" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:03:37.729" endtime="20230718 11:03:37.731"/>
</kw>
<kw name="Press Keys" library="Browser">
<arg>${element}</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given key combination into element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:03:37.731" endtime="20230718 11:03:37.979"/>
</kw>
<status status="PASS" starttime="20230718 11:03:37.728" endtime="20230718 11:03:37.979"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:03:37.982" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230718 11:03:37.981" endtime="20230718 11:03:37.982"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:37.983" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:03:37.983" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230718 11:03:37.982" endtime="20230718 11:03:37.983"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230718 11:03:37.985" endtime="20230718 11:03:37.986"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:37.984" endtime="20230718 11:03:37.987"/>
</branch>
<status status="PASS" starttime="20230718 11:03:37.984" endtime="20230718 11:03:37.987"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:03:39.077" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230718 11:03:37.992" endtime="20230718 11:03:39.077"/>
</kw>
<status status="PASS" starttime="20230718 11:03:37.988" endtime="20230718 11:03:39.077"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:39.079" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230718 11:03:39.078" endtime="20230718 11:03:39.079"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:03:39.802" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-6.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-6.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230718 11:03:39.802" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230718 11:03:39.803" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230718 11:03:39.083" endtime="20230718 11:03:39.807"/>
</kw>
<status status="FAIL" starttime="20230718 11:03:39.080" endtime="20230718 11:03:39.808"/>
</kw>
<msg timestamp="20230718 11:03:39.808" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230718 11:03:39.080" endtime="20230718 11:03:39.808"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230718 11:03:39.810" endtime="20230718 11:03:39.810"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:39.809" endtime="20230718 11:03:39.810"/>
</branch>
<status status="PASS" starttime="20230718 11:03:39.809" endtime="20230718 11:03:39.811"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:03:42.156" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230718 11:03:39.813" endtime="20230718 11:03:42.156"/>
</kw>
<status status="PASS" starttime="20230718 11:03:39.811" endtime="20230718 11:03:42.156"/>
</kw>
<status status="PASS" starttime="20230718 11:03:37.980" endtime="20230718 11:03:42.156"/>
</kw>
<status status="PASS" starttime="20230718 11:03:35.298" endtime="20230718 11:03:42.156"/>
</kw>
<kw name="Then User look title &quot;Danh sách nghỉ phép&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:42.156" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230718 11:03:42.156" endtime="20230718 11:03:42.156"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230718 11:03:42.170" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230718 11:03:42.156" endtime="20230718 11:03:42.170"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230718 11:03:42.171" endtime="20230718 11:03:42.171"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:42.170" endtime="20230718 11:03:42.171"/>
</branch>
<status status="PASS" starttime="20230718 11:03:42.170" endtime="20230718 11:03:42.171"/>
</if>
<status status="PASS" starttime="20230718 11:03:42.156" endtime="20230718 11:03:42.171"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230718 11:03:42.179" level="INFO">Title: 'Danh sách nghỉ phép'</msg>
<msg timestamp="20230718 11:03:42.179" level="INFO">${actualTitle} = Danh sách nghỉ phép</msg>
<status status="PASS" starttime="20230718 11:03:42.172" endtime="20230718 11:03:42.179"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230718 11:03:42.180" endtime="20230718 11:03:42.181"/>
</kw>
<status status="PASS" starttime="20230718 11:03:42.171" endtime="20230718 11:03:42.181"/>
</kw>
<status status="PASS" starttime="20230718 11:03:42.156" endtime="20230718 11:03:42.181"/>
</kw>
<kw name="And User look menu &quot;Người Dùng&quot;" library="common" sourcename="User look menu &quot;${text}&quot;">
<kw name="Element Text Should Be" library="common">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:03:42.219" level="INFO">Text: 'Người Dùng'</msg>
<status status="PASS" starttime="20230718 11:03:42.190" endtime="20230718 11:03:42.219"/>
</kw>
<status status="PASS" starttime="20230718 11:03:42.184" endtime="20230718 11:03:42.219"/>
</kw>
<status status="PASS" starttime="20230718 11:03:42.183" endtime="20230718 11:03:42.220"/>
</kw>
<kw name="And User look menu &quot;Nghỉ phép&quot;" library="common" sourcename="User look menu &quot;${text}&quot;">
<kw name="Element Text Should Be" library="common">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:03:42.274" level="INFO">Text: 'Nghỉ phép'</msg>
<status status="PASS" starttime="20230718 11:03:42.237" endtime="20230718 11:03:42.274"/>
</kw>
<status status="PASS" starttime="20230718 11:03:42.233" endtime="20230718 11:03:42.274"/>
</kw>
<status status="PASS" starttime="20230718 11:03:42.232" endtime="20230718 11:03:42.275"/>
</kw>
<kw name="And User look menu &quot;Thiết lập&quot;" library="common" sourcename="User look menu &quot;${text}&quot;">
<kw name="Element Text Should Be" library="common">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:03:42.343" level="INFO">Text: 'Thiết lập'</msg>
<status status="PASS" starttime="20230718 11:03:42.308" endtime="20230718 11:03:42.343"/>
</kw>
<status status="PASS" starttime="20230718 11:03:42.303" endtime="20230718 11:03:42.344"/>
</kw>
<status status="PASS" starttime="20230718 11:03:42.302" endtime="20230718 11:03:42.344"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230718 11:03:43.238" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230718 11:03:42.346" endtime="20230718 11:03:43.238"/>
</kw>
<status status="PASS" starttime="20230718 11:03:42.345" endtime="20230718 11:03:43.238"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230718 11:03:31.998" endtime="20230718 11:03:43.238"/>
</test>
<test id="s1-t11" name="DN-11 Verify that Đăng nhập successfully account Staff with valid Email and Mật khẩu" line="80">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230718 11:03:43.278" endtime="20230718 11:03:43.279"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230718 11:03:43.283" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\d2718518-9ab3-449b-a127-d56c1af3ad22"}</msg>
<msg timestamp="20230718 11:03:44.366" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\d2718518-9ab3-449b-a127-d56c1af3ad22"}</msg>
<status status="PASS" starttime="20230718 11:03:43.280" endtime="20230718 11:03:44.366"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230718 11:03:46.319" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230718 11:03:46.319" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230718 11:03:44.366" endtime="20230718 11:03:46.319"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230718 11:03:46.322" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230718 11:03:46.320" endtime="20230718 11:03:46.322"/>
</kw>
<status status="PASS" starttime="20230718 11:03:43.277" endtime="20230718 11:03:46.322"/>
</kw>
<kw name="When Login to Staff" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hovannhat_staff@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:46.327" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:03:46.327" endtime="20230718 11:03:46.327"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:46.328" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:03:46.328" endtime="20230718 11:03:46.328"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:03:46.330" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:03:46.329" endtime="20230718 11:03:46.330"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:46.331" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:03:46.331" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:03:46.330" endtime="20230718 11:03:46.331"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:03:46.332" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230718 11:03:46.331" endtime="20230718 11:03:46.332"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:46.334" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:03:46.335" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230718 11:03:46.333" endtime="20230718 11:03:46.335"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:46.336" endtime="20230718 11:03:46.336"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:46.336" endtime="20230718 11:03:46.336"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:46.336" endtime="20230718 11:03:46.336"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:46.336" endtime="20230718 11:03:46.336"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:46.336" endtime="20230718 11:03:46.336"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:46.336" endtime="20230718 11:03:46.336"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:46.336" endtime="20230718 11:03:46.336"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:46.336" endtime="20230718 11:03:46.336"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:46.336" endtime="20230718 11:03:46.336"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:46.336" endtime="20230718 11:03:46.336"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:46.336" endtime="20230718 11:03:46.336"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:46.336" endtime="20230718 11:03:46.336"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:46.336" endtime="20230718 11:03:46.336"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:46.336" endtime="20230718 11:03:46.336"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:46.336" endtime="20230718 11:03:46.336"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:46.336" endtime="20230718 11:03:46.336"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:03:46.351" endtime="20230718 11:03:46.351"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:46.336" endtime="20230718 11:03:46.352"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230718 11:03:46.353" endtime="20230718 11:03:46.353"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:46.352" endtime="20230718 11:03:46.353"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:46.354" endtime="20230718 11:03:46.355"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:46.355" endtime="20230718 11:03:46.356"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:46.354" endtime="20230718 11:03:46.356"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:03:46.357" endtime="20230718 11:03:46.357"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:46.356" endtime="20230718 11:03:46.357"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:03:46.358" endtime="20230718 11:03:46.359"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:46.358" endtime="20230718 11:03:46.359"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:46.364" endtime="20230718 11:03:46.366"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:46.359" endtime="20230718 11:03:46.366"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:46.368" endtime="20230718 11:03:46.368"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:46.366" endtime="20230718 11:03:46.369"/>
</branch>
<status status="PASS" starttime="20230718 11:03:46.336" endtime="20230718 11:03:46.369"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:46.371" level="INFO">Length is 25</msg>
<msg timestamp="20230718 11:03:46.371" level="INFO">${cnt} = 25</msg>
<status status="PASS" starttime="20230718 11:03:46.370" endtime="20230718 11:03:46.371"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:03:46.373" level="INFO">${text} = hovannhat_staff@gmail.com</msg>
<status status="PASS" starttime="20230718 11:03:46.372" endtime="20230718 11:03:46.373"/>
</kw>
<status status="PASS" starttime="20230718 11:03:46.371" endtime="20230718 11:03:46.373"/>
</branch>
<status status="PASS" starttime="20230718 11:03:46.371" endtime="20230718 11:03:46.374"/>
</if>
<msg timestamp="20230718 11:03:46.374" level="INFO">${text} = hovannhat_staff@gmail.com</msg>
<status status="PASS" starttime="20230718 11:03:46.326" endtime="20230718 11:03:46.374"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:03:46.376" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:03:46.375" endtime="20230718 11:03:46.376"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:03:46.377" endtime="20230718 11:03:48.457"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:03:48.457" level="INFO">Fills the text 'hovannhat_staff@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230718 11:03:48.457" endtime="20230718 11:03:48.522"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:48.523" level="INFO">Length is 25</msg>
<msg timestamp="20230718 11:03:48.524" level="INFO">${cnt} = 25</msg>
<status status="PASS" starttime="20230718 11:03:48.523" endtime="20230718 11:03:48.524"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:03:48.526" level="INFO">${STATE["Tên đăng nhập"]} = hovannhat_staff@gmail.com</msg>
<status status="PASS" starttime="20230718 11:03:48.525" endtime="20230718 11:03:48.526"/>
</kw>
<status status="PASS" starttime="20230718 11:03:48.524" endtime="20230718 11:03:48.526"/>
</branch>
<status status="PASS" starttime="20230718 11:03:48.524" endtime="20230718 11:03:48.526"/>
</if>
<status status="PASS" starttime="20230718 11:03:46.325" endtime="20230718 11:03:48.527"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Nhat@01101999&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:48.527" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:48.527" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:03:48.527" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:48.527" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:03:48.527" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:03:48.527" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:48.527" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:03:48.527" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.527"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.543"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.543"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230718 11:03:48.543" endtime="20230718 11:03:48.543"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:48.543" endtime="20230718 11:03:48.543"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:03:48.543" endtime="20230718 11:03:48.543"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:03:48.543" endtime="20230718 11:03:48.543"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:48.543" endtime="20230718 11:03:48.543"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:03:48.543" endtime="20230718 11:03:48.543"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:48.543" endtime="20230718 11:03:48.543"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:03:48.543" endtime="20230718 11:03:48.543"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:48.543" endtime="20230718 11:03:48.543"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:48.543" endtime="20230718 11:03:48.543"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:48.543" endtime="20230718 11:03:48.543"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:03:48.543" endtime="20230718 11:03:48.543"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:48.543" endtime="20230718 11:03:48.543"/>
</branch>
<status status="PASS" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.543"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:48.558" level="INFO">Length is 13</msg>
<msg timestamp="20230718 11:03:48.558" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230718 11:03:48.543" endtime="20230718 11:03:48.558"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:03:48.558" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230718 11:03:48.558" endtime="20230718 11:03:48.558"/>
</kw>
<status status="PASS" starttime="20230718 11:03:48.558" endtime="20230718 11:03:48.558"/>
</branch>
<status status="PASS" starttime="20230718 11:03:48.558" endtime="20230718 11:03:48.558"/>
</if>
<msg timestamp="20230718 11:03:48.558" level="INFO">${text} = Nhat@01101999</msg>
<status status="PASS" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.558"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:03:48.558" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:03:48.558" endtime="20230718 11:03:48.558"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:03:48.558" endtime="20230718 11:03:48.650"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:03:48.651" level="INFO">Fills the text 'Nhat@01101999' in the given field.</msg>
<status status="PASS" starttime="20230718 11:03:48.650" endtime="20230718 11:03:48.706"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:48.706" level="INFO">Length is 13</msg>
<msg timestamp="20230718 11:03:48.706" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20230718 11:03:48.706" endtime="20230718 11:03:48.706"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:03:48.706" level="INFO">${STATE["Mật khẩu"]} = Nhat@01101999</msg>
<status status="PASS" starttime="20230718 11:03:48.706" endtime="20230718 11:03:48.706"/>
</kw>
<status status="PASS" starttime="20230718 11:03:48.706" endtime="20230718 11:03:48.706"/>
</branch>
<status status="PASS" starttime="20230718 11:03:48.706" endtime="20230718 11:03:48.706"/>
</if>
<status status="PASS" starttime="20230718 11:03:48.527" endtime="20230718 11:03:48.706"/>
</kw>
<kw name="Enter at &quot;Mật khẩu&quot; field to Login" library="common" sourcename="Enter at &quot;${name}&quot; field to Login">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:03:48.721" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:03:48.706" endtime="20230718 11:03:48.721"/>
</kw>
<kw name="Press Keys" library="Browser">
<arg>${element}</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given key combination into element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:03:48.721" endtime="20230718 11:03:48.826"/>
</kw>
<status status="PASS" starttime="20230718 11:03:48.706" endtime="20230718 11:03:48.826"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:03:48.837" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230718 11:03:48.835" endtime="20230718 11:03:48.837"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:03:48.838" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:03:48.838" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230718 11:03:48.837" endtime="20230718 11:03:48.838"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230718 11:03:48.839" endtime="20230718 11:03:48.840"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:48.839" endtime="20230718 11:03:48.840"/>
</branch>
<status status="PASS" starttime="20230718 11:03:48.839" endtime="20230718 11:03:48.840"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:03:49.998" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230718 11:03:48.844" endtime="20230718 11:03:49.998"/>
</kw>
<status status="PASS" starttime="20230718 11:03:48.841" endtime="20230718 11:03:49.998"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:49.999" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230718 11:03:49.999" endtime="20230718 11:03:49.999"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:03:50.790" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-7.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-7.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230718 11:03:50.790" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230718 11:03:50.790" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230718 11:03:50.005" endtime="20230718 11:03:50.801"/>
</kw>
<status status="FAIL" starttime="20230718 11:03:50.001" endtime="20230718 11:03:50.802"/>
</kw>
<msg timestamp="20230718 11:03:50.802" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230718 11:03:49.999" endtime="20230718 11:03:50.802"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230718 11:03:50.804" endtime="20230718 11:03:50.804"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:50.803" endtime="20230718 11:03:50.805"/>
</branch>
<status status="PASS" starttime="20230718 11:03:50.803" endtime="20230718 11:03:50.805"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:03:53.315" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230718 11:03:50.808" endtime="20230718 11:03:53.315"/>
</kw>
<status status="PASS" starttime="20230718 11:03:50.805" endtime="20230718 11:03:53.315"/>
</kw>
<status status="PASS" starttime="20230718 11:03:48.826" endtime="20230718 11:03:53.315"/>
</kw>
<status status="PASS" starttime="20230718 11:03:46.324" endtime="20230718 11:03:53.315"/>
</kw>
<kw name="Then User look title &quot;Danh sách nghỉ phép&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:53.315" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230718 11:03:53.315" endtime="20230718 11:03:53.315"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230718 11:03:53.330" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230718 11:03:53.315" endtime="20230718 11:03:53.330"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230718 11:03:53.330" endtime="20230718 11:03:53.330"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:03:53.330" endtime="20230718 11:03:53.330"/>
</branch>
<status status="PASS" starttime="20230718 11:03:53.330" endtime="20230718 11:03:53.330"/>
</if>
<status status="PASS" starttime="20230718 11:03:53.315" endtime="20230718 11:03:53.330"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230718 11:03:53.346" level="INFO">Title: 'Danh sách nghỉ phép'</msg>
<msg timestamp="20230718 11:03:53.346" level="INFO">${actualTitle} = Danh sách nghỉ phép</msg>
<status status="PASS" starttime="20230718 11:03:53.330" endtime="20230718 11:03:53.351"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230718 11:03:53.351" endtime="20230718 11:03:53.352"/>
</kw>
<status status="PASS" starttime="20230718 11:03:53.330" endtime="20230718 11:03:53.352"/>
</kw>
<status status="PASS" starttime="20230718 11:03:53.315" endtime="20230718 11:03:53.353"/>
</kw>
<kw name="And User look menu &quot;Nghỉ phép&quot;" library="common" sourcename="User look menu &quot;${text}&quot;">
<kw name="Element Text Should Be" library="common">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:03:53.402" level="INFO">Text: 'Nghỉ phép'</msg>
<status status="PASS" starttime="20230718 11:03:53.359" endtime="20230718 11:03:53.403"/>
</kw>
<status status="PASS" starttime="20230718 11:03:53.355" endtime="20230718 11:03:53.403"/>
</kw>
<status status="PASS" starttime="20230718 11:03:53.354" endtime="20230718 11:03:53.404"/>
</kw>
<kw name="And User look menu &quot;Thiết lập&quot;" library="common" sourcename="User look menu &quot;${text}&quot;">
<kw name="Element Text Should Be" library="common">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:03:53.445" level="INFO">Text: 'Thiết lập'</msg>
<status status="PASS" starttime="20230718 11:03:53.410" endtime="20230718 11:03:53.445"/>
</kw>
<status status="PASS" starttime="20230718 11:03:53.406" endtime="20230718 11:03:53.446"/>
</kw>
<status status="PASS" starttime="20230718 11:03:53.405" endtime="20230718 11:03:53.446"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230718 11:03:54.547" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230718 11:03:53.448" endtime="20230718 11:03:54.547"/>
</kw>
<status status="PASS" starttime="20230718 11:03:53.447" endtime="20230718 11:03:54.547"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230718 11:03:43.271" endtime="20230718 11:03:54.547"/>
</test>
<test id="s1-t12" name="DN-12 Verify that CAN navigate to the &quot;Forgot Password&quot; page from the link on the Log In page" line="88">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230718 11:03:54.563" endtime="20230718 11:03:54.564"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230718 11:03:54.565" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\9649bd03-265a-4c34-89b1-092be6242c19"}</msg>
<msg timestamp="20230718 11:03:55.662" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\9649bd03-265a-4c34-89b1-092be6242c19"}</msg>
<status status="PASS" starttime="20230718 11:03:54.564" endtime="20230718 11:03:55.662"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230718 11:03:57.610" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230718 11:03:57.611" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230718 11:03:55.663" endtime="20230718 11:03:57.611"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230718 11:03:57.612" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230718 11:03:57.611" endtime="20230718 11:03:57.612"/>
</kw>
<status status="PASS" starttime="20230718 11:03:54.561" endtime="20230718 11:03:57.612"/>
</kw>
<kw name="When Click &quot;Quên mật khẩu?&quot; link" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//button[contains(@class, 'text-blue-600')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:03:57.614" level="INFO">${element} = //button[contains(@class, 'text-blue-600')]</msg>
<status status="PASS" starttime="20230718 11:03:57.614" endtime="20230718 11:03:57.614"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:03:57.614" endtime="20230718 11:03:59.513"/>
</kw>
<status status="PASS" starttime="20230718 11:03:57.613" endtime="20230718 11:03:59.513"/>
</kw>
<kw name="Then User look title form Forgot Password &quot;Quên mật khẩu?&quot;" library="common" sourcename="User look title form Forgot Password &quot;${title}&quot;">
<kw name="Element Text Should Be" library="common">
<arg>xpath=//h3[contains(text(),'${title}')]</arg>
<arg>${title}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:03:59.616" level="INFO">Text: 'Quên mật khẩu?'</msg>
<status status="PASS" starttime="20230718 11:03:59.521" endtime="20230718 11:03:59.616"/>
</kw>
<status status="PASS" starttime="20230718 11:03:59.515" endtime="20230718 11:03:59.616"/>
</kw>
<status status="PASS" starttime="20230718 11:03:59.514" endtime="20230718 11:03:59.616"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230718 11:04:00.554" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230718 11:03:59.632" endtime="20230718 11:04:00.554"/>
</kw>
<status status="PASS" starttime="20230718 11:03:59.632" endtime="20230718 11:04:00.554"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230718 11:03:54.547" endtime="20230718 11:04:00.554"/>
</test>
<test id="s1-t13" name="DN-13 Verify that validation text of &quot;Email&quot; field display when &quot;Email&quot; field empty" line="93">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230718 11:04:00.579" endtime="20230718 11:04:00.581"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230718 11:04:00.585" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\c6c47efb-a28e-4407-9d89-39cca9779c2f"}</msg>
<msg timestamp="20230718 11:04:01.666" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\c6c47efb-a28e-4407-9d89-39cca9779c2f"}</msg>
<status status="PASS" starttime="20230718 11:04:00.583" endtime="20230718 11:04:01.666"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230718 11:04:03.611" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230718 11:04:03.611" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230718 11:04:01.666" endtime="20230718 11:04:03.611"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230718 11:04:03.612" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230718 11:04:03.612" endtime="20230718 11:04:03.612"/>
</kw>
<status status="PASS" starttime="20230718 11:04:00.578" endtime="20230718 11:04:03.612"/>
</kw>
<kw name="When Click &quot;Quên mật khẩu?&quot; link" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//button[contains(@class, 'text-blue-600')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:03.612" level="INFO">${element} = //button[contains(@class, 'text-blue-600')]</msg>
<status status="PASS" starttime="20230718 11:04:03.612" endtime="20230718 11:04:03.612"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:04:03.616" endtime="20230718 11:04:06.044"/>
</kw>
<status status="PASS" starttime="20230718 11:04:03.612" endtime="20230718 11:04:06.044"/>
</kw>
<kw name="And Click &quot;Gửi&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:04:06.050" endtime="20230718 11:04:06.211"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:06.227" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230718 11:04:06.227" endtime="20230718 11:04:06.227"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230718 11:04:06.243" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230718 11:04:06.227" endtime="20230718 11:04:06.243"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230718 11:04:06.243" endtime="20230718 11:04:06.243"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230718 11:04:06.243" endtime="20230718 11:04:06.250"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:06.243" endtime="20230718 11:04:06.250"/>
</branch>
<status status="PASS" starttime="20230718 11:04:06.243" endtime="20230718 11:04:06.250"/>
</if>
<status status="PASS" starttime="20230718 11:04:06.211" endtime="20230718 11:04:06.250"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230718 11:04:06.250" endtime="20230718 11:04:06.288"/>
</kw>
<status status="PASS" starttime="20230718 11:04:06.046" endtime="20230718 11:04:06.288"/>
</kw>
<kw name="Then Required message &quot;Email&quot; displayed under &quot;Xin vui lòng nhập email&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230718 11:04:06.300" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230718 11:04:06.300" endtime="20230718 11:04:06.300"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:04:06.535" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230718 11:04:06.300" endtime="20230718 11:04:06.535"/>
</kw>
<status status="PASS" starttime="20230718 11:04:06.300" endtime="20230718 11:04:06.535"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:04:06.599" level="INFO">Text: 'Xin vui lòng nhập email'</msg>
<status status="PASS" starttime="20230718 11:04:06.535" endtime="20230718 11:04:06.599"/>
</kw>
<status status="PASS" starttime="20230718 11:04:06.535" endtime="20230718 11:04:06.600"/>
</kw>
<status status="PASS" starttime="20230718 11:04:06.288" endtime="20230718 11:04:06.601"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230718 11:04:07.392" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230718 11:04:06.602" endtime="20230718 11:04:07.392"/>
</kw>
<status status="PASS" starttime="20230718 11:04:06.602" endtime="20230718 11:04:07.392"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230718 11:04:00.569" endtime="20230718 11:04:07.392"/>
</test>
<test id="s1-t14" name="DN-14 Verify that validation text of &quot;Email&quot; field display when &quot;Email&quot; field invalid email format and less than 6 characters" line="99">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230718 11:04:07.413" endtime="20230718 11:04:07.414"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230718 11:04:07.416" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\d815be52-8977-42c4-b44a-5c953b1d843d"}</msg>
<msg timestamp="20230718 11:04:08.599" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\d815be52-8977-42c4-b44a-5c953b1d843d"}</msg>
<status status="PASS" starttime="20230718 11:04:07.415" endtime="20230718 11:04:08.599"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230718 11:04:10.672" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230718 11:04:10.672" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230718 11:04:08.599" endtime="20230718 11:04:10.672"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230718 11:04:10.674" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230718 11:04:10.673" endtime="20230718 11:04:10.674"/>
</kw>
<status status="PASS" starttime="20230718 11:04:07.412" endtime="20230718 11:04:10.674"/>
</kw>
<kw name="When Click &quot;Quên mật khẩu?&quot; link" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//button[contains(@class, 'text-blue-600')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:10.678" level="INFO">${element} = //button[contains(@class, 'text-blue-600')]</msg>
<status status="PASS" starttime="20230718 11:04:10.678" endtime="20230718 11:04:10.678"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:04:10.679" endtime="20230718 11:04:13.163"/>
</kw>
<status status="PASS" starttime="20230718 11:04:10.677" endtime="20230718 11:04:13.164"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Email&quot; with &quot;abcd&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:13.166" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:04:13.166" endtime="20230718 11:04:13.166"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:13.167" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:04:13.167" endtime="20230718 11:04:13.167"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:04:13.169" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:04:13.168" endtime="20230718 11:04:13.169"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:13.170" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:04:13.170" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:04:13.169" endtime="20230718 11:04:13.170"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:04:13.171" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230718 11:04:13.171" endtime="20230718 11:04:13.171"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:13.173" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:04:13.173" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230718 11:04:13.172" endtime="20230718 11:04:13.173"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:04:13.177" endtime="20230718 11:04:13.178"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:04:13.178" endtime="20230718 11:04:13.178"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:13.174" endtime="20230718 11:04:13.178"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:04:13.184" endtime="20230718 11:04:13.184"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:13.185" endtime="20230718 11:04:13.185"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:04:13.185" endtime="20230718 11:04:13.186"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:13.178" endtime="20230718 11:04:13.186"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:13.189" endtime="20230718 11:04:13.190"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:13.190" endtime="20230718 11:04:13.190"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:13.187" endtime="20230718 11:04:13.190"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:13.191" endtime="20230718 11:04:13.191"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:13.191" endtime="20230718 11:04:13.191"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:13.191" endtime="20230718 11:04:13.191"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:13.192" endtime="20230718 11:04:13.192"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:13.192" endtime="20230718 11:04:13.192"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:13.191" endtime="20230718 11:04:13.193"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:04:13.193" endtime="20230718 11:04:13.194"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:13.193" endtime="20230718 11:04:13.194"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230718 11:04:13.195" endtime="20230718 11:04:13.196"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:13.194" endtime="20230718 11:04:13.196"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:13.198" endtime="20230718 11:04:13.203"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:13.204" endtime="20230718 11:04:13.205"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:13.196" endtime="20230718 11:04:13.205"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:04:13.206" endtime="20230718 11:04:13.206"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:13.205" endtime="20230718 11:04:13.206"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:04:13.207" endtime="20230718 11:04:13.207"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:13.206" endtime="20230718 11:04:13.207"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:04:13.208" endtime="20230718 11:04:13.208"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:13.207" endtime="20230718 11:04:13.208"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:04:13.209" endtime="20230718 11:04:13.210"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:13.208" endtime="20230718 11:04:13.210"/>
</branch>
<status status="PASS" starttime="20230718 11:04:13.173" endtime="20230718 11:04:13.211"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:13.212" level="INFO">Length is 4</msg>
<msg timestamp="20230718 11:04:13.212" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20230718 11:04:13.211" endtime="20230718 11:04:13.212"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:04:13.214" level="INFO">${text} = abcd</msg>
<status status="PASS" starttime="20230718 11:04:13.213" endtime="20230718 11:04:13.214"/>
</kw>
<status status="PASS" starttime="20230718 11:04:13.213" endtime="20230718 11:04:13.214"/>
</branch>
<status status="PASS" starttime="20230718 11:04:13.213" endtime="20230718 11:04:13.215"/>
</if>
<msg timestamp="20230718 11:04:13.217" level="INFO">${text} = abcd</msg>
<status status="PASS" starttime="20230718 11:04:13.165" endtime="20230718 11:04:13.218"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:04:13.221" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:04:13.219" endtime="20230718 11:04:13.221"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:04:13.221" endtime="20230718 11:04:13.274"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:04:13.275" level="INFO">Fills the text 'abcd' in the given field.</msg>
<status status="PASS" starttime="20230718 11:04:13.275" endtime="20230718 11:04:13.321"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:13.322" level="INFO">Length is 4</msg>
<msg timestamp="20230718 11:04:13.322" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20230718 11:04:13.322" endtime="20230718 11:04:13.322"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:04:13.324" level="INFO">${STATE["Email"]} = abcd</msg>
<status status="PASS" starttime="20230718 11:04:13.323" endtime="20230718 11:04:13.324"/>
</kw>
<status status="PASS" starttime="20230718 11:04:13.323" endtime="20230718 11:04:13.325"/>
</branch>
<status status="PASS" starttime="20230718 11:04:13.322" endtime="20230718 11:04:13.325"/>
</if>
<status status="PASS" starttime="20230718 11:04:13.164" endtime="20230718 11:04:13.325"/>
</kw>
<kw name="And Click &quot;Gửi&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:04:13.328" endtime="20230718 11:04:13.746"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:13.746" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230718 11:04:13.746" endtime="20230718 11:04:13.746"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230718 11:04:13.788" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230718 11:04:13.746" endtime="20230718 11:04:13.788"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230718 11:04:13.793" endtime="20230718 11:04:13.793"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230718 11:04:13.793" endtime="20230718 11:04:13.793"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:13.788" endtime="20230718 11:04:13.793"/>
</branch>
<status status="PASS" starttime="20230718 11:04:13.788" endtime="20230718 11:04:13.793"/>
</if>
<status status="PASS" starttime="20230718 11:04:13.746" endtime="20230718 11:04:13.793"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230718 11:04:13.793" endtime="20230718 11:04:13.839"/>
</kw>
<status status="PASS" starttime="20230718 11:04:13.328" endtime="20230718 11:04:13.839"/>
</kw>
<kw name="Then Required message &quot;Email&quot; field displayed under &quot;Xin vui lòng nhập địa chỉ email hợp lệ!&quot;" library="common" sourcename="Required message &quot;${name}&quot; field displayed under &quot;${text}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-picker-input")]/input</arg>
<msg timestamp="20230718 11:04:13.839" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-picker-input")]/input</msg>
<status status="PASS" starttime="20230718 11:04:13.839" endtime="20230718 11:04:13.839"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>//div[contains(text(),'${text}')]</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:04:13.862" level="INFO">Waited for Element with selector //div[contains(text(),'Xin vui lòng nhập địa chỉ email hợp lệ!')] at state visible</msg>
<status status="PASS" starttime="20230718 11:04:13.839" endtime="20230718 11:04:13.862"/>
</kw>
<status status="PASS" starttime="20230718 11:04:13.839" endtime="20230718 11:04:13.862"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>//div[contains(text(),'${text}')]</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:04:13.947" level="INFO">Text: 'Xin vui lòng nhập địa chỉ email hợp lệ!'</msg>
<status status="PASS" starttime="20230718 11:04:13.869" endtime="20230718 11:04:13.947"/>
</kw>
<status status="PASS" starttime="20230718 11:04:13.862" endtime="20230718 11:04:13.947"/>
</kw>
<status status="PASS" starttime="20230718 11:04:13.839" endtime="20230718 11:04:13.947"/>
</kw>
<kw name="And Required message &quot;Email&quot; field displayed under &quot;Xin vui lòng nhập tối thiểu 6 ký tự!&quot;" library="common" sourcename="Required message &quot;${name}&quot; field displayed under &quot;${text}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-picker-input")]/input</arg>
<msg timestamp="20230718 11:04:13.947" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-picker-input")]/input</msg>
<status status="PASS" starttime="20230718 11:04:13.947" endtime="20230718 11:04:13.947"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>//div[contains(text(),'${text}')]</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:04:13.995" level="INFO">Waited for Element with selector //div[contains(text(),'Xin vui lòng nhập tối thiểu 6 ký tự!')] at state visible</msg>
<status status="PASS" starttime="20230718 11:04:13.947" endtime="20230718 11:04:13.995"/>
</kw>
<status status="PASS" starttime="20230718 11:04:13.947" endtime="20230718 11:04:13.995"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>//div[contains(text(),'${text}')]</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:04:14.047" level="INFO">Text: 'Xin vui lòng nhập tối thiểu 6 ký tự!'</msg>
<status status="PASS" starttime="20230718 11:04:13.998" endtime="20230718 11:04:14.047"/>
</kw>
<status status="PASS" starttime="20230718 11:04:13.996" endtime="20230718 11:04:14.047"/>
</kw>
<status status="PASS" starttime="20230718 11:04:13.947" endtime="20230718 11:04:14.048"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230718 11:04:14.674" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230718 11:04:14.049" endtime="20230718 11:04:14.674"/>
</kw>
<status status="PASS" starttime="20230718 11:04:14.049" endtime="20230718 11:04:14.674"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230718 11:04:07.392" endtime="20230718 11:04:14.674"/>
</test>
<test id="s1-t15" name="DN-15 Verify that validation text of &quot;Email&quot; field display when &quot;Email&quot; field invalid email format and greater than 6 characters" line="107">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230718 11:04:14.702" endtime="20230718 11:04:14.703"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230718 11:04:14.705" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\ebab0fed-079a-4e60-aa02-b749493244c2"}</msg>
<msg timestamp="20230718 11:04:15.797" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\ebab0fed-079a-4e60-aa02-b749493244c2"}</msg>
<status status="PASS" starttime="20230718 11:04:14.703" endtime="20230718 11:04:15.797"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230718 11:04:17.966" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230718 11:04:17.966" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230718 11:04:15.797" endtime="20230718 11:04:17.966"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230718 11:04:17.968" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230718 11:04:17.967" endtime="20230718 11:04:17.968"/>
</kw>
<status status="PASS" starttime="20230718 11:04:14.701" endtime="20230718 11:04:17.968"/>
</kw>
<kw name="When Click &quot;Quên mật khẩu?&quot; link" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//button[contains(@class, 'text-blue-600')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:17.970" level="INFO">${element} = //button[contains(@class, 'text-blue-600')]</msg>
<status status="PASS" starttime="20230718 11:04:17.970" endtime="20230718 11:04:17.970"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:04:17.970" endtime="20230718 11:04:19.865"/>
</kw>
<status status="PASS" starttime="20230718 11:04:17.969" endtime="20230718 11:04:19.866"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Email&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:19.872" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:04:19.871" endtime="20230718 11:04:19.872"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:19.872" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:04:19.872" endtime="20230718 11:04:19.872"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:04:19.873" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:04:19.872" endtime="20230718 11:04:19.873"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:19.874" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:04:19.874" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:04:19.873" endtime="20230718 11:04:19.874"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:04:19.874" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230718 11:04:19.874" endtime="20230718 11:04:19.875"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:19.876" level="INFO">Length is 1</msg>
<msg timestamp="20230718 11:04:19.876" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230718 11:04:19.876" endtime="20230718 11:04:19.876"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:04:19.876" endtime="20230718 11:04:19.876"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:04:19.876" endtime="20230718 11:04:19.876"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:19.876" endtime="20230718 11:04:19.876"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:04:19.876" endtime="20230718 11:04:19.876"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:19.876" endtime="20230718 11:04:19.876"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:04:19.876" endtime="20230718 11:04:19.876"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:19.876" endtime="20230718 11:04:19.876"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:19.876" endtime="20230718 11:04:19.876"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:19.876" endtime="20230718 11:04:19.876"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:19.876" endtime="20230718 11:04:19.876"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:19.881" endtime="20230718 11:04:19.882"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:19.883" endtime="20230718 11:04:19.884"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:19.876" endtime="20230718 11:04:19.884"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:19.886" endtime="20230718 11:04:19.886"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:19.886" endtime="20230718 11:04:19.887"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:19.885" endtime="20230718 11:04:19.887"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:04:19.887" endtime="20230718 11:04:19.887"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:19.887" endtime="20230718 11:04:19.887"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230718 11:04:19.888" endtime="20230718 11:04:19.888"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:19.888" endtime="20230718 11:04:19.888"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:19.889" endtime="20230718 11:04:19.889"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:19.889" endtime="20230718 11:04:19.889"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:19.888" endtime="20230718 11:04:19.889"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:04:19.890" endtime="20230718 11:04:19.890"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:19.889" endtime="20230718 11:04:19.890"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:04:19.891" endtime="20230718 11:04:19.891"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:19.890" endtime="20230718 11:04:19.891"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:04:19.892" endtime="20230718 11:04:19.893"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:19.891" endtime="20230718 11:04:19.893"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230718 11:04:19.895" level="INFO">${new_text} = Nesciunt ex voluptas commodi.</msg>
<status status="PASS" starttime="20230718 11:04:19.894" endtime="20230718 11:04:19.895"/>
</kw>
<status status="PASS" starttime="20230718 11:04:19.893" endtime="20230718 11:04:19.895"/>
</branch>
<status status="PASS" starttime="20230718 11:04:19.876" endtime="20230718 11:04:19.895"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:19.897" level="INFO">Length is 8</msg>
<msg timestamp="20230718 11:04:19.897" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230718 11:04:19.896" endtime="20230718 11:04:19.897"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:04:19.905" level="INFO">${text} = Nesciunt ex voluptas commodi.</msg>
<status status="PASS" starttime="20230718 11:04:19.903" endtime="20230718 11:04:19.905"/>
</kw>
<status status="PASS" starttime="20230718 11:04:19.902" endtime="20230718 11:04:19.905"/>
</branch>
<status status="PASS" starttime="20230718 11:04:19.901" endtime="20230718 11:04:19.906"/>
</if>
<msg timestamp="20230718 11:04:19.907" level="INFO">${text} = Nesciunt ex voluptas commodi.</msg>
<status status="PASS" starttime="20230718 11:04:19.870" endtime="20230718 11:04:19.907"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:04:19.909" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:04:19.908" endtime="20230718 11:04:19.910"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:04:19.910" endtime="20230718 11:04:19.991"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:04:19.992" level="INFO">Fills the text 'Nesciunt ex voluptas commodi.' in the given field.</msg>
<status status="PASS" starttime="20230718 11:04:19.992" endtime="20230718 11:04:20.029"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:20.029" level="INFO">Length is 29</msg>
<msg timestamp="20230718 11:04:20.044" level="INFO">${cnt} = 29</msg>
<status status="PASS" starttime="20230718 11:04:20.029" endtime="20230718 11:04:20.044"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:04:20.044" level="INFO">${STATE["Email"]} = Nesciunt ex voluptas commodi.</msg>
<status status="PASS" starttime="20230718 11:04:20.044" endtime="20230718 11:04:20.044"/>
</kw>
<status status="PASS" starttime="20230718 11:04:20.044" endtime="20230718 11:04:20.044"/>
</branch>
<status status="PASS" starttime="20230718 11:04:20.044" endtime="20230718 11:04:20.044"/>
</if>
<status status="PASS" starttime="20230718 11:04:19.869" endtime="20230718 11:04:20.044"/>
</kw>
<kw name="And Click &quot;Gửi&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:04:20.044" endtime="20230718 11:04:20.412"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:20.412" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230718 11:04:20.412" endtime="20230718 11:04:20.412"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230718 11:04:20.428" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230718 11:04:20.412" endtime="20230718 11:04:20.428"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230718 11:04:20.431" endtime="20230718 11:04:20.431"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230718 11:04:20.431" endtime="20230718 11:04:20.432"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:20.428" endtime="20230718 11:04:20.432"/>
</branch>
<status status="PASS" starttime="20230718 11:04:20.428" endtime="20230718 11:04:20.432"/>
</if>
<status status="PASS" starttime="20230718 11:04:20.412" endtime="20230718 11:04:20.433"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230718 11:04:20.433" endtime="20230718 11:04:20.484"/>
</kw>
<status status="PASS" starttime="20230718 11:04:20.044" endtime="20230718 11:04:20.485"/>
</kw>
<kw name="Then Required message &quot;Email&quot; displayed under &quot;Xin vui lòng nhập địa chỉ email hợp lệ!&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230718 11:04:20.488" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230718 11:04:20.487" endtime="20230718 11:04:20.488"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:04:20.501" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230718 11:04:20.489" endtime="20230718 11:04:20.502"/>
</kw>
<status status="PASS" starttime="20230718 11:04:20.488" endtime="20230718 11:04:20.503"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:04:20.572" level="INFO">Text: 'Xin vui lòng nhập địa chỉ email hợp lệ!'</msg>
<status status="PASS" starttime="20230718 11:04:20.507" endtime="20230718 11:04:20.572"/>
</kw>
<status status="PASS" starttime="20230718 11:04:20.503" endtime="20230718 11:04:20.573"/>
</kw>
<status status="PASS" starttime="20230718 11:04:20.486" endtime="20230718 11:04:20.573"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230718 11:04:21.199" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230718 11:04:20.579" endtime="20230718 11:04:21.199"/>
</kw>
<status status="PASS" starttime="20230718 11:04:20.578" endtime="20230718 11:04:21.199"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230718 11:04:14.695" endtime="20230718 11:04:21.199"/>
</test>
<test id="s1-t16" name="DN-16 Verify that the forgot password can be cancel using the &quot;Huỷ bỏ&quot; button" line="114">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230718 11:04:21.221" endtime="20230718 11:04:21.221"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230718 11:04:21.223" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\eca47c67-821b-4d8f-a64e-d65b24d5753e"}</msg>
<msg timestamp="20230718 11:04:22.301" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\eca47c67-821b-4d8f-a64e-d65b24d5753e"}</msg>
<status status="PASS" starttime="20230718 11:04:21.222" endtime="20230718 11:04:22.301"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230718 11:04:24.272" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230718 11:04:24.272" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230718 11:04:22.301" endtime="20230718 11:04:24.273"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230718 11:04:24.274" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230718 11:04:24.273" endtime="20230718 11:04:24.275"/>
</kw>
<status status="PASS" starttime="20230718 11:04:21.220" endtime="20230718 11:04:24.276"/>
</kw>
<kw name="When Click &quot;Quên mật khẩu?&quot; link" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//button[contains(@class, 'text-blue-600')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:24.276" level="INFO">${element} = //button[contains(@class, 'text-blue-600')]</msg>
<status status="PASS" starttime="20230718 11:04:24.276" endtime="20230718 11:04:24.276"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:04:24.276" endtime="20230718 11:04:26.163"/>
</kw>
<status status="PASS" starttime="20230718 11:04:24.276" endtime="20230718 11:04:26.163"/>
</kw>
<kw name="And Click &quot;Huỷ bỏ&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:04:26.163" endtime="20230718 11:04:26.741"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:26.743" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230718 11:04:26.742" endtime="20230718 11:04:26.743"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230718 11:04:26.766" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230718 11:04:26.743" endtime="20230718 11:04:26.767"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230718 11:04:26.769" endtime="20230718 11:04:26.769"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230718 11:04:26.769" endtime="20230718 11:04:26.769"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:26.767" endtime="20230718 11:04:26.769"/>
</branch>
<status status="PASS" starttime="20230718 11:04:26.767" endtime="20230718 11:04:26.769"/>
</if>
<status status="PASS" starttime="20230718 11:04:26.741" endtime="20230718 11:04:26.769"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230718 11:04:26.769" endtime="20230718 11:04:26.818"/>
</kw>
<status status="PASS" starttime="20230718 11:04:26.163" endtime="20230718 11:04:26.818"/>
</kw>
<kw name="Then &quot;Quên mật khẩu?&quot; form disappears" library="common" sourcename="&quot;${forgotpassword}&quot; form disappears">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>//h3[contains(text(),'${forgotpassword}')]</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230718 11:04:26.988" level="INFO">Waited for Element with selector //h3[contains(text(),'Quên mật khẩu?')] at state detached</msg>
<status status="PASS" starttime="20230718 11:04:26.833" endtime="20230718 11:04:26.988"/>
</kw>
<status status="PASS" starttime="20230718 11:04:26.818" endtime="20230718 11:04:26.989"/>
</kw>
<status status="PASS" starttime="20230718 11:04:26.818" endtime="20230718 11:04:26.989"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230718 11:04:27.960" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230718 11:04:26.990" endtime="20230718 11:04:27.960"/>
</kw>
<status status="PASS" starttime="20230718 11:04:26.990" endtime="20230718 11:04:27.960"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230718 11:04:21.209" endtime="20230718 11:04:27.960"/>
</test>
<test id="s1-t17" name="DN-17: Verify displays the password" line="121">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230718 11:04:27.980" endtime="20230718 11:04:27.981"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230718 11:04:27.982" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\7e4d4cc0-ca60-40db-82f8-ca149cc7eba3"}</msg>
<msg timestamp="20230718 11:04:29.074" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\7e4d4cc0-ca60-40db-82f8-ca149cc7eba3"}</msg>
<status status="PASS" starttime="20230718 11:04:27.981" endtime="20230718 11:04:29.074"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230718 11:04:31.056" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230718 11:04:31.057" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230718 11:04:29.074" endtime="20230718 11:04:31.057"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230718 11:04:31.058" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230718 11:04:31.058" endtime="20230718 11:04:31.058"/>
</kw>
<status status="PASS" starttime="20230718 11:04:27.979" endtime="20230718 11:04:31.058"/>
</kw>
<kw name="When Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:31.058" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:04:31.058" endtime="20230718 11:04:31.058"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:31.058" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:04:31.058" endtime="20230718 11:04:31.058"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:04:31.058" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:04:31.058" endtime="20230718 11:04:31.058"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:31.064" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:04:31.065" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:04:31.064" endtime="20230718 11:04:31.065"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:04:31.066" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230718 11:04:31.065" endtime="20230718 11:04:31.066"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:31.067" level="INFO">Length is 1</msg>
<msg timestamp="20230718 11:04:31.068" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230718 11:04:31.066" endtime="20230718 11:04:31.068"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:04:31.069" endtime="20230718 11:04:31.070"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:04:31.071" endtime="20230718 11:04:31.071"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:31.069" endtime="20230718 11:04:31.071"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:04:31.072" endtime="20230718 11:04:31.073"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:31.073" endtime="20230718 11:04:31.073"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:04:31.074" endtime="20230718 11:04:31.074"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:31.071" endtime="20230718 11:04:31.074"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:31.076" endtime="20230718 11:04:31.076"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:31.076" endtime="20230718 11:04:31.077"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:31.075" endtime="20230718 11:04:31.077"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:31.078" endtime="20230718 11:04:31.078"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:31.079" endtime="20230718 11:04:31.079"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:31.077" endtime="20230718 11:04:31.079"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:31.081" endtime="20230718 11:04:31.081"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:31.081" endtime="20230718 11:04:31.082"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:31.079" endtime="20230718 11:04:31.082"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:04:31.084" endtime="20230718 11:04:31.084"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:31.083" endtime="20230718 11:04:31.085"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<msg timestamp="20230718 11:04:31.087" level="INFO">${new_text} = hunarraj@example.com</msg>
<status status="PASS" starttime="20230718 11:04:31.086" endtime="20230718 11:04:31.087"/>
</kw>
<status status="PASS" starttime="20230718 11:04:31.085" endtime="20230718 11:04:31.087"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:31.088" endtime="20230718 11:04:31.089"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:31.090" endtime="20230718 11:04:31.091"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:31.088" endtime="20230718 11:04:31.091"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:04:31.091" endtime="20230718 11:04:31.091"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:31.091" endtime="20230718 11:04:31.091"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:04:31.092" endtime="20230718 11:04:31.092"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:31.092" endtime="20230718 11:04:31.092"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:04:31.093" endtime="20230718 11:04:31.093"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:31.092" endtime="20230718 11:04:31.093"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:04:31.093" endtime="20230718 11:04:31.093"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:31.093" endtime="20230718 11:04:31.094"/>
</branch>
<status status="PASS" starttime="20230718 11:04:31.068" endtime="20230718 11:04:31.094"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:31.094" level="INFO">Length is 8</msg>
<msg timestamp="20230718 11:04:31.095" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230718 11:04:31.094" endtime="20230718 11:04:31.095"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:04:31.096" level="INFO">${text} = hunarraj@example.com</msg>
<status status="PASS" starttime="20230718 11:04:31.095" endtime="20230718 11:04:31.096"/>
</kw>
<status status="PASS" starttime="20230718 11:04:31.095" endtime="20230718 11:04:31.096"/>
</branch>
<status status="PASS" starttime="20230718 11:04:31.095" endtime="20230718 11:04:31.096"/>
</if>
<msg timestamp="20230718 11:04:31.099" level="INFO">${text} = hunarraj@example.com</msg>
<status status="PASS" starttime="20230718 11:04:31.058" endtime="20230718 11:04:31.099"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:04:31.101" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:04:31.099" endtime="20230718 11:04:31.101"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:04:31.102" endtime="20230718 11:04:33.075"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:04:33.075" level="INFO">Fills the text 'hunarraj@example.com' in the given field.</msg>
<status status="PASS" starttime="20230718 11:04:33.075" endtime="20230718 11:04:33.128"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:33.128" level="INFO">Length is 20</msg>
<msg timestamp="20230718 11:04:33.128" level="INFO">${cnt} = 20</msg>
<status status="PASS" starttime="20230718 11:04:33.128" endtime="20230718 11:04:33.128"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:04:33.128" level="INFO">${STATE["Tên đăng nhập"]} = hunarraj@example.com</msg>
<status status="PASS" starttime="20230718 11:04:33.128" endtime="20230718 11:04:33.144"/>
</kw>
<status status="PASS" starttime="20230718 11:04:33.128" endtime="20230718 11:04:33.144"/>
</branch>
<status status="PASS" starttime="20230718 11:04:33.128" endtime="20230718 11:04:33.144"/>
</if>
<status status="PASS" starttime="20230718 11:04:31.058" endtime="20230718 11:04:33.144"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:33.144" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:04:33.144" endtime="20230718 11:04:33.144"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:33.144" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:04:33.144" endtime="20230718 11:04:33.144"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:04:33.144" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:04:33.144" endtime="20230718 11:04:33.144"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:33.144" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:04:33.144" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:04:33.144" endtime="20230718 11:04:33.144"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:04:33.144" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230718 11:04:33.144" endtime="20230718 11:04:33.144"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:33.144" level="INFO">Length is 1</msg>
<msg timestamp="20230718 11:04:33.144" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230718 11:04:33.144" endtime="20230718 11:04:33.144"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:04:33.144" endtime="20230718 11:04:33.144"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:04:33.144" endtime="20230718 11:04:33.144"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:33.144" endtime="20230718 11:04:33.144"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:04:33.144" endtime="20230718 11:04:33.144"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:33.159" endtime="20230718 11:04:33.159"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:04:33.159" endtime="20230718 11:04:33.159"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:33.144" endtime="20230718 11:04:33.159"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:33.159" endtime="20230718 11:04:33.159"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:33.159" endtime="20230718 11:04:33.159"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:33.159" endtime="20230718 11:04:33.159"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:33.164" endtime="20230718 11:04:33.164"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:33.164" endtime="20230718 11:04:33.165"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:33.163" endtime="20230718 11:04:33.165"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:33.166" endtime="20230718 11:04:33.166"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:33.166" endtime="20230718 11:04:33.167"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:33.165" endtime="20230718 11:04:33.167"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:04:33.168" endtime="20230718 11:04:33.168"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:33.167" endtime="20230718 11:04:33.168"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230718 11:04:33.169" endtime="20230718 11:04:33.169"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:33.168" endtime="20230718 11:04:33.169"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:33.170" endtime="20230718 11:04:33.171"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:33.171" endtime="20230718 11:04:33.171"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:33.170" endtime="20230718 11:04:33.171"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:04:33.172" endtime="20230718 11:04:33.173"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:33.172" endtime="20230718 11:04:33.173"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:04:33.175" endtime="20230718 11:04:33.176"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:33.173" endtime="20230718 11:04:33.179"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:04:33.181" endtime="20230718 11:04:33.182"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:33.179" endtime="20230718 11:04:33.183"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230718 11:04:33.185" level="INFO">${new_text} = Recusandae accusantium iste debitis.</msg>
<status status="PASS" starttime="20230718 11:04:33.184" endtime="20230718 11:04:33.185"/>
</kw>
<status status="PASS" starttime="20230718 11:04:33.183" endtime="20230718 11:04:33.185"/>
</branch>
<status status="PASS" starttime="20230718 11:04:33.144" endtime="20230718 11:04:33.185"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:33.187" level="INFO">Length is 8</msg>
<msg timestamp="20230718 11:04:33.187" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230718 11:04:33.186" endtime="20230718 11:04:33.187"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:04:33.189" level="INFO">${text} = Recusandae accusantium iste debitis.</msg>
<status status="PASS" starttime="20230718 11:04:33.188" endtime="20230718 11:04:33.189"/>
</kw>
<status status="PASS" starttime="20230718 11:04:33.187" endtime="20230718 11:04:33.189"/>
</branch>
<status status="PASS" starttime="20230718 11:04:33.187" endtime="20230718 11:04:33.190"/>
</if>
<msg timestamp="20230718 11:04:33.190" level="INFO">${text} = Recusandae accusantium iste debitis.</msg>
<status status="PASS" starttime="20230718 11:04:33.144" endtime="20230718 11:04:33.191"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:04:33.192" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:04:33.191" endtime="20230718 11:04:33.192"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:04:33.192" endtime="20230718 11:04:33.270"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:04:33.271" level="INFO">Fills the text 'Recusandae accusantium iste debitis.' in the given field.</msg>
<status status="PASS" starttime="20230718 11:04:33.270" endtime="20230718 11:04:33.377"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:33.378" level="INFO">Length is 36</msg>
<msg timestamp="20230718 11:04:33.378" level="INFO">${cnt} = 36</msg>
<status status="PASS" starttime="20230718 11:04:33.378" endtime="20230718 11:04:33.378"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:04:33.381" level="INFO">${STATE["Mật khẩu"]} = Recusandae accusantium iste debitis.</msg>
<status status="PASS" starttime="20230718 11:04:33.379" endtime="20230718 11:04:33.382"/>
</kw>
<status status="PASS" starttime="20230718 11:04:33.379" endtime="20230718 11:04:33.383"/>
</branch>
<status status="PASS" starttime="20230718 11:04:33.379" endtime="20230718 11:04:33.383"/>
</if>
<status status="PASS" starttime="20230718 11:04:33.144" endtime="20230718 11:04:33.385"/>
</kw>
<kw name="And Click &quot;Eye&quot; icon to display password" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, 'absolute') and @id='Layer_1']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:33.387" level="INFO">${element} = xpath=//*[contains(@class, 'absolute') and @id='Layer_1']</msg>
<status status="PASS" starttime="20230718 11:04:33.387" endtime="20230718 11:04:33.387"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:04:33.387" endtime="20230718 11:04:33.534"/>
</kw>
<status status="PASS" starttime="20230718 11:04:33.387" endtime="20230718 11:04:33.534"/>
</kw>
<kw name="Then User look &quot;Mật khẩu&quot; field with type &quot;text&quot;" library="common" sourcename="User look &quot;${name}&quot; field with type &quot;${type}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:04:33.534" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:04:33.534" endtime="20230718 11:04:33.534"/>
</kw>
<kw name="Get Attribute" library="Browser">
<var>${password_field_type}</var>
<arg>${element}</arg>
<arg>type</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the HTML ``attribute`` of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:04:33.601" level="INFO">Attribute is: 'text'</msg>
<msg timestamp="20230718 11:04:33.601" level="INFO">${password_field_type} = text</msg>
<status status="PASS" starttime="20230718 11:04:33.534" endtime="20230718 11:04:33.601"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${password_field_type}</arg>
<arg>${type}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230718 11:04:33.602" endtime="20230718 11:04:33.603"/>
</kw>
<status status="PASS" starttime="20230718 11:04:33.534" endtime="20230718 11:04:33.603"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230718 11:04:34.530" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230718 11:04:33.605" endtime="20230718 11:04:34.530"/>
</kw>
<status status="PASS" starttime="20230718 11:04:33.604" endtime="20230718 11:04:34.530"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230718 11:04:27.960" endtime="20230718 11:04:34.530"/>
</test>
<test id="s1-t18" name="DN-18: Verify refresh page" line="129">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230718 11:04:34.552" endtime="20230718 11:04:34.553"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230718 11:04:34.555" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\c12d4631-8685-4295-b90d-a57a0b4b62be"}</msg>
<msg timestamp="20230718 11:04:35.671" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\c12d4631-8685-4295-b90d-a57a0b4b62be"}</msg>
<status status="PASS" starttime="20230718 11:04:34.554" endtime="20230718 11:04:35.671"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230718 11:04:37.750" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230718 11:04:37.750" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230718 11:04:35.686" endtime="20230718 11:04:37.750"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230718 11:04:37.752" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230718 11:04:37.751" endtime="20230718 11:04:37.752"/>
</kw>
<status status="PASS" starttime="20230718 11:04:34.551" endtime="20230718 11:04:37.752"/>
</kw>
<kw name="When Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:37.757" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:04:37.756" endtime="20230718 11:04:37.757"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:37.758" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:04:37.757" endtime="20230718 11:04:37.758"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:04:37.759" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:04:37.758" endtime="20230718 11:04:37.759"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:37.760" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:04:37.760" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:04:37.759" endtime="20230718 11:04:37.760"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:04:37.760" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230718 11:04:37.760" endtime="20230718 11:04:37.760"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:37.761" level="INFO">Length is 1</msg>
<msg timestamp="20230718 11:04:37.761" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230718 11:04:37.761" endtime="20230718 11:04:37.761"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:04:37.763" endtime="20230718 11:04:37.764"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:04:37.764" endtime="20230718 11:04:37.764"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:37.762" endtime="20230718 11:04:37.765"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:04:37.766" endtime="20230718 11:04:37.767"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:37.768" endtime="20230718 11:04:37.768"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:04:37.769" endtime="20230718 11:04:37.769"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:37.765" endtime="20230718 11:04:37.770"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:37.771" endtime="20230718 11:04:37.771"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:37.772" endtime="20230718 11:04:37.772"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:37.770" endtime="20230718 11:04:37.772"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:37.774" endtime="20230718 11:04:37.774"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:37.774" endtime="20230718 11:04:37.775"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:37.773" endtime="20230718 11:04:37.775"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:37.776" endtime="20230718 11:04:37.776"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:37.777" endtime="20230718 11:04:37.777"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:37.775" endtime="20230718 11:04:37.778"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:04:37.779" endtime="20230718 11:04:37.779"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:37.778" endtime="20230718 11:04:37.779"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<msg timestamp="20230718 11:04:37.781" level="INFO">${new_text} = indrajit13@example.com</msg>
<status status="PASS" starttime="20230718 11:04:37.781" endtime="20230718 11:04:37.781"/>
</kw>
<status status="PASS" starttime="20230718 11:04:37.779" endtime="20230718 11:04:37.782"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:37.783" endtime="20230718 11:04:37.783"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:37.784" endtime="20230718 11:04:37.784"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:37.782" endtime="20230718 11:04:37.784"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:04:37.786" endtime="20230718 11:04:37.786"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:37.785" endtime="20230718 11:04:37.786"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:04:37.787" endtime="20230718 11:04:37.788"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:37.787" endtime="20230718 11:04:37.788"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:04:37.789" endtime="20230718 11:04:37.790"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:37.788" endtime="20230718 11:04:37.790"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:04:37.791" endtime="20230718 11:04:37.792"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:37.791" endtime="20230718 11:04:37.792"/>
</branch>
<status status="PASS" starttime="20230718 11:04:37.761" endtime="20230718 11:04:37.792"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:37.793" level="INFO">Length is 8</msg>
<msg timestamp="20230718 11:04:37.793" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230718 11:04:37.793" endtime="20230718 11:04:37.794"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:04:37.796" level="INFO">${text} = indrajit13@example.com</msg>
<status status="PASS" starttime="20230718 11:04:37.795" endtime="20230718 11:04:37.797"/>
</kw>
<status status="PASS" starttime="20230718 11:04:37.794" endtime="20230718 11:04:37.798"/>
</branch>
<status status="PASS" starttime="20230718 11:04:37.794" endtime="20230718 11:04:37.800"/>
</if>
<msg timestamp="20230718 11:04:37.801" level="INFO">${text} = indrajit13@example.com</msg>
<status status="PASS" starttime="20230718 11:04:37.755" endtime="20230718 11:04:37.801"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:04:37.802" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:04:37.802" endtime="20230718 11:04:37.803"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:04:37.803" endtime="20230718 11:04:39.877"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:04:39.879" level="INFO">Fills the text 'indrajit13@example.com' in the given field.</msg>
<status status="PASS" starttime="20230718 11:04:39.878" endtime="20230718 11:04:39.928"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:39.944" level="INFO">Length is 22</msg>
<msg timestamp="20230718 11:04:39.944" level="INFO">${cnt} = 22</msg>
<status status="PASS" starttime="20230718 11:04:39.928" endtime="20230718 11:04:39.944"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:04:39.944" level="INFO">${STATE["Tên đăng nhập"]} = indrajit13@example.com</msg>
<status status="PASS" starttime="20230718 11:04:39.944" endtime="20230718 11:04:39.944"/>
</kw>
<status status="PASS" starttime="20230718 11:04:39.944" endtime="20230718 11:04:39.944"/>
</branch>
<status status="PASS" starttime="20230718 11:04:39.944" endtime="20230718 11:04:39.944"/>
</if>
<status status="PASS" starttime="20230718 11:04:37.754" endtime="20230718 11:04:39.944"/>
</kw>
<kw name="And Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:39.944" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230718 11:04:39.944" endtime="20230718 11:04:39.944"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230718 11:04:39.944" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230718 11:04:39.944" endtime="20230718 11:04:39.944"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:04:39.944" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230718 11:04:39.944" endtime="20230718 11:04:39.944"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:39.944" level="INFO">Length is 0</msg>
<msg timestamp="20230718 11:04:39.944" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230718 11:04:39.944" endtime="20230718 11:04:39.944"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230718 11:04:39.944" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230718 11:04:39.944" endtime="20230718 11:04:39.944"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:39.944" level="INFO">Length is 1</msg>
<msg timestamp="20230718 11:04:39.944" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230718 11:04:39.944" endtime="20230718 11:04:39.944"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:04:39.959" endtime="20230718 11:04:39.959"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:04:39.959" endtime="20230718 11:04:39.959"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:39.944" endtime="20230718 11:04:39.959"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:04:39.963" endtime="20230718 11:04:39.963"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:39.964" endtime="20230718 11:04:39.964"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230718 11:04:39.965" endtime="20230718 11:04:39.965"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:39.962" endtime="20230718 11:04:39.965"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:39.966" endtime="20230718 11:04:39.967"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:39.967" endtime="20230718 11:04:39.967"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:39.966" endtime="20230718 11:04:39.968"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:39.968" endtime="20230718 11:04:39.969"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:39.969" endtime="20230718 11:04:39.969"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:39.968" endtime="20230718 11:04:39.970"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:39.971" endtime="20230718 11:04:39.971"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:39.972" endtime="20230718 11:04:39.972"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:39.970" endtime="20230718 11:04:39.972"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230718 11:04:39.973" endtime="20230718 11:04:39.974"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:39.972" endtime="20230718 11:04:39.974"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230718 11:04:39.979" endtime="20230718 11:04:39.981"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:39.975" endtime="20230718 11:04:39.982"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230718 11:04:39.985" endtime="20230718 11:04:39.985"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230718 11:04:39.986" endtime="20230718 11:04:39.986"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:39.983" endtime="20230718 11:04:39.986"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230718 11:04:39.987" endtime="20230718 11:04:39.988"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:39.987" endtime="20230718 11:04:39.988"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230718 11:04:39.989" endtime="20230718 11:04:39.989"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:39.988" endtime="20230718 11:04:39.989"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230718 11:04:39.990" endtime="20230718 11:04:39.990"/>
</kw>
<status status="NOT RUN" starttime="20230718 11:04:39.990" endtime="20230718 11:04:39.991"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230718 11:04:39.992" level="INFO">${new_text} = Temporibus vero dicta dolorum illo totam est aspernatur.</msg>
<status status="PASS" starttime="20230718 11:04:39.992" endtime="20230718 11:04:39.992"/>
</kw>
<status status="PASS" starttime="20230718 11:04:39.992" endtime="20230718 11:04:39.992"/>
</branch>
<status status="PASS" starttime="20230718 11:04:39.944" endtime="20230718 11:04:39.992"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:39.992" level="INFO">Length is 8</msg>
<msg timestamp="20230718 11:04:39.992" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230718 11:04:39.992" endtime="20230718 11:04:39.992"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230718 11:04:40.000" level="INFO">${text} = Temporibus vero dicta dolorum illo totam est aspernatur.</msg>
<status status="PASS" starttime="20230718 11:04:39.999" endtime="20230718 11:04:40.000"/>
</kw>
<status status="PASS" starttime="20230718 11:04:39.998" endtime="20230718 11:04:40.000"/>
</branch>
<status status="PASS" starttime="20230718 11:04:39.997" endtime="20230718 11:04:40.001"/>
</if>
<msg timestamp="20230718 11:04:40.001" level="INFO">${text} = Temporibus vero dicta dolorum illo totam est aspernatur.</msg>
<status status="PASS" starttime="20230718 11:04:39.944" endtime="20230718 11:04:40.001"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:04:40.003" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:04:40.002" endtime="20230718 11:04:40.003"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230718 11:04:40.004" endtime="20230718 11:04:40.084"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230718 11:04:40.085" level="INFO">Fills the text 'Temporibus vero dicta dolorum illo totam est aspernatur.' in the given field.</msg>
<status status="PASS" starttime="20230718 11:04:40.085" endtime="20230718 11:04:40.230"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230718 11:04:40.234" level="INFO">Length is 56</msg>
<msg timestamp="20230718 11:04:40.235" level="INFO">${cnt} = 56</msg>
<status status="PASS" starttime="20230718 11:04:40.232" endtime="20230718 11:04:40.235"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230718 11:04:40.240" level="INFO">${STATE["Mật khẩu"]} = Temporibus vero dicta dolorum illo totam est aspernatur.</msg>
<status status="PASS" starttime="20230718 11:04:40.236" endtime="20230718 11:04:40.240"/>
</kw>
<status status="PASS" starttime="20230718 11:04:40.235" endtime="20230718 11:04:40.240"/>
</branch>
<status status="PASS" starttime="20230718 11:04:40.235" endtime="20230718 11:04:40.241"/>
</if>
<status status="PASS" starttime="20230718 11:04:39.944" endtime="20230718 11:04:40.241"/>
</kw>
<kw name="And Reload Page" library="common">
<kw name="Reload" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Reloads current active page.</doc>
<msg timestamp="20230718 11:04:41.434" level="INFO">Reloaded page</msg>
<status status="PASS" starttime="20230718 11:04:40.243" endtime="20230718 11:04:41.434"/>
</kw>
<status status="PASS" starttime="20230718 11:04:40.242" endtime="20230718 11:04:41.435"/>
</kw>
<kw name="Then User look &quot;Tên đăng nhập&quot; field empty" library="common" sourcename="User look &quot;${name}&quot; field empty">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:04:41.439" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:04:41.438" endtime="20230718 11:04:41.440"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${EMPTY}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:04:42.830" level="INFO">Text: ''</msg>
<status status="PASS" starttime="20230718 11:04:41.441" endtime="20230718 11:04:42.830"/>
</kw>
<status status="PASS" starttime="20230718 11:04:41.440" endtime="20230718 11:04:42.831"/>
</kw>
<status status="PASS" starttime="20230718 11:04:41.436" endtime="20230718 11:04:42.832"/>
</kw>
<kw name="And User look &quot;Mật khẩu&quot; field empty" library="common" sourcename="User look &quot;${name}&quot; field empty">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230718 11:04:42.837" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230718 11:04:42.836" endtime="20230718 11:04:42.838"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${EMPTY}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230718 11:04:42.904" level="INFO">Text: ''</msg>
<status status="PASS" starttime="20230718 11:04:42.843" endtime="20230718 11:04:42.904"/>
</kw>
<status status="PASS" starttime="20230718 11:04:42.838" endtime="20230718 11:04:42.904"/>
</kw>
<status status="PASS" starttime="20230718 11:04:42.835" endtime="20230718 11:04:42.905"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230718 11:04:43.817" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230718 11:04:42.906" endtime="20230718 11:04:43.817"/>
</kw>
<status status="PASS" starttime="20230718 11:04:42.905" endtime="20230718 11:04:43.817"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230718 11:04:34.530" endtime="20230718 11:04:43.817"/>
</test>
<status status="FAIL" starttime="20230718 11:01:49.192" endtime="20230718 11:04:43.843"/>
</suite>
<statistics>
<total>
<stat pass="17" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="16" fail="1" skip="0">@regression</stat>
<stat pass="16" fail="1" skip="0">@smoketest</stat>
</tag>
<suite>
<stat pass="17" fail="1" skip="0" id="s1" name="Login">Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

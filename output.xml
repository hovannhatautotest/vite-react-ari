<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.11.4 on win32)" generated="20230801 10:55:57.277" rpa="false" schemaversion="4">
<suite id="s1" name="Staff Leave Management" source="C:\Users\nhats\OneDrive\Desktop\ARI\vite-react-ari\test\testcases\Staff_Leave_Management.robot">
<test id="s1-t1" name="STA-01 Verify that it is possible to navigate to the page for create leave date" line="9">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 10:56:01.697" endtime="20230801 10:56:01.717"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 10:56:01.724" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\a12de9dc-dfe2-4242-bf47-a5bb027648c7"}</msg>
<msg timestamp="20230801 10:56:03.319" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\a12de9dc-dfe2-4242-bf47-a5bb027648c7"}</msg>
<status status="PASS" starttime="20230801 10:56:01.718" endtime="20230801 10:56:03.319"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 10:56:08.154" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 10:56:08.154" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 10:56:03.319" endtime="20230801 10:56:08.155"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 10:56:08.157" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 10:56:08.156" endtime="20230801 10:56:08.157"/>
</kw>
<status status="PASS" starttime="20230801 10:56:01.696" endtime="20230801 10:56:08.157"/>
</kw>
<kw name="Login to Staff" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;staff@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:08.166" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:56:08.165" endtime="20230801 10:56:08.167"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:08.169" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:56:08.167" endtime="20230801 10:56:08.169"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:08.171" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:56:08.170" endtime="20230801 10:56:08.171"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:08.172" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:08.172" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:56:08.172" endtime="20230801 10:56:08.172"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:08.173" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:56:08.173" endtime="20230801 10:56:08.173"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:08.174" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:08.174" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:56:08.174" endtime="20230801 10:56:08.174"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.175" endtime="20230801 10:56:08.175"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.175" endtime="20230801 10:56:08.176"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:08.174" endtime="20230801 10:56:08.176"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.177" endtime="20230801 10:56:08.177"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.178" endtime="20230801 10:56:08.178"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.179" endtime="20230801 10:56:08.179"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:08.176" endtime="20230801 10:56:08.179"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.180" endtime="20230801 10:56:08.180"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.181" endtime="20230801 10:56:08.181"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:08.179" endtime="20230801 10:56:08.182"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.183" endtime="20230801 10:56:08.183"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.184" endtime="20230801 10:56:08.184"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:08.182" endtime="20230801 10:56:08.185"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.186" endtime="20230801 10:56:08.186"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.187" endtime="20230801 10:56:08.195"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:08.185" endtime="20230801 10:56:08.196"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.197" endtime="20230801 10:56:08.197"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.198" endtime="20230801 10:56:08.198"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:08.196" endtime="20230801 10:56:08.198"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.199" endtime="20230801 10:56:08.199"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.200" endtime="20230801 10:56:08.200"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:08.199" endtime="20230801 10:56:08.200"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.201" endtime="20230801 10:56:08.202"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:08.201" endtime="20230801 10:56:08.202"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:56:08.203" endtime="20230801 10:56:08.204"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:08.202" endtime="20230801 10:56:08.204"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.207" endtime="20230801 10:56:08.207"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.209" endtime="20230801 10:56:08.209"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:08.205" endtime="20230801 10:56:08.209"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.210" endtime="20230801 10:56:08.211"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:08.210" endtime="20230801 10:56:08.211"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.212" endtime="20230801 10:56:08.212"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:08.211" endtime="20230801 10:56:08.213"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.213" endtime="20230801 10:56:08.213"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:08.213" endtime="20230801 10:56:08.214"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:08.214" endtime="20230801 10:56:08.214"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:08.214" endtime="20230801 10:56:08.214"/>
</branch>
<status status="PASS" starttime="20230801 10:56:08.174" endtime="20230801 10:56:08.214"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:08.215" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:56:08.215" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:56:08.215" endtime="20230801 10:56:08.215"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:56:08.216" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:56:08.216" endtime="20230801 10:56:08.216"/>
</kw>
<status status="PASS" starttime="20230801 10:56:08.216" endtime="20230801 10:56:08.216"/>
</branch>
<status status="PASS" starttime="20230801 10:56:08.215" endtime="20230801 10:56:08.216"/>
</if>
<msg timestamp="20230801 10:56:08.216" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:56:08.163" endtime="20230801 10:56:08.216"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:56:08.219" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:56:08.216" endtime="20230801 10:56:08.219"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:08.221" endtime="20230801 10:56:10.456"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:56:10.457" level="INFO">Fills the text 'staff@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230801 10:56:10.456" endtime="20230801 10:56:10.523"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:10.524" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:56:10.524" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:56:10.523" endtime="20230801 10:56:10.524"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:56:10.527" level="INFO">${STATE["Tên đăng nhập"]} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:56:10.526" endtime="20230801 10:56:10.527"/>
</kw>
<status status="PASS" starttime="20230801 10:56:10.525" endtime="20230801 10:56:10.527"/>
</branch>
<status status="PASS" starttime="20230801 10:56:10.525" endtime="20230801 10:56:10.527"/>
</if>
<status status="PASS" starttime="20230801 10:56:08.162" endtime="20230801 10:56:10.529"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Tester@123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:10.533" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:56:10.531" endtime="20230801 10:56:10.533"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:10.534" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:56:10.534" endtime="20230801 10:56:10.534"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:10.536" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:56:10.535" endtime="20230801 10:56:10.536"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:10.537" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:10.537" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:56:10.536" endtime="20230801 10:56:10.537"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:10.540" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:56:10.537" endtime="20230801 10:56:10.540"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:10.541" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:10.541" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:56:10.540" endtime="20230801 10:56:10.541"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.543" endtime="20230801 10:56:10.543"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.544" endtime="20230801 10:56:10.544"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:10.542" endtime="20230801 10:56:10.545"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.546" endtime="20230801 10:56:10.546"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.547" endtime="20230801 10:56:10.547"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.547" endtime="20230801 10:56:10.548"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:10.545" endtime="20230801 10:56:10.548"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.550" endtime="20230801 10:56:10.550"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.551" endtime="20230801 10:56:10.551"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:10.548" endtime="20230801 10:56:10.551"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.552" endtime="20230801 10:56:10.553"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.553" endtime="20230801 10:56:10.553"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:10.551" endtime="20230801 10:56:10.554"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.555" endtime="20230801 10:56:10.555"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.556" endtime="20230801 10:56:10.556"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:10.554" endtime="20230801 10:56:10.556"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.558" endtime="20230801 10:56:10.558"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.558" endtime="20230801 10:56:10.558"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:10.557" endtime="20230801 10:56:10.558"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.566" endtime="20230801 10:56:10.567"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.567" endtime="20230801 10:56:10.567"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:10.559" endtime="20230801 10:56:10.567"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.569" endtime="20230801 10:56:10.570"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:10.569" endtime="20230801 10:56:10.570"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:56:10.572" endtime="20230801 10:56:10.572"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:10.571" endtime="20230801 10:56:10.572"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.573" endtime="20230801 10:56:10.574"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.574" endtime="20230801 10:56:10.575"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:10.573" endtime="20230801 10:56:10.575"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.576" endtime="20230801 10:56:10.576"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:10.575" endtime="20230801 10:56:10.576"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.577" endtime="20230801 10:56:10.577"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:10.576" endtime="20230801 10:56:10.578"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.578" endtime="20230801 10:56:10.579"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:10.578" endtime="20230801 10:56:10.579"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:10.579" endtime="20230801 10:56:10.580"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:10.579" endtime="20230801 10:56:10.580"/>
</branch>
<status status="PASS" starttime="20230801 10:56:10.542" endtime="20230801 10:56:10.580"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:10.582" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:56:10.582" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:56:10.581" endtime="20230801 10:56:10.582"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:56:10.585" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:56:10.584" endtime="20230801 10:56:10.585"/>
</kw>
<status status="PASS" starttime="20230801 10:56:10.583" endtime="20230801 10:56:10.585"/>
</branch>
<status status="PASS" starttime="20230801 10:56:10.582" endtime="20230801 10:56:10.585"/>
</if>
<msg timestamp="20230801 10:56:10.586" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:56:10.530" endtime="20230801 10:56:10.586"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:56:10.589" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:56:10.586" endtime="20230801 10:56:10.589"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:10.589" endtime="20230801 10:56:10.935"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:56:10.937" level="INFO">Fills the text 'Tester@123' in the given field.</msg>
<status status="PASS" starttime="20230801 10:56:10.935" endtime="20230801 10:56:11.006"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:11.007" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:56:11.008" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:56:11.007" endtime="20230801 10:56:11.008"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:56:11.013" level="INFO">${STATE["Mật khẩu"]} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:56:11.010" endtime="20230801 10:56:11.013"/>
</kw>
<status status="PASS" starttime="20230801 10:56:11.008" endtime="20230801 10:56:11.013"/>
</branch>
<status status="PASS" starttime="20230801 10:56:11.008" endtime="20230801 10:56:11.014"/>
</if>
<status status="PASS" starttime="20230801 10:56:10.529" endtime="20230801 10:56:11.014"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:11.016" endtime="20230801 10:56:11.252"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:11.255" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:56:11.254" endtime="20230801 10:56:11.255"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:56:11.291" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:56:11.255" endtime="20230801 10:56:11.291"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:56:11.292" endtime="20230801 10:56:11.293"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:56:11.293" endtime="20230801 10:56:11.293"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:11.291" endtime="20230801 10:56:11.294"/>
</branch>
<status status="PASS" starttime="20230801 10:56:11.291" endtime="20230801 10:56:11.294"/>
</if>
<status status="PASS" starttime="20230801 10:56:11.252" endtime="20230801 10:56:11.294"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:56:11.295" endtime="20230801 10:56:11.351"/>
</kw>
<status status="PASS" starttime="20230801 10:56:11.015" endtime="20230801 10:56:11.351"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:11.353" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:56:11.352" endtime="20230801 10:56:11.353"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:11.354" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:11.354" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:56:11.353" endtime="20230801 10:56:11.354"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 10:56:11.356" endtime="20230801 10:56:11.356"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:11.355" endtime="20230801 10:56:11.356"/>
</branch>
<status status="PASS" starttime="20230801 10:56:11.355" endtime="20230801 10:56:11.356"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:56:12.883" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 10:56:11.361" endtime="20230801 10:56:12.883"/>
</kw>
<status status="PASS" starttime="20230801 10:56:11.357" endtime="20230801 10:56:12.883"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:12.885" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 10:56:12.884" endtime="20230801 10:56:12.885"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:56:13.708" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 10:56:13.708" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 10:56:13.709" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 10:56:12.890" endtime="20230801 10:56:13.719"/>
</kw>
<status status="FAIL" starttime="20230801 10:56:12.886" endtime="20230801 10:56:13.719"/>
</kw>
<msg timestamp="20230801 10:56:13.719" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 10:56:12.885" endtime="20230801 10:56:13.720"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:56:13.722" endtime="20230801 10:56:13.722"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:13.721" endtime="20230801 10:56:13.722"/>
</branch>
<status status="PASS" starttime="20230801 10:56:13.720" endtime="20230801 10:56:13.723"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:56:15.857" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 10:56:13.725" endtime="20230801 10:56:15.857"/>
</kw>
<status status="PASS" starttime="20230801 10:56:13.723" endtime="20230801 10:56:15.857"/>
</kw>
<status status="PASS" starttime="20230801 10:56:11.352" endtime="20230801 10:56:15.858"/>
</kw>
<status status="PASS" starttime="20230801 10:56:08.160" endtime="20230801 10:56:15.858"/>
</kw>
<kw name="When Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:15.860" endtime="20230801 10:56:16.010"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:16.012" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:56:16.011" endtime="20230801 10:56:16.012"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:56:16.025" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:56:16.012" endtime="20230801 10:56:16.025"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:56:16.026" endtime="20230801 10:56:16.026"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:56:16.027" endtime="20230801 10:56:16.027"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:16.026" endtime="20230801 10:56:16.027"/>
</branch>
<status status="PASS" starttime="20230801 10:56:16.026" endtime="20230801 10:56:16.027"/>
</if>
<status status="PASS" starttime="20230801 10:56:16.010" endtime="20230801 10:56:16.027"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:56:16.028" endtime="20230801 10:56:16.394"/>
</kw>
<status status="PASS" starttime="20230801 10:56:15.859" endtime="20230801 10:56:16.395"/>
</kw>
<kw name="Then User look title &quot;Tạo mới ngày nghỉ&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:16.397" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:56:16.397" endtime="20230801 10:56:16.397"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:56:16.407" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:56:16.398" endtime="20230801 10:56:16.407"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:56:16.409" endtime="20230801 10:56:16.409"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:16.407" endtime="20230801 10:56:16.409"/>
</branch>
<status status="PASS" starttime="20230801 10:56:16.407" endtime="20230801 10:56:16.409"/>
</if>
<status status="PASS" starttime="20230801 10:56:16.396" endtime="20230801 10:56:16.410"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:16.411" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:56:16.411" endtime="20230801 10:56:16.411"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:56:16.418" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:56:16.412" endtime="20230801 10:56:16.418"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:56:16.420" endtime="20230801 10:56:16.420"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:16.419" endtime="20230801 10:56:16.420"/>
</branch>
<status status="PASS" starttime="20230801 10:56:16.419" endtime="20230801 10:56:16.421"/>
</if>
<status status="PASS" starttime="20230801 10:56:16.410" endtime="20230801 10:56:16.421"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230801 10:56:16.435" level="INFO">Title: 'Tạo mới ngày nghỉ'</msg>
<msg timestamp="20230801 10:56:16.436" level="INFO">${actualTitle} = Tạo mới ngày nghỉ</msg>
<status status="PASS" starttime="20230801 10:56:16.422" endtime="20230801 10:56:16.437"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230801 10:56:16.437" endtime="20230801 10:56:16.440"/>
</kw>
<status status="PASS" starttime="20230801 10:56:16.410" endtime="20230801 10:56:16.440"/>
</kw>
<status status="PASS" starttime="20230801 10:56:16.396" endtime="20230801 10:56:16.441"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 10:56:16.612" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 10:56:16.463" endtime="20230801 10:56:16.612"/>
</kw>
<status status="PASS" starttime="20230801 10:56:16.460" endtime="20230801 10:56:16.613"/>
</kw>
<status status="PASS" starttime="20230801 10:56:01.685" endtime="20230801 10:56:16.616"/>
</test>
<test id="s1-t2" name="STA-02 Verify that Create Leave Management unsuccessfully because no select &quot;Loại phép&quot;" line="15">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 10:56:16.640" endtime="20230801 10:56:16.642"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 10:56:16.644" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\edc54663-71de-4ae6-b7e9-ca9a5bef5986"}</msg>
<msg timestamp="20230801 10:56:18.017" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\edc54663-71de-4ae6-b7e9-ca9a5bef5986"}</msg>
<status status="PASS" starttime="20230801 10:56:16.642" endtime="20230801 10:56:18.017"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 10:56:19.156" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 10:56:19.156" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 10:56:18.017" endtime="20230801 10:56:19.157"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 10:56:19.158" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 10:56:19.157" endtime="20230801 10:56:19.158"/>
</kw>
<status status="PASS" starttime="20230801 10:56:16.639" endtime="20230801 10:56:19.158"/>
</kw>
<kw name="Go to create leave date page" library="common">
<kw name="Login to Staff" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;staff@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:19.163" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:56:19.162" endtime="20230801 10:56:19.163"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:19.164" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:56:19.164" endtime="20230801 10:56:19.165"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:19.166" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:56:19.165" endtime="20230801 10:56:19.167"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:19.167" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:19.169" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:56:19.167" endtime="20230801 10:56:19.169"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:19.171" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:56:19.169" endtime="20230801 10:56:19.171"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:19.172" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:19.173" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:56:19.171" endtime="20230801 10:56:19.173"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.174" endtime="20230801 10:56:19.175"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.175" endtime="20230801 10:56:19.176"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:19.173" endtime="20230801 10:56:19.176"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.177" endtime="20230801 10:56:19.178"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.178" endtime="20230801 10:56:19.179"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.180" endtime="20230801 10:56:19.180"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:19.176" endtime="20230801 10:56:19.180"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.182" endtime="20230801 10:56:19.182"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.183" endtime="20230801 10:56:19.183"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:19.181" endtime="20230801 10:56:19.183"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.188" endtime="20230801 10:56:19.189"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.190" endtime="20230801 10:56:19.190"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:19.184" endtime="20230801 10:56:19.191"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.193" endtime="20230801 10:56:19.194"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.194" endtime="20230801 10:56:19.195"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:19.192" endtime="20230801 10:56:19.195"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.196" endtime="20230801 10:56:19.197"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.197" endtime="20230801 10:56:19.197"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:19.195" endtime="20230801 10:56:19.197"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.199" endtime="20230801 10:56:19.200"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.200" endtime="20230801 10:56:19.201"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:19.197" endtime="20230801 10:56:19.201"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.202" endtime="20230801 10:56:19.202"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:19.201" endtime="20230801 10:56:19.203"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:56:19.206" endtime="20230801 10:56:19.206"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:19.205" endtime="20230801 10:56:19.206"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.207" endtime="20230801 10:56:19.208"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.208" endtime="20230801 10:56:19.208"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:19.206" endtime="20230801 10:56:19.209"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.209" endtime="20230801 10:56:19.210"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:19.209" endtime="20230801 10:56:19.210"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.211" endtime="20230801 10:56:19.212"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:19.210" endtime="20230801 10:56:19.212"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.213" endtime="20230801 10:56:19.213"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:19.212" endtime="20230801 10:56:19.214"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:19.214" endtime="20230801 10:56:19.215"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:19.214" endtime="20230801 10:56:19.215"/>
</branch>
<status status="PASS" starttime="20230801 10:56:19.173" endtime="20230801 10:56:19.215"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:19.217" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:56:19.217" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:56:19.216" endtime="20230801 10:56:19.217"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:56:19.221" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:56:19.219" endtime="20230801 10:56:19.222"/>
</kw>
<status status="PASS" starttime="20230801 10:56:19.217" endtime="20230801 10:56:19.222"/>
</branch>
<status status="PASS" starttime="20230801 10:56:19.217" endtime="20230801 10:56:19.222"/>
</if>
<msg timestamp="20230801 10:56:19.223" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:56:19.161" endtime="20230801 10:56:19.223"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:56:19.225" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:56:19.223" endtime="20230801 10:56:19.226"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:19.227" endtime="20230801 10:56:21.290"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:56:21.292" level="INFO">Fills the text 'staff@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230801 10:56:21.291" endtime="20230801 10:56:21.455"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:21.458" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:56:21.458" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:56:21.456" endtime="20230801 10:56:21.458"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:56:21.460" level="INFO">${STATE["Tên đăng nhập"]} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:56:21.459" endtime="20230801 10:56:21.460"/>
</kw>
<status status="PASS" starttime="20230801 10:56:21.458" endtime="20230801 10:56:21.460"/>
</branch>
<status status="PASS" starttime="20230801 10:56:21.458" endtime="20230801 10:56:21.461"/>
</if>
<status status="PASS" starttime="20230801 10:56:19.160" endtime="20230801 10:56:21.461"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Tester@123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:21.464" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:56:21.464" endtime="20230801 10:56:21.464"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:21.466" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:56:21.465" endtime="20230801 10:56:21.466"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:21.467" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:56:21.466" endtime="20230801 10:56:21.467"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:21.469" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:21.470" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:56:21.468" endtime="20230801 10:56:21.470"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:21.473" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:56:21.471" endtime="20230801 10:56:21.473"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:21.474" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:21.474" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:56:21.473" endtime="20230801 10:56:21.474"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.476" endtime="20230801 10:56:21.476"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.477" endtime="20230801 10:56:21.477"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:21.475" endtime="20230801 10:56:21.477"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.478" endtime="20230801 10:56:21.478"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.479" endtime="20230801 10:56:21.479"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.480" endtime="20230801 10:56:21.480"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:21.477" endtime="20230801 10:56:21.480"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.481" endtime="20230801 10:56:21.481"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.481" endtime="20230801 10:56:21.482"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:21.480" endtime="20230801 10:56:21.482"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.482" endtime="20230801 10:56:21.482"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.483" endtime="20230801 10:56:21.483"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:21.482" endtime="20230801 10:56:21.483"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.484" endtime="20230801 10:56:21.485"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.486" endtime="20230801 10:56:21.486"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:21.483" endtime="20230801 10:56:21.487"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.489" endtime="20230801 10:56:21.489"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.490" endtime="20230801 10:56:21.490"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:21.487" endtime="20230801 10:56:21.490"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.492" endtime="20230801 10:56:21.492"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.493" endtime="20230801 10:56:21.493"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:21.491" endtime="20230801 10:56:21.494"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.495" endtime="20230801 10:56:21.495"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:21.494" endtime="20230801 10:56:21.495"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:56:21.496" endtime="20230801 10:56:21.496"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:21.495" endtime="20230801 10:56:21.496"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.497" endtime="20230801 10:56:21.498"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.498" endtime="20230801 10:56:21.499"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:21.497" endtime="20230801 10:56:21.499"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.499" endtime="20230801 10:56:21.500"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:21.499" endtime="20230801 10:56:21.500"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.501" endtime="20230801 10:56:21.502"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:21.500" endtime="20230801 10:56:21.502"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.505" endtime="20230801 10:56:21.505"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:21.503" endtime="20230801 10:56:21.505"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:21.506" endtime="20230801 10:56:21.506"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:21.505" endtime="20230801 10:56:21.506"/>
</branch>
<status status="PASS" starttime="20230801 10:56:21.475" endtime="20230801 10:56:21.506"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:21.507" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:56:21.507" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:56:21.507" endtime="20230801 10:56:21.507"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:56:21.509" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:56:21.507" endtime="20230801 10:56:21.509"/>
</kw>
<status status="PASS" starttime="20230801 10:56:21.507" endtime="20230801 10:56:21.509"/>
</branch>
<status status="PASS" starttime="20230801 10:56:21.507" endtime="20230801 10:56:21.509"/>
</if>
<msg timestamp="20230801 10:56:21.509" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:56:21.462" endtime="20230801 10:56:21.509"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:56:21.511" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:56:21.510" endtime="20230801 10:56:21.511"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:21.511" endtime="20230801 10:56:21.660"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:56:21.661" level="INFO">Fills the text 'Tester@123' in the given field.</msg>
<status status="PASS" starttime="20230801 10:56:21.660" endtime="20230801 10:56:21.715"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:21.716" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:56:21.716" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:56:21.716" endtime="20230801 10:56:21.717"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:56:21.719" level="INFO">${STATE["Mật khẩu"]} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:56:21.718" endtime="20230801 10:56:21.719"/>
</kw>
<status status="PASS" starttime="20230801 10:56:21.717" endtime="20230801 10:56:21.720"/>
</branch>
<status status="PASS" starttime="20230801 10:56:21.717" endtime="20230801 10:56:21.720"/>
</if>
<status status="PASS" starttime="20230801 10:56:21.462" endtime="20230801 10:56:21.721"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:21.723" endtime="20230801 10:56:21.994"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:21.996" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:56:21.995" endtime="20230801 10:56:21.996"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:56:22.043" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:56:21.997" endtime="20230801 10:56:22.043"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:56:22.044" endtime="20230801 10:56:22.045"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:56:22.045" endtime="20230801 10:56:22.046"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:22.044" endtime="20230801 10:56:22.046"/>
</branch>
<status status="PASS" starttime="20230801 10:56:22.043" endtime="20230801 10:56:22.046"/>
</if>
<status status="PASS" starttime="20230801 10:56:21.994" endtime="20230801 10:56:22.046"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:56:22.047" endtime="20230801 10:56:22.130"/>
</kw>
<status status="PASS" starttime="20230801 10:56:21.721" endtime="20230801 10:56:22.130"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:22.132" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:56:22.132" endtime="20230801 10:56:22.132"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:22.133" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:22.133" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:56:22.132" endtime="20230801 10:56:22.133"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 10:56:22.134" endtime="20230801 10:56:22.134"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:22.133" endtime="20230801 10:56:22.134"/>
</branch>
<status status="PASS" starttime="20230801 10:56:22.133" endtime="20230801 10:56:22.134"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:56:23.234" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 10:56:22.139" endtime="20230801 10:56:23.235"/>
</kw>
<status status="PASS" starttime="20230801 10:56:22.135" endtime="20230801 10:56:23.235"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:23.238" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 10:56:23.236" endtime="20230801 10:56:23.238"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:56:24.170" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 10:56:24.171" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 10:56:24.172" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 10:56:23.243" endtime="20230801 10:56:24.175"/>
</kw>
<status status="FAIL" starttime="20230801 10:56:23.240" endtime="20230801 10:56:24.176"/>
</kw>
<msg timestamp="20230801 10:56:24.177" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 10:56:23.238" endtime="20230801 10:56:24.177"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:56:24.179" endtime="20230801 10:56:24.179"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:24.177" endtime="20230801 10:56:24.179"/>
</branch>
<status status="PASS" starttime="20230801 10:56:24.177" endtime="20230801 10:56:24.180"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:56:26.599" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 10:56:24.182" endtime="20230801 10:56:26.599"/>
</kw>
<status status="PASS" starttime="20230801 10:56:24.180" endtime="20230801 10:56:26.599"/>
</kw>
<status status="PASS" starttime="20230801 10:56:22.131" endtime="20230801 10:56:26.600"/>
</kw>
<status status="PASS" starttime="20230801 10:56:19.159" endtime="20230801 10:56:26.600"/>
</kw>
<kw name="When Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:26.603" endtime="20230801 10:56:26.785"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:26.787" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:56:26.786" endtime="20230801 10:56:26.788"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:56:26.955" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:56:26.788" endtime="20230801 10:56:26.955"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:56:26.958" endtime="20230801 10:56:26.959"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:56:26.959" endtime="20230801 10:56:26.960"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:26.957" endtime="20230801 10:56:26.960"/>
</branch>
<status status="PASS" starttime="20230801 10:56:26.956" endtime="20230801 10:56:26.960"/>
</if>
<status status="PASS" starttime="20230801 10:56:26.785" endtime="20230801 10:56:26.961"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:56:26.961" endtime="20230801 10:56:27.291"/>
</kw>
<status status="PASS" starttime="20230801 10:56:26.601" endtime="20230801 10:56:27.291"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:27.293" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:56:27.293" endtime="20230801 10:56:27.293"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:56:27.301" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:56:27.294" endtime="20230801 10:56:27.301"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:56:27.302" endtime="20230801 10:56:27.303"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:27.302" endtime="20230801 10:56:27.303"/>
</branch>
<status status="PASS" starttime="20230801 10:56:27.301" endtime="20230801 10:56:27.303"/>
</if>
<status status="PASS" starttime="20230801 10:56:27.292" endtime="20230801 10:56:27.304"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 10:56:27.405" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 10:56:27.304" endtime="20230801 10:56:27.405"/>
</kw>
<status status="PASS" starttime="20230801 10:56:19.159" endtime="20230801 10:56:27.406"/>
</kw>
<kw name="And Click select &quot;Thời gian&quot; with &quot;Cả ngày&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:27.410" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:56:27.410" endtime="20230801 10:56:27.410"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:27.412" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:56:27.411" endtime="20230801 10:56:27.412"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:27.413" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:56:27.412" endtime="20230801 10:56:27.413"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:27.414" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:27.415" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:56:27.414" endtime="20230801 10:56:27.415"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:27.416" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:56:27.415" endtime="20230801 10:56:27.416"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:27.417" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:27.417" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:56:27.417" endtime="20230801 10:56:27.417"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.420" endtime="20230801 10:56:27.421"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.422" endtime="20230801 10:56:27.423"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:27.419" endtime="20230801 10:56:27.424"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.425" endtime="20230801 10:56:27.425"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.425" endtime="20230801 10:56:27.426"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.426" endtime="20230801 10:56:27.427"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:27.424" endtime="20230801 10:56:27.427"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.428" endtime="20230801 10:56:27.428"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.429" endtime="20230801 10:56:27.429"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:27.427" endtime="20230801 10:56:27.431"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.432" endtime="20230801 10:56:27.432"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.433" endtime="20230801 10:56:27.433"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:27.431" endtime="20230801 10:56:27.433"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.434" endtime="20230801 10:56:27.434"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.435" endtime="20230801 10:56:27.441"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:27.433" endtime="20230801 10:56:27.441"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.442" endtime="20230801 10:56:27.442"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.443" endtime="20230801 10:56:27.444"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:27.441" endtime="20230801 10:56:27.444"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.445" endtime="20230801 10:56:27.445"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.446" endtime="20230801 10:56:27.446"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:27.444" endtime="20230801 10:56:27.446"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.447" endtime="20230801 10:56:27.448"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:27.446" endtime="20230801 10:56:27.448"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:56:27.450" endtime="20230801 10:56:27.450"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:27.449" endtime="20230801 10:56:27.450"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.451" endtime="20230801 10:56:27.452"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.453" endtime="20230801 10:56:27.454"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:27.450" endtime="20230801 10:56:27.455"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.456" endtime="20230801 10:56:27.457"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:27.456" endtime="20230801 10:56:27.457"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.459" endtime="20230801 10:56:27.465"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:27.457" endtime="20230801 10:56:27.465"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.466" endtime="20230801 10:56:27.466"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:27.465" endtime="20230801 10:56:27.467"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:27.467" endtime="20230801 10:56:27.468"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:27.467" endtime="20230801 10:56:27.468"/>
</branch>
<status status="PASS" starttime="20230801 10:56:27.419" endtime="20230801 10:56:27.468"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:27.472" level="INFO">Length is 7</msg>
<msg timestamp="20230801 10:56:27.472" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20230801 10:56:27.471" endtime="20230801 10:56:27.473"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:56:27.477" level="INFO">${text} = Cả ngày</msg>
<status status="PASS" starttime="20230801 10:56:27.476" endtime="20230801 10:56:27.477"/>
</kw>
<status status="PASS" starttime="20230801 10:56:27.474" endtime="20230801 10:56:27.477"/>
</branch>
<status status="PASS" starttime="20230801 10:56:27.473" endtime="20230801 10:56:27.477"/>
</if>
<msg timestamp="20230801 10:56:27.479" level="INFO">${text} = Cả ngày</msg>
<status status="PASS" starttime="20230801 10:56:27.409" endtime="20230801 10:56:27.479"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 10:56:27.481" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 10:56:27.479" endtime="20230801 10:56:27.481"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:56:27.597" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 10:56:27.491" endtime="20230801 10:56:27.597"/>
</kw>
<status status="PASS" starttime="20230801 10:56:27.481" endtime="20230801 10:56:27.597"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:27.599" endtime="20230801 10:56:27.800"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 10:56:27.803" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 10:56:27.801" endtime="20230801 10:56:27.803"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:56:27.805" level="INFO">Fills the text 'Cả ngày' in the given field.</msg>
<status status="PASS" starttime="20230801 10:56:27.804" endtime="20230801 10:56:27.907"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:27.909" endtime="20230801 10:56:28.191"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:28.192" level="INFO">Length is 7</msg>
<msg timestamp="20230801 10:56:28.192" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20230801 10:56:28.191" endtime="20230801 10:56:28.192"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:56:28.195" level="INFO">${STATE["Thời gian"]} = Cả ngày</msg>
<status status="PASS" starttime="20230801 10:56:28.193" endtime="20230801 10:56:28.195"/>
</kw>
<status status="PASS" starttime="20230801 10:56:28.192" endtime="20230801 10:56:28.196"/>
</branch>
<status status="PASS" starttime="20230801 10:56:28.192" endtime="20230801 10:56:28.196"/>
</if>
<status status="PASS" starttime="20230801 10:56:27.408" endtime="20230801 10:56:28.196"/>
</kw>
<kw name="And Enter leave date in &quot;Ngày bắt đầu&quot; with &quot;11-07-2023&quot;" library="common" sourcename="Enter leave date in &quot;${field}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>date</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:28.202" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:56:28.201" endtime="20230801 10:56:28.202"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:28.203" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:56:28.202" endtime="20230801 10:56:28.203"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:28.205" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:56:28.204" endtime="20230801 10:56:28.205"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:28.206" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:28.206" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:56:28.206" endtime="20230801 10:56:28.206"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:28.207" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:56:28.207" endtime="20230801 10:56:28.207"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:28.208" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:28.208" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:56:28.208" endtime="20230801 10:56:28.208"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.208" endtime="20230801 10:56:28.209"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.209" endtime="20230801 10:56:28.210"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:28.208" endtime="20230801 10:56:28.210"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.211" endtime="20230801 10:56:28.212"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.213" endtime="20230801 10:56:28.213"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.214" endtime="20230801 10:56:28.214"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:28.210" endtime="20230801 10:56:28.215"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.216" endtime="20230801 10:56:28.216"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.217" endtime="20230801 10:56:28.217"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:28.215" endtime="20230801 10:56:28.217"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.220" endtime="20230801 10:56:28.221"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.222" endtime="20230801 10:56:28.222"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:28.219" endtime="20230801 10:56:28.223"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.225" endtime="20230801 10:56:28.227"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.229" endtime="20230801 10:56:28.229"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:28.223" endtime="20230801 10:56:28.229"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.230" endtime="20230801 10:56:28.230"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.231" endtime="20230801 10:56:28.231"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:28.229" endtime="20230801 10:56:28.231"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.233" endtime="20230801 10:56:28.233"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.233" endtime="20230801 10:56:28.234"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:28.232" endtime="20230801 10:56:28.234"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.236" endtime="20230801 10:56:28.237"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:28.234" endtime="20230801 10:56:28.237"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:56:28.239" endtime="20230801 10:56:28.239"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:28.238" endtime="20230801 10:56:28.239"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.241" endtime="20230801 10:56:28.242"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.243" endtime="20230801 10:56:28.244"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:28.240" endtime="20230801 10:56:28.244"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.246" endtime="20230801 10:56:28.246"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:28.245" endtime="20230801 10:56:28.246"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.247" endtime="20230801 10:56:28.247"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:28.247" endtime="20230801 10:56:28.247"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.249" endtime="20230801 10:56:28.250"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:28.249" endtime="20230801 10:56:28.250"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:28.251" endtime="20230801 10:56:28.252"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:28.251" endtime="20230801 10:56:28.252"/>
</branch>
<status status="PASS" starttime="20230801 10:56:28.208" endtime="20230801 10:56:28.253"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:28.255" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:56:28.255" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:56:28.254" endtime="20230801 10:56:28.255"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:56:28.258" level="INFO">${text} = 11-07-2023</msg>
<status status="PASS" starttime="20230801 10:56:28.257" endtime="20230801 10:56:28.258"/>
</kw>
<status status="PASS" starttime="20230801 10:56:28.256" endtime="20230801 10:56:28.259"/>
</branch>
<status status="PASS" starttime="20230801 10:56:28.255" endtime="20230801 10:56:28.259"/>
</if>
<msg timestamp="20230801 10:56:28.261" level="INFO">${text} = 11-07-2023</msg>
<status status="PASS" starttime="20230801 10:56:28.200" endtime="20230801 10:56:28.261"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//input[@placeholder="${field}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:28.262" level="INFO">${element} = xpath=//input[@placeholder="Ngày bắt đầu"]</msg>
<status status="PASS" starttime="20230801 10:56:28.262" endtime="20230801 10:56:28.263"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:28.263" endtime="20230801 10:56:28.956"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:28.957" endtime="20230801 10:56:29.163"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:56:29.164" level="INFO">Fills the text '11-07-2023' in the given field.</msg>
<status status="PASS" starttime="20230801 10:56:29.163" endtime="20230801 10:56:29.432"/>
</kw>
<status status="PASS" starttime="20230801 10:56:28.198" endtime="20230801 10:56:29.433"/>
</kw>
<kw name="And Enter leave date in &quot;Ngày kết thúc&quot; with &quot;14-07-2023&quot;" library="common" sourcename="Enter leave date in &quot;${field}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>date</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:29.437" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:56:29.436" endtime="20230801 10:56:29.437"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:29.438" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:56:29.437" endtime="20230801 10:56:29.438"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:29.439" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:56:29.439" endtime="20230801 10:56:29.440"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:29.441" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:29.441" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:56:29.440" endtime="20230801 10:56:29.441"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:29.443" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:56:29.442" endtime="20230801 10:56:29.443"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:29.443" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:29.444" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:56:29.443" endtime="20230801 10:56:29.444"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.444" endtime="20230801 10:56:29.445"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.445" endtime="20230801 10:56:29.445"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:29.444" endtime="20230801 10:56:29.445"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.446" endtime="20230801 10:56:29.446"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.447" endtime="20230801 10:56:29.447"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.447" endtime="20230801 10:56:29.449"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:29.445" endtime="20230801 10:56:29.449"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.450" endtime="20230801 10:56:29.450"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.450" endtime="20230801 10:56:29.450"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:29.449" endtime="20230801 10:56:29.451"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.451" endtime="20230801 10:56:29.451"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.452" endtime="20230801 10:56:29.452"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:29.451" endtime="20230801 10:56:29.452"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.454" endtime="20230801 10:56:29.455"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.455" endtime="20230801 10:56:29.456"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:29.453" endtime="20230801 10:56:29.456"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.457" endtime="20230801 10:56:29.458"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.458" endtime="20230801 10:56:29.458"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:29.456" endtime="20230801 10:56:29.459"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.459" endtime="20230801 10:56:29.460"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.460" endtime="20230801 10:56:29.461"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:29.459" endtime="20230801 10:56:29.461"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.462" endtime="20230801 10:56:29.462"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:29.461" endtime="20230801 10:56:29.462"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:56:29.464" endtime="20230801 10:56:29.464"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:29.463" endtime="20230801 10:56:29.464"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.465" endtime="20230801 10:56:29.466"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.466" endtime="20230801 10:56:29.467"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:29.465" endtime="20230801 10:56:29.467"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.471" endtime="20230801 10:56:29.471"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:29.467" endtime="20230801 10:56:29.472"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.477" endtime="20230801 10:56:29.478"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:29.475" endtime="20230801 10:56:29.478"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.479" endtime="20230801 10:56:29.480"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:29.478" endtime="20230801 10:56:29.480"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:29.481" endtime="20230801 10:56:29.482"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:29.480" endtime="20230801 10:56:29.482"/>
</branch>
<status status="PASS" starttime="20230801 10:56:29.444" endtime="20230801 10:56:29.483"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:29.491" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:56:29.491" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:56:29.490" endtime="20230801 10:56:29.491"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:56:29.496" level="INFO">${text} = 14-07-2023</msg>
<status status="PASS" starttime="20230801 10:56:29.494" endtime="20230801 10:56:29.496"/>
</kw>
<status status="PASS" starttime="20230801 10:56:29.493" endtime="20230801 10:56:29.496"/>
</branch>
<status status="PASS" starttime="20230801 10:56:29.493" endtime="20230801 10:56:29.496"/>
</if>
<msg timestamp="20230801 10:56:29.497" level="INFO">${text} = 14-07-2023</msg>
<status status="PASS" starttime="20230801 10:56:29.435" endtime="20230801 10:56:29.497"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//input[@placeholder="${field}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:29.502" level="INFO">${element} = xpath=//input[@placeholder="Ngày kết thúc"]</msg>
<status status="PASS" starttime="20230801 10:56:29.499" endtime="20230801 10:56:29.502"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:29.504" endtime="20230801 10:56:29.996"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:29.996" endtime="20230801 10:56:30.169"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:56:30.172" level="INFO">Fills the text '14-07-2023' in the given field.</msg>
<status status="PASS" starttime="20230801 10:56:30.170" endtime="20230801 10:56:30.495"/>
</kw>
<status status="PASS" starttime="20230801 10:56:29.433" endtime="20230801 10:56:30.496"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Lý do&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:30.504" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:56:30.504" endtime="20230801 10:56:30.505"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:30.506" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:56:30.505" endtime="20230801 10:56:30.506"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:30.507" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:56:30.507" endtime="20230801 10:56:30.507"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:30.510" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:30.510" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:56:30.509" endtime="20230801 10:56:30.510"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:30.512" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 10:56:30.511" endtime="20230801 10:56:30.512"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:30.514" level="INFO">Length is 1</msg>
<msg timestamp="20230801 10:56:30.514" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 10:56:30.513" endtime="20230801 10:56:30.514"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.515" endtime="20230801 10:56:30.516"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.517" endtime="20230801 10:56:30.517"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:30.515" endtime="20230801 10:56:30.518"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.519" endtime="20230801 10:56:30.520"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.521" endtime="20230801 10:56:30.521"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.522" endtime="20230801 10:56:30.522"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:30.518" endtime="20230801 10:56:30.523"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.524" endtime="20230801 10:56:30.524"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.527" endtime="20230801 10:56:30.529"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:30.523" endtime="20230801 10:56:30.529"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.530" endtime="20230801 10:56:30.532"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.533" endtime="20230801 10:56:30.533"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:30.529" endtime="20230801 10:56:30.533"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.537" endtime="20230801 10:56:30.539"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.542" endtime="20230801 10:56:30.543"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:30.534" endtime="20230801 10:56:30.545"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.555" endtime="20230801 10:56:30.556"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.560" endtime="20230801 10:56:30.560"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:30.548" endtime="20230801 10:56:30.562"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.563" endtime="20230801 10:56:30.563"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.564" endtime="20230801 10:56:30.565"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:30.562" endtime="20230801 10:56:30.565"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.566" endtime="20230801 10:56:30.566"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:30.565" endtime="20230801 10:56:30.566"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:56:30.567" endtime="20230801 10:56:30.568"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:30.567" endtime="20230801 10:56:30.568"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.571" endtime="20230801 10:56:30.571"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.572" endtime="20230801 10:56:30.572"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:30.568" endtime="20230801 10:56:30.572"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.573" endtime="20230801 10:56:30.574"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:30.573" endtime="20230801 10:56:30.574"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.575" endtime="20230801 10:56:30.575"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:30.574" endtime="20230801 10:56:30.576"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:30.577" endtime="20230801 10:56:30.577"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:30.576" endtime="20230801 10:56:30.577"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230801 10:56:30.578" level="INFO">${new_text} = Possimus minus qui optio.</msg>
<status status="PASS" starttime="20230801 10:56:30.578" endtime="20230801 10:56:30.578"/>
</kw>
<status status="PASS" starttime="20230801 10:56:30.577" endtime="20230801 10:56:30.579"/>
</branch>
<status status="PASS" starttime="20230801 10:56:30.514" endtime="20230801 10:56:30.579"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:30.580" level="INFO">Length is 8</msg>
<msg timestamp="20230801 10:56:30.580" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 10:56:30.579" endtime="20230801 10:56:30.580"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:56:30.582" level="INFO">${text} = Possimus minus qui optio.</msg>
<status status="PASS" starttime="20230801 10:56:30.582" endtime="20230801 10:56:30.582"/>
</kw>
<status status="PASS" starttime="20230801 10:56:30.581" endtime="20230801 10:56:30.583"/>
</branch>
<status status="PASS" starttime="20230801 10:56:30.581" endtime="20230801 10:56:30.583"/>
</if>
<msg timestamp="20230801 10:56:30.583" level="INFO">${text} = Possimus minus qui optio.</msg>
<status status="PASS" starttime="20230801 10:56:30.501" endtime="20230801 10:56:30.584"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230801 10:56:30.599" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Lý do"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230801 10:56:30.584" endtime="20230801 10:56:30.599"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:30.599" endtime="20230801 10:56:31.727"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:56:31.728" level="INFO">Fills the text 'Possimus minus qui optio.' in the given field.</msg>
<status status="PASS" starttime="20230801 10:56:31.727" endtime="20230801 10:56:31.947"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:31.949" level="INFO">Length is 25</msg>
<msg timestamp="20230801 10:56:31.950" level="INFO">${cnt} = 25</msg>
<status status="PASS" starttime="20230801 10:56:31.948" endtime="20230801 10:56:31.950"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:56:31.956" level="INFO">${STATE["Lý do"]} = Possimus minus qui optio.</msg>
<status status="PASS" starttime="20230801 10:56:31.952" endtime="20230801 10:56:31.956"/>
</kw>
<status status="PASS" starttime="20230801 10:56:31.950" endtime="20230801 10:56:31.956"/>
</branch>
<status status="PASS" starttime="20230801 10:56:31.950" endtime="20230801 10:56:31.957"/>
</if>
<status status="PASS" starttime="20230801 10:56:30.500" endtime="20230801 10:56:31.957"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:31.960" endtime="20230801 10:56:32.656"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:32.658" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:56:32.658" endtime="20230801 10:56:32.658"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:56:32.694" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:56:32.660" endtime="20230801 10:56:32.695"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:56:32.697" endtime="20230801 10:56:32.697"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:56:32.697" endtime="20230801 10:56:32.697"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:32.695" endtime="20230801 10:56:32.699"/>
</branch>
<status status="PASS" starttime="20230801 10:56:32.695" endtime="20230801 10:56:32.699"/>
</if>
<status status="PASS" starttime="20230801 10:56:32.656" endtime="20230801 10:56:32.699"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:56:32.700" endtime="20230801 10:56:32.833"/>
</kw>
<status status="PASS" starttime="20230801 10:56:31.959" endtime="20230801 10:56:32.833"/>
</kw>
<kw name="Then Required message &quot;Loại phép&quot; displayed under &quot;Xin vui lòng chọn loại phép&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230801 10:56:32.839" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230801 10:56:32.837" endtime="20230801 10:56:32.839"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:56:32.888" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230801 10:56:32.842" endtime="20230801 10:56:32.889"/>
</kw>
<status status="PASS" starttime="20230801 10:56:32.839" endtime="20230801 10:56:32.889"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:56:32.980" level="INFO">Text: 'Xin vui lòng chọn loại phép'</msg>
<status status="PASS" starttime="20230801 10:56:32.896" endtime="20230801 10:56:32.981"/>
</kw>
<status status="PASS" starttime="20230801 10:56:32.889" endtime="20230801 10:56:32.981"/>
</kw>
<status status="PASS" starttime="20230801 10:56:32.836" endtime="20230801 10:56:32.981"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 10:56:33.653" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 10:56:32.984" endtime="20230801 10:56:33.654"/>
</kw>
<status status="PASS" starttime="20230801 10:56:32.983" endtime="20230801 10:56:33.654"/>
</kw>
<status status="PASS" starttime="20230801 10:56:16.629" endtime="20230801 10:56:33.665"/>
</test>
<test id="s1-t3" name="STA-03 Verify that Create Leave Management unsuccessfully because no select &quot;Thời gian&quot;" line="24">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 10:56:33.711" endtime="20230801 10:56:33.712"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 10:56:33.715" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\ddde1656-1c93-49b1-834b-9b098ae77d98"}</msg>
<msg timestamp="20230801 10:56:35.940" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\ddde1656-1c93-49b1-834b-9b098ae77d98"}</msg>
<status status="PASS" starttime="20230801 10:56:33.713" endtime="20230801 10:56:35.941"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 10:56:37.384" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 10:56:37.384" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 10:56:35.941" endtime="20230801 10:56:37.386"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 10:56:37.390" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 10:56:37.387" endtime="20230801 10:56:37.390"/>
</kw>
<status status="PASS" starttime="20230801 10:56:33.710" endtime="20230801 10:56:37.390"/>
</kw>
<kw name="Go to create leave date page" library="common">
<kw name="Login to Staff" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;staff@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:37.397" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:56:37.396" endtime="20230801 10:56:37.397"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:37.399" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:56:37.398" endtime="20230801 10:56:37.399"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:37.403" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:56:37.400" endtime="20230801 10:56:37.403"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:37.405" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:37.405" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:56:37.404" endtime="20230801 10:56:37.406"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:37.407" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:56:37.407" endtime="20230801 10:56:37.407"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:37.410" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:37.410" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:56:37.409" endtime="20230801 10:56:37.410"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.412" endtime="20230801 10:56:37.412"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.413" endtime="20230801 10:56:37.413"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:37.411" endtime="20230801 10:56:37.413"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.414" endtime="20230801 10:56:37.415"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.415" endtime="20230801 10:56:37.416"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.416" endtime="20230801 10:56:37.417"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:37.413" endtime="20230801 10:56:37.417"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.424" endtime="20230801 10:56:37.427"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.427" endtime="20230801 10:56:37.429"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:37.422" endtime="20230801 10:56:37.429"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.431" endtime="20230801 10:56:37.431"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.432" endtime="20230801 10:56:37.432"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:37.430" endtime="20230801 10:56:37.432"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.439" endtime="20230801 10:56:37.440"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.441" endtime="20230801 10:56:37.441"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:37.433" endtime="20230801 10:56:37.441"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.443" endtime="20230801 10:56:37.444"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.445" endtime="20230801 10:56:37.446"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:37.442" endtime="20230801 10:56:37.446"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.447" endtime="20230801 10:56:37.448"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.449" endtime="20230801 10:56:37.450"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:37.446" endtime="20230801 10:56:37.450"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.451" endtime="20230801 10:56:37.455"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:37.450" endtime="20230801 10:56:37.457"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:56:37.459" endtime="20230801 10:56:37.459"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:37.458" endtime="20230801 10:56:37.459"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.461" endtime="20230801 10:56:37.461"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.462" endtime="20230801 10:56:37.462"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:37.460" endtime="20230801 10:56:37.463"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.464" endtime="20230801 10:56:37.464"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:37.463" endtime="20230801 10:56:37.464"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.466" endtime="20230801 10:56:37.466"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:37.465" endtime="20230801 10:56:37.466"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.467" endtime="20230801 10:56:37.472"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:37.466" endtime="20230801 10:56:37.472"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:37.477" endtime="20230801 10:56:37.480"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:37.475" endtime="20230801 10:56:37.480"/>
</branch>
<status status="PASS" starttime="20230801 10:56:37.410" endtime="20230801 10:56:37.481"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:37.482" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:56:37.483" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:56:37.482" endtime="20230801 10:56:37.483"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:56:37.496" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:56:37.484" endtime="20230801 10:56:37.496"/>
</kw>
<status status="PASS" starttime="20230801 10:56:37.483" endtime="20230801 10:56:37.497"/>
</branch>
<status status="PASS" starttime="20230801 10:56:37.483" endtime="20230801 10:56:37.498"/>
</if>
<msg timestamp="20230801 10:56:37.499" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:56:37.395" endtime="20230801 10:56:37.499"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:56:37.505" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:56:37.499" endtime="20230801 10:56:37.506"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:37.506" endtime="20230801 10:56:39.590"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:56:39.592" level="INFO">Fills the text 'staff@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230801 10:56:39.591" endtime="20230801 10:56:39.844"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:39.846" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:56:39.846" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:56:39.845" endtime="20230801 10:56:39.846"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:56:39.849" level="INFO">${STATE["Tên đăng nhập"]} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:56:39.847" endtime="20230801 10:56:39.850"/>
</kw>
<status status="PASS" starttime="20230801 10:56:39.846" endtime="20230801 10:56:39.850"/>
</branch>
<status status="PASS" starttime="20230801 10:56:39.846" endtime="20230801 10:56:39.850"/>
</if>
<status status="PASS" starttime="20230801 10:56:37.393" endtime="20230801 10:56:39.855"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Tester@123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:39.860" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:56:39.859" endtime="20230801 10:56:39.860"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:39.861" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:56:39.861" endtime="20230801 10:56:39.862"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:39.863" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:56:39.862" endtime="20230801 10:56:39.864"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:39.865" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:39.865" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:56:39.864" endtime="20230801 10:56:39.865"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:39.866" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:56:39.865" endtime="20230801 10:56:39.866"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:39.871" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:39.872" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:56:39.867" endtime="20230801 10:56:39.872"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.873" endtime="20230801 10:56:39.874"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.874" endtime="20230801 10:56:39.875"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:39.872" endtime="20230801 10:56:39.875"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.876" endtime="20230801 10:56:39.877"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.877" endtime="20230801 10:56:39.877"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.878" endtime="20230801 10:56:39.878"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:39.875" endtime="20230801 10:56:39.879"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.879" endtime="20230801 10:56:39.880"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.880" endtime="20230801 10:56:39.880"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:39.879" endtime="20230801 10:56:39.881"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.882" endtime="20230801 10:56:39.882"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.882" endtime="20230801 10:56:39.883"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:39.881" endtime="20230801 10:56:39.883"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.884" endtime="20230801 10:56:39.897"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.898" endtime="20230801 10:56:39.898"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:39.883" endtime="20230801 10:56:39.898"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.901" endtime="20230801 10:56:39.906"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.906" endtime="20230801 10:56:39.907"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:39.899" endtime="20230801 10:56:39.907"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.908" endtime="20230801 10:56:39.908"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.909" endtime="20230801 10:56:39.913"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:39.907" endtime="20230801 10:56:39.913"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.915" endtime="20230801 10:56:39.915"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:39.913" endtime="20230801 10:56:39.915"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:56:39.916" endtime="20230801 10:56:39.917"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:39.916" endtime="20230801 10:56:39.917"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.921" endtime="20230801 10:56:39.921"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.922" endtime="20230801 10:56:39.922"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:39.917" endtime="20230801 10:56:39.922"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.923" endtime="20230801 10:56:39.924"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:39.922" endtime="20230801 10:56:39.924"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.926" endtime="20230801 10:56:39.927"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:39.924" endtime="20230801 10:56:39.947"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.949" endtime="20230801 10:56:39.949"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:39.949" endtime="20230801 10:56:39.950"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:39.951" endtime="20230801 10:56:39.954"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:39.950" endtime="20230801 10:56:39.954"/>
</branch>
<status status="PASS" starttime="20230801 10:56:39.872" endtime="20230801 10:56:39.954"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:39.956" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:56:39.957" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:56:39.955" endtime="20230801 10:56:39.957"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:56:39.966" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:56:39.965" endtime="20230801 10:56:39.966"/>
</kw>
<status status="PASS" starttime="20230801 10:56:39.961" endtime="20230801 10:56:39.967"/>
</branch>
<status status="PASS" starttime="20230801 10:56:39.959" endtime="20230801 10:56:39.972"/>
</if>
<msg timestamp="20230801 10:56:39.976" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:56:39.858" endtime="20230801 10:56:39.978"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:56:40.011" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:56:39.978" endtime="20230801 10:56:40.011"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:40.012" endtime="20230801 10:56:40.213"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:56:40.215" level="INFO">Fills the text 'Tester@123' in the given field.</msg>
<status status="PASS" starttime="20230801 10:56:40.214" endtime="20230801 10:56:40.299"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:40.300" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:56:40.300" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:56:40.299" endtime="20230801 10:56:40.300"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:56:40.306" level="INFO">${STATE["Mật khẩu"]} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:56:40.304" endtime="20230801 10:56:40.306"/>
</kw>
<status status="PASS" starttime="20230801 10:56:40.301" endtime="20230801 10:56:40.306"/>
</branch>
<status status="PASS" starttime="20230801 10:56:40.301" endtime="20230801 10:56:40.307"/>
</if>
<status status="PASS" starttime="20230801 10:56:39.856" endtime="20230801 10:56:40.307"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:40.310" endtime="20230801 10:56:40.811"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:40.814" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:56:40.813" endtime="20230801 10:56:40.814"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:56:40.851" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:56:40.814" endtime="20230801 10:56:40.851"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:56:40.855" endtime="20230801 10:56:40.855"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:56:40.856" endtime="20230801 10:56:40.857"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:40.853" endtime="20230801 10:56:40.857"/>
</branch>
<status status="PASS" starttime="20230801 10:56:40.851" endtime="20230801 10:56:40.857"/>
</if>
<status status="PASS" starttime="20230801 10:56:40.812" endtime="20230801 10:56:40.858"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:56:40.858" endtime="20230801 10:56:40.949"/>
</kw>
<status status="PASS" starttime="20230801 10:56:40.309" endtime="20230801 10:56:40.949"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:40.955" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:56:40.952" endtime="20230801 10:56:40.955"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:40.956" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:40.956" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:56:40.955" endtime="20230801 10:56:40.957"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 10:56:40.958" endtime="20230801 10:56:40.959"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:40.957" endtime="20230801 10:56:40.959"/>
</branch>
<status status="PASS" starttime="20230801 10:56:40.957" endtime="20230801 10:56:40.959"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:56:42.499" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 10:56:40.963" endtime="20230801 10:56:42.499"/>
</kw>
<status status="PASS" starttime="20230801 10:56:40.959" endtime="20230801 10:56:42.500"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:42.502" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 10:56:42.500" endtime="20230801 10:56:42.502"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:56:43.037" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 10:56:43.037" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 10:56:43.038" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 10:56:42.506" endtime="20230801 10:56:43.041"/>
</kw>
<status status="FAIL" starttime="20230801 10:56:42.504" endtime="20230801 10:56:43.042"/>
</kw>
<msg timestamp="20230801 10:56:43.042" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 10:56:42.503" endtime="20230801 10:56:43.042"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:56:43.044" endtime="20230801 10:56:43.044"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:43.043" endtime="20230801 10:56:43.044"/>
</branch>
<status status="PASS" starttime="20230801 10:56:43.043" endtime="20230801 10:56:43.045"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:56:45.780" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 10:56:43.047" endtime="20230801 10:56:45.780"/>
</kw>
<status status="PASS" starttime="20230801 10:56:43.045" endtime="20230801 10:56:45.781"/>
</kw>
<status status="PASS" starttime="20230801 10:56:40.950" endtime="20230801 10:56:45.781"/>
</kw>
<status status="PASS" starttime="20230801 10:56:37.392" endtime="20230801 10:56:45.781"/>
</kw>
<kw name="When Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:45.783" endtime="20230801 10:56:46.009"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:46.012" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:56:46.011" endtime="20230801 10:56:46.013"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:56:46.036" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:56:46.013" endtime="20230801 10:56:46.036"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.037" endtime="20230801 10:56:46.038"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.038" endtime="20230801 10:56:46.039"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:46.037" endtime="20230801 10:56:46.039"/>
</branch>
<status status="PASS" starttime="20230801 10:56:46.036" endtime="20230801 10:56:46.040"/>
</if>
<status status="PASS" starttime="20230801 10:56:46.010" endtime="20230801 10:56:46.040"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:56:46.041" endtime="20230801 10:56:46.417"/>
</kw>
<status status="PASS" starttime="20230801 10:56:45.782" endtime="20230801 10:56:46.419"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:46.422" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:56:46.421" endtime="20230801 10:56:46.422"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:56:46.448" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:56:46.423" endtime="20230801 10:56:46.448"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:56:46.450" endtime="20230801 10:56:46.451"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:46.449" endtime="20230801 10:56:46.452"/>
</branch>
<status status="PASS" starttime="20230801 10:56:46.449" endtime="20230801 10:56:46.452"/>
</if>
<status status="PASS" starttime="20230801 10:56:46.419" endtime="20230801 10:56:46.452"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 10:56:46.554" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 10:56:46.454" endtime="20230801 10:56:46.555"/>
</kw>
<status status="PASS" starttime="20230801 10:56:37.391" endtime="20230801 10:56:46.555"/>
</kw>
<kw name="And Click select &quot;Thời gian&quot; with &quot;Cả ngày&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:46.559" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:56:46.559" endtime="20230801 10:56:46.560"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:46.560" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:56:46.560" endtime="20230801 10:56:46.560"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:46.561" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:56:46.560" endtime="20230801 10:56:46.561"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:46.561" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:46.561" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:56:46.561" endtime="20230801 10:56:46.561"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:46.562" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:56:46.562" endtime="20230801 10:56:46.562"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:46.563" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:46.563" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:56:46.562" endtime="20230801 10:56:46.563"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.563" endtime="20230801 10:56:46.564"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.564" endtime="20230801 10:56:46.564"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:46.563" endtime="20230801 10:56:46.564"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.564" endtime="20230801 10:56:46.565"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.565" endtime="20230801 10:56:46.565"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.565" endtime="20230801 10:56:46.565"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:46.564" endtime="20230801 10:56:46.566"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.566" endtime="20230801 10:56:46.566"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.566" endtime="20230801 10:56:46.567"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:46.566" endtime="20230801 10:56:46.567"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.571" endtime="20230801 10:56:46.571"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.572" endtime="20230801 10:56:46.573"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:46.567" endtime="20230801 10:56:46.573"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.574" endtime="20230801 10:56:46.574"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.575" endtime="20230801 10:56:46.575"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:46.573" endtime="20230801 10:56:46.576"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.577" endtime="20230801 10:56:46.578"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.578" endtime="20230801 10:56:46.579"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:46.576" endtime="20230801 10:56:46.580"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.581" endtime="20230801 10:56:46.582"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.582" endtime="20230801 10:56:46.583"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:46.580" endtime="20230801 10:56:46.583"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.588" endtime="20230801 10:56:46.588"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:46.584" endtime="20230801 10:56:46.588"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:56:46.591" endtime="20230801 10:56:46.591"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:46.589" endtime="20230801 10:56:46.592"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.596" endtime="20230801 10:56:46.597"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.597" endtime="20230801 10:56:46.597"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:46.593" endtime="20230801 10:56:46.599"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.600" endtime="20230801 10:56:46.601"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:46.599" endtime="20230801 10:56:46.602"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.604" endtime="20230801 10:56:46.604"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:46.603" endtime="20230801 10:56:46.605"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.607" endtime="20230801 10:56:46.608"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:46.605" endtime="20230801 10:56:46.608"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:46.609" endtime="20230801 10:56:46.609"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:46.608" endtime="20230801 10:56:46.609"/>
</branch>
<status status="PASS" starttime="20230801 10:56:46.563" endtime="20230801 10:56:46.609"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:46.611" level="INFO">Length is 7</msg>
<msg timestamp="20230801 10:56:46.611" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20230801 10:56:46.610" endtime="20230801 10:56:46.611"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:56:46.624" level="INFO">${text} = Cả ngày</msg>
<status status="PASS" starttime="20230801 10:56:46.612" endtime="20230801 10:56:46.624"/>
</kw>
<status status="PASS" starttime="20230801 10:56:46.612" endtime="20230801 10:56:46.625"/>
</branch>
<status status="PASS" starttime="20230801 10:56:46.611" endtime="20230801 10:56:46.626"/>
</if>
<msg timestamp="20230801 10:56:46.627" level="INFO">${text} = Cả ngày</msg>
<status status="PASS" starttime="20230801 10:56:46.558" endtime="20230801 10:56:46.627"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 10:56:46.629" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 10:56:46.628" endtime="20230801 10:56:46.629"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:56:46.803" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 10:56:46.633" endtime="20230801 10:56:46.803"/>
</kw>
<status status="PASS" starttime="20230801 10:56:46.629" endtime="20230801 10:56:46.804"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:46.804" endtime="20230801 10:56:47.059"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 10:56:47.061" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 10:56:47.060" endtime="20230801 10:56:47.062"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:56:47.063" level="INFO">Fills the text 'Cả ngày' in the given field.</msg>
<status status="PASS" starttime="20230801 10:56:47.062" endtime="20230801 10:56:47.137"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:47.137" endtime="20230801 10:56:47.439"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:47.441" level="INFO">Length is 7</msg>
<msg timestamp="20230801 10:56:47.441" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20230801 10:56:47.440" endtime="20230801 10:56:47.441"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:56:47.444" level="INFO">${STATE["Thời gian"]} = Cả ngày</msg>
<status status="PASS" starttime="20230801 10:56:47.443" endtime="20230801 10:56:47.444"/>
</kw>
<status status="PASS" starttime="20230801 10:56:47.442" endtime="20230801 10:56:47.444"/>
</branch>
<status status="PASS" starttime="20230801 10:56:47.441" endtime="20230801 10:56:47.444"/>
</if>
<status status="PASS" starttime="20230801 10:56:46.557" endtime="20230801 10:56:47.444"/>
</kw>
<kw name="And Delele select &quot;Thời gian&quot; field" library="common" sourcename="Delele select &quot;${name}&quot; field">
<if>
<branch type="IF" condition="'${name}' == 'Vị trí'">
<kw name="Evaluate" library="BuiltIn">
<var>${num}</var>
<arg>0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230801 10:56:47.449" endtime="20230801 10:56:47.450"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:47.449" endtime="20230801 10:56:47.450"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'Thời gian'">
<kw name="Evaluate" library="BuiltIn">
<var>${num}</var>
<arg>0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 10:56:47.452" level="INFO">${num} = 0</msg>
<status status="PASS" starttime="20230801 10:56:47.451" endtime="20230801 10:56:47.452"/>
</kw>
<status status="PASS" starttime="20230801 10:56:47.450" endtime="20230801 10:56:47.452"/>
</branch>
<branch type="ELSE IF" condition="'${name}' == 'Vai trò'">
<kw name="Evaluate" library="BuiltIn">
<var>${num}</var>
<arg>1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230801 10:56:47.453" endtime="20230801 10:56:47.454"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:47.453" endtime="20230801 10:56:47.454"/>
</branch>
<status status="PASS" starttime="20230801 10:56:47.449" endtime="20230801 10:56:47.454"/>
</if>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>//span[@class='ant-select-clear']</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 10:56:47.537" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 10:56:47.537" level="INFO">${elements} = ['element=91f79ba5-9655-4caf-b7ea-8d2c14139d20']</msg>
<status status="PASS" starttime="20230801 10:56:47.455" endtime="20230801 10:56:47.537"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elements}[${num}]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:47.539" endtime="20230801 10:56:47.765"/>
</kw>
<status status="PASS" starttime="20230801 10:56:47.448" endtime="20230801 10:56:47.765"/>
</kw>
<kw name="Then Required message &quot;Thời gian&quot; displayed under &quot;Xin vui lòng chọn thời gian&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230801 10:56:47.770" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230801 10:56:47.769" endtime="20230801 10:56:47.771"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:56:47.882" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230801 10:56:47.774" endtime="20230801 10:56:47.882"/>
</kw>
<status status="PASS" starttime="20230801 10:56:47.771" endtime="20230801 10:56:47.883"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:56:48.026" level="INFO">Text: 'Xin vui lòng chọn thời gian'</msg>
<status status="PASS" starttime="20230801 10:56:47.889" endtime="20230801 10:56:48.026"/>
</kw>
<status status="PASS" starttime="20230801 10:56:47.883" endtime="20230801 10:56:48.027"/>
</kw>
<status status="PASS" starttime="20230801 10:56:47.767" endtime="20230801 10:56:48.027"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 10:56:48.590" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 10:56:48.044" endtime="20230801 10:56:48.590"/>
</kw>
<status status="PASS" starttime="20230801 10:56:48.043" endtime="20230801 10:56:48.591"/>
</kw>
<status status="PASS" starttime="20230801 10:56:33.699" endtime="20230801 10:56:48.592"/>
</test>
<test id="s1-t4" name="STA-04 Verify that Create Leave Management unsuccessfully because no select &quot;Ngày nghỉ&quot;" line="30">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 10:56:48.616" endtime="20230801 10:56:48.617"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 10:56:48.619" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\f5f0bbaa-3a46-4956-935b-99462e8f0410"}</msg>
<msg timestamp="20230801 10:56:50.379" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\f5f0bbaa-3a46-4956-935b-99462e8f0410"}</msg>
<status status="PASS" starttime="20230801 10:56:48.618" endtime="20230801 10:56:50.379"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 10:56:51.491" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 10:56:51.491" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 10:56:50.380" endtime="20230801 10:56:51.492"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 10:56:51.493" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 10:56:51.492" endtime="20230801 10:56:51.493"/>
</kw>
<status status="PASS" starttime="20230801 10:56:48.615" endtime="20230801 10:56:51.493"/>
</kw>
<kw name="Go to create leave date page" library="common">
<kw name="Login to Staff" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;staff@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:51.497" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:56:51.496" endtime="20230801 10:56:51.497"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:51.497" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:56:51.497" endtime="20230801 10:56:51.499"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:51.501" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:56:51.499" endtime="20230801 10:56:51.501"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:51.502" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:51.502" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:56:51.501" endtime="20230801 10:56:51.502"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:51.504" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:56:51.503" endtime="20230801 10:56:51.504"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:51.505" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:51.505" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:56:51.505" endtime="20230801 10:56:51.505"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.506" endtime="20230801 10:56:51.506"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.507" endtime="20230801 10:56:51.507"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:51.506" endtime="20230801 10:56:51.507"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.507" endtime="20230801 10:56:51.508"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.508" endtime="20230801 10:56:51.508"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.509" endtime="20230801 10:56:51.509"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:51.507" endtime="20230801 10:56:51.509"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.509" endtime="20230801 10:56:51.510"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.510" endtime="20230801 10:56:51.510"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:51.509" endtime="20230801 10:56:51.510"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.511" endtime="20230801 10:56:51.511"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.512" endtime="20230801 10:56:51.512"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:51.510" endtime="20230801 10:56:51.512"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.514" endtime="20230801 10:56:51.514"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.515" endtime="20230801 10:56:51.515"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:51.513" endtime="20230801 10:56:51.516"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.517" endtime="20230801 10:56:51.517"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.519" endtime="20230801 10:56:51.519"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:51.516" endtime="20230801 10:56:51.520"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.521" endtime="20230801 10:56:51.521"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.522" endtime="20230801 10:56:51.522"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:51.520" endtime="20230801 10:56:51.523"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.524" endtime="20230801 10:56:51.524"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:51.523" endtime="20230801 10:56:51.525"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:56:51.526" endtime="20230801 10:56:51.526"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:51.525" endtime="20230801 10:56:51.527"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.530" endtime="20230801 10:56:51.532"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.533" endtime="20230801 10:56:51.535"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:51.528" endtime="20230801 10:56:51.535"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.536" endtime="20230801 10:56:51.537"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:51.536" endtime="20230801 10:56:51.537"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.538" endtime="20230801 10:56:51.540"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:51.537" endtime="20230801 10:56:51.540"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.542" endtime="20230801 10:56:51.543"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:51.541" endtime="20230801 10:56:51.543"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:51.544" endtime="20230801 10:56:51.545"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:51.544" endtime="20230801 10:56:51.545"/>
</branch>
<status status="PASS" starttime="20230801 10:56:51.505" endtime="20230801 10:56:51.545"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:51.546" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:56:51.546" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:56:51.546" endtime="20230801 10:56:51.546"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:56:51.548" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:56:51.548" endtime="20230801 10:56:51.548"/>
</kw>
<status status="PASS" starttime="20230801 10:56:51.547" endtime="20230801 10:56:51.548"/>
</branch>
<status status="PASS" starttime="20230801 10:56:51.547" endtime="20230801 10:56:51.549"/>
</if>
<msg timestamp="20230801 10:56:51.549" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:56:51.495" endtime="20230801 10:56:51.549"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:56:51.552" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:56:51.550" endtime="20230801 10:56:51.553"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:51.554" endtime="20230801 10:56:53.455"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:56:53.456" level="INFO">Fills the text 'staff@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230801 10:56:53.455" endtime="20230801 10:56:53.787"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:53.790" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:56:53.790" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:56:53.789" endtime="20230801 10:56:53.790"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:56:53.794" level="INFO">${STATE["Tên đăng nhập"]} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:56:53.793" endtime="20230801 10:56:53.794"/>
</kw>
<status status="PASS" starttime="20230801 10:56:53.791" endtime="20230801 10:56:53.795"/>
</branch>
<status status="PASS" starttime="20230801 10:56:53.791" endtime="20230801 10:56:53.795"/>
</if>
<status status="PASS" starttime="20230801 10:56:51.494" endtime="20230801 10:56:53.796"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Tester@123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:53.799" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:56:53.799" endtime="20230801 10:56:53.799"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:53.804" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:56:53.800" endtime="20230801 10:56:53.804"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:53.805" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:56:53.804" endtime="20230801 10:56:53.805"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:53.806" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:53.806" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:56:53.806" endtime="20230801 10:56:53.807"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:53.809" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:56:53.807" endtime="20230801 10:56:53.809"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:53.810" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:53.810" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:56:53.809" endtime="20230801 10:56:53.810"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.811" endtime="20230801 10:56:53.812"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.812" endtime="20230801 10:56:53.812"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:53.811" endtime="20230801 10:56:53.813"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.814" endtime="20230801 10:56:53.814"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.815" endtime="20230801 10:56:53.815"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.816" endtime="20230801 10:56:53.816"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:53.813" endtime="20230801 10:56:53.816"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.819" endtime="20230801 10:56:53.820"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.820" endtime="20230801 10:56:53.820"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:53.816" endtime="20230801 10:56:53.821"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.822" endtime="20230801 10:56:53.822"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.823" endtime="20230801 10:56:53.823"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:53.821" endtime="20230801 10:56:53.824"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.825" endtime="20230801 10:56:53.826"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.827" endtime="20230801 10:56:53.827"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:53.824" endtime="20230801 10:56:53.827"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.830" endtime="20230801 10:56:53.830"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.831" endtime="20230801 10:56:53.831"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:53.829" endtime="20230801 10:56:53.831"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.833" endtime="20230801 10:56:53.833"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.837" endtime="20230801 10:56:53.837"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:53.832" endtime="20230801 10:56:53.837"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.839" endtime="20230801 10:56:53.839"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:53.837" endtime="20230801 10:56:53.840"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:56:53.841" endtime="20230801 10:56:53.841"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:53.840" endtime="20230801 10:56:53.842"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.843" endtime="20230801 10:56:53.843"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.844" endtime="20230801 10:56:53.845"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:53.842" endtime="20230801 10:56:53.845"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.846" endtime="20230801 10:56:53.848"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:53.845" endtime="20230801 10:56:53.848"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.849" endtime="20230801 10:56:53.852"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:53.848" endtime="20230801 10:56:53.853"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.857" endtime="20230801 10:56:53.857"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:53.853" endtime="20230801 10:56:53.859"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:56:53.860" endtime="20230801 10:56:53.861"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:53.859" endtime="20230801 10:56:53.861"/>
</branch>
<status status="PASS" starttime="20230801 10:56:53.810" endtime="20230801 10:56:53.861"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:53.863" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:56:53.863" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:56:53.862" endtime="20230801 10:56:53.863"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:56:53.871" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:56:53.868" endtime="20230801 10:56:53.871"/>
</kw>
<status status="PASS" starttime="20230801 10:56:53.863" endtime="20230801 10:56:53.871"/>
</branch>
<status status="PASS" starttime="20230801 10:56:53.863" endtime="20230801 10:56:53.872"/>
</if>
<msg timestamp="20230801 10:56:53.872" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:56:53.798" endtime="20230801 10:56:53.872"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:56:53.874" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:56:53.873" endtime="20230801 10:56:53.874"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:53.875" endtime="20230801 10:56:53.962"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:56:53.964" level="INFO">Fills the text 'Tester@123' in the given field.</msg>
<status status="PASS" starttime="20230801 10:56:53.963" endtime="20230801 10:56:54.069"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:54.070" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:56:54.070" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:56:54.069" endtime="20230801 10:56:54.070"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:56:54.073" level="INFO">${STATE["Mật khẩu"]} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:56:54.072" endtime="20230801 10:56:54.073"/>
</kw>
<status status="PASS" starttime="20230801 10:56:54.071" endtime="20230801 10:56:54.073"/>
</branch>
<status status="PASS" starttime="20230801 10:56:54.070" endtime="20230801 10:56:54.074"/>
</if>
<status status="PASS" starttime="20230801 10:56:53.796" endtime="20230801 10:56:54.074"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:54.076" endtime="20230801 10:56:54.473"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:54.475" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:56:54.474" endtime="20230801 10:56:54.475"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:56:54.543" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:56:54.476" endtime="20230801 10:56:54.543"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:56:54.545" endtime="20230801 10:56:54.545"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:56:54.546" endtime="20230801 10:56:54.546"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:54.544" endtime="20230801 10:56:54.546"/>
</branch>
<status status="PASS" starttime="20230801 10:56:54.544" endtime="20230801 10:56:54.547"/>
</if>
<status status="PASS" starttime="20230801 10:56:54.474" endtime="20230801 10:56:54.547"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:56:54.548" endtime="20230801 10:56:54.613"/>
</kw>
<status status="PASS" starttime="20230801 10:56:54.075" endtime="20230801 10:56:54.614"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:56:54.619" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:56:54.617" endtime="20230801 10:56:54.619"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:56:54.621" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:56:54.621" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:56:54.620" endtime="20230801 10:56:54.621"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 10:56:54.622" endtime="20230801 10:56:54.623"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:54.622" endtime="20230801 10:56:54.623"/>
</branch>
<status status="PASS" starttime="20230801 10:56:54.621" endtime="20230801 10:56:54.623"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:56:56.072" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 10:56:54.629" endtime="20230801 10:56:56.072"/>
</kw>
<status status="PASS" starttime="20230801 10:56:54.624" endtime="20230801 10:56:56.073"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:56.074" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 10:56:56.074" endtime="20230801 10:56:56.074"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:56:56.479" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-4.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-4.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 10:56:56.479" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 10:56:56.479" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 10:56:56.077" endtime="20230801 10:56:56.481"/>
</kw>
<status status="FAIL" starttime="20230801 10:56:56.075" endtime="20230801 10:56:56.481"/>
</kw>
<msg timestamp="20230801 10:56:56.481" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 10:56:56.075" endtime="20230801 10:56:56.481"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:56:56.483" endtime="20230801 10:56:56.483"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:56.482" endtime="20230801 10:56:56.483"/>
</branch>
<status status="PASS" starttime="20230801 10:56:56.482" endtime="20230801 10:56:56.484"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:56:58.710" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 10:56:56.487" endtime="20230801 10:56:58.710"/>
</kw>
<status status="PASS" starttime="20230801 10:56:56.484" endtime="20230801 10:56:58.711"/>
</kw>
<status status="PASS" starttime="20230801 10:56:54.615" endtime="20230801 10:56:58.711"/>
</kw>
<status status="PASS" starttime="20230801 10:56:51.494" endtime="20230801 10:56:58.712"/>
</kw>
<kw name="When Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:56:58.714" endtime="20230801 10:56:58.985"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:58.993" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:56:58.991" endtime="20230801 10:56:58.994"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:56:59.062" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:56:58.995" endtime="20230801 10:56:59.062"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:56:59.064" endtime="20230801 10:56:59.065"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:56:59.067" endtime="20230801 10:56:59.067"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:59.063" endtime="20230801 10:56:59.067"/>
</branch>
<status status="PASS" starttime="20230801 10:56:59.063" endtime="20230801 10:56:59.067"/>
</if>
<status status="PASS" starttime="20230801 10:56:58.986" endtime="20230801 10:56:59.069"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:56:59.073" endtime="20230801 10:56:59.926"/>
</kw>
<status status="PASS" starttime="20230801 10:56:58.713" endtime="20230801 10:56:59.927"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:56:59.929" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:56:59.927" endtime="20230801 10:56:59.929"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:56:59.939" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:56:59.929" endtime="20230801 10:56:59.939"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:56:59.940" endtime="20230801 10:56:59.940"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:56:59.940" endtime="20230801 10:56:59.940"/>
</branch>
<status status="PASS" starttime="20230801 10:56:59.939" endtime="20230801 10:56:59.940"/>
</if>
<status status="PASS" starttime="20230801 10:56:59.927" endtime="20230801 10:56:59.941"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 10:57:00.042" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 10:56:59.941" endtime="20230801 10:57:00.042"/>
</kw>
<status status="PASS" starttime="20230801 10:56:51.494" endtime="20230801 10:57:00.042"/>
</kw>
<kw name="And Click select &quot;Loại phép&quot; with &quot;Nghỉ phép có lương&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:00.044" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:00.044" endtime="20230801 10:57:00.044"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:00.045" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:00.044" endtime="20230801 10:57:00.045"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:00.045" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:00.045" endtime="20230801 10:57:00.045"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:00.046" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:00.046" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:00.046" endtime="20230801 10:57:00.046"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:00.047" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:00.046" endtime="20230801 10:57:00.047"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:00.047" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:00.047" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:00.047" endtime="20230801 10:57:00.047"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.048" endtime="20230801 10:57:00.048"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.048" endtime="20230801 10:57:00.048"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.048" endtime="20230801 10:57:00.048"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.049" endtime="20230801 10:57:00.049"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.049" endtime="20230801 10:57:00.049"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.049" endtime="20230801 10:57:00.049"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.048" endtime="20230801 10:57:00.051"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.052" endtime="20230801 10:57:00.052"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.052" endtime="20230801 10:57:00.052"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.051" endtime="20230801 10:57:00.052"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.054" endtime="20230801 10:57:00.054"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.054" endtime="20230801 10:57:00.055"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.053" endtime="20230801 10:57:00.055"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.056" endtime="20230801 10:57:00.056"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.057" endtime="20230801 10:57:00.057"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.055" endtime="20230801 10:57:00.057"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.058" endtime="20230801 10:57:00.058"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.058" endtime="20230801 10:57:00.058"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.057" endtime="20230801 10:57:00.058"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.058" endtime="20230801 10:57:00.059"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.060" endtime="20230801 10:57:00.060"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.058" endtime="20230801 10:57:00.060"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.062" endtime="20230801 10:57:00.064"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.061" endtime="20230801 10:57:00.065"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:00.067" endtime="20230801 10:57:00.067"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.066" endtime="20230801 10:57:00.068"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.070" endtime="20230801 10:57:00.071"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.072" endtime="20230801 10:57:00.072"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.068" endtime="20230801 10:57:00.074"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.074" endtime="20230801 10:57:00.075"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.074" endtime="20230801 10:57:00.075"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.075" endtime="20230801 10:57:00.075"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.075" endtime="20230801 10:57:00.076"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.076" endtime="20230801 10:57:00.076"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.076" endtime="20230801 10:57:00.076"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.077" endtime="20230801 10:57:00.077"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.076" endtime="20230801 10:57:00.077"/>
</branch>
<status status="PASS" starttime="20230801 10:57:00.048" endtime="20230801 10:57:00.077"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:00.078" level="INFO">Length is 18</msg>
<msg timestamp="20230801 10:57:00.078" level="INFO">${cnt} = 18</msg>
<status status="PASS" starttime="20230801 10:57:00.077" endtime="20230801 10:57:00.078"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:00.079" level="INFO">${text} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 10:57:00.078" endtime="20230801 10:57:00.079"/>
</kw>
<status status="PASS" starttime="20230801 10:57:00.078" endtime="20230801 10:57:00.079"/>
</branch>
<status status="PASS" starttime="20230801 10:57:00.078" endtime="20230801 10:57:00.079"/>
</if>
<msg timestamp="20230801 10:57:00.079" level="INFO">${text} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 10:57:00.043" endtime="20230801 10:57:00.080"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 10:57:00.080" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 10:57:00.080" endtime="20230801 10:57:00.080"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:00.093" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 10:57:00.082" endtime="20230801 10:57:00.093"/>
</kw>
<status status="PASS" starttime="20230801 10:57:00.081" endtime="20230801 10:57:00.093"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:00.093" endtime="20230801 10:57:00.220"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 10:57:00.221" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 10:57:00.220" endtime="20230801 10:57:00.221"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:00.222" level="INFO">Fills the text 'Nghỉ phép có lương' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:00.221" endtime="20230801 10:57:00.312"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:00.312" endtime="20230801 10:57:00.582"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:00.582" level="INFO">Length is 18</msg>
<msg timestamp="20230801 10:57:00.582" level="INFO">${cnt} = 18</msg>
<status status="PASS" starttime="20230801 10:57:00.582" endtime="20230801 10:57:00.582"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:57:00.589" level="INFO">${STATE["Loại phép"]} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 10:57:00.585" endtime="20230801 10:57:00.589"/>
</kw>
<status status="PASS" starttime="20230801 10:57:00.584" endtime="20230801 10:57:00.589"/>
</branch>
<status status="PASS" starttime="20230801 10:57:00.583" endtime="20230801 10:57:00.589"/>
</if>
<status status="PASS" starttime="20230801 10:57:00.043" endtime="20230801 10:57:00.589"/>
</kw>
<kw name="And Click select &quot;Thời gian&quot; with &quot;Cả ngày&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:00.592" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:00.592" endtime="20230801 10:57:00.592"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:00.593" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:00.592" endtime="20230801 10:57:00.593"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:00.593" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:00.593" endtime="20230801 10:57:00.593"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:00.594" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:00.594" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:00.594" endtime="20230801 10:57:00.594"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:00.595" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:00.594" endtime="20230801 10:57:00.595"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:00.595" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:00.595" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:00.595" endtime="20230801 10:57:00.595"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.596" endtime="20230801 10:57:00.596"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.596" endtime="20230801 10:57:00.597"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.596" endtime="20230801 10:57:00.597"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.597" endtime="20230801 10:57:00.597"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.597" endtime="20230801 10:57:00.597"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.599" endtime="20230801 10:57:00.599"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.597" endtime="20230801 10:57:00.599"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.601" endtime="20230801 10:57:00.602"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.603" endtime="20230801 10:57:00.603"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.600" endtime="20230801 10:57:00.604"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.605" endtime="20230801 10:57:00.606"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.607" endtime="20230801 10:57:00.607"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.604" endtime="20230801 10:57:00.608"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.608" endtime="20230801 10:57:00.609"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.609" endtime="20230801 10:57:00.609"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.608" endtime="20230801 10:57:00.609"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.610" endtime="20230801 10:57:00.610"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.611" endtime="20230801 10:57:00.611"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.609" endtime="20230801 10:57:00.611"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.612" endtime="20230801 10:57:00.613"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.613" endtime="20230801 10:57:00.614"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.612" endtime="20230801 10:57:00.614"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.619" endtime="20230801 10:57:00.620"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.614" endtime="20230801 10:57:00.621"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:00.624" endtime="20230801 10:57:00.625"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.621" endtime="20230801 10:57:00.625"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.626" endtime="20230801 10:57:00.626"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.626" endtime="20230801 10:57:00.626"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.625" endtime="20230801 10:57:00.626"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.627" endtime="20230801 10:57:00.627"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.627" endtime="20230801 10:57:00.627"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.628" endtime="20230801 10:57:00.628"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.627" endtime="20230801 10:57:00.628"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.629" endtime="20230801 10:57:00.629"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.628" endtime="20230801 10:57:00.629"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:00.631" endtime="20230801 10:57:00.631"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:00.629" endtime="20230801 10:57:00.631"/>
</branch>
<status status="PASS" starttime="20230801 10:57:00.596" endtime="20230801 10:57:00.631"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:00.632" level="INFO">Length is 7</msg>
<msg timestamp="20230801 10:57:00.633" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20230801 10:57:00.632" endtime="20230801 10:57:00.633"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:00.636" level="INFO">${text} = Cả ngày</msg>
<status status="PASS" starttime="20230801 10:57:00.634" endtime="20230801 10:57:00.636"/>
</kw>
<status status="PASS" starttime="20230801 10:57:00.633" endtime="20230801 10:57:00.636"/>
</branch>
<status status="PASS" starttime="20230801 10:57:00.633" endtime="20230801 10:57:00.637"/>
</if>
<msg timestamp="20230801 10:57:00.637" level="INFO">${text} = Cả ngày</msg>
<status status="PASS" starttime="20230801 10:57:00.591" endtime="20230801 10:57:00.637"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 10:57:00.639" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 10:57:00.637" endtime="20230801 10:57:00.639"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:00.654" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 10:57:00.642" endtime="20230801 10:57:00.654"/>
</kw>
<status status="PASS" starttime="20230801 10:57:00.640" endtime="20230801 10:57:00.654"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:00.654" endtime="20230801 10:57:00.818"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 10:57:00.821" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 10:57:00.819" endtime="20230801 10:57:00.821"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:00.823" level="INFO">Fills the text 'Cả ngày' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:00.822" endtime="20230801 10:57:00.872"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:00.873" endtime="20230801 10:57:01.170"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:01.171" level="INFO">Length is 7</msg>
<msg timestamp="20230801 10:57:01.171" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20230801 10:57:01.170" endtime="20230801 10:57:01.171"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:57:01.172" level="INFO">${STATE["Thời gian"]} = Cả ngày</msg>
<status status="PASS" starttime="20230801 10:57:01.171" endtime="20230801 10:57:01.172"/>
</kw>
<status status="PASS" starttime="20230801 10:57:01.171" endtime="20230801 10:57:01.172"/>
</branch>
<status status="PASS" starttime="20230801 10:57:01.171" endtime="20230801 10:57:01.172"/>
</if>
<status status="PASS" starttime="20230801 10:57:00.590" endtime="20230801 10:57:01.172"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Lý do&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:01.176" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:01.175" endtime="20230801 10:57:01.176"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:01.177" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:01.177" endtime="20230801 10:57:01.177"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:01.179" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:01.177" endtime="20230801 10:57:01.179"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:01.180" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:01.180" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:01.179" endtime="20230801 10:57:01.180"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:01.181" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 10:57:01.180" endtime="20230801 10:57:01.181"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:01.181" level="INFO">Length is 1</msg>
<msg timestamp="20230801 10:57:01.181" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 10:57:01.181" endtime="20230801 10:57:01.181"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.182" endtime="20230801 10:57:01.182"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.182" endtime="20230801 10:57:01.183"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:01.182" endtime="20230801 10:57:01.183"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.184" endtime="20230801 10:57:01.184"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.185" endtime="20230801 10:57:01.185"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.186" endtime="20230801 10:57:01.186"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:01.183" endtime="20230801 10:57:01.186"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.186" endtime="20230801 10:57:01.186"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.187" endtime="20230801 10:57:01.187"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:01.186" endtime="20230801 10:57:01.187"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.187" endtime="20230801 10:57:01.188"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.188" endtime="20230801 10:57:01.188"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:01.187" endtime="20230801 10:57:01.188"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.189" endtime="20230801 10:57:01.189"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.189" endtime="20230801 10:57:01.189"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:01.188" endtime="20230801 10:57:01.189"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.189" endtime="20230801 10:57:01.190"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.190" endtime="20230801 10:57:01.191"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:01.189" endtime="20230801 10:57:01.191"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.193" endtime="20230801 10:57:01.193"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.194" endtime="20230801 10:57:01.194"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:01.192" endtime="20230801 10:57:01.194"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.195" endtime="20230801 10:57:01.196"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:01.195" endtime="20230801 10:57:01.196"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:01.197" endtime="20230801 10:57:01.197"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:01.196" endtime="20230801 10:57:01.197"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.199" endtime="20230801 10:57:01.199"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.201" endtime="20230801 10:57:01.201"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:01.197" endtime="20230801 10:57:01.201"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.203" endtime="20230801 10:57:01.203"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:01.202" endtime="20230801 10:57:01.203"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.206" endtime="20230801 10:57:01.209"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:01.203" endtime="20230801 10:57:01.209"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.213" endtime="20230801 10:57:01.214"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:01.212" endtime="20230801 10:57:01.214"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230801 10:57:01.217" level="INFO">${new_text} = Similique harum officia omnis illum eum distinctio.</msg>
<status status="PASS" starttime="20230801 10:57:01.215" endtime="20230801 10:57:01.217"/>
</kw>
<status status="PASS" starttime="20230801 10:57:01.214" endtime="20230801 10:57:01.217"/>
</branch>
<status status="PASS" starttime="20230801 10:57:01.182" endtime="20230801 10:57:01.217"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:01.221" level="INFO">Length is 8</msg>
<msg timestamp="20230801 10:57:01.221" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 10:57:01.219" endtime="20230801 10:57:01.221"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:01.227" level="INFO">${text} = Similique harum officia omnis illum eum distinctio.</msg>
<status status="PASS" starttime="20230801 10:57:01.225" endtime="20230801 10:57:01.227"/>
</kw>
<status status="PASS" starttime="20230801 10:57:01.222" endtime="20230801 10:57:01.227"/>
</branch>
<status status="PASS" starttime="20230801 10:57:01.221" endtime="20230801 10:57:01.227"/>
</if>
<msg timestamp="20230801 10:57:01.227" level="INFO">${text} = Similique harum officia omnis illum eum distinctio.</msg>
<status status="PASS" starttime="20230801 10:57:01.174" endtime="20230801 10:57:01.227"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230801 10:57:01.228" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Lý do"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230801 10:57:01.228" endtime="20230801 10:57:01.228"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:01.229" endtime="20230801 10:57:01.313"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:01.314" level="INFO">Fills the text 'Similique harum officia omnis illum eum distinctio.' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:01.314" endtime="20230801 10:57:01.364"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:01.366" level="INFO">Length is 51</msg>
<msg timestamp="20230801 10:57:01.366" level="INFO">${cnt} = 51</msg>
<status status="PASS" starttime="20230801 10:57:01.365" endtime="20230801 10:57:01.366"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:57:01.369" level="INFO">${STATE["Lý do"]} = Similique harum officia omnis illum eum distinctio.</msg>
<status status="PASS" starttime="20230801 10:57:01.368" endtime="20230801 10:57:01.369"/>
</kw>
<status status="PASS" starttime="20230801 10:57:01.367" endtime="20230801 10:57:01.369"/>
</branch>
<status status="PASS" starttime="20230801 10:57:01.367" endtime="20230801 10:57:01.370"/>
</if>
<status status="PASS" starttime="20230801 10:57:01.173" endtime="20230801 10:57:01.370"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:01.372" endtime="20230801 10:57:01.641"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:01.642" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:57:01.642" endtime="20230801 10:57:01.642"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:57:01.653" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:57:01.642" endtime="20230801 10:57:01.653"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.654" endtime="20230801 10:57:01.654"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:57:01.654" endtime="20230801 10:57:01.655"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:01.653" endtime="20230801 10:57:01.655"/>
</branch>
<status status="PASS" starttime="20230801 10:57:01.653" endtime="20230801 10:57:01.655"/>
</if>
<status status="PASS" starttime="20230801 10:57:01.641" endtime="20230801 10:57:01.655"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:57:01.655" endtime="20230801 10:57:01.686"/>
</kw>
<status status="PASS" starttime="20230801 10:57:01.371" endtime="20230801 10:57:01.686"/>
</kw>
<kw name="Then Required message &quot;Ngày nghỉ&quot; displayed under &quot;Xin vui lòng chọn ngày nghỉ&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230801 10:57:01.691" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ngày nghỉ"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230801 10:57:01.689" endtime="20230801 10:57:01.691"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:01.750" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ngày nghỉ"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230801 10:57:01.696" endtime="20230801 10:57:01.752"/>
</kw>
<status status="PASS" starttime="20230801 10:57:01.692" endtime="20230801 10:57:01.754"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:57:01.884" level="INFO">Text: 'Xin vui lòng chọn ngày nghỉ'</msg>
<status status="PASS" starttime="20230801 10:57:01.763" endtime="20230801 10:57:01.884"/>
</kw>
<status status="PASS" starttime="20230801 10:57:01.756" endtime="20230801 10:57:01.884"/>
</kw>
<status status="PASS" starttime="20230801 10:57:01.688" endtime="20230801 10:57:01.885"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 10:57:02.012" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 10:57:01.886" endtime="20230801 10:57:02.012"/>
</kw>
<status status="PASS" starttime="20230801 10:57:01.886" endtime="20230801 10:57:02.013"/>
</kw>
<status status="PASS" starttime="20230801 10:56:48.605" endtime="20230801 10:57:02.026"/>
</test>
<test id="s1-t5" name="STA-05 Verify that Create Leave Management unsuccessfully because no enter &quot;Lý do&quot;" line="38">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 10:57:02.045" endtime="20230801 10:57:02.046"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 10:57:02.049" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\825c6d49-8a2a-48d0-9871-08576ea94a8f"}</msg>
<msg timestamp="20230801 10:57:03.596" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\825c6d49-8a2a-48d0-9871-08576ea94a8f"}</msg>
<status status="PASS" starttime="20230801 10:57:02.047" endtime="20230801 10:57:03.596"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 10:57:05.125" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 10:57:05.125" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 10:57:03.597" endtime="20230801 10:57:05.126"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 10:57:05.127" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 10:57:05.126" endtime="20230801 10:57:05.127"/>
</kw>
<status status="PASS" starttime="20230801 10:57:02.044" endtime="20230801 10:57:05.128"/>
</kw>
<kw name="Go to create leave date page" library="common">
<kw name="Login to Staff" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;staff@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:05.135" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:05.133" endtime="20230801 10:57:05.135"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:05.138" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:05.137" endtime="20230801 10:57:05.138"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:05.140" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:05.139" endtime="20230801 10:57:05.140"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:05.141" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:05.142" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:05.141" endtime="20230801 10:57:05.142"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:05.143" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:05.142" endtime="20230801 10:57:05.143"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:05.145" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:05.145" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:05.144" endtime="20230801 10:57:05.145"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.147" endtime="20230801 10:57:05.147"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.147" endtime="20230801 10:57:05.149"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:05.146" endtime="20230801 10:57:05.149"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.151" endtime="20230801 10:57:05.152"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.154" endtime="20230801 10:57:05.154"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.155" endtime="20230801 10:57:05.156"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:05.150" endtime="20230801 10:57:05.156"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.157" endtime="20230801 10:57:05.158"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.159" endtime="20230801 10:57:05.159"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:05.156" endtime="20230801 10:57:05.159"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.160" endtime="20230801 10:57:05.161"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.162" endtime="20230801 10:57:05.162"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:05.159" endtime="20230801 10:57:05.162"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.171" endtime="20230801 10:57:05.172"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.173" endtime="20230801 10:57:05.174"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:05.163" endtime="20230801 10:57:05.174"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.175" endtime="20230801 10:57:05.175"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.176" endtime="20230801 10:57:05.177"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:05.174" endtime="20230801 10:57:05.177"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.179" endtime="20230801 10:57:05.179"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.180" endtime="20230801 10:57:05.180"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:05.177" endtime="20230801 10:57:05.181"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.186" endtime="20230801 10:57:05.187"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:05.181" endtime="20230801 10:57:05.188"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:05.189" endtime="20230801 10:57:05.190"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:05.188" endtime="20230801 10:57:05.190"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.191" endtime="20230801 10:57:05.192"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.192" endtime="20230801 10:57:05.192"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:05.190" endtime="20230801 10:57:05.193"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.194" endtime="20230801 10:57:05.194"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:05.193" endtime="20230801 10:57:05.195"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.196" endtime="20230801 10:57:05.196"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:05.195" endtime="20230801 10:57:05.196"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.197" endtime="20230801 10:57:05.202"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:05.196" endtime="20230801 10:57:05.202"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:05.205" endtime="20230801 10:57:05.205"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:05.203" endtime="20230801 10:57:05.206"/>
</branch>
<status status="PASS" starttime="20230801 10:57:05.145" endtime="20230801 10:57:05.206"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:05.207" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:57:05.208" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:57:05.207" endtime="20230801 10:57:05.208"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:05.209" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:57:05.209" endtime="20230801 10:57:05.209"/>
</kw>
<status status="PASS" starttime="20230801 10:57:05.208" endtime="20230801 10:57:05.210"/>
</branch>
<status status="PASS" starttime="20230801 10:57:05.208" endtime="20230801 10:57:05.210"/>
</if>
<msg timestamp="20230801 10:57:05.210" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:57:05.131" endtime="20230801 10:57:05.211"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:57:05.212" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:57:05.211" endtime="20230801 10:57:05.212"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:05.212" endtime="20230801 10:57:06.759"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:06.759" level="INFO">Fills the text 'staff@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:06.759" endtime="20230801 10:57:06.846"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:06.847" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:57:06.847" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:57:06.846" endtime="20230801 10:57:06.847"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:57:06.848" level="INFO">${STATE["Tên đăng nhập"]} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:57:06.848" endtime="20230801 10:57:06.848"/>
</kw>
<status status="PASS" starttime="20230801 10:57:06.847" endtime="20230801 10:57:06.849"/>
</branch>
<status status="PASS" starttime="20230801 10:57:06.847" endtime="20230801 10:57:06.849"/>
</if>
<status status="PASS" starttime="20230801 10:57:05.130" endtime="20230801 10:57:06.849"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Tester@123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:06.853" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:06.853" endtime="20230801 10:57:06.853"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:06.854" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:06.854" endtime="20230801 10:57:06.854"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:06.855" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:06.854" endtime="20230801 10:57:06.855"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:06.856" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:06.856" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:06.855" endtime="20230801 10:57:06.856"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:06.857" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:06.857" endtime="20230801 10:57:06.857"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:06.859" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:06.859" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:06.857" endtime="20230801 10:57:06.859"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.860" endtime="20230801 10:57:06.860"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.860" endtime="20230801 10:57:06.860"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:06.859" endtime="20230801 10:57:06.861"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.861" endtime="20230801 10:57:06.861"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.862" endtime="20230801 10:57:06.862"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.862" endtime="20230801 10:57:06.862"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:06.861" endtime="20230801 10:57:06.862"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.863" endtime="20230801 10:57:06.863"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.864" endtime="20230801 10:57:06.864"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:06.863" endtime="20230801 10:57:06.864"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.864" endtime="20230801 10:57:06.865"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.865" endtime="20230801 10:57:06.865"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:06.864" endtime="20230801 10:57:06.866"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.867" endtime="20230801 10:57:06.869"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.869" endtime="20230801 10:57:06.869"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:06.867" endtime="20230801 10:57:06.870"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.871" endtime="20230801 10:57:06.871"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.872" endtime="20230801 10:57:06.873"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:06.870" endtime="20230801 10:57:06.873"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.873" endtime="20230801 10:57:06.874"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.874" endtime="20230801 10:57:06.874"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:06.873" endtime="20230801 10:57:06.874"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.875" endtime="20230801 10:57:06.875"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:06.874" endtime="20230801 10:57:06.875"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:06.876" endtime="20230801 10:57:06.876"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:06.875" endtime="20230801 10:57:06.876"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.877" endtime="20230801 10:57:06.877"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.878" endtime="20230801 10:57:06.878"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:06.877" endtime="20230801 10:57:06.878"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.878" endtime="20230801 10:57:06.878"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:06.878" endtime="20230801 10:57:06.879"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.879" endtime="20230801 10:57:06.879"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:06.879" endtime="20230801 10:57:06.879"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.880" endtime="20230801 10:57:06.880"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:06.879" endtime="20230801 10:57:06.880"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:06.881" endtime="20230801 10:57:06.881"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:06.880" endtime="20230801 10:57:06.882"/>
</branch>
<status status="PASS" starttime="20230801 10:57:06.859" endtime="20230801 10:57:06.882"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:06.884" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:57:06.884" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:57:06.883" endtime="20230801 10:57:06.884"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:06.887" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:57:06.887" endtime="20230801 10:57:06.889"/>
</kw>
<status status="PASS" starttime="20230801 10:57:06.886" endtime="20230801 10:57:06.889"/>
</branch>
<status status="PASS" starttime="20230801 10:57:06.885" endtime="20230801 10:57:06.889"/>
</if>
<msg timestamp="20230801 10:57:06.890" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:57:06.851" endtime="20230801 10:57:06.890"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:57:06.891" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:57:06.890" endtime="20230801 10:57:06.891"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:06.891" endtime="20230801 10:57:06.991"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:06.992" level="INFO">Fills the text 'Tester@123' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:06.992" endtime="20230801 10:57:07.135"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:07.136" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:57:07.136" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:57:07.135" endtime="20230801 10:57:07.136"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:57:07.139" level="INFO">${STATE["Mật khẩu"]} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:57:07.138" endtime="20230801 10:57:07.139"/>
</kw>
<status status="PASS" starttime="20230801 10:57:07.137" endtime="20230801 10:57:07.139"/>
</branch>
<status status="PASS" starttime="20230801 10:57:07.137" endtime="20230801 10:57:07.140"/>
</if>
<status status="PASS" starttime="20230801 10:57:06.850" endtime="20230801 10:57:07.140"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:07.142" endtime="20230801 10:57:07.412"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:07.413" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:57:07.412" endtime="20230801 10:57:07.413"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:57:07.492" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:57:07.413" endtime="20230801 10:57:07.492"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:07.494" endtime="20230801 10:57:07.494"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:57:07.495" endtime="20230801 10:57:07.495"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:07.493" endtime="20230801 10:57:07.495"/>
</branch>
<status status="PASS" starttime="20230801 10:57:07.493" endtime="20230801 10:57:07.496"/>
</if>
<status status="PASS" starttime="20230801 10:57:07.412" endtime="20230801 10:57:07.496"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:57:07.497" endtime="20230801 10:57:07.549"/>
</kw>
<status status="PASS" starttime="20230801 10:57:07.141" endtime="20230801 10:57:07.549"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:07.552" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:07.551" endtime="20230801 10:57:07.552"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:07.554" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:07.554" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:07.553" endtime="20230801 10:57:07.554"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:07.556" endtime="20230801 10:57:07.556"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:07.555" endtime="20230801 10:57:07.556"/>
</branch>
<status status="PASS" starttime="20230801 10:57:07.555" endtime="20230801 10:57:07.557"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:57:09.363" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 10:57:07.564" endtime="20230801 10:57:09.363"/>
</kw>
<status status="PASS" starttime="20230801 10:57:07.557" endtime="20230801 10:57:09.364"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:09.364" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 10:57:09.364" endtime="20230801 10:57:09.364"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:09.750" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-5.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-5.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 10:57:09.751" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 10:57:09.751" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 10:57:09.368" endtime="20230801 10:57:09.755"/>
</kw>
<status status="FAIL" starttime="20230801 10:57:09.365" endtime="20230801 10:57:09.756"/>
</kw>
<msg timestamp="20230801 10:57:09.757" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 10:57:09.364" endtime="20230801 10:57:09.757"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:09.758" endtime="20230801 10:57:09.759"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:09.758" endtime="20230801 10:57:09.759"/>
</branch>
<status status="PASS" starttime="20230801 10:57:09.757" endtime="20230801 10:57:09.759"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:12.321" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 10:57:09.762" endtime="20230801 10:57:12.321"/>
</kw>
<status status="PASS" starttime="20230801 10:57:09.759" endtime="20230801 10:57:12.322"/>
</kw>
<status status="PASS" starttime="20230801 10:57:07.550" endtime="20230801 10:57:12.323"/>
</kw>
<status status="PASS" starttime="20230801 10:57:05.129" endtime="20230801 10:57:12.323"/>
</kw>
<kw name="When Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:12.326" endtime="20230801 10:57:12.583"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:12.586" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:57:12.585" endtime="20230801 10:57:12.586"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:57:12.692" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:57:12.587" endtime="20230801 10:57:12.692"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:12.694" endtime="20230801 10:57:12.694"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:57:12.694" endtime="20230801 10:57:12.695"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:12.693" endtime="20230801 10:57:12.695"/>
</branch>
<status status="PASS" starttime="20230801 10:57:12.693" endtime="20230801 10:57:12.695"/>
</if>
<status status="PASS" starttime="20230801 10:57:12.583" endtime="20230801 10:57:12.695"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:57:12.696" endtime="20230801 10:57:13.124"/>
</kw>
<status status="PASS" starttime="20230801 10:57:12.324" endtime="20230801 10:57:13.125"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:13.127" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:57:13.126" endtime="20230801 10:57:13.127"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:57:13.147" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:57:13.127" endtime="20230801 10:57:13.147"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:57:13.151" endtime="20230801 10:57:13.152"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:13.149" endtime="20230801 10:57:13.152"/>
</branch>
<status status="PASS" starttime="20230801 10:57:13.147" endtime="20230801 10:57:13.152"/>
</if>
<status status="PASS" starttime="20230801 10:57:13.125" endtime="20230801 10:57:13.153"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 10:57:13.254" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 10:57:13.153" endtime="20230801 10:57:13.254"/>
</kw>
<status status="PASS" starttime="20230801 10:57:05.129" endtime="20230801 10:57:13.255"/>
</kw>
<kw name="And Click select &quot;Loại phép&quot; with &quot;Nghỉ phép có lương&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:13.261" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:13.260" endtime="20230801 10:57:13.261"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:13.263" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:13.262" endtime="20230801 10:57:13.263"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:13.265" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:13.264" endtime="20230801 10:57:13.265"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:13.269" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:13.269" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:13.267" endtime="20230801 10:57:13.269"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:13.272" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:13.270" endtime="20230801 10:57:13.272"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:13.273" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:13.274" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:13.272" endtime="20230801 10:57:13.274"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.275" endtime="20230801 10:57:13.276"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.277" endtime="20230801 10:57:13.277"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:13.274" endtime="20230801 10:57:13.277"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.279" endtime="20230801 10:57:13.279"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.287" endtime="20230801 10:57:13.287"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.287" endtime="20230801 10:57:13.290"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:13.278" endtime="20230801 10:57:13.290"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.292" endtime="20230801 10:57:13.292"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.293" endtime="20230801 10:57:13.293"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:13.291" endtime="20230801 10:57:13.294"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.295" endtime="20230801 10:57:13.295"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.296" endtime="20230801 10:57:13.297"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:13.294" endtime="20230801 10:57:13.297"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.301" endtime="20230801 10:57:13.301"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.302" endtime="20230801 10:57:13.305"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:13.299" endtime="20230801 10:57:13.306"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.307" endtime="20230801 10:57:13.307"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.309" endtime="20230801 10:57:13.309"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:13.306" endtime="20230801 10:57:13.310"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.311" endtime="20230801 10:57:13.312"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.312" endtime="20230801 10:57:13.313"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:13.310" endtime="20230801 10:57:13.313"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.314" endtime="20230801 10:57:13.315"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:13.313" endtime="20230801 10:57:13.315"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:13.371" endtime="20230801 10:57:13.372"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:13.315" endtime="20230801 10:57:13.372"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.373" endtime="20230801 10:57:13.374"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.374" endtime="20230801 10:57:13.375"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:13.372" endtime="20230801 10:57:13.375"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.376" endtime="20230801 10:57:13.376"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:13.375" endtime="20230801 10:57:13.376"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.378" endtime="20230801 10:57:13.378"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:13.377" endtime="20230801 10:57:13.378"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.379" endtime="20230801 10:57:13.379"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:13.378" endtime="20230801 10:57:13.379"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:13.379" endtime="20230801 10:57:13.379"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:13.379" endtime="20230801 10:57:13.380"/>
</branch>
<status status="PASS" starttime="20230801 10:57:13.274" endtime="20230801 10:57:13.380"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:13.386" level="INFO">Length is 18</msg>
<msg timestamp="20230801 10:57:13.386" level="INFO">${cnt} = 18</msg>
<status status="PASS" starttime="20230801 10:57:13.385" endtime="20230801 10:57:13.386"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:13.389" level="INFO">${text} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 10:57:13.387" endtime="20230801 10:57:13.389"/>
</kw>
<status status="PASS" starttime="20230801 10:57:13.387" endtime="20230801 10:57:13.390"/>
</branch>
<status status="PASS" starttime="20230801 10:57:13.386" endtime="20230801 10:57:13.390"/>
</if>
<msg timestamp="20230801 10:57:13.391" level="INFO">${text} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 10:57:13.259" endtime="20230801 10:57:13.391"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 10:57:13.393" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 10:57:13.392" endtime="20230801 10:57:13.393"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:13.466" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 10:57:13.396" endtime="20230801 10:57:13.467"/>
</kw>
<status status="PASS" starttime="20230801 10:57:13.394" endtime="20230801 10:57:13.467"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:13.469" endtime="20230801 10:57:13.905"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 10:57:13.906" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 10:57:13.905" endtime="20230801 10:57:13.906"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:13.907" level="INFO">Fills the text 'Nghỉ phép có lương' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:13.906" endtime="20230801 10:57:13.969"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:13.969" endtime="20230801 10:57:14.381"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:14.384" level="INFO">Length is 18</msg>
<msg timestamp="20230801 10:57:14.384" level="INFO">${cnt} = 18</msg>
<status status="PASS" starttime="20230801 10:57:14.383" endtime="20230801 10:57:14.384"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:57:14.388" level="INFO">${STATE["Loại phép"]} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 10:57:14.387" endtime="20230801 10:57:14.388"/>
</kw>
<status status="PASS" starttime="20230801 10:57:14.385" endtime="20230801 10:57:14.388"/>
</branch>
<status status="PASS" starttime="20230801 10:57:14.385" endtime="20230801 10:57:14.389"/>
</if>
<status status="PASS" starttime="20230801 10:57:13.258" endtime="20230801 10:57:14.389"/>
</kw>
<kw name="And Click select &quot;Thời gian&quot; with &quot;Cả ngày&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:14.396" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:14.396" endtime="20230801 10:57:14.396"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:14.397" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:14.397" endtime="20230801 10:57:14.397"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:14.400" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:14.399" endtime="20230801 10:57:14.400"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:14.403" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:14.403" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:14.401" endtime="20230801 10:57:14.403"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:14.405" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:14.404" endtime="20230801 10:57:14.405"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:14.407" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:14.407" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:14.406" endtime="20230801 10:57:14.407"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.409" endtime="20230801 10:57:14.409"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.409" endtime="20230801 10:57:14.410"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:14.408" endtime="20230801 10:57:14.410"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.412" endtime="20230801 10:57:14.413"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.413" endtime="20230801 10:57:14.414"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.414" endtime="20230801 10:57:14.415"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:14.410" endtime="20230801 10:57:14.415"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.417" endtime="20230801 10:57:14.418"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.419" endtime="20230801 10:57:14.419"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:14.415" endtime="20230801 10:57:14.420"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.421" endtime="20230801 10:57:14.422"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.423" endtime="20230801 10:57:14.424"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:14.420" endtime="20230801 10:57:14.424"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.428" endtime="20230801 10:57:14.428"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.430" endtime="20230801 10:57:14.430"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:14.426" endtime="20230801 10:57:14.430"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.432" endtime="20230801 10:57:14.432"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.435" endtime="20230801 10:57:14.436"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:14.431" endtime="20230801 10:57:14.436"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.439" endtime="20230801 10:57:14.439"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.440" endtime="20230801 10:57:14.440"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:14.437" endtime="20230801 10:57:14.441"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.442" endtime="20230801 10:57:14.442"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:14.441" endtime="20230801 10:57:14.443"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:14.444" endtime="20230801 10:57:14.444"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:14.443" endtime="20230801 10:57:14.444"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.445" endtime="20230801 10:57:14.446"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.446" endtime="20230801 10:57:14.447"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:14.445" endtime="20230801 10:57:14.447"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.448" endtime="20230801 10:57:14.448"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:14.447" endtime="20230801 10:57:14.448"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.451" endtime="20230801 10:57:14.452"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:14.450" endtime="20230801 10:57:14.452"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.453" endtime="20230801 10:57:14.454"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:14.452" endtime="20230801 10:57:14.454"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:14.455" endtime="20230801 10:57:14.456"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:14.455" endtime="20230801 10:57:14.456"/>
</branch>
<status status="PASS" starttime="20230801 10:57:14.407" endtime="20230801 10:57:14.456"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:14.457" level="INFO">Length is 7</msg>
<msg timestamp="20230801 10:57:14.459" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20230801 10:57:14.457" endtime="20230801 10:57:14.459"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:14.461" level="INFO">${text} = Cả ngày</msg>
<status status="PASS" starttime="20230801 10:57:14.460" endtime="20230801 10:57:14.461"/>
</kw>
<status status="PASS" starttime="20230801 10:57:14.459" endtime="20230801 10:57:14.461"/>
</branch>
<status status="PASS" starttime="20230801 10:57:14.459" endtime="20230801 10:57:14.462"/>
</if>
<msg timestamp="20230801 10:57:14.462" level="INFO">${text} = Cả ngày</msg>
<status status="PASS" starttime="20230801 10:57:14.394" endtime="20230801 10:57:14.462"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 10:57:14.464" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 10:57:14.463" endtime="20230801 10:57:14.464"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:14.489" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 10:57:14.469" endtime="20230801 10:57:14.489"/>
</kw>
<status status="PASS" starttime="20230801 10:57:14.464" endtime="20230801 10:57:14.490"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:14.491" endtime="20230801 10:57:14.715"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 10:57:14.716" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 10:57:14.715" endtime="20230801 10:57:14.717"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:14.718" level="INFO">Fills the text 'Cả ngày' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:14.717" endtime="20230801 10:57:14.772"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:14.772" endtime="20230801 10:57:15.131"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:15.132" level="INFO">Length is 7</msg>
<msg timestamp="20230801 10:57:15.133" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20230801 10:57:15.131" endtime="20230801 10:57:15.133"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:57:15.136" level="INFO">${STATE["Thời gian"]} = Cả ngày</msg>
<status status="PASS" starttime="20230801 10:57:15.134" endtime="20230801 10:57:15.136"/>
</kw>
<status status="PASS" starttime="20230801 10:57:15.134" endtime="20230801 10:57:15.136"/>
</branch>
<status status="PASS" starttime="20230801 10:57:15.133" endtime="20230801 10:57:15.136"/>
</if>
<status status="PASS" starttime="20230801 10:57:14.393" endtime="20230801 10:57:15.137"/>
</kw>
<kw name="And Enter leave date in &quot;Ngày bắt đầu&quot; with &quot;11-07-2023&quot;" library="common" sourcename="Enter leave date in &quot;${field}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>date</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:15.140" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:15.139" endtime="20230801 10:57:15.140"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:15.141" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:15.140" endtime="20230801 10:57:15.141"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:15.142" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:15.141" endtime="20230801 10:57:15.142"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:15.142" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:15.142" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:15.142" endtime="20230801 10:57:15.143"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:15.144" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:15.143" endtime="20230801 10:57:15.144"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:15.145" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:15.145" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:15.144" endtime="20230801 10:57:15.145"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.146" endtime="20230801 10:57:15.147"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.147" endtime="20230801 10:57:15.147"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:15.146" endtime="20230801 10:57:15.147"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.148" endtime="20230801 10:57:15.148"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.148" endtime="20230801 10:57:15.149"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.149" endtime="20230801 10:57:15.149"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:15.148" endtime="20230801 10:57:15.149"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.152" endtime="20230801 10:57:15.153"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.153" endtime="20230801 10:57:15.154"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:15.149" endtime="20230801 10:57:15.154"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.156" endtime="20230801 10:57:15.156"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.156" endtime="20230801 10:57:15.157"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:15.155" endtime="20230801 10:57:15.157"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.159" endtime="20230801 10:57:15.159"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.160" endtime="20230801 10:57:15.160"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:15.157" endtime="20230801 10:57:15.160"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.162" endtime="20230801 10:57:15.162"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.162" endtime="20230801 10:57:15.163"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:15.161" endtime="20230801 10:57:15.163"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.165" endtime="20230801 10:57:15.171"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.172" endtime="20230801 10:57:15.173"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:15.163" endtime="20230801 10:57:15.173"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.175" endtime="20230801 10:57:15.176"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:15.173" endtime="20230801 10:57:15.176"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:15.178" endtime="20230801 10:57:15.178"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:15.176" endtime="20230801 10:57:15.178"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.179" endtime="20230801 10:57:15.179"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.179" endtime="20230801 10:57:15.179"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:15.178" endtime="20230801 10:57:15.179"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.180" endtime="20230801 10:57:15.180"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:15.180" endtime="20230801 10:57:15.180"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.181" endtime="20230801 10:57:15.181"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:15.181" endtime="20230801 10:57:15.181"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.184" endtime="20230801 10:57:15.184"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:15.181" endtime="20230801 10:57:15.185"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:15.186" endtime="20230801 10:57:15.186"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:15.185" endtime="20230801 10:57:15.186"/>
</branch>
<status status="PASS" starttime="20230801 10:57:15.145" endtime="20230801 10:57:15.186"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:15.187" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:57:15.187" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:57:15.187" endtime="20230801 10:57:15.187"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:15.189" level="INFO">${text} = 11-07-2023</msg>
<status status="PASS" starttime="20230801 10:57:15.188" endtime="20230801 10:57:15.189"/>
</kw>
<status status="PASS" starttime="20230801 10:57:15.188" endtime="20230801 10:57:15.189"/>
</branch>
<status status="PASS" starttime="20230801 10:57:15.188" endtime="20230801 10:57:15.190"/>
</if>
<msg timestamp="20230801 10:57:15.190" level="INFO">${text} = 11-07-2023</msg>
<status status="PASS" starttime="20230801 10:57:15.139" endtime="20230801 10:57:15.190"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//input[@placeholder="${field}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:15.191" level="INFO">${element} = xpath=//input[@placeholder="Ngày bắt đầu"]</msg>
<status status="PASS" starttime="20230801 10:57:15.190" endtime="20230801 10:57:15.191"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:15.191" endtime="20230801 10:57:15.710"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:15.710" endtime="20230801 10:57:15.808"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:15.810" level="INFO">Fills the text '11-07-2023' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:15.809" endtime="20230801 10:57:16.043"/>
</kw>
<status status="PASS" starttime="20230801 10:57:15.137" endtime="20230801 10:57:16.043"/>
</kw>
<kw name="And Enter leave date in &quot;Ngày kết thúc&quot; with &quot;14-07-2023&quot;" library="common" sourcename="Enter leave date in &quot;${field}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>date</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:16.046" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:16.045" endtime="20230801 10:57:16.046"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:16.046" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:16.046" endtime="20230801 10:57:16.046"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:16.047" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:16.046" endtime="20230801 10:57:16.047"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:16.047" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:16.047" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:16.047" endtime="20230801 10:57:16.047"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:16.049" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:16.047" endtime="20230801 10:57:16.049"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:16.051" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:16.051" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:16.050" endtime="20230801 10:57:16.051"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.052" endtime="20230801 10:57:16.052"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.053" endtime="20230801 10:57:16.053"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.051" endtime="20230801 10:57:16.053"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.054" endtime="20230801 10:57:16.054"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.055" endtime="20230801 10:57:16.055"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.056" endtime="20230801 10:57:16.056"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.053" endtime="20230801 10:57:16.056"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.057" endtime="20230801 10:57:16.057"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.057" endtime="20230801 10:57:16.057"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.056" endtime="20230801 10:57:16.057"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.058" endtime="20230801 10:57:16.058"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.058" endtime="20230801 10:57:16.059"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.058" endtime="20230801 10:57:16.059"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.060" endtime="20230801 10:57:16.060"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.061" endtime="20230801 10:57:16.061"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.059" endtime="20230801 10:57:16.061"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.062" endtime="20230801 10:57:16.063"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.063" endtime="20230801 10:57:16.064"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.062" endtime="20230801 10:57:16.064"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.067" endtime="20230801 10:57:16.069"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.071" endtime="20230801 10:57:16.071"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.064" endtime="20230801 10:57:16.072"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.074" endtime="20230801 10:57:16.074"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.072" endtime="20230801 10:57:16.075"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:16.077" endtime="20230801 10:57:16.077"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.076" endtime="20230801 10:57:16.077"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.078" endtime="20230801 10:57:16.079"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.080" endtime="20230801 10:57:16.080"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.078" endtime="20230801 10:57:16.081"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.082" endtime="20230801 10:57:16.083"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.081" endtime="20230801 10:57:16.083"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.085" endtime="20230801 10:57:16.085"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.084" endtime="20230801 10:57:16.085"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.086" endtime="20230801 10:57:16.087"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.085" endtime="20230801 10:57:16.087"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.088" endtime="20230801 10:57:16.088"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.087" endtime="20230801 10:57:16.088"/>
</branch>
<status status="PASS" starttime="20230801 10:57:16.051" endtime="20230801 10:57:16.089"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:16.090" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:57:16.090" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:57:16.089" endtime="20230801 10:57:16.090"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:16.094" level="INFO">${text} = 14-07-2023</msg>
<status status="PASS" starttime="20230801 10:57:16.092" endtime="20230801 10:57:16.094"/>
</kw>
<status status="PASS" starttime="20230801 10:57:16.091" endtime="20230801 10:57:16.094"/>
</branch>
<status status="PASS" starttime="20230801 10:57:16.091" endtime="20230801 10:57:16.094"/>
</if>
<msg timestamp="20230801 10:57:16.095" level="INFO">${text} = 14-07-2023</msg>
<status status="PASS" starttime="20230801 10:57:16.044" endtime="20230801 10:57:16.095"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//input[@placeholder="${field}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:16.097" level="INFO">${element} = xpath=//input[@placeholder="Ngày kết thúc"]</msg>
<status status="PASS" starttime="20230801 10:57:16.096" endtime="20230801 10:57:16.097"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:16.097" endtime="20230801 10:57:16.387"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:16.387" endtime="20230801 10:57:16.569"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:16.569" level="INFO">Fills the text '14-07-2023' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:16.569" endtime="20230801 10:57:16.882"/>
</kw>
<status status="PASS" starttime="20230801 10:57:16.044" endtime="20230801 10:57:16.882"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Lý do&quot; with &quot;${EMPTY}&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:16.892" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:16.892" endtime="20230801 10:57:16.892"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:16.893" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:16.893" endtime="20230801 10:57:16.893"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:16.894" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:16.894" endtime="20230801 10:57:16.894"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:16.895" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:16.895" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:16.895" endtime="20230801 10:57:16.895"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:16.897" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:16.896" endtime="20230801 10:57:16.897"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:16.898" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:16.898" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:16.898" endtime="20230801 10:57:16.899"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.902" endtime="20230801 10:57:16.902"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.903" endtime="20230801 10:57:16.904"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.900" endtime="20230801 10:57:16.904"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.905" endtime="20230801 10:57:16.905"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.906" endtime="20230801 10:57:16.906"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.907" endtime="20230801 10:57:16.907"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.904" endtime="20230801 10:57:16.907"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.907" endtime="20230801 10:57:16.909"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.909" endtime="20230801 10:57:16.910"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.907" endtime="20230801 10:57:16.910"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.911" endtime="20230801 10:57:16.911"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.912" endtime="20230801 10:57:16.912"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.910" endtime="20230801 10:57:16.913"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.914" endtime="20230801 10:57:16.915"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.916" endtime="20230801 10:57:16.917"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.913" endtime="20230801 10:57:16.917"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.923" endtime="20230801 10:57:16.924"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.926" endtime="20230801 10:57:16.928"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.918" endtime="20230801 10:57:16.928"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.930" endtime="20230801 10:57:16.931"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.931" endtime="20230801 10:57:16.931"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.929" endtime="20230801 10:57:16.932"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.939" endtime="20230801 10:57:16.939"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.934" endtime="20230801 10:57:16.940"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:16.941" endtime="20230801 10:57:16.941"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.940" endtime="20230801 10:57:16.942"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.943" endtime="20230801 10:57:16.943"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.943" endtime="20230801 10:57:16.944"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.942" endtime="20230801 10:57:16.944"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.945" endtime="20230801 10:57:16.946"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.944" endtime="20230801 10:57:16.946"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.946" endtime="20230801 10:57:16.946"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.946" endtime="20230801 10:57:16.947"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.947" endtime="20230801 10:57:16.947"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.947" endtime="20230801 10:57:16.947"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.947" endtime="20230801 10:57:16.947"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.947" endtime="20230801 10:57:16.947"/>
</branch>
<status status="PASS" starttime="20230801 10:57:16.900" endtime="20230801 10:57:16.950"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:16.957" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:16.957" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:16.952" endtime="20230801 10:57:16.957"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:16.959" endtime="20230801 10:57:16.960"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:16.959" endtime="20230801 10:57:16.960"/>
</branch>
<status status="PASS" starttime="20230801 10:57:16.958" endtime="20230801 10:57:16.961"/>
</if>
<msg timestamp="20230801 10:57:16.962" level="INFO">${text} = </msg>
<status status="PASS" starttime="20230801 10:57:16.890" endtime="20230801 10:57:16.962"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230801 10:57:16.963" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Lý do"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230801 10:57:16.962" endtime="20230801 10:57:16.963"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:16.963" endtime="20230801 10:57:17.426"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:17.427" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:17.427" endtime="20230801 10:57:17.568"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:17.571" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:17.571" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:17.570" endtime="20230801 10:57:17.571"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230801 10:57:17.573" endtime="20230801 10:57:17.573"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:17.572" endtime="20230801 10:57:17.574"/>
</branch>
<status status="PASS" starttime="20230801 10:57:17.571" endtime="20230801 10:57:17.574"/>
</if>
<status status="PASS" starttime="20230801 10:57:16.887" endtime="20230801 10:57:17.574"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:17.578" endtime="20230801 10:57:18.151"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:18.154" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:57:18.153" endtime="20230801 10:57:18.154"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:57:18.193" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:57:18.155" endtime="20230801 10:57:18.193"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:18.195" endtime="20230801 10:57:18.196"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:57:18.197" endtime="20230801 10:57:18.197"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:18.194" endtime="20230801 10:57:18.200"/>
</branch>
<status status="PASS" starttime="20230801 10:57:18.194" endtime="20230801 10:57:18.200"/>
</if>
<status status="PASS" starttime="20230801 10:57:18.151" endtime="20230801 10:57:18.201"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:57:18.202" endtime="20230801 10:57:18.270"/>
</kw>
<status status="PASS" starttime="20230801 10:57:17.578" endtime="20230801 10:57:18.270"/>
</kw>
<kw name="Then Required message &quot;Lý do&quot; displayed under &quot;Xin vui lòng nhập lý do&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230801 10:57:18.275" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Lý do"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230801 10:57:18.274" endtime="20230801 10:57:18.275"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:18.332" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Lý do"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230801 10:57:18.279" endtime="20230801 10:57:18.335"/>
</kw>
<status status="PASS" starttime="20230801 10:57:18.275" endtime="20230801 10:57:18.336"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:57:18.496" level="INFO">Text: 'Xin vui lòng nhập lý do'</msg>
<status status="PASS" starttime="20230801 10:57:18.343" endtime="20230801 10:57:18.496"/>
</kw>
<status status="PASS" starttime="20230801 10:57:18.336" endtime="20230801 10:57:18.497"/>
</kw>
<status status="PASS" starttime="20230801 10:57:18.272" endtime="20230801 10:57:18.497"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 10:57:18.931" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 10:57:18.524" endtime="20230801 10:57:18.931"/>
</kw>
<status status="PASS" starttime="20230801 10:57:18.523" endtime="20230801 10:57:18.931"/>
</kw>
<status status="PASS" starttime="20230801 10:57:02.039" endtime="20230801 10:57:18.933"/>
</test>
<test id="s1-t6" name="STA-06 Verify that Create Leave Management unsuccessfully because empty all field" line="48">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 10:57:18.951" endtime="20230801 10:57:18.952"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 10:57:18.955" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\ae58bdc6-e745-43c5-b086-ddf334ad53eb"}</msg>
<msg timestamp="20230801 10:57:20.211" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\ae58bdc6-e745-43c5-b086-ddf334ad53eb"}</msg>
<status status="PASS" starttime="20230801 10:57:18.953" endtime="20230801 10:57:20.212"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 10:57:21.229" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 10:57:21.229" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 10:57:20.212" endtime="20230801 10:57:21.229"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 10:57:21.232" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 10:57:21.230" endtime="20230801 10:57:21.232"/>
</kw>
<status status="PASS" starttime="20230801 10:57:18.950" endtime="20230801 10:57:21.233"/>
</kw>
<kw name="Go to create leave date page" library="common">
<kw name="Login to Staff" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;staff@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:21.240" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:21.238" endtime="20230801 10:57:21.240"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:21.241" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:21.241" endtime="20230801 10:57:21.241"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:21.243" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:21.242" endtime="20230801 10:57:21.243"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:21.244" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:21.244" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:21.243" endtime="20230801 10:57:21.245"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:21.246" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:21.245" endtime="20230801 10:57:21.246"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:21.248" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:21.248" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:21.247" endtime="20230801 10:57:21.248"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.250" endtime="20230801 10:57:21.251"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.251" endtime="20230801 10:57:21.252"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:21.249" endtime="20230801 10:57:21.252"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.253" endtime="20230801 10:57:21.254"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.254" endtime="20230801 10:57:21.255"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.256" endtime="20230801 10:57:21.256"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:21.252" endtime="20230801 10:57:21.257"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.258" endtime="20230801 10:57:21.260"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.261" endtime="20230801 10:57:21.262"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:21.257" endtime="20230801 10:57:21.263"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.265" endtime="20230801 10:57:21.265"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.266" endtime="20230801 10:57:21.268"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:21.264" endtime="20230801 10:57:21.269"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.270" endtime="20230801 10:57:21.272"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.273" endtime="20230801 10:57:21.273"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:21.269" endtime="20230801 10:57:21.274"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.275" endtime="20230801 10:57:21.275"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.276" endtime="20230801 10:57:21.276"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:21.274" endtime="20230801 10:57:21.276"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.277" endtime="20230801 10:57:21.277"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.279" endtime="20230801 10:57:21.280"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:21.277" endtime="20230801 10:57:21.280"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.281" endtime="20230801 10:57:21.281"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:21.281" endtime="20230801 10:57:21.281"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:21.284" endtime="20230801 10:57:21.284"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:21.283" endtime="20230801 10:57:21.285"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.286" endtime="20230801 10:57:21.286"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.287" endtime="20230801 10:57:21.287"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:21.285" endtime="20230801 10:57:21.287"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.288" endtime="20230801 10:57:21.288"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:21.287" endtime="20230801 10:57:21.289"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.289" endtime="20230801 10:57:21.289"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:21.289" endtime="20230801 10:57:21.290"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.291" endtime="20230801 10:57:21.291"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:21.290" endtime="20230801 10:57:21.292"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:21.293" endtime="20230801 10:57:21.293"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:21.292" endtime="20230801 10:57:21.293"/>
</branch>
<status status="PASS" starttime="20230801 10:57:21.248" endtime="20230801 10:57:21.293"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:21.295" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:57:21.295" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:57:21.294" endtime="20230801 10:57:21.295"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:21.296" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:57:21.296" endtime="20230801 10:57:21.296"/>
</kw>
<status status="PASS" starttime="20230801 10:57:21.295" endtime="20230801 10:57:21.297"/>
</branch>
<status status="PASS" starttime="20230801 10:57:21.295" endtime="20230801 10:57:21.297"/>
</if>
<msg timestamp="20230801 10:57:21.297" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:57:21.237" endtime="20230801 10:57:21.297"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:57:21.300" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:57:21.297" endtime="20230801 10:57:21.300"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:21.301" endtime="20230801 10:57:23.442"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:23.443" level="INFO">Fills the text 'staff@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:23.442" endtime="20230801 10:57:23.594"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:23.595" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:57:23.596" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:57:23.594" endtime="20230801 10:57:23.596"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:57:23.600" level="INFO">${STATE["Tên đăng nhập"]} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:57:23.598" endtime="20230801 10:57:23.600"/>
</kw>
<status status="PASS" starttime="20230801 10:57:23.596" endtime="20230801 10:57:23.600"/>
</branch>
<status status="PASS" starttime="20230801 10:57:23.596" endtime="20230801 10:57:23.601"/>
</if>
<status status="PASS" starttime="20230801 10:57:21.236" endtime="20230801 10:57:23.601"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Tester@123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:23.605" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:23.605" endtime="20230801 10:57:23.606"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:23.607" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:23.606" endtime="20230801 10:57:23.607"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:23.610" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:23.607" endtime="20230801 10:57:23.610"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:23.611" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:23.612" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:23.611" endtime="20230801 10:57:23.612"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:23.614" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:23.613" endtime="20230801 10:57:23.614"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:23.616" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:23.617" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:23.615" endtime="20230801 10:57:23.617"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.620" endtime="20230801 10:57:23.621"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.621" endtime="20230801 10:57:23.622"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:23.618" endtime="20230801 10:57:23.622"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.623" endtime="20230801 10:57:23.624"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.624" endtime="20230801 10:57:23.625"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.625" endtime="20230801 10:57:23.625"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:23.622" endtime="20230801 10:57:23.626"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.627" endtime="20230801 10:57:23.627"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.627" endtime="20230801 10:57:23.628"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:23.626" endtime="20230801 10:57:23.628"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.628" endtime="20230801 10:57:23.635"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.637" endtime="20230801 10:57:23.637"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:23.628" endtime="20230801 10:57:23.638"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.638" endtime="20230801 10:57:23.639"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.639" endtime="20230801 10:57:23.640"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:23.638" endtime="20230801 10:57:23.640"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.641" endtime="20230801 10:57:23.641"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.642" endtime="20230801 10:57:23.642"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:23.640" endtime="20230801 10:57:23.642"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.644" endtime="20230801 10:57:23.644"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.645" endtime="20230801 10:57:23.645"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:23.643" endtime="20230801 10:57:23.645"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.646" endtime="20230801 10:57:23.647"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:23.645" endtime="20230801 10:57:23.647"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:23.650" endtime="20230801 10:57:23.650"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:23.647" endtime="20230801 10:57:23.650"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.652" endtime="20230801 10:57:23.652"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.653" endtime="20230801 10:57:23.653"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:23.651" endtime="20230801 10:57:23.653"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.655" endtime="20230801 10:57:23.655"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:23.654" endtime="20230801 10:57:23.655"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.656" endtime="20230801 10:57:23.656"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:23.655" endtime="20230801 10:57:23.657"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.658" endtime="20230801 10:57:23.658"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:23.657" endtime="20230801 10:57:23.658"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:23.659" endtime="20230801 10:57:23.659"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:23.658" endtime="20230801 10:57:23.659"/>
</branch>
<status status="PASS" starttime="20230801 10:57:23.618" endtime="20230801 10:57:23.659"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:23.660" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:57:23.661" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:57:23.660" endtime="20230801 10:57:23.661"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:23.664" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:57:23.662" endtime="20230801 10:57:23.664"/>
</kw>
<status status="PASS" starttime="20230801 10:57:23.661" endtime="20230801 10:57:23.664"/>
</branch>
<status status="PASS" starttime="20230801 10:57:23.661" endtime="20230801 10:57:23.666"/>
</if>
<msg timestamp="20230801 10:57:23.667" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:57:23.603" endtime="20230801 10:57:23.667"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:57:23.670" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:57:23.667" endtime="20230801 10:57:23.670"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:23.671" endtime="20230801 10:57:23.782"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:23.784" level="INFO">Fills the text 'Tester@123' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:23.783" endtime="20230801 10:57:23.871"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:23.873" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:57:23.873" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:57:23.872" endtime="20230801 10:57:23.873"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:57:23.876" level="INFO">${STATE["Mật khẩu"]} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:57:23.875" endtime="20230801 10:57:23.876"/>
</kw>
<status status="PASS" starttime="20230801 10:57:23.874" endtime="20230801 10:57:23.877"/>
</branch>
<status status="PASS" starttime="20230801 10:57:23.873" endtime="20230801 10:57:23.877"/>
</if>
<status status="PASS" starttime="20230801 10:57:23.602" endtime="20230801 10:57:23.877"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:23.878" endtime="20230801 10:57:24.070"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:24.071" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:57:24.071" endtime="20230801 10:57:24.072"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:57:24.079" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:57:24.072" endtime="20230801 10:57:24.079"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:24.080" endtime="20230801 10:57:24.081"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:57:24.081" endtime="20230801 10:57:24.082"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:24.080" endtime="20230801 10:57:24.082"/>
</branch>
<status status="PASS" starttime="20230801 10:57:24.080" endtime="20230801 10:57:24.083"/>
</if>
<status status="PASS" starttime="20230801 10:57:24.070" endtime="20230801 10:57:24.083"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:57:24.084" endtime="20230801 10:57:24.133"/>
</kw>
<status status="PASS" starttime="20230801 10:57:23.877" endtime="20230801 10:57:24.136"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:24.139" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:24.138" endtime="20230801 10:57:24.139"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:24.140" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:24.140" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:24.139" endtime="20230801 10:57:24.140"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:24.141" endtime="20230801 10:57:24.141"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:24.140" endtime="20230801 10:57:24.141"/>
</branch>
<status status="PASS" starttime="20230801 10:57:24.140" endtime="20230801 10:57:24.141"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:57:25.640" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 10:57:24.144" endtime="20230801 10:57:25.641"/>
</kw>
<status status="PASS" starttime="20230801 10:57:24.141" endtime="20230801 10:57:25.641"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:25.642" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 10:57:25.642" endtime="20230801 10:57:25.642"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:26.022" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-6.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-6.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 10:57:26.023" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 10:57:26.023" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 10:57:25.645" endtime="20230801 10:57:26.026"/>
</kw>
<status status="FAIL" starttime="20230801 10:57:25.643" endtime="20230801 10:57:26.027"/>
</kw>
<msg timestamp="20230801 10:57:26.027" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 10:57:25.643" endtime="20230801 10:57:26.027"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:26.029" endtime="20230801 10:57:26.029"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:26.028" endtime="20230801 10:57:26.030"/>
</branch>
<status status="PASS" starttime="20230801 10:57:26.028" endtime="20230801 10:57:26.030"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:28.620" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 10:57:26.034" endtime="20230801 10:57:28.622"/>
</kw>
<status status="PASS" starttime="20230801 10:57:26.030" endtime="20230801 10:57:28.624"/>
</kw>
<status status="PASS" starttime="20230801 10:57:24.137" endtime="20230801 10:57:28.625"/>
</kw>
<status status="PASS" starttime="20230801 10:57:21.235" endtime="20230801 10:57:28.625"/>
</kw>
<kw name="When Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:28.627" endtime="20230801 10:57:28.895"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:28.899" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:57:28.897" endtime="20230801 10:57:28.899"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:57:29.179" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:57:28.899" endtime="20230801 10:57:29.179"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:29.180" endtime="20230801 10:57:29.180"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:57:29.180" endtime="20230801 10:57:29.180"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:29.180" endtime="20230801 10:57:29.180"/>
</branch>
<status status="PASS" starttime="20230801 10:57:29.179" endtime="20230801 10:57:29.182"/>
</if>
<status status="PASS" starttime="20230801 10:57:28.896" endtime="20230801 10:57:29.184"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:57:29.186" endtime="20230801 10:57:29.247"/>
</kw>
<status status="PASS" starttime="20230801 10:57:28.626" endtime="20230801 10:57:29.248"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:29.253" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:57:29.250" endtime="20230801 10:57:29.254"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:57:29.263" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:57:29.254" endtime="20230801 10:57:29.263"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:57:29.266" endtime="20230801 10:57:29.266"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:29.264" endtime="20230801 10:57:29.266"/>
</branch>
<status status="PASS" starttime="20230801 10:57:29.264" endtime="20230801 10:57:29.267"/>
</if>
<status status="PASS" starttime="20230801 10:57:29.248" endtime="20230801 10:57:29.268"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 10:57:29.371" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 10:57:29.269" endtime="20230801 10:57:29.371"/>
</kw>
<status status="PASS" starttime="20230801 10:57:21.234" endtime="20230801 10:57:29.371"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:29.372" endtime="20230801 10:57:29.721"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:29.722" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:57:29.721" endtime="20230801 10:57:29.722"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:57:29.736" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:57:29.722" endtime="20230801 10:57:29.736"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:29.737" endtime="20230801 10:57:29.737"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:57:29.739" endtime="20230801 10:57:29.739"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:29.736" endtime="20230801 10:57:29.739"/>
</branch>
<status status="PASS" starttime="20230801 10:57:29.736" endtime="20230801 10:57:29.739"/>
</if>
<status status="PASS" starttime="20230801 10:57:29.721" endtime="20230801 10:57:29.740"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:57:29.740" endtime="20230801 10:57:29.847"/>
</kw>
<status status="PASS" starttime="20230801 10:57:29.372" endtime="20230801 10:57:29.847"/>
</kw>
<kw name="Then Required message &quot;Loại phép&quot; displayed under &quot;Xin vui lòng chọn loại phép&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230801 10:57:29.853" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230801 10:57:29.852" endtime="20230801 10:57:29.853"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:29.902" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230801 10:57:29.856" endtime="20230801 10:57:29.902"/>
</kw>
<status status="PASS" starttime="20230801 10:57:29.854" endtime="20230801 10:57:29.902"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:57:29.946" level="INFO">Text: 'Xin vui lòng chọn loại phép'</msg>
<status status="PASS" starttime="20230801 10:57:29.905" endtime="20230801 10:57:29.946"/>
</kw>
<status status="PASS" starttime="20230801 10:57:29.903" endtime="20230801 10:57:29.946"/>
</kw>
<status status="PASS" starttime="20230801 10:57:29.851" endtime="20230801 10:57:29.946"/>
</kw>
<kw name="And Required message &quot;Thời gian&quot; displayed under &quot;Xin vui lòng chọn thời gian&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230801 10:57:29.949" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230801 10:57:29.948" endtime="20230801 10:57:29.949"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:29.969" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230801 10:57:29.951" endtime="20230801 10:57:29.970"/>
</kw>
<status status="PASS" starttime="20230801 10:57:29.950" endtime="20230801 10:57:29.973"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:57:30.031" level="INFO">Text: 'Xin vui lòng chọn thời gian'</msg>
<status status="PASS" starttime="20230801 10:57:29.977" endtime="20230801 10:57:30.031"/>
</kw>
<status status="PASS" starttime="20230801 10:57:29.974" endtime="20230801 10:57:30.031"/>
</kw>
<status status="PASS" starttime="20230801 10:57:29.947" endtime="20230801 10:57:30.032"/>
</kw>
<kw name="And Required message &quot;Ngày nghỉ&quot; displayed under &quot;Xin vui lòng chọn ngày nghỉ&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230801 10:57:30.034" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ngày nghỉ"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230801 10:57:30.034" endtime="20230801 10:57:30.035"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:30.100" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ngày nghỉ"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230801 10:57:30.037" endtime="20230801 10:57:30.100"/>
</kw>
<status status="PASS" starttime="20230801 10:57:30.035" endtime="20230801 10:57:30.101"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:57:30.156" level="INFO">Text: 'Xin vui lòng chọn ngày nghỉ'</msg>
<status status="PASS" starttime="20230801 10:57:30.105" endtime="20230801 10:57:30.157"/>
</kw>
<status status="PASS" starttime="20230801 10:57:30.101" endtime="20230801 10:57:30.157"/>
</kw>
<status status="PASS" starttime="20230801 10:57:30.033" endtime="20230801 10:57:30.157"/>
</kw>
<kw name="And Required message &quot;Lý do&quot; displayed under &quot;Xin vui lòng nhập lý do&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20230801 10:57:30.162" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Lý do"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230801 10:57:30.160" endtime="20230801 10:57:30.162"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:30.177" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Lý do"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")] at state visible</msg>
<status status="PASS" starttime="20230801 10:57:30.166" endtime="20230801 10:57:30.177"/>
</kw>
<status status="PASS" starttime="20230801 10:57:30.162" endtime="20230801 10:57:30.177"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:57:30.213" level="INFO">Text: 'Xin vui lòng nhập lý do'</msg>
<status status="PASS" starttime="20230801 10:57:30.182" endtime="20230801 10:57:30.213"/>
</kw>
<status status="PASS" starttime="20230801 10:57:30.178" endtime="20230801 10:57:30.214"/>
</kw>
<status status="PASS" starttime="20230801 10:57:30.159" endtime="20230801 10:57:30.214"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 10:57:30.362" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 10:57:30.216" endtime="20230801 10:57:30.362"/>
</kw>
<status status="PASS" starttime="20230801 10:57:30.216" endtime="20230801 10:57:30.362"/>
</kw>
<status status="PASS" starttime="20230801 10:57:18.942" endtime="20230801 10:57:30.363"/>
</test>
<test id="s1-t7" name="STA-07 Verify that Create leave management successfully with &quot;Làm remote&quot; &amp; &quot;Lưu lại&quot; button" line="57">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 10:57:30.381" endtime="20230801 10:57:30.382"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 10:57:30.383" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\357aa2ba-0bd8-4960-b18c-80429a4679f8"}</msg>
<msg timestamp="20230801 10:57:31.439" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\357aa2ba-0bd8-4960-b18c-80429a4679f8"}</msg>
<status status="PASS" starttime="20230801 10:57:30.382" endtime="20230801 10:57:31.439"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 10:57:32.277" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 10:57:32.277" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 10:57:31.439" endtime="20230801 10:57:32.277"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 10:57:32.279" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 10:57:32.278" endtime="20230801 10:57:32.279"/>
</kw>
<status status="PASS" starttime="20230801 10:57:30.379" endtime="20230801 10:57:32.279"/>
</kw>
<kw name="Go to create leave date page" library="common">
<kw name="Login to Staff" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;staff@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:32.283" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:32.283" endtime="20230801 10:57:32.283"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:32.284" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:32.284" endtime="20230801 10:57:32.284"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:32.285" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:32.284" endtime="20230801 10:57:32.285"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:32.285" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:32.285" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:32.285" endtime="20230801 10:57:32.285"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:32.286" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:32.286" endtime="20230801 10:57:32.286"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:32.286" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:32.287" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:32.286" endtime="20230801 10:57:32.287"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.287" endtime="20230801 10:57:32.287"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.287" endtime="20230801 10:57:32.287"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:32.287" endtime="20230801 10:57:32.287"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.289" endtime="20230801 10:57:32.289"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.289" endtime="20230801 10:57:32.289"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.290" endtime="20230801 10:57:32.290"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:32.287" endtime="20230801 10:57:32.290"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.291" endtime="20230801 10:57:32.291"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.291" endtime="20230801 10:57:32.291"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:32.290" endtime="20230801 10:57:32.291"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.292" endtime="20230801 10:57:32.292"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.292" endtime="20230801 10:57:32.292"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:32.291" endtime="20230801 10:57:32.292"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.293" endtime="20230801 10:57:32.293"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.293" endtime="20230801 10:57:32.294"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:32.293" endtime="20230801 10:57:32.294"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.295" endtime="20230801 10:57:32.295"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.296" endtime="20230801 10:57:32.297"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:32.294" endtime="20230801 10:57:32.297"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.299" endtime="20230801 10:57:32.300"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.300" endtime="20230801 10:57:32.301"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:32.297" endtime="20230801 10:57:32.301"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.302" endtime="20230801 10:57:32.303"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:32.301" endtime="20230801 10:57:32.303"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:32.304" endtime="20230801 10:57:32.305"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:32.303" endtime="20230801 10:57:32.305"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.307" endtime="20230801 10:57:32.307"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.309" endtime="20230801 10:57:32.310"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:32.306" endtime="20230801 10:57:32.312"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.313" endtime="20230801 10:57:32.316"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:32.312" endtime="20230801 10:57:32.317"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.318" endtime="20230801 10:57:32.318"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:32.317" endtime="20230801 10:57:32.319"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.320" endtime="20230801 10:57:32.320"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:32.319" endtime="20230801 10:57:32.321"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:32.322" endtime="20230801 10:57:32.323"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:32.321" endtime="20230801 10:57:32.324"/>
</branch>
<status status="PASS" starttime="20230801 10:57:32.287" endtime="20230801 10:57:32.324"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:32.326" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:57:32.326" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:57:32.325" endtime="20230801 10:57:32.326"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:32.339" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:57:32.327" endtime="20230801 10:57:32.339"/>
</kw>
<status status="PASS" starttime="20230801 10:57:32.327" endtime="20230801 10:57:32.340"/>
</branch>
<status status="PASS" starttime="20230801 10:57:32.326" endtime="20230801 10:57:32.346"/>
</if>
<msg timestamp="20230801 10:57:32.346" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:57:32.282" endtime="20230801 10:57:32.346"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:57:32.351" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:57:32.349" endtime="20230801 10:57:32.351"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:32.352" endtime="20230801 10:57:33.413"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:33.415" level="INFO">Fills the text 'staff@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:33.413" endtime="20230801 10:57:33.464"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:33.464" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:57:33.465" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:57:33.464" endtime="20230801 10:57:33.465"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:57:33.468" level="INFO">${STATE["Tên đăng nhập"]} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:57:33.467" endtime="20230801 10:57:33.468"/>
</kw>
<status status="PASS" starttime="20230801 10:57:33.466" endtime="20230801 10:57:33.468"/>
</branch>
<status status="PASS" starttime="20230801 10:57:33.465" endtime="20230801 10:57:33.468"/>
</if>
<status status="PASS" starttime="20230801 10:57:32.281" endtime="20230801 10:57:33.469"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Tester@123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:33.472" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:33.472" endtime="20230801 10:57:33.473"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:33.474" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:33.473" endtime="20230801 10:57:33.474"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:33.475" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:33.474" endtime="20230801 10:57:33.475"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:33.476" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:33.476" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:33.475" endtime="20230801 10:57:33.476"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:33.477" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:33.476" endtime="20230801 10:57:33.477"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:33.478" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:33.478" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:33.478" endtime="20230801 10:57:33.478"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.479" endtime="20230801 10:57:33.479"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.479" endtime="20230801 10:57:33.480"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:33.478" endtime="20230801 10:57:33.480"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.480" endtime="20230801 10:57:33.480"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.481" endtime="20230801 10:57:33.482"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.482" endtime="20230801 10:57:33.483"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:33.480" endtime="20230801 10:57:33.483"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.484" endtime="20230801 10:57:33.484"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.485" endtime="20230801 10:57:33.485"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:33.483" endtime="20230801 10:57:33.485"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.486" endtime="20230801 10:57:33.486"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.486" endtime="20230801 10:57:33.486"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:33.485" endtime="20230801 10:57:33.486"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.487" endtime="20230801 10:57:33.487"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.487" endtime="20230801 10:57:33.488"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:33.487" endtime="20230801 10:57:33.488"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.488" endtime="20230801 10:57:33.488"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.488" endtime="20230801 10:57:33.488"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:33.488" endtime="20230801 10:57:33.489"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.489" endtime="20230801 10:57:33.490"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.490" endtime="20230801 10:57:33.490"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:33.489" endtime="20230801 10:57:33.491"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.491" endtime="20230801 10:57:33.492"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:33.491" endtime="20230801 10:57:33.492"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:33.492" endtime="20230801 10:57:33.492"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:33.492" endtime="20230801 10:57:33.492"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.493" endtime="20230801 10:57:33.493"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.493" endtime="20230801 10:57:33.494"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:33.493" endtime="20230801 10:57:33.494"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.494" endtime="20230801 10:57:33.494"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:33.494" endtime="20230801 10:57:33.494"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.495" endtime="20230801 10:57:33.495"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:33.495" endtime="20230801 10:57:33.495"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.496" endtime="20230801 10:57:33.496"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:33.495" endtime="20230801 10:57:33.496"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:33.496" endtime="20230801 10:57:33.496"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:33.496" endtime="20230801 10:57:33.497"/>
</branch>
<status status="PASS" starttime="20230801 10:57:33.478" endtime="20230801 10:57:33.497"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:33.498" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:57:33.498" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:57:33.497" endtime="20230801 10:57:33.498"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:33.501" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:57:33.500" endtime="20230801 10:57:33.501"/>
</kw>
<status status="PASS" starttime="20230801 10:57:33.499" endtime="20230801 10:57:33.501"/>
</branch>
<status status="PASS" starttime="20230801 10:57:33.499" endtime="20230801 10:57:33.502"/>
</if>
<msg timestamp="20230801 10:57:33.502" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:57:33.470" endtime="20230801 10:57:33.502"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:57:33.504" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:57:33.502" endtime="20230801 10:57:33.504"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:33.504" endtime="20230801 10:57:33.601"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:33.603" level="INFO">Fills the text 'Tester@123' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:33.602" endtime="20230801 10:57:33.648"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:33.649" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:57:33.650" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:57:33.649" endtime="20230801 10:57:33.650"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:57:33.653" level="INFO">${STATE["Mật khẩu"]} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:57:33.652" endtime="20230801 10:57:33.653"/>
</kw>
<status status="PASS" starttime="20230801 10:57:33.651" endtime="20230801 10:57:33.653"/>
</branch>
<status status="PASS" starttime="20230801 10:57:33.650" endtime="20230801 10:57:33.654"/>
</if>
<status status="PASS" starttime="20230801 10:57:33.469" endtime="20230801 10:57:33.654"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:33.656" endtime="20230801 10:57:34.006"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:34.007" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:57:34.007" endtime="20230801 10:57:34.008"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:57:34.014" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:57:34.008" endtime="20230801 10:57:34.015"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:34.016" endtime="20230801 10:57:34.017"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:57:34.017" endtime="20230801 10:57:34.019"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:34.015" endtime="20230801 10:57:34.019"/>
</branch>
<status status="PASS" starttime="20230801 10:57:34.015" endtime="20230801 10:57:34.019"/>
</if>
<status status="PASS" starttime="20230801 10:57:34.006" endtime="20230801 10:57:34.019"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:57:34.020" endtime="20230801 10:57:34.063"/>
</kw>
<status status="PASS" starttime="20230801 10:57:33.655" endtime="20230801 10:57:34.064"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:34.069" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:34.067" endtime="20230801 10:57:34.069"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:34.071" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:34.071" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:34.070" endtime="20230801 10:57:34.071"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:34.072" endtime="20230801 10:57:34.073"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:34.071" endtime="20230801 10:57:34.073"/>
</branch>
<status status="PASS" starttime="20230801 10:57:34.071" endtime="20230801 10:57:34.073"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:57:35.555" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 10:57:34.078" endtime="20230801 10:57:35.555"/>
</kw>
<status status="PASS" starttime="20230801 10:57:34.074" endtime="20230801 10:57:35.555"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:35.556" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 10:57:35.556" endtime="20230801 10:57:35.556"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:35.904" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-7.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-7.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 10:57:35.904" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 10:57:35.904" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 10:57:35.558" endtime="20230801 10:57:35.906"/>
</kw>
<status status="FAIL" starttime="20230801 10:57:35.557" endtime="20230801 10:57:35.906"/>
</kw>
<msg timestamp="20230801 10:57:35.906" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 10:57:35.557" endtime="20230801 10:57:35.906"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:35.907" endtime="20230801 10:57:35.907"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:35.907" endtime="20230801 10:57:35.907"/>
</branch>
<status status="PASS" starttime="20230801 10:57:35.907" endtime="20230801 10:57:35.907"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:38.530" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 10:57:35.910" endtime="20230801 10:57:38.530"/>
</kw>
<status status="PASS" starttime="20230801 10:57:35.907" endtime="20230801 10:57:38.531"/>
</kw>
<status status="PASS" starttime="20230801 10:57:34.065" endtime="20230801 10:57:38.531"/>
</kw>
<status status="PASS" starttime="20230801 10:57:32.280" endtime="20230801 10:57:38.531"/>
</kw>
<kw name="When Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:38.533" endtime="20230801 10:57:38.712"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:38.714" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:57:38.713" endtime="20230801 10:57:38.715"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:57:38.727" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:57:38.716" endtime="20230801 10:57:38.729"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:38.731" endtime="20230801 10:57:38.732"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:57:38.733" endtime="20230801 10:57:38.733"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:38.729" endtime="20230801 10:57:38.734"/>
</branch>
<status status="PASS" starttime="20230801 10:57:38.729" endtime="20230801 10:57:38.734"/>
</if>
<status status="PASS" starttime="20230801 10:57:38.712" endtime="20230801 10:57:38.734"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:57:38.735" endtime="20230801 10:57:39.055"/>
</kw>
<status status="PASS" starttime="20230801 10:57:38.532" endtime="20230801 10:57:39.055"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:39.057" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:57:39.056" endtime="20230801 10:57:39.057"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:57:39.063" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:57:39.058" endtime="20230801 10:57:39.063"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:57:39.065" endtime="20230801 10:57:39.065"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:39.064" endtime="20230801 10:57:39.065"/>
</branch>
<status status="PASS" starttime="20230801 10:57:39.063" endtime="20230801 10:57:39.066"/>
</if>
<status status="PASS" starttime="20230801 10:57:39.055" endtime="20230801 10:57:39.066"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 10:57:39.168" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 10:57:39.066" endtime="20230801 10:57:39.168"/>
</kw>
<status status="PASS" starttime="20230801 10:57:32.280" endtime="20230801 10:57:39.169"/>
</kw>
<kw name="And Click select &quot;Loại phép&quot; with &quot;Làm remote&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:39.171" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:39.171" endtime="20230801 10:57:39.171"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:39.172" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:39.171" endtime="20230801 10:57:39.172"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:39.172" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:39.172" endtime="20230801 10:57:39.172"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:39.173" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:39.173" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:39.173" endtime="20230801 10:57:39.173"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:39.174" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:39.173" endtime="20230801 10:57:39.174"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:39.174" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:39.174" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:39.174" endtime="20230801 10:57:39.174"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.175" endtime="20230801 10:57:39.175"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.175" endtime="20230801 10:57:39.176"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:39.175" endtime="20230801 10:57:39.176"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.176" endtime="20230801 10:57:39.177"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.177" endtime="20230801 10:57:39.177"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.179" endtime="20230801 10:57:39.179"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:39.176" endtime="20230801 10:57:39.179"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.180" endtime="20230801 10:57:39.181"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.181" endtime="20230801 10:57:39.182"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:39.179" endtime="20230801 10:57:39.182"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.183" endtime="20230801 10:57:39.183"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.183" endtime="20230801 10:57:39.183"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:39.182" endtime="20230801 10:57:39.184"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.185" endtime="20230801 10:57:39.185"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.185" endtime="20230801 10:57:39.186"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:39.184" endtime="20230801 10:57:39.186"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.187" endtime="20230801 10:57:39.187"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.187" endtime="20230801 10:57:39.187"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:39.186" endtime="20230801 10:57:39.188"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.188" endtime="20230801 10:57:39.188"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.188" endtime="20230801 10:57:39.189"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:39.188" endtime="20230801 10:57:39.189"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.189" endtime="20230801 10:57:39.189"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:39.189" endtime="20230801 10:57:39.189"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:39.189" endtime="20230801 10:57:39.189"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:39.189" endtime="20230801 10:57:39.190"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.190" endtime="20230801 10:57:39.190"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.190" endtime="20230801 10:57:39.192"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:39.190" endtime="20230801 10:57:39.192"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.192" endtime="20230801 10:57:39.192"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:39.192" endtime="20230801 10:57:39.192"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.193" endtime="20230801 10:57:39.193"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:39.192" endtime="20230801 10:57:39.193"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.194" endtime="20230801 10:57:39.194"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:39.193" endtime="20230801 10:57:39.194"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:39.195" endtime="20230801 10:57:39.195"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:39.194" endtime="20230801 10:57:39.195"/>
</branch>
<status status="PASS" starttime="20230801 10:57:39.174" endtime="20230801 10:57:39.195"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:39.196" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:57:39.197" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:57:39.195" endtime="20230801 10:57:39.197"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:39.205" level="INFO">${text} = Làm remote</msg>
<status status="PASS" starttime="20230801 10:57:39.201" endtime="20230801 10:57:39.206"/>
</kw>
<status status="PASS" starttime="20230801 10:57:39.199" endtime="20230801 10:57:39.206"/>
</branch>
<status status="PASS" starttime="20230801 10:57:39.197" endtime="20230801 10:57:39.206"/>
</if>
<msg timestamp="20230801 10:57:39.207" level="INFO">${text} = Làm remote</msg>
<status status="PASS" starttime="20230801 10:57:39.170" endtime="20230801 10:57:39.207"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 10:57:39.210" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 10:57:39.207" endtime="20230801 10:57:39.210"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:39.227" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 10:57:39.212" endtime="20230801 10:57:39.227"/>
</kw>
<status status="PASS" starttime="20230801 10:57:39.210" endtime="20230801 10:57:39.229"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:39.229" endtime="20230801 10:57:39.951"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 10:57:39.953" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 10:57:39.951" endtime="20230801 10:57:39.953"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:39.954" level="INFO">Fills the text 'Làm remote' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:39.953" endtime="20230801 10:57:40.114"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:40.115" endtime="20230801 10:57:40.361"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:40.362" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:57:40.363" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:57:40.362" endtime="20230801 10:57:40.363"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:57:40.366" level="INFO">${STATE["Loại phép"]} = Làm remote</msg>
<status status="PASS" starttime="20230801 10:57:40.365" endtime="20230801 10:57:40.366"/>
</kw>
<status status="PASS" starttime="20230801 10:57:40.364" endtime="20230801 10:57:40.366"/>
</branch>
<status status="PASS" starttime="20230801 10:57:40.364" endtime="20230801 10:57:40.366"/>
</if>
<status status="PASS" starttime="20230801 10:57:39.170" endtime="20230801 10:57:40.367"/>
</kw>
<kw name="And Click select &quot;Thời gian&quot; with &quot;Cả ngày&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:40.370" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:40.370" endtime="20230801 10:57:40.370"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:40.371" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:40.371" endtime="20230801 10:57:40.371"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:40.372" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:40.372" endtime="20230801 10:57:40.372"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:40.373" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:40.374" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:40.373" endtime="20230801 10:57:40.374"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:40.375" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:40.374" endtime="20230801 10:57:40.375"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:40.376" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:40.376" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:40.376" endtime="20230801 10:57:40.376"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.377" endtime="20230801 10:57:40.377"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.377" endtime="20230801 10:57:40.378"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.376" endtime="20230801 10:57:40.378"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.378" endtime="20230801 10:57:40.378"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.379" endtime="20230801 10:57:40.379"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.380" endtime="20230801 10:57:40.380"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.378" endtime="20230801 10:57:40.380"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.380" endtime="20230801 10:57:40.381"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.381" endtime="20230801 10:57:40.381"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.380" endtime="20230801 10:57:40.381"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.383" endtime="20230801 10:57:40.383"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.384" endtime="20230801 10:57:40.384"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.382" endtime="20230801 10:57:40.384"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.385" endtime="20230801 10:57:40.385"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.386" endtime="20230801 10:57:40.386"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.384" endtime="20230801 10:57:40.386"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.387" endtime="20230801 10:57:40.387"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.388" endtime="20230801 10:57:40.388"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.386" endtime="20230801 10:57:40.388"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.389" endtime="20230801 10:57:40.389"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.391" endtime="20230801 10:57:40.391"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.389" endtime="20230801 10:57:40.391"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.392" endtime="20230801 10:57:40.392"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.391" endtime="20230801 10:57:40.392"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:40.393" endtime="20230801 10:57:40.393"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.393" endtime="20230801 10:57:40.394"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.394" endtime="20230801 10:57:40.394"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.395" endtime="20230801 10:57:40.395"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.394" endtime="20230801 10:57:40.395"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.395" endtime="20230801 10:57:40.395"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.395" endtime="20230801 10:57:40.396"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.396" endtime="20230801 10:57:40.396"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.396" endtime="20230801 10:57:40.396"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.397" endtime="20230801 10:57:40.397"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.396" endtime="20230801 10:57:40.397"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.398" endtime="20230801 10:57:40.398"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.397" endtime="20230801 10:57:40.399"/>
</branch>
<status status="PASS" starttime="20230801 10:57:40.376" endtime="20230801 10:57:40.399"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:40.400" level="INFO">Length is 7</msg>
<msg timestamp="20230801 10:57:40.401" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20230801 10:57:40.400" endtime="20230801 10:57:40.401"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:40.402" level="INFO">${text} = Cả ngày</msg>
<status status="PASS" starttime="20230801 10:57:40.402" endtime="20230801 10:57:40.402"/>
</kw>
<status status="PASS" starttime="20230801 10:57:40.401" endtime="20230801 10:57:40.403"/>
</branch>
<status status="PASS" starttime="20230801 10:57:40.401" endtime="20230801 10:57:40.403"/>
</if>
<msg timestamp="20230801 10:57:40.404" level="INFO">${text} = Cả ngày</msg>
<status status="PASS" starttime="20230801 10:57:40.369" endtime="20230801 10:57:40.404"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 10:57:40.407" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 10:57:40.404" endtime="20230801 10:57:40.407"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:40.426" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 10:57:40.415" endtime="20230801 10:57:40.426"/>
</kw>
<status status="PASS" starttime="20230801 10:57:40.410" endtime="20230801 10:57:40.426"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:40.427" endtime="20230801 10:57:40.546"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 10:57:40.548" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 10:57:40.546" endtime="20230801 10:57:40.548"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:40.548" level="INFO">Fills the text 'Cả ngày' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:40.548" endtime="20230801 10:57:40.611"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:40.611" endtime="20230801 10:57:40.899"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:40.900" level="INFO">Length is 7</msg>
<msg timestamp="20230801 10:57:40.901" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20230801 10:57:40.900" endtime="20230801 10:57:40.901"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:57:40.902" level="INFO">${STATE["Thời gian"]} = Cả ngày</msg>
<status status="PASS" starttime="20230801 10:57:40.902" endtime="20230801 10:57:40.902"/>
</kw>
<status status="PASS" starttime="20230801 10:57:40.901" endtime="20230801 10:57:40.902"/>
</branch>
<status status="PASS" starttime="20230801 10:57:40.901" endtime="20230801 10:57:40.903"/>
</if>
<status status="PASS" starttime="20230801 10:57:40.367" endtime="20230801 10:57:40.903"/>
</kw>
<kw name="And Enter leave date in &quot;Ngày bắt đầu&quot; with &quot;31-07-2023&quot;" library="common" sourcename="Enter leave date in &quot;${field}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>date</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:40.905" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:40.905" endtime="20230801 10:57:40.905"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:40.905" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:40.905" endtime="20230801 10:57:40.906"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:40.906" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:40.906" endtime="20230801 10:57:40.906"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:40.907" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:40.907" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:40.906" endtime="20230801 10:57:40.907"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:40.907" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:40.907" endtime="20230801 10:57:40.907"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:40.908" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:40.908" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:40.908" endtime="20230801 10:57:40.908"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.909" endtime="20230801 10:57:40.909"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.909" endtime="20230801 10:57:40.910"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.908" endtime="20230801 10:57:40.910"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.910" endtime="20230801 10:57:40.910"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.910" endtime="20230801 10:57:40.911"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.911" endtime="20230801 10:57:40.911"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.910" endtime="20230801 10:57:40.911"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.912" endtime="20230801 10:57:40.912"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.912" endtime="20230801 10:57:40.913"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.911" endtime="20230801 10:57:40.913"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.914" endtime="20230801 10:57:40.914"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.915" endtime="20230801 10:57:40.915"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.913" endtime="20230801 10:57:40.915"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.916" endtime="20230801 10:57:40.916"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.916" endtime="20230801 10:57:40.917"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.915" endtime="20230801 10:57:40.917"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.918" endtime="20230801 10:57:40.919"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.920" endtime="20230801 10:57:40.920"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.917" endtime="20230801 10:57:40.921"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.923" endtime="20230801 10:57:40.924"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.924" endtime="20230801 10:57:40.924"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.922" endtime="20230801 10:57:40.925"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.926" endtime="20230801 10:57:40.926"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.925" endtime="20230801 10:57:40.926"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:40.927" endtime="20230801 10:57:40.927"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.926" endtime="20230801 10:57:40.927"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.929" endtime="20230801 10:57:40.930"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.931" endtime="20230801 10:57:40.931"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.929" endtime="20230801 10:57:40.932"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.934" endtime="20230801 10:57:40.935"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.933" endtime="20230801 10:57:40.935"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.937" endtime="20230801 10:57:40.938"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.936" endtime="20230801 10:57:40.938"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.940" endtime="20230801 10:57:40.940"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.938" endtime="20230801 10:57:40.940"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:40.941" endtime="20230801 10:57:40.942"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:40.941" endtime="20230801 10:57:40.942"/>
</branch>
<status status="PASS" starttime="20230801 10:57:40.908" endtime="20230801 10:57:40.942"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:40.943" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:57:40.943" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:57:40.943" endtime="20230801 10:57:40.943"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:40.945" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 10:57:40.944" endtime="20230801 10:57:40.945"/>
</kw>
<status status="PASS" starttime="20230801 10:57:40.944" endtime="20230801 10:57:40.945"/>
</branch>
<status status="PASS" starttime="20230801 10:57:40.944" endtime="20230801 10:57:40.945"/>
</if>
<msg timestamp="20230801 10:57:40.945" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 10:57:40.904" endtime="20230801 10:57:40.945"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//input[@placeholder="${field}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:40.946" level="INFO">${element} = xpath=//input[@placeholder="Ngày bắt đầu"]</msg>
<status status="PASS" starttime="20230801 10:57:40.946" endtime="20230801 10:57:40.946"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:40.946" endtime="20230801 10:57:41.429"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:41.429" endtime="20230801 10:57:41.529"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:41.529" level="INFO">Fills the text '31-07-2023' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:41.529" endtime="20230801 10:57:41.758"/>
</kw>
<status status="PASS" starttime="20230801 10:57:40.904" endtime="20230801 10:57:41.759"/>
</kw>
<kw name="And Enter leave date in &quot;Ngày kết thúc&quot; with &quot;01-08-2023&quot;" library="common" sourcename="Enter leave date in &quot;${field}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>date</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:41.759" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:41.759" endtime="20230801 10:57:41.759"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:41.759" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:41.759" endtime="20230801 10:57:41.759"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:41.764" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:41.764" endtime="20230801 10:57:41.764"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:41.764" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:41.764" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:41.764" endtime="20230801 10:57:41.764"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:41.764" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:41.764" endtime="20230801 10:57:41.764"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:41.769" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:41.769" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:41.764" endtime="20230801 10:57:41.769"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.769" endtime="20230801 10:57:41.769"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.769" endtime="20230801 10:57:41.769"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:41.769" endtime="20230801 10:57:41.769"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.769" endtime="20230801 10:57:41.769"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.769" endtime="20230801 10:57:41.769"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.769" endtime="20230801 10:57:41.774"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:41.769" endtime="20230801 10:57:41.774"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.774" endtime="20230801 10:57:41.774"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.774" endtime="20230801 10:57:41.774"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:41.774" endtime="20230801 10:57:41.774"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.774" endtime="20230801 10:57:41.774"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.779" endtime="20230801 10:57:41.779"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:41.774" endtime="20230801 10:57:41.779"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.779" endtime="20230801 10:57:41.779"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.779" endtime="20230801 10:57:41.779"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:41.779" endtime="20230801 10:57:41.779"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.779" endtime="20230801 10:57:41.779"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.789" endtime="20230801 10:57:41.789"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:41.779" endtime="20230801 10:57:41.790"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.790" endtime="20230801 10:57:41.790"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.790" endtime="20230801 10:57:41.790"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:41.790" endtime="20230801 10:57:41.790"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.790" endtime="20230801 10:57:41.790"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:41.790" endtime="20230801 10:57:41.790"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:41.790" endtime="20230801 10:57:41.790"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:41.790" endtime="20230801 10:57:41.790"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.790" endtime="20230801 10:57:41.790"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.790" endtime="20230801 10:57:41.790"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:41.790" endtime="20230801 10:57:41.799"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.799" endtime="20230801 10:57:41.799"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:41.799" endtime="20230801 10:57:41.799"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.799" endtime="20230801 10:57:41.799"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:41.799" endtime="20230801 10:57:41.799"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.799" endtime="20230801 10:57:41.799"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:41.799" endtime="20230801 10:57:41.799"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:41.799" endtime="20230801 10:57:41.799"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:41.799" endtime="20230801 10:57:41.799"/>
</branch>
<status status="PASS" starttime="20230801 10:57:41.769" endtime="20230801 10:57:41.799"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:41.806" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:57:41.806" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:57:41.799" endtime="20230801 10:57:41.806"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:41.806" level="INFO">${text} = 01-08-2023</msg>
<status status="PASS" starttime="20230801 10:57:41.806" endtime="20230801 10:57:41.806"/>
</kw>
<status status="PASS" starttime="20230801 10:57:41.806" endtime="20230801 10:57:41.806"/>
</branch>
<status status="PASS" starttime="20230801 10:57:41.806" endtime="20230801 10:57:41.806"/>
</if>
<msg timestamp="20230801 10:57:41.806" level="INFO">${text} = 01-08-2023</msg>
<status status="PASS" starttime="20230801 10:57:41.759" endtime="20230801 10:57:41.806"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//input[@placeholder="${field}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:41.809" level="INFO">${element} = xpath=//input[@placeholder="Ngày kết thúc"]</msg>
<status status="PASS" starttime="20230801 10:57:41.809" endtime="20230801 10:57:41.809"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:41.809" endtime="20230801 10:57:42.079"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:42.079" endtime="20230801 10:57:42.173"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:42.173" level="INFO">Fills the text '01-08-2023' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:42.173" endtime="20230801 10:57:42.324"/>
</kw>
<status status="PASS" starttime="20230801 10:57:41.759" endtime="20230801 10:57:42.324"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Lý do&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:42.329" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:42.324" endtime="20230801 10:57:42.329"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:42.329" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:42.329" endtime="20230801 10:57:42.329"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:42.329" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:42.329" endtime="20230801 10:57:42.329"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:42.329" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:42.332" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:42.329" endtime="20230801 10:57:42.332"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:42.332" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 10:57:42.332" endtime="20230801 10:57:42.332"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:42.332" level="INFO">Length is 1</msg>
<msg timestamp="20230801 10:57:42.332" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 10:57:42.332" endtime="20230801 10:57:42.332"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.332" endtime="20230801 10:57:42.332"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.332" endtime="20230801 10:57:42.332"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:42.332" endtime="20230801 10:57:42.332"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.332" endtime="20230801 10:57:42.339"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.339" endtime="20230801 10:57:42.339"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.339" endtime="20230801 10:57:42.339"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:42.332" endtime="20230801 10:57:42.339"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.339" endtime="20230801 10:57:42.339"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.339" endtime="20230801 10:57:42.339"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:42.339" endtime="20230801 10:57:42.339"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.339" endtime="20230801 10:57:42.344"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.345" endtime="20230801 10:57:42.345"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:42.339" endtime="20230801 10:57:42.345"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.345" endtime="20230801 10:57:42.345"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.345" endtime="20230801 10:57:42.345"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:42.345" endtime="20230801 10:57:42.345"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.349" endtime="20230801 10:57:42.349"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.349" endtime="20230801 10:57:42.349"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:42.348" endtime="20230801 10:57:42.349"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.349" endtime="20230801 10:57:42.349"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.349" endtime="20230801 10:57:42.354"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:42.349" endtime="20230801 10:57:42.354"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.354" endtime="20230801 10:57:42.354"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:42.354" endtime="20230801 10:57:42.354"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:42.354" endtime="20230801 10:57:42.354"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:42.354" endtime="20230801 10:57:42.354"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.354" endtime="20230801 10:57:42.354"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.354" endtime="20230801 10:57:42.359"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:42.354" endtime="20230801 10:57:42.359"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.359" endtime="20230801 10:57:42.359"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:42.359" endtime="20230801 10:57:42.359"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.359" endtime="20230801 10:57:42.359"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:42.359" endtime="20230801 10:57:42.359"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:42.359" endtime="20230801 10:57:42.359"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:42.359" endtime="20230801 10:57:42.359"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230801 10:57:42.364" level="INFO">${new_text} = Excepturi nesciunt cupiditate corrupti molestiae rem ipsa delectus.</msg>
<status status="PASS" starttime="20230801 10:57:42.364" endtime="20230801 10:57:42.364"/>
</kw>
<status status="PASS" starttime="20230801 10:57:42.359" endtime="20230801 10:57:42.364"/>
</branch>
<status status="PASS" starttime="20230801 10:57:42.332" endtime="20230801 10:57:42.364"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:42.364" level="INFO">Length is 8</msg>
<msg timestamp="20230801 10:57:42.364" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 10:57:42.364" endtime="20230801 10:57:42.364"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:42.374" level="INFO">${text} = Excepturi nesciunt cupiditate corrupti molestiae rem ipsa delectus.</msg>
<status status="PASS" starttime="20230801 10:57:42.369" endtime="20230801 10:57:42.374"/>
</kw>
<status status="PASS" starttime="20230801 10:57:42.369" endtime="20230801 10:57:42.374"/>
</branch>
<status status="PASS" starttime="20230801 10:57:42.364" endtime="20230801 10:57:42.374"/>
</if>
<msg timestamp="20230801 10:57:42.379" level="INFO">${text} = Excepturi nesciunt cupiditate corrupti molestiae rem ipsa delectus.</msg>
<status status="PASS" starttime="20230801 10:57:42.324" endtime="20230801 10:57:42.379"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230801 10:57:42.384" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Lý do"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230801 10:57:42.384" endtime="20230801 10:57:42.384"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:42.389" endtime="20230801 10:57:42.711"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:42.719" level="INFO">Fills the text 'Excepturi nesciunt cupiditate corrupti molestiae rem ipsa delectus.' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:42.711" endtime="20230801 10:57:42.849"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:42.849" level="INFO">Length is 67</msg>
<msg timestamp="20230801 10:57:42.849" level="INFO">${cnt} = 67</msg>
<status status="PASS" starttime="20230801 10:57:42.849" endtime="20230801 10:57:42.849"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:57:42.855" level="INFO">${STATE["Lý do"]} = Excepturi nesciunt cupiditate corrupti molestiae rem ipsa delectus.</msg>
<status status="PASS" starttime="20230801 10:57:42.854" endtime="20230801 10:57:42.855"/>
</kw>
<status status="PASS" starttime="20230801 10:57:42.849" endtime="20230801 10:57:42.855"/>
</branch>
<status status="PASS" starttime="20230801 10:57:42.849" endtime="20230801 10:57:42.855"/>
</if>
<status status="PASS" starttime="20230801 10:57:42.324" endtime="20230801 10:57:42.855"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:42.894" endtime="20230801 10:57:43.249"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:43.252" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:57:43.249" endtime="20230801 10:57:43.252"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:57:43.269" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:57:43.252" endtime="20230801 10:57:43.269"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:43.279" endtime="20230801 10:57:43.279"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:57:43.279" endtime="20230801 10:57:43.279"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:43.269" endtime="20230801 10:57:43.279"/>
</branch>
<status status="PASS" starttime="20230801 10:57:43.269" endtime="20230801 10:57:43.279"/>
</if>
<status status="PASS" starttime="20230801 10:57:43.249" endtime="20230801 10:57:43.279"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:57:43.279" endtime="20230801 10:57:43.309"/>
</kw>
<status status="PASS" starttime="20230801 10:57:42.894" endtime="20230801 10:57:43.309"/>
</kw>
<kw name="Then User look message &quot;Tạo thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:43.316" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:43.309" endtime="20230801 10:57:43.316"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:43.316" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:43.316" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:43.316" endtime="20230801 10:57:43.316"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:43.319" endtime="20230801 10:57:43.319"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:43.319" endtime="20230801 10:57:43.319"/>
</branch>
<status status="PASS" starttime="20230801 10:57:43.319" endtime="20230801 10:57:43.319"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:57:46.528" level="INFO">Text: 'Tạo thành công'</msg>
<status status="PASS" starttime="20230801 10:57:43.324" endtime="20230801 10:57:46.528"/>
</kw>
<status status="PASS" starttime="20230801 10:57:43.319" endtime="20230801 10:57:46.528"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:46.529" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 10:57:46.528" endtime="20230801 10:57:46.529"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:47.161" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-8.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-8.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 10:57:47.162" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 10:57:47.162" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 10:57:46.532" endtime="20230801 10:57:47.164"/>
</kw>
<status status="FAIL" starttime="20230801 10:57:46.529" endtime="20230801 10:57:47.165"/>
</kw>
<msg timestamp="20230801 10:57:47.166" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 10:57:46.529" endtime="20230801 10:57:47.166"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:47.167" endtime="20230801 10:57:47.167"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:47.166" endtime="20230801 10:57:47.167"/>
</branch>
<status status="PASS" starttime="20230801 10:57:47.166" endtime="20230801 10:57:47.168"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:49.670" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 10:57:47.171" endtime="20230801 10:57:49.671"/>
</kw>
<status status="PASS" starttime="20230801 10:57:47.168" endtime="20230801 10:57:49.671"/>
</kw>
<status status="PASS" starttime="20230801 10:57:43.309" endtime="20230801 10:57:49.671"/>
</kw>
<kw name="And User look title &quot;Danh sách nghỉ phép&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:49.673" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:57:49.673" endtime="20230801 10:57:49.673"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:57:49.680" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:57:49.674" endtime="20230801 10:57:49.680"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:57:49.681" endtime="20230801 10:57:49.681"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:49.681" endtime="20230801 10:57:49.682"/>
</branch>
<status status="PASS" starttime="20230801 10:57:49.680" endtime="20230801 10:57:49.682"/>
</if>
<status status="PASS" starttime="20230801 10:57:49.672" endtime="20230801 10:57:49.682"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:49.685" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:57:49.684" endtime="20230801 10:57:49.685"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:57:49.690" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:57:49.685" endtime="20230801 10:57:49.690"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:57:49.691" endtime="20230801 10:57:49.691"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:49.691" endtime="20230801 10:57:49.691"/>
</branch>
<status status="PASS" starttime="20230801 10:57:49.691" endtime="20230801 10:57:49.691"/>
</if>
<status status="PASS" starttime="20230801 10:57:49.683" endtime="20230801 10:57:49.692"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230801 10:57:49.707" level="INFO">Title: 'Danh sách nghỉ phép'</msg>
<msg timestamp="20230801 10:57:49.708" level="INFO">${actualTitle} = Danh sách nghỉ phép</msg>
<status status="PASS" starttime="20230801 10:57:49.692" endtime="20230801 10:57:49.708"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230801 10:57:49.710" endtime="20230801 10:57:49.712"/>
</kw>
<status status="PASS" starttime="20230801 10:57:49.682" endtime="20230801 10:57:49.712"/>
</kw>
<status status="PASS" starttime="20230801 10:57:49.672" endtime="20230801 10:57:49.712"/>
</kw>
<kw name="And Click on the &quot;Xóa&quot; button in the &quot;Họ và tên&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:49.725" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:57:49.724" endtime="20230801 10:57:49.725"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:57:49.744" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:57:49.725" endtime="20230801 10:57:49.744"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:57:49.747" endtime="20230801 10:57:49.747"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:49.745" endtime="20230801 10:57:49.748"/>
</branch>
<status status="PASS" starttime="20230801 10:57:49.745" endtime="20230801 10:57:49.749"/>
</if>
<status status="PASS" starttime="20230801 10:57:49.724" endtime="20230801 10:57:49.750"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 10:57:49.792" level="INFO">Found 3 Locators successfully.</msg>
<msg timestamp="20230801 10:57:49.793" level="INFO">${element} = ['element=b268096e-bd14-4a9d-aa5b-1f35897e129a', 'element=e08a4841-a6df-4b94-a9a6-842de258b476', 'element=f8e30432-669c-49a9-819c-da8ffeaa8523']</msg>
<status status="PASS" starttime="20230801 10:57:49.756" endtime="20230801 10:57:49.793"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:49.794" endtime="20230801 10:57:50.036"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:50.037" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:57:50.037" endtime="20230801 10:57:50.037"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:57:50.053" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 10:57:50.037" endtime="20230801 10:57:50.053"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:50.054" endtime="20230801 10:57:50.490"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 10:57:50.591" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 10:57:50.491" endtime="20230801 10:57:50.591"/>
</kw>
<status status="PASS" starttime="20230801 10:57:50.053" endtime="20230801 10:57:50.592"/>
</branch>
<status status="PASS" starttime="20230801 10:57:50.053" endtime="20230801 10:57:50.592"/>
</if>
<status status="PASS" starttime="20230801 10:57:50.036" endtime="20230801 10:57:50.593"/>
</kw>
<status status="PASS" starttime="20230801 10:57:49.723" endtime="20230801 10:57:50.593"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 10:57:50.749" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 10:57:50.595" endtime="20230801 10:57:50.749"/>
</kw>
<status status="PASS" starttime="20230801 10:57:50.594" endtime="20230801 10:57:50.749"/>
</kw>
<status status="PASS" starttime="20230801 10:57:30.374" endtime="20230801 10:57:50.749"/>
</test>
<test id="s1-t8" name="STA-08 Verify that Create leave management successfully with &quot;Làm remote&quot; &amp; &quot;Lưu và tạo mới&quot; button" line="69">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 10:57:50.789" endtime="20230801 10:57:50.789"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 10:57:50.792" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\c28e9d4a-3f3d-4c7f-9f97-18b9a4790fd9"}</msg>
<msg timestamp="20230801 10:57:51.889" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\c28e9d4a-3f3d-4c7f-9f97-18b9a4790fd9"}</msg>
<status status="PASS" starttime="20230801 10:57:50.790" endtime="20230801 10:57:51.889"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 10:57:52.687" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 10:57:52.687" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 10:57:51.889" endtime="20230801 10:57:52.688"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 10:57:52.689" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 10:57:52.688" endtime="20230801 10:57:52.689"/>
</kw>
<status status="PASS" starttime="20230801 10:57:50.788" endtime="20230801 10:57:52.689"/>
</kw>
<kw name="Go to create leave date page" library="common">
<kw name="Login to Staff" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;staff@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:52.692" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:52.692" endtime="20230801 10:57:52.692"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:52.693" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:52.692" endtime="20230801 10:57:52.693"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:52.693" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:52.693" endtime="20230801 10:57:52.693"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:52.694" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:52.694" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:52.694" endtime="20230801 10:57:52.694"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:52.695" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:52.694" endtime="20230801 10:57:52.695"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:52.695" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:52.695" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:52.695" endtime="20230801 10:57:52.695"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.698" endtime="20230801 10:57:52.698"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.698" endtime="20230801 10:57:52.699"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:52.696" endtime="20230801 10:57:52.699"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.701" endtime="20230801 10:57:52.701"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.701" endtime="20230801 10:57:52.702"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.702" endtime="20230801 10:57:52.702"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:52.700" endtime="20230801 10:57:52.702"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.703" endtime="20230801 10:57:52.704"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.704" endtime="20230801 10:57:52.705"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:52.703" endtime="20230801 10:57:52.705"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.706" endtime="20230801 10:57:52.706"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.707" endtime="20230801 10:57:52.707"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:52.705" endtime="20230801 10:57:52.707"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.708" endtime="20230801 10:57:52.708"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.708" endtime="20230801 10:57:52.709"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:52.707" endtime="20230801 10:57:52.709"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.710" endtime="20230801 10:57:52.710"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.711" endtime="20230801 10:57:52.711"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:52.709" endtime="20230801 10:57:52.711"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.713" endtime="20230801 10:57:52.713"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.714" endtime="20230801 10:57:52.714"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:52.712" endtime="20230801 10:57:52.714"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.715" endtime="20230801 10:57:52.716"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:52.715" endtime="20230801 10:57:52.716"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:52.717" endtime="20230801 10:57:52.718"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:52.716" endtime="20230801 10:57:52.718"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.720" endtime="20230801 10:57:52.721"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.722" endtime="20230801 10:57:52.722"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:52.719" endtime="20230801 10:57:52.722"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.723" endtime="20230801 10:57:52.724"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:52.722" endtime="20230801 10:57:52.724"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.725" endtime="20230801 10:57:52.726"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:52.724" endtime="20230801 10:57:52.727"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.731" endtime="20230801 10:57:52.731"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:52.727" endtime="20230801 10:57:52.732"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:52.733" endtime="20230801 10:57:52.733"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:52.732" endtime="20230801 10:57:52.733"/>
</branch>
<status status="PASS" starttime="20230801 10:57:52.696" endtime="20230801 10:57:52.734"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:52.736" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:57:52.736" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:57:52.735" endtime="20230801 10:57:52.736"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:52.737" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:57:52.737" endtime="20230801 10:57:52.737"/>
</kw>
<status status="PASS" starttime="20230801 10:57:52.737" endtime="20230801 10:57:52.739"/>
</branch>
<status status="PASS" starttime="20230801 10:57:52.736" endtime="20230801 10:57:52.739"/>
</if>
<msg timestamp="20230801 10:57:52.740" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:57:52.691" endtime="20230801 10:57:52.740"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:57:52.741" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:57:52.740" endtime="20230801 10:57:52.742"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:52.742" endtime="20230801 10:57:53.955"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:53.956" level="INFO">Fills the text 'staff@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:53.955" endtime="20230801 10:57:54.005"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:54.006" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:57:54.006" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:57:54.005" endtime="20230801 10:57:54.006"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:57:54.007" level="INFO">${STATE["Tên đăng nhập"]} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:57:54.007" endtime="20230801 10:57:54.007"/>
</kw>
<status status="PASS" starttime="20230801 10:57:54.006" endtime="20230801 10:57:54.007"/>
</branch>
<status status="PASS" starttime="20230801 10:57:54.006" endtime="20230801 10:57:54.007"/>
</if>
<status status="PASS" starttime="20230801 10:57:52.691" endtime="20230801 10:57:54.008"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Tester@123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:54.010" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:54.010" endtime="20230801 10:57:54.010"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:54.010" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:54.010" endtime="20230801 10:57:54.010"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:54.011" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:54.010" endtime="20230801 10:57:54.011"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:54.011" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:54.012" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:54.011" endtime="20230801 10:57:54.012"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:54.012" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:54.012" endtime="20230801 10:57:54.012"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:54.014" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:54.015" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:54.013" endtime="20230801 10:57:54.015"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.016" endtime="20230801 10:57:54.017"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.017" endtime="20230801 10:57:54.017"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:54.015" endtime="20230801 10:57:54.017"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.018" endtime="20230801 10:57:54.018"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.018" endtime="20230801 10:57:54.018"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.018" endtime="20230801 10:57:54.019"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:54.017" endtime="20230801 10:57:54.019"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.019" endtime="20230801 10:57:54.019"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.020" endtime="20230801 10:57:54.020"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:54.019" endtime="20230801 10:57:54.020"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.021" endtime="20230801 10:57:54.021"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.022" endtime="20230801 10:57:54.022"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:54.020" endtime="20230801 10:57:54.022"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.023" endtime="20230801 10:57:54.023"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.023" endtime="20230801 10:57:54.023"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:54.022" endtime="20230801 10:57:54.023"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.024" endtime="20230801 10:57:54.024"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.024" endtime="20230801 10:57:54.025"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:54.024" endtime="20230801 10:57:54.025"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.025" endtime="20230801 10:57:54.025"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.026" endtime="20230801 10:57:54.026"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:54.025" endtime="20230801 10:57:54.026"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.026" endtime="20230801 10:57:54.026"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:54.026" endtime="20230801 10:57:54.027"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:54.027" endtime="20230801 10:57:54.027"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:54.027" endtime="20230801 10:57:54.027"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.027" endtime="20230801 10:57:54.029"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.029" endtime="20230801 10:57:54.029"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:54.027" endtime="20230801 10:57:54.029"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.031" endtime="20230801 10:57:54.031"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:54.030" endtime="20230801 10:57:54.031"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.032" endtime="20230801 10:57:54.032"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:54.031" endtime="20230801 10:57:54.032"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.033" endtime="20230801 10:57:54.033"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:54.033" endtime="20230801 10:57:54.034"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.034" endtime="20230801 10:57:54.034"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:54.034" endtime="20230801 10:57:54.034"/>
</branch>
<status status="PASS" starttime="20230801 10:57:54.015" endtime="20230801 10:57:54.034"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:54.035" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:57:54.035" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:57:54.035" endtime="20230801 10:57:54.035"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:54.036" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:57:54.036" endtime="20230801 10:57:54.036"/>
</kw>
<status status="PASS" starttime="20230801 10:57:54.035" endtime="20230801 10:57:54.037"/>
</branch>
<status status="PASS" starttime="20230801 10:57:54.035" endtime="20230801 10:57:54.037"/>
</if>
<msg timestamp="20230801 10:57:54.037" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:57:54.008" endtime="20230801 10:57:54.037"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:57:54.038" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:57:54.037" endtime="20230801 10:57:54.038"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:54.038" endtime="20230801 10:57:54.097"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:54.098" level="INFO">Fills the text 'Tester@123' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:54.097" endtime="20230801 10:57:54.163"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:54.165" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:57:54.165" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:57:54.164" endtime="20230801 10:57:54.165"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:57:54.169" level="INFO">${STATE["Mật khẩu"]} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:57:54.167" endtime="20230801 10:57:54.169"/>
</kw>
<status status="PASS" starttime="20230801 10:57:54.166" endtime="20230801 10:57:54.169"/>
</branch>
<status status="PASS" starttime="20230801 10:57:54.166" endtime="20230801 10:57:54.169"/>
</if>
<status status="PASS" starttime="20230801 10:57:54.008" endtime="20230801 10:57:54.169"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:54.171" endtime="20230801 10:57:54.448"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:54.450" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:57:54.449" endtime="20230801 10:57:54.450"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:57:54.457" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:57:54.450" endtime="20230801 10:57:54.457"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.457" endtime="20230801 10:57:54.458"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.458" endtime="20230801 10:57:54.458"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:54.457" endtime="20230801 10:57:54.458"/>
</branch>
<status status="PASS" starttime="20230801 10:57:54.457" endtime="20230801 10:57:54.458"/>
</if>
<status status="PASS" starttime="20230801 10:57:54.448" endtime="20230801 10:57:54.458"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:57:54.459" endtime="20230801 10:57:54.491"/>
</kw>
<status status="PASS" starttime="20230801 10:57:54.170" endtime="20230801 10:57:54.491"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:54.493" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:54.492" endtime="20230801 10:57:54.493"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:54.493" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:54.493" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:54.493" endtime="20230801 10:57:54.493"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:54.494" endtime="20230801 10:57:54.494"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:54.494" endtime="20230801 10:57:54.494"/>
</branch>
<status status="PASS" starttime="20230801 10:57:54.494" endtime="20230801 10:57:54.494"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:57:55.538" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 10:57:54.499" endtime="20230801 10:57:55.538"/>
</kw>
<status status="PASS" starttime="20230801 10:57:54.495" endtime="20230801 10:57:55.538"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:55.540" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 10:57:55.539" endtime="20230801 10:57:55.540"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:56.363" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-9.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-9.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 10:57:56.364" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 10:57:56.364" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 10:57:55.543" endtime="20230801 10:57:56.366"/>
</kw>
<status status="FAIL" starttime="20230801 10:57:55.541" endtime="20230801 10:57:56.367"/>
</kw>
<msg timestamp="20230801 10:57:56.367" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 10:57:55.540" endtime="20230801 10:57:56.367"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:56.370" endtime="20230801 10:57:56.370"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:56.368" endtime="20230801 10:57:56.370"/>
</branch>
<status status="PASS" starttime="20230801 10:57:56.368" endtime="20230801 10:57:56.371"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:58.872" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 10:57:56.373" endtime="20230801 10:57:58.873"/>
</kw>
<status status="PASS" starttime="20230801 10:57:56.371" endtime="20230801 10:57:58.873"/>
</kw>
<status status="PASS" starttime="20230801 10:57:54.492" endtime="20230801 10:57:58.873"/>
</kw>
<status status="PASS" starttime="20230801 10:57:52.690" endtime="20230801 10:57:58.873"/>
</kw>
<kw name="When Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:58.874" endtime="20230801 10:57:58.984"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:58.987" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:57:58.986" endtime="20230801 10:57:58.987"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:57:59.003" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:57:58.987" endtime="20230801 10:57:59.003"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.004" endtime="20230801 10:57:59.005"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.005" endtime="20230801 10:57:59.005"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:59.004" endtime="20230801 10:57:59.006"/>
</branch>
<status status="PASS" starttime="20230801 10:57:59.003" endtime="20230801 10:57:59.006"/>
</if>
<status status="PASS" starttime="20230801 10:57:58.985" endtime="20230801 10:57:59.006"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:57:59.007" endtime="20230801 10:57:59.261"/>
</kw>
<status status="PASS" starttime="20230801 10:57:58.874" endtime="20230801 10:57:59.262"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:59.264" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:57:59.264" endtime="20230801 10:57:59.264"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:57:59.272" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:57:59.265" endtime="20230801 10:57:59.272"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:57:59.273" endtime="20230801 10:57:59.273"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:59.272" endtime="20230801 10:57:59.273"/>
</branch>
<status status="PASS" starttime="20230801 10:57:59.272" endtime="20230801 10:57:59.273"/>
</if>
<status status="PASS" starttime="20230801 10:57:59.263" endtime="20230801 10:57:59.273"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 10:57:59.374" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 10:57:59.274" endtime="20230801 10:57:59.374"/>
</kw>
<status status="PASS" starttime="20230801 10:57:52.690" endtime="20230801 10:57:59.374"/>
</kw>
<kw name="Get_Leave_date with &quot;Ngày phép còn lại&quot;" library="common" sourcename="Get_Leave_date with &quot;${date}&quot;">
<var>${leave_date_before}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//div[contains(text(), '${date}')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:59.376" level="INFO">${element} = //div[contains(text(), 'Ngày phép còn lại')]</msg>
<status status="PASS" starttime="20230801 10:57:59.375" endtime="20230801 10:57:59.376"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:59.389" level="INFO">Waited for Element with selector //div[contains(text(), 'Ngày phép còn lại')] at state visible</msg>
<status status="PASS" starttime="20230801 10:57:59.377" endtime="20230801 10:57:59.389"/>
</kw>
<status status="PASS" starttime="20230801 10:57:59.376" endtime="20230801 10:57:59.389"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${text}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:57:59.420" level="INFO">Text: 'Ngày phép còn lại ( 8 Ngày phép)'</msg>
<msg timestamp="20230801 10:57:59.421" level="INFO">${text} = Ngày phép còn lại ( 8 Ngày phép)</msg>
<status status="PASS" starttime="20230801 10:57:59.390" endtime="20230801 10:57:59.421"/>
</kw>
<msg timestamp="20230801 10:57:59.421" level="INFO">${leave_date_before} = Ngày phép còn lại ( 8 Ngày phép)</msg>
<status status="PASS" starttime="20230801 10:57:59.375" endtime="20230801 10:57:59.421"/>
</kw>
<kw name="And Click select &quot;Loại phép&quot; with &quot;Làm remote&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:59.424" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:57:59.424" endtime="20230801 10:57:59.424"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:57:59.424" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:57:59.424" endtime="20230801 10:57:59.425"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:59.425" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:57:59.425" endtime="20230801 10:57:59.425"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:59.426" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:59.426" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:57:59.425" endtime="20230801 10:57:59.426"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:57:59.426" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:57:59.426" endtime="20230801 10:57:59.426"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:59.427" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:57:59.427" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:57:59.427" endtime="20230801 10:57:59.427"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.428" endtime="20230801 10:57:59.428"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.428" endtime="20230801 10:57:59.428"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:59.427" endtime="20230801 10:57:59.428"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.430" endtime="20230801 10:57:59.430"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.431" endtime="20230801 10:57:59.431"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.432" endtime="20230801 10:57:59.432"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:59.428" endtime="20230801 10:57:59.432"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.433" endtime="20230801 10:57:59.434"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.434" endtime="20230801 10:57:59.434"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:59.433" endtime="20230801 10:57:59.434"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.435" endtime="20230801 10:57:59.435"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.435" endtime="20230801 10:57:59.436"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:59.435" endtime="20230801 10:57:59.436"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.437" endtime="20230801 10:57:59.437"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.438" endtime="20230801 10:57:59.438"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:59.436" endtime="20230801 10:57:59.438"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.438" endtime="20230801 10:57:59.438"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.439" endtime="20230801 10:57:59.439"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:59.438" endtime="20230801 10:57:59.439"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.440" endtime="20230801 10:57:59.440"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.440" endtime="20230801 10:57:59.441"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:59.439" endtime="20230801 10:57:59.441"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.442" endtime="20230801 10:57:59.442"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:59.441" endtime="20230801 10:57:59.442"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:57:59.443" endtime="20230801 10:57:59.443"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:59.442" endtime="20230801 10:57:59.443"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.444" endtime="20230801 10:57:59.444"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.444" endtime="20230801 10:57:59.444"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:59.443" endtime="20230801 10:57:59.444"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.445" endtime="20230801 10:57:59.445"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:59.444" endtime="20230801 10:57:59.445"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.447" endtime="20230801 10:57:59.447"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:59.446" endtime="20230801 10:57:59.447"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.449" endtime="20230801 10:57:59.449"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:59.448" endtime="20230801 10:57:59.450"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:57:59.451" endtime="20230801 10:57:59.451"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:57:59.450" endtime="20230801 10:57:59.451"/>
</branch>
<status status="PASS" starttime="20230801 10:57:59.427" endtime="20230801 10:57:59.452"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:57:59.453" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:57:59.453" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:57:59.452" endtime="20230801 10:57:59.453"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:57:59.454" level="INFO">${text} = Làm remote</msg>
<status status="PASS" starttime="20230801 10:57:59.454" endtime="20230801 10:57:59.454"/>
</kw>
<status status="PASS" starttime="20230801 10:57:59.453" endtime="20230801 10:57:59.454"/>
</branch>
<status status="PASS" starttime="20230801 10:57:59.453" endtime="20230801 10:57:59.455"/>
</if>
<msg timestamp="20230801 10:57:59.455" level="INFO">${text} = Làm remote</msg>
<status status="PASS" starttime="20230801 10:57:59.423" endtime="20230801 10:57:59.455"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 10:57:59.457" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 10:57:59.456" endtime="20230801 10:57:59.457"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:57:59.477" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 10:57:59.459" endtime="20230801 10:57:59.477"/>
</kw>
<status status="PASS" starttime="20230801 10:57:59.457" endtime="20230801 10:57:59.479"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:59.480" endtime="20230801 10:57:59.797"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 10:57:59.800" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 10:57:59.799" endtime="20230801 10:57:59.800"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:57:59.801" level="INFO">Fills the text 'Làm remote' in the given field.</msg>
<status status="PASS" starttime="20230801 10:57:59.800" endtime="20230801 10:57:59.895"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:57:59.896" endtime="20230801 10:58:00.141"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:00.142" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:58:00.142" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:58:00.141" endtime="20230801 10:58:00.142"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:58:00.143" level="INFO">${STATE["Loại phép"]} = Làm remote</msg>
<status status="PASS" starttime="20230801 10:58:00.142" endtime="20230801 10:58:00.143"/>
</kw>
<status status="PASS" starttime="20230801 10:58:00.142" endtime="20230801 10:58:00.143"/>
</branch>
<status status="PASS" starttime="20230801 10:58:00.142" endtime="20230801 10:58:00.143"/>
</if>
<status status="PASS" starttime="20230801 10:57:59.422" endtime="20230801 10:58:00.144"/>
</kw>
<kw name="And Click select &quot;Thời gian&quot; with &quot;Cả ngày&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:00.147" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:58:00.147" endtime="20230801 10:58:00.147"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:00.147" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:58:00.147" endtime="20230801 10:58:00.147"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:00.149" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:58:00.149" endtime="20230801 10:58:00.149"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:00.150" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:00.150" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:58:00.149" endtime="20230801 10:58:00.150"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:00.151" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:58:00.150" endtime="20230801 10:58:00.151"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:00.152" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:00.152" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:58:00.151" endtime="20230801 10:58:00.152"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.152" endtime="20230801 10:58:00.152"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.152" endtime="20230801 10:58:00.152"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.152" endtime="20230801 10:58:00.154"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.154" endtime="20230801 10:58:00.154"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.154" endtime="20230801 10:58:00.155"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.155" endtime="20230801 10:58:00.155"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.154" endtime="20230801 10:58:00.155"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.156" endtime="20230801 10:58:00.156"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.156" endtime="20230801 10:58:00.156"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.155" endtime="20230801 10:58:00.156"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.157" endtime="20230801 10:58:00.157"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.157" endtime="20230801 10:58:00.157"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.156" endtime="20230801 10:58:00.157"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.158" endtime="20230801 10:58:00.158"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.158" endtime="20230801 10:58:00.158"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.157" endtime="20230801 10:58:00.158"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.158" endtime="20230801 10:58:00.158"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.159" endtime="20230801 10:58:00.159"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.158" endtime="20230801 10:58:00.159"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.159" endtime="20230801 10:58:00.160"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.160" endtime="20230801 10:58:00.160"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.159" endtime="20230801 10:58:00.160"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.161" endtime="20230801 10:58:00.161"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.160" endtime="20230801 10:58:00.161"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:58:00.163" endtime="20230801 10:58:00.163"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.162" endtime="20230801 10:58:00.163"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.164" endtime="20230801 10:58:00.165"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.165" endtime="20230801 10:58:00.166"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.163" endtime="20230801 10:58:00.166"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.168" endtime="20230801 10:58:00.168"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.167" endtime="20230801 10:58:00.168"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.170" endtime="20230801 10:58:00.170"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.169" endtime="20230801 10:58:00.171"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.172" endtime="20230801 10:58:00.172"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.171" endtime="20230801 10:58:00.172"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.173" endtime="20230801 10:58:00.176"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.173" endtime="20230801 10:58:00.176"/>
</branch>
<status status="PASS" starttime="20230801 10:58:00.152" endtime="20230801 10:58:00.177"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:00.181" level="INFO">Length is 7</msg>
<msg timestamp="20230801 10:58:00.181" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20230801 10:58:00.178" endtime="20230801 10:58:00.181"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:58:00.186" level="INFO">${text} = Cả ngày</msg>
<status status="PASS" starttime="20230801 10:58:00.185" endtime="20230801 10:58:00.186"/>
</kw>
<status status="PASS" starttime="20230801 10:58:00.182" endtime="20230801 10:58:00.186"/>
</branch>
<status status="PASS" starttime="20230801 10:58:00.182" endtime="20230801 10:58:00.186"/>
</if>
<msg timestamp="20230801 10:58:00.187" level="INFO">${text} = Cả ngày</msg>
<status status="PASS" starttime="20230801 10:58:00.146" endtime="20230801 10:58:00.187"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 10:58:00.190" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 10:58:00.189" endtime="20230801 10:58:00.190"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:58:00.207" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 10:58:00.193" endtime="20230801 10:58:00.207"/>
</kw>
<status status="PASS" starttime="20230801 10:58:00.190" endtime="20230801 10:58:00.207"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:00.209" endtime="20230801 10:58:00.349"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 10:58:00.350" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 10:58:00.350" endtime="20230801 10:58:00.350"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:58:00.351" level="INFO">Fills the text 'Cả ngày' in the given field.</msg>
<status status="PASS" starttime="20230801 10:58:00.351" endtime="20230801 10:58:00.394"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:00.394" endtime="20230801 10:58:00.685"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:00.686" level="INFO">Length is 7</msg>
<msg timestamp="20230801 10:58:00.686" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20230801 10:58:00.686" endtime="20230801 10:58:00.686"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:58:00.687" level="INFO">${STATE["Thời gian"]} = Cả ngày</msg>
<status status="PASS" starttime="20230801 10:58:00.687" endtime="20230801 10:58:00.687"/>
</kw>
<status status="PASS" starttime="20230801 10:58:00.686" endtime="20230801 10:58:00.688"/>
</branch>
<status status="PASS" starttime="20230801 10:58:00.686" endtime="20230801 10:58:00.688"/>
</if>
<status status="PASS" starttime="20230801 10:58:00.144" endtime="20230801 10:58:00.688"/>
</kw>
<kw name="And Enter leave date in &quot;Ngày bắt đầu&quot; with &quot;31-07-2023&quot;" library="common" sourcename="Enter leave date in &quot;${field}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>date</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:00.691" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:58:00.691" endtime="20230801 10:58:00.691"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:00.692" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:58:00.691" endtime="20230801 10:58:00.692"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:00.692" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:58:00.692" endtime="20230801 10:58:00.692"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:00.693" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:00.693" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:58:00.692" endtime="20230801 10:58:00.693"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:00.694" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:58:00.693" endtime="20230801 10:58:00.694"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:00.694" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:00.694" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:58:00.694" endtime="20230801 10:58:00.694"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.695" endtime="20230801 10:58:00.695"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.695" endtime="20230801 10:58:00.695"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.694" endtime="20230801 10:58:00.695"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.697" endtime="20230801 10:58:00.697"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.697" endtime="20230801 10:58:00.698"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.698" endtime="20230801 10:58:00.698"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.696" endtime="20230801 10:58:00.698"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.699" endtime="20230801 10:58:00.700"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.700" endtime="20230801 10:58:00.701"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.699" endtime="20230801 10:58:00.701"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.702" endtime="20230801 10:58:00.702"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.702" endtime="20230801 10:58:00.702"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.701" endtime="20230801 10:58:00.702"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.703" endtime="20230801 10:58:00.703"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.703" endtime="20230801 10:58:00.704"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.703" endtime="20230801 10:58:00.704"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.704" endtime="20230801 10:58:00.704"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.705" endtime="20230801 10:58:00.705"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.704" endtime="20230801 10:58:00.706"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.707" endtime="20230801 10:58:00.707"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.709" endtime="20230801 10:58:00.709"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.706" endtime="20230801 10:58:00.709"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.710" endtime="20230801 10:58:00.711"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.709" endtime="20230801 10:58:00.711"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:58:00.712" endtime="20230801 10:58:00.712"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.711" endtime="20230801 10:58:00.713"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.717" endtime="20230801 10:58:00.719"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.722" endtime="20230801 10:58:00.723"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.713" endtime="20230801 10:58:00.723"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.725" endtime="20230801 10:58:00.725"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.724" endtime="20230801 10:58:00.725"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.726" endtime="20230801 10:58:00.726"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.725" endtime="20230801 10:58:00.726"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.726" endtime="20230801 10:58:00.727"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.726" endtime="20230801 10:58:00.727"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:00.727" endtime="20230801 10:58:00.727"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:00.727" endtime="20230801 10:58:00.727"/>
</branch>
<status status="PASS" starttime="20230801 10:58:00.694" endtime="20230801 10:58:00.729"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:00.731" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:58:00.731" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:58:00.730" endtime="20230801 10:58:00.731"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:58:00.736" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 10:58:00.735" endtime="20230801 10:58:00.736"/>
</kw>
<status status="PASS" starttime="20230801 10:58:00.733" endtime="20230801 10:58:00.736"/>
</branch>
<status status="PASS" starttime="20230801 10:58:00.733" endtime="20230801 10:58:00.736"/>
</if>
<msg timestamp="20230801 10:58:00.737" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 10:58:00.690" endtime="20230801 10:58:00.737"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//input[@placeholder="${field}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:00.739" level="INFO">${element} = xpath=//input[@placeholder="Ngày bắt đầu"]</msg>
<status status="PASS" starttime="20230801 10:58:00.738" endtime="20230801 10:58:00.739"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:00.739" endtime="20230801 10:58:01.389"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:01.390" endtime="20230801 10:58:01.736"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:58:01.737" level="INFO">Fills the text '31-07-2023' in the given field.</msg>
<status status="PASS" starttime="20230801 10:58:01.737" endtime="20230801 10:58:01.989"/>
</kw>
<status status="PASS" starttime="20230801 10:58:00.689" endtime="20230801 10:58:01.990"/>
</kw>
<kw name="And Enter leave date in &quot;Ngày kết thúc&quot; with &quot;01-08-2023&quot;" library="common" sourcename="Enter leave date in &quot;${field}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>date</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:01.992" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:58:01.992" endtime="20230801 10:58:01.992"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:01.993" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:58:01.992" endtime="20230801 10:58:01.993"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:01.994" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:58:01.993" endtime="20230801 10:58:01.994"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:01.995" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:01.995" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:58:01.995" endtime="20230801 10:58:01.995"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:01.996" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:58:01.995" endtime="20230801 10:58:01.997"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:01.997" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:01.997" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:58:01.997" endtime="20230801 10:58:01.997"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:01.998" endtime="20230801 10:58:01.998"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:01.998" endtime="20230801 10:58:01.999"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:01.998" endtime="20230801 10:58:01.999"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:01.999" endtime="20230801 10:58:02.000"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.000" endtime="20230801 10:58:02.000"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.000" endtime="20230801 10:58:02.000"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:01.999" endtime="20230801 10:58:02.001"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.002" endtime="20230801 10:58:02.002"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.003" endtime="20230801 10:58:02.003"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.001" endtime="20230801 10:58:02.003"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.004" endtime="20230801 10:58:02.004"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.005" endtime="20230801 10:58:02.005"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.003" endtime="20230801 10:58:02.005"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.006" endtime="20230801 10:58:02.006"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.007" endtime="20230801 10:58:02.007"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.006" endtime="20230801 10:58:02.007"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.011" endtime="20230801 10:58:02.014"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.014" endtime="20230801 10:58:02.015"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.009" endtime="20230801 10:58:02.015"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.017" endtime="20230801 10:58:02.018"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.018" endtime="20230801 10:58:02.019"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.016" endtime="20230801 10:58:02.019"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.021" endtime="20230801 10:58:02.021"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.021" endtime="20230801 10:58:02.021"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:58:02.022" endtime="20230801 10:58:02.022"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.022" endtime="20230801 10:58:02.022"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.023" endtime="20230801 10:58:02.023"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.024" endtime="20230801 10:58:02.024"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.023" endtime="20230801 10:58:02.024"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.025" endtime="20230801 10:58:02.025"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.025" endtime="20230801 10:58:02.025"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.026" endtime="20230801 10:58:02.026"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.025" endtime="20230801 10:58:02.026"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.027" endtime="20230801 10:58:02.027"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.026" endtime="20230801 10:58:02.027"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.027" endtime="20230801 10:58:02.027"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.027" endtime="20230801 10:58:02.028"/>
</branch>
<status status="PASS" starttime="20230801 10:58:01.998" endtime="20230801 10:58:02.028"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:02.028" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:58:02.028" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:58:02.028" endtime="20230801 10:58:02.028"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:58:02.032" level="INFO">${text} = 01-08-2023</msg>
<status status="PASS" starttime="20230801 10:58:02.030" endtime="20230801 10:58:02.032"/>
</kw>
<status status="PASS" starttime="20230801 10:58:02.028" endtime="20230801 10:58:02.032"/>
</branch>
<status status="PASS" starttime="20230801 10:58:02.028" endtime="20230801 10:58:02.032"/>
</if>
<msg timestamp="20230801 10:58:02.033" level="INFO">${text} = 01-08-2023</msg>
<status status="PASS" starttime="20230801 10:58:01.991" endtime="20230801 10:58:02.033"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//input[@placeholder="${field}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:02.034" level="INFO">${element} = xpath=//input[@placeholder="Ngày kết thúc"]</msg>
<status status="PASS" starttime="20230801 10:58:02.034" endtime="20230801 10:58:02.034"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:02.034" endtime="20230801 10:58:02.296"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:02.297" endtime="20230801 10:58:02.356"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:58:02.357" level="INFO">Fills the text '01-08-2023' in the given field.</msg>
<status status="PASS" starttime="20230801 10:58:02.356" endtime="20230801 10:58:02.530"/>
</kw>
<status status="PASS" starttime="20230801 10:58:01.991" endtime="20230801 10:58:02.530"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Lý do&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:02.533" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:58:02.533" endtime="20230801 10:58:02.533"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:02.534" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:58:02.533" endtime="20230801 10:58:02.534"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:02.535" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:58:02.534" endtime="20230801 10:58:02.535"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:02.535" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:02.535" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:58:02.535" endtime="20230801 10:58:02.535"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:02.536" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 10:58:02.536" endtime="20230801 10:58:02.536"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:02.537" level="INFO">Length is 1</msg>
<msg timestamp="20230801 10:58:02.537" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 10:58:02.537" endtime="20230801 10:58:02.537"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.539" endtime="20230801 10:58:02.539"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.539" endtime="20230801 10:58:02.540"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.537" endtime="20230801 10:58:02.540"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.541" endtime="20230801 10:58:02.541"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.542" endtime="20230801 10:58:02.542"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.543" endtime="20230801 10:58:02.543"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.540" endtime="20230801 10:58:02.543"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.545" endtime="20230801 10:58:02.545"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.546" endtime="20230801 10:58:02.547"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.544" endtime="20230801 10:58:02.547"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.548" endtime="20230801 10:58:02.549"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.549" endtime="20230801 10:58:02.549"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.547" endtime="20230801 10:58:02.549"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.551" endtime="20230801 10:58:02.551"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.551" endtime="20230801 10:58:02.552"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.550" endtime="20230801 10:58:02.552"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.553" endtime="20230801 10:58:02.553"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.555" endtime="20230801 10:58:02.555"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.552" endtime="20230801 10:58:02.555"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.557" endtime="20230801 10:58:02.557"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.558" endtime="20230801 10:58:02.558"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.556" endtime="20230801 10:58:02.558"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.559" endtime="20230801 10:58:02.559"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.558" endtime="20230801 10:58:02.559"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:58:02.560" endtime="20230801 10:58:02.561"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.560" endtime="20230801 10:58:02.561"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.563" endtime="20230801 10:58:02.563"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.564" endtime="20230801 10:58:02.564"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.561" endtime="20230801 10:58:02.564"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.566" endtime="20230801 10:58:02.567"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.565" endtime="20230801 10:58:02.569"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.574" endtime="20230801 10:58:02.574"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.571" endtime="20230801 10:58:02.575"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:02.576" endtime="20230801 10:58:02.577"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:02.575" endtime="20230801 10:58:02.577"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230801 10:58:02.579" level="INFO">${new_text} = Facilis sed aliquid ratione excepturi minus.</msg>
<status status="PASS" starttime="20230801 10:58:02.578" endtime="20230801 10:58:02.579"/>
</kw>
<status status="PASS" starttime="20230801 10:58:02.578" endtime="20230801 10:58:02.580"/>
</branch>
<status status="PASS" starttime="20230801 10:58:02.537" endtime="20230801 10:58:02.580"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:02.583" level="INFO">Length is 8</msg>
<msg timestamp="20230801 10:58:02.583" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 10:58:02.582" endtime="20230801 10:58:02.583"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:58:02.586" level="INFO">${text} = Facilis sed aliquid ratione excepturi minus.</msg>
<status status="PASS" starttime="20230801 10:58:02.585" endtime="20230801 10:58:02.586"/>
</kw>
<status status="PASS" starttime="20230801 10:58:02.585" endtime="20230801 10:58:02.586"/>
</branch>
<status status="PASS" starttime="20230801 10:58:02.584" endtime="20230801 10:58:02.587"/>
</if>
<msg timestamp="20230801 10:58:02.587" level="INFO">${text} = Facilis sed aliquid ratione excepturi minus.</msg>
<status status="PASS" starttime="20230801 10:58:02.532" endtime="20230801 10:58:02.587"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230801 10:58:02.589" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Lý do"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230801 10:58:02.587" endtime="20230801 10:58:02.589"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:02.589" endtime="20230801 10:58:02.922"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:58:02.923" level="INFO">Fills the text 'Facilis sed aliquid ratione excepturi minus.' in the given field.</msg>
<status status="PASS" starttime="20230801 10:58:02.922" endtime="20230801 10:58:03.125"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:03.125" level="INFO">Length is 44</msg>
<msg timestamp="20230801 10:58:03.126" level="INFO">${cnt} = 44</msg>
<status status="PASS" starttime="20230801 10:58:03.125" endtime="20230801 10:58:03.126"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:58:03.127" level="INFO">${STATE["Lý do"]} = Facilis sed aliquid ratione excepturi minus.</msg>
<status status="PASS" starttime="20230801 10:58:03.127" endtime="20230801 10:58:03.127"/>
</kw>
<status status="PASS" starttime="20230801 10:58:03.126" endtime="20230801 10:58:03.127"/>
</branch>
<status status="PASS" starttime="20230801 10:58:03.126" endtime="20230801 10:58:03.127"/>
</if>
<status status="PASS" starttime="20230801 10:58:02.531" endtime="20230801 10:58:03.127"/>
</kw>
<kw name="And Click &quot;Lưu và tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:03.131" endtime="20230801 10:58:03.458"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:03.459" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:58:03.459" endtime="20230801 10:58:03.459"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:58:03.509" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:58:03.459" endtime="20230801 10:58:03.509"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:58:03.510" endtime="20230801 10:58:03.511"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:58:03.511" endtime="20230801 10:58:03.511"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:03.509" endtime="20230801 10:58:03.511"/>
</branch>
<status status="PASS" starttime="20230801 10:58:03.509" endtime="20230801 10:58:03.512"/>
</if>
<status status="PASS" starttime="20230801 10:58:03.458" endtime="20230801 10:58:03.512"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:58:03.513" endtime="20230801 10:58:03.548"/>
</kw>
<status status="PASS" starttime="20230801 10:58:03.130" endtime="20230801 10:58:03.549"/>
</kw>
<kw name="Then User look message &quot;Tạo thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:03.552" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:58:03.551" endtime="20230801 10:58:03.552"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:03.553" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:03.553" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:58:03.552" endtime="20230801 10:58:03.553"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 10:58:03.553" endtime="20230801 10:58:03.554"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:03.553" endtime="20230801 10:58:03.554"/>
</branch>
<status status="PASS" starttime="20230801 10:58:03.553" endtime="20230801 10:58:03.554"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:58:06.507" level="INFO">Text: 'Tạo thành công'</msg>
<status status="PASS" starttime="20230801 10:58:03.555" endtime="20230801 10:58:06.507"/>
</kw>
<status status="PASS" starttime="20230801 10:58:03.554" endtime="20230801 10:58:06.509"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:06.510" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 10:58:06.509" endtime="20230801 10:58:06.510"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:58:06.971" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-10.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-10.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 10:58:06.971" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 10:58:06.972" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 10:58:06.514" endtime="20230801 10:58:06.975"/>
</kw>
<status status="FAIL" starttime="20230801 10:58:06.511" endtime="20230801 10:58:06.976"/>
</kw>
<msg timestamp="20230801 10:58:06.976" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 10:58:06.510" endtime="20230801 10:58:06.976"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:58:06.978" endtime="20230801 10:58:06.978"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:06.977" endtime="20230801 10:58:06.978"/>
</branch>
<status status="PASS" starttime="20230801 10:58:06.977" endtime="20230801 10:58:06.978"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:58:09.476" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 10:58:06.983" endtime="20230801 10:58:09.477"/>
</kw>
<status status="PASS" starttime="20230801 10:58:06.979" endtime="20230801 10:58:09.477"/>
</kw>
<status status="PASS" starttime="20230801 10:58:03.551" endtime="20230801 10:58:09.477"/>
</kw>
<kw name="And User look title &quot;Tạo mới ngày nghỉ&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:09.479" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:58:09.479" endtime="20230801 10:58:09.479"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:58:09.484" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:58:09.480" endtime="20230801 10:58:09.484"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:58:09.485" endtime="20230801 10:58:09.485"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:09.485" endtime="20230801 10:58:09.485"/>
</branch>
<status status="PASS" starttime="20230801 10:58:09.485" endtime="20230801 10:58:09.485"/>
</if>
<status status="PASS" starttime="20230801 10:58:09.479" endtime="20230801 10:58:09.486"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:09.487" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:58:09.487" endtime="20230801 10:58:09.487"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:58:09.502" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:58:09.489" endtime="20230801 10:58:09.502"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:58:09.502" endtime="20230801 10:58:09.503"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:09.502" endtime="20230801 10:58:09.503"/>
</branch>
<status status="PASS" starttime="20230801 10:58:09.502" endtime="20230801 10:58:09.503"/>
</if>
<status status="PASS" starttime="20230801 10:58:09.486" endtime="20230801 10:58:09.503"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230801 10:58:09.508" level="INFO">Title: 'Tạo mới ngày nghỉ'</msg>
<msg timestamp="20230801 10:58:09.508" level="INFO">${actualTitle} = Tạo mới ngày nghỉ</msg>
<status status="PASS" starttime="20230801 10:58:09.504" endtime="20230801 10:58:09.508"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230801 10:58:09.508" endtime="20230801 10:58:09.509"/>
</kw>
<status status="PASS" starttime="20230801 10:58:09.486" endtime="20230801 10:58:09.509"/>
</kw>
<status status="PASS" starttime="20230801 10:58:09.478" endtime="20230801 10:58:09.509"/>
</kw>
<kw name="Get_Leave_date with &quot;Ngày phép còn lại&quot;" library="common" sourcename="Get_Leave_date with &quot;${date}&quot;">
<var>${leave_date_after}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//div[contains(text(), '${date}')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:09.512" level="INFO">${element} = //div[contains(text(), 'Ngày phép còn lại')]</msg>
<status status="PASS" starttime="20230801 10:58:09.511" endtime="20230801 10:58:09.512"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:58:09.527" level="INFO">Waited for Element with selector //div[contains(text(), 'Ngày phép còn lại')] at state visible</msg>
<status status="PASS" starttime="20230801 10:58:09.517" endtime="20230801 10:58:09.528"/>
</kw>
<status status="PASS" starttime="20230801 10:58:09.512" endtime="20230801 10:58:09.529"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${text}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:58:09.561" level="INFO">Text: 'Ngày phép còn lại ( 8 Ngày phép)'</msg>
<msg timestamp="20230801 10:58:09.562" level="INFO">${text} = Ngày phép còn lại ( 8 Ngày phép)</msg>
<status status="PASS" starttime="20230801 10:58:09.530" endtime="20230801 10:58:09.562"/>
</kw>
<msg timestamp="20230801 10:58:09.562" level="INFO">${leave_date_after} = Ngày phép còn lại ( 8 Ngày phép)</msg>
<status status="PASS" starttime="20230801 10:58:09.509" endtime="20230801 10:58:09.562"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${leave_date_before}</arg>
<arg>${leave_date_after}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230801 10:58:09.563" endtime="20230801 10:58:09.565"/>
</kw>
<kw name="When Click &quot;Huỷ bỏ&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:09.569" endtime="20230801 10:58:10.110"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:10.111" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:58:10.111" endtime="20230801 10:58:10.111"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:58:10.175" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:58:10.112" endtime="20230801 10:58:10.175"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:58:10.177" endtime="20230801 10:58:10.177"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:58:10.178" endtime="20230801 10:58:10.179"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:10.176" endtime="20230801 10:58:10.179"/>
</branch>
<status status="PASS" starttime="20230801 10:58:10.176" endtime="20230801 10:58:10.180"/>
</if>
<status status="PASS" starttime="20230801 10:58:10.110" endtime="20230801 10:58:10.180"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:58:10.181" endtime="20230801 10:58:10.342"/>
</kw>
<status status="PASS" starttime="20230801 10:58:09.566" endtime="20230801 10:58:10.343"/>
</kw>
<kw name="And Click on the &quot;Xóa&quot; button in the &quot;Họ và tên&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:10.349" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:58:10.347" endtime="20230801 10:58:10.349"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:58:10.359" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 10:58:10.349" endtime="20230801 10:58:10.359"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:58:11.801" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 10:58:10.364" endtime="20230801 10:58:11.801"/>
</kw>
<status status="PASS" starttime="20230801 10:58:10.360" endtime="20230801 10:58:11.802"/>
</kw>
<status status="PASS" starttime="20230801 10:58:10.359" endtime="20230801 10:58:11.802"/>
</branch>
<status status="PASS" starttime="20230801 10:58:10.359" endtime="20230801 10:58:11.803"/>
</if>
<status status="PASS" starttime="20230801 10:58:10.346" endtime="20230801 10:58:11.803"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 10:58:11.856" level="INFO">Found 3 Locators successfully.</msg>
<msg timestamp="20230801 10:58:11.858" level="INFO">${element} = ['element=367e6381-87c7-46d4-ba3b-60c867055a89', 'element=a70c9a9e-7816-4280-9022-c3b8384e58bd', 'element=00dfd54e-4766-49c0-9ba4-5b3cdf4abf54']</msg>
<status status="PASS" starttime="20230801 10:58:11.804" endtime="20230801 10:58:11.858"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:11.859" endtime="20230801 10:58:12.137"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:12.139" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:58:12.139" endtime="20230801 10:58:12.139"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:58:12.159" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 10:58:12.140" endtime="20230801 10:58:12.160"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:12.161" endtime="20230801 10:58:12.577"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 10:58:12.679" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 10:58:12.577" endtime="20230801 10:58:12.679"/>
</kw>
<status status="PASS" starttime="20230801 10:58:12.160" endtime="20230801 10:58:12.679"/>
</branch>
<status status="PASS" starttime="20230801 10:58:12.160" endtime="20230801 10:58:12.679"/>
</if>
<status status="PASS" starttime="20230801 10:58:12.137" endtime="20230801 10:58:12.680"/>
</kw>
<status status="PASS" starttime="20230801 10:58:10.344" endtime="20230801 10:58:12.681"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 10:58:12.844" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 10:58:12.686" endtime="20230801 10:58:12.844"/>
</kw>
<status status="PASS" starttime="20230801 10:58:12.684" endtime="20230801 10:58:12.845"/>
</kw>
<status status="PASS" starttime="20230801 10:57:50.776" endtime="20230801 10:58:12.846"/>
</test>
<test id="s1-t9" name="STA-09 Verify that Create leave management successfully with &quot;Nghỉ phép không lương&quot; &amp; &quot;Lưu lại&quot; button" line="88">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 10:58:12.859" endtime="20230801 10:58:12.859"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 10:58:12.861" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\ead0e50e-a3e7-4de9-8802-eeb9bd8dc1c6"}</msg>
<msg timestamp="20230801 10:58:15.171" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\ead0e50e-a3e7-4de9-8802-eeb9bd8dc1c6"}</msg>
<status status="PASS" starttime="20230801 10:58:12.860" endtime="20230801 10:58:15.171"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 10:58:17.113" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 10:58:17.114" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 10:58:15.172" endtime="20230801 10:58:17.114"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 10:58:17.115" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 10:58:17.114" endtime="20230801 10:58:17.115"/>
</kw>
<status status="PASS" starttime="20230801 10:58:12.858" endtime="20230801 10:58:17.116"/>
</kw>
<kw name="Go to create leave date page" library="common">
<kw name="Login to Staff" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;staff@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:17.124" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:58:17.123" endtime="20230801 10:58:17.124"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:17.125" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:58:17.125" endtime="20230801 10:58:17.125"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:17.127" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:58:17.126" endtime="20230801 10:58:17.127"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:17.129" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:17.129" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:58:17.128" endtime="20230801 10:58:17.129"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:17.131" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:58:17.130" endtime="20230801 10:58:17.131"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:17.132" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:17.132" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:58:17.132" endtime="20230801 10:58:17.133"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.134" endtime="20230801 10:58:17.134"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.135" endtime="20230801 10:58:17.135"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:17.133" endtime="20230801 10:58:17.135"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.137" endtime="20230801 10:58:17.137"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.138" endtime="20230801 10:58:17.138"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.138" endtime="20230801 10:58:17.139"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:17.136" endtime="20230801 10:58:17.139"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.140" endtime="20230801 10:58:17.141"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.141" endtime="20230801 10:58:17.142"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:17.139" endtime="20230801 10:58:17.142"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.143" endtime="20230801 10:58:17.143"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.144" endtime="20230801 10:58:17.145"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:17.142" endtime="20230801 10:58:17.145"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.146" endtime="20230801 10:58:17.146"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.147" endtime="20230801 10:58:17.147"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:17.145" endtime="20230801 10:58:17.147"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.149" endtime="20230801 10:58:17.150"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.151" endtime="20230801 10:58:17.151"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:17.147" endtime="20230801 10:58:17.151"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.153" endtime="20230801 10:58:17.153"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.153" endtime="20230801 10:58:17.154"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:17.152" endtime="20230801 10:58:17.154"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.155" endtime="20230801 10:58:17.155"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:17.154" endtime="20230801 10:58:17.155"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:58:17.156" endtime="20230801 10:58:17.156"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:17.156" endtime="20230801 10:58:17.157"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.157" endtime="20230801 10:58:17.157"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.159" endtime="20230801 10:58:17.159"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:17.157" endtime="20230801 10:58:17.159"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.160" endtime="20230801 10:58:17.161"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:17.160" endtime="20230801 10:58:17.161"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.162" endtime="20230801 10:58:17.163"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:17.161" endtime="20230801 10:58:17.163"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.164" endtime="20230801 10:58:17.164"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:17.163" endtime="20230801 10:58:17.165"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:17.166" endtime="20230801 10:58:17.166"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:17.165" endtime="20230801 10:58:17.166"/>
</branch>
<status status="PASS" starttime="20230801 10:58:17.133" endtime="20230801 10:58:17.166"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:17.168" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:58:17.168" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:58:17.167" endtime="20230801 10:58:17.168"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:58:17.170" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:58:17.169" endtime="20230801 10:58:17.170"/>
</kw>
<status status="PASS" starttime="20230801 10:58:17.168" endtime="20230801 10:58:17.171"/>
</branch>
<status status="PASS" starttime="20230801 10:58:17.168" endtime="20230801 10:58:17.171"/>
</if>
<msg timestamp="20230801 10:58:17.172" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:58:17.122" endtime="20230801 10:58:17.172"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:58:17.175" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:58:17.172" endtime="20230801 10:58:17.176"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:17.176" endtime="20230801 10:58:19.018"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:58:19.020" level="INFO">Fills the text 'staff@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230801 10:58:19.020" endtime="20230801 10:58:19.133"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:19.134" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:58:19.134" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:58:19.133" endtime="20230801 10:58:19.134"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:58:19.136" level="INFO">${STATE["Tên đăng nhập"]} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:58:19.135" endtime="20230801 10:58:19.137"/>
</kw>
<status status="PASS" starttime="20230801 10:58:19.135" endtime="20230801 10:58:19.137"/>
</branch>
<status status="PASS" starttime="20230801 10:58:19.134" endtime="20230801 10:58:19.137"/>
</if>
<status status="PASS" starttime="20230801 10:58:17.121" endtime="20230801 10:58:19.137"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Tester@123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:19.141" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:58:19.140" endtime="20230801 10:58:19.141"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:19.142" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:58:19.142" endtime="20230801 10:58:19.142"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:19.143" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:58:19.143" endtime="20230801 10:58:19.143"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:19.145" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:19.145" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:58:19.144" endtime="20230801 10:58:19.145"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:19.147" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:58:19.146" endtime="20230801 10:58:19.147"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:19.148" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:19.148" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:58:19.147" endtime="20230801 10:58:19.148"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.149" endtime="20230801 10:58:19.149"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.150" endtime="20230801 10:58:19.150"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:19.148" endtime="20230801 10:58:19.150"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.151" endtime="20230801 10:58:19.152"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.152" endtime="20230801 10:58:19.152"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.153" endtime="20230801 10:58:19.153"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:19.151" endtime="20230801 10:58:19.154"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.155" endtime="20230801 10:58:19.156"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.156" endtime="20230801 10:58:19.156"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:19.154" endtime="20230801 10:58:19.157"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.158" endtime="20230801 10:58:19.158"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.158" endtime="20230801 10:58:19.159"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:19.157" endtime="20230801 10:58:19.159"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.160" endtime="20230801 10:58:19.161"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.162" endtime="20230801 10:58:19.162"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:19.159" endtime="20230801 10:58:19.162"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.164" endtime="20230801 10:58:19.164"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.164" endtime="20230801 10:58:19.165"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:19.163" endtime="20230801 10:58:19.165"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.166" endtime="20230801 10:58:19.166"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.167" endtime="20230801 10:58:19.167"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:19.165" endtime="20230801 10:58:19.167"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.169" endtime="20230801 10:58:19.169"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:19.167" endtime="20230801 10:58:19.170"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:58:19.171" endtime="20230801 10:58:19.171"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:19.170" endtime="20230801 10:58:19.172"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.173" endtime="20230801 10:58:19.173"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.174" endtime="20230801 10:58:19.174"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:19.172" endtime="20230801 10:58:19.174"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.176" endtime="20230801 10:58:19.176"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:19.175" endtime="20230801 10:58:19.176"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.177" endtime="20230801 10:58:19.178"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:19.176" endtime="20230801 10:58:19.178"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.179" endtime="20230801 10:58:19.179"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:19.179" endtime="20230801 10:58:19.180"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.181" endtime="20230801 10:58:19.181"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:19.180" endtime="20230801 10:58:19.182"/>
</branch>
<status status="PASS" starttime="20230801 10:58:19.148" endtime="20230801 10:58:19.182"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:19.183" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:58:19.183" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:58:19.183" endtime="20230801 10:58:19.183"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:58:19.186" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:58:19.185" endtime="20230801 10:58:19.186"/>
</kw>
<status status="PASS" starttime="20230801 10:58:19.184" endtime="20230801 10:58:19.186"/>
</branch>
<status status="PASS" starttime="20230801 10:58:19.184" endtime="20230801 10:58:19.187"/>
</if>
<msg timestamp="20230801 10:58:19.187" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:58:19.139" endtime="20230801 10:58:19.187"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:58:19.189" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:58:19.187" endtime="20230801 10:58:19.189"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:19.190" endtime="20230801 10:58:19.346"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:58:19.347" level="INFO">Fills the text 'Tester@123' in the given field.</msg>
<status status="PASS" starttime="20230801 10:58:19.346" endtime="20230801 10:58:19.407"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:19.409" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:58:19.409" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:58:19.407" endtime="20230801 10:58:19.409"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:58:19.413" level="INFO">${STATE["Mật khẩu"]} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:58:19.411" endtime="20230801 10:58:19.413"/>
</kw>
<status status="PASS" starttime="20230801 10:58:19.410" endtime="20230801 10:58:19.413"/>
</branch>
<status status="PASS" starttime="20230801 10:58:19.409" endtime="20230801 10:58:19.413"/>
</if>
<status status="PASS" starttime="20230801 10:58:19.138" endtime="20230801 10:58:19.414"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:19.415" endtime="20230801 10:58:19.802"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:19.804" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:58:19.803" endtime="20230801 10:58:19.804"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:58:19.819" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:58:19.805" endtime="20230801 10:58:19.819"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.821" endtime="20230801 10:58:19.821"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.821" endtime="20230801 10:58:19.822"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:19.820" endtime="20230801 10:58:19.822"/>
</branch>
<status status="PASS" starttime="20230801 10:58:19.819" endtime="20230801 10:58:19.822"/>
</if>
<status status="PASS" starttime="20230801 10:58:19.802" endtime="20230801 10:58:19.823"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:58:19.823" endtime="20230801 10:58:19.891"/>
</kw>
<status status="PASS" starttime="20230801 10:58:19.414" endtime="20230801 10:58:19.891"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:19.894" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:58:19.893" endtime="20230801 10:58:19.894"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:19.895" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:19.896" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:58:19.895" endtime="20230801 10:58:19.896"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 10:58:19.897" endtime="20230801 10:58:19.897"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:19.896" endtime="20230801 10:58:19.897"/>
</branch>
<status status="PASS" starttime="20230801 10:58:19.896" endtime="20230801 10:58:19.897"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:58:21.125" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 10:58:19.902" endtime="20230801 10:58:21.126"/>
</kw>
<status status="PASS" starttime="20230801 10:58:19.897" endtime="20230801 10:58:21.126"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:21.127" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 10:58:21.127" endtime="20230801 10:58:21.128"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:58:22.169" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-11.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-11.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 10:58:22.169" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 10:58:22.170" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 10:58:21.132" endtime="20230801 10:58:22.173"/>
</kw>
<status status="FAIL" starttime="20230801 10:58:21.129" endtime="20230801 10:58:22.174"/>
</kw>
<msg timestamp="20230801 10:58:22.174" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 10:58:21.128" endtime="20230801 10:58:22.174"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:58:22.175" endtime="20230801 10:58:22.176"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:22.175" endtime="20230801 10:58:22.176"/>
</branch>
<status status="PASS" starttime="20230801 10:58:22.174" endtime="20230801 10:58:22.176"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:58:24.191" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 10:58:22.180" endtime="20230801 10:58:24.192"/>
</kw>
<status status="PASS" starttime="20230801 10:58:22.177" endtime="20230801 10:58:24.192"/>
</kw>
<status status="PASS" starttime="20230801 10:58:19.892" endtime="20230801 10:58:24.193"/>
</kw>
<status status="PASS" starttime="20230801 10:58:17.120" endtime="20230801 10:58:24.193"/>
</kw>
<kw name="When Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:24.196" endtime="20230801 10:58:24.414"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:24.416" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:58:24.416" endtime="20230801 10:58:24.416"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:58:24.619" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:58:24.417" endtime="20230801 10:58:24.619"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.621" endtime="20230801 10:58:24.621"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.622" endtime="20230801 10:58:24.622"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:24.620" endtime="20230801 10:58:24.622"/>
</branch>
<status status="PASS" starttime="20230801 10:58:24.619" endtime="20230801 10:58:24.623"/>
</if>
<status status="PASS" starttime="20230801 10:58:24.415" endtime="20230801 10:58:24.623"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:58:24.624" endtime="20230801 10:58:24.676"/>
</kw>
<status status="PASS" starttime="20230801 10:58:24.194" endtime="20230801 10:58:24.676"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:24.678" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:58:24.677" endtime="20230801 10:58:24.678"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:58:24.689" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:58:24.679" endtime="20230801 10:58:24.689"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:58:24.689" endtime="20230801 10:58:24.689"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:24.689" endtime="20230801 10:58:24.689"/>
</branch>
<status status="PASS" starttime="20230801 10:58:24.689" endtime="20230801 10:58:24.690"/>
</if>
<status status="PASS" starttime="20230801 10:58:24.676" endtime="20230801 10:58:24.690"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 10:58:24.790" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 10:58:24.690" endtime="20230801 10:58:24.790"/>
</kw>
<status status="PASS" starttime="20230801 10:58:17.119" endtime="20230801 10:58:24.791"/>
</kw>
<kw name="And Click select &quot;Loại phép&quot; with &quot;Nghỉ phép không lương&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:24.793" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:58:24.793" endtime="20230801 10:58:24.793"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:24.795" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:58:24.794" endtime="20230801 10:58:24.795"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:24.796" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:58:24.795" endtime="20230801 10:58:24.796"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:24.797" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:24.797" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:58:24.796" endtime="20230801 10:58:24.797"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:24.798" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:58:24.797" endtime="20230801 10:58:24.798"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:24.799" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:24.799" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:58:24.799" endtime="20230801 10:58:24.799"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.800" endtime="20230801 10:58:24.801"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.802" endtime="20230801 10:58:24.802"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:24.799" endtime="20230801 10:58:24.802"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.803" endtime="20230801 10:58:24.804"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.804" endtime="20230801 10:58:24.805"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.805" endtime="20230801 10:58:24.806"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:24.803" endtime="20230801 10:58:24.806"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.807" endtime="20230801 10:58:24.807"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.807" endtime="20230801 10:58:24.809"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:24.806" endtime="20230801 10:58:24.809"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.810" endtime="20230801 10:58:24.811"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.812" endtime="20230801 10:58:24.813"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:24.809" endtime="20230801 10:58:24.813"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.816" endtime="20230801 10:58:24.816"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.818" endtime="20230801 10:58:24.818"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:24.814" endtime="20230801 10:58:24.818"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.819" endtime="20230801 10:58:24.820"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.820" endtime="20230801 10:58:24.821"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:24.819" endtime="20230801 10:58:24.821"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.822" endtime="20230801 10:58:24.822"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.823" endtime="20230801 10:58:24.823"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:24.821" endtime="20230801 10:58:24.823"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.824" endtime="20230801 10:58:24.825"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:24.824" endtime="20230801 10:58:24.825"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:58:24.825" endtime="20230801 10:58:24.825"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:24.825" endtime="20230801 10:58:24.826"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.826" endtime="20230801 10:58:24.826"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.827" endtime="20230801 10:58:24.827"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:24.826" endtime="20230801 10:58:24.829"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.832" endtime="20230801 10:58:24.833"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:24.830" endtime="20230801 10:58:24.833"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.835" endtime="20230801 10:58:24.835"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:24.833" endtime="20230801 10:58:24.835"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.836" endtime="20230801 10:58:24.837"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:24.836" endtime="20230801 10:58:24.837"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:24.838" endtime="20230801 10:58:24.838"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:24.837" endtime="20230801 10:58:24.838"/>
</branch>
<status status="PASS" starttime="20230801 10:58:24.799" endtime="20230801 10:58:24.839"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:24.839" level="INFO">Length is 21</msg>
<msg timestamp="20230801 10:58:24.839" level="INFO">${cnt} = 21</msg>
<status status="PASS" starttime="20230801 10:58:24.839" endtime="20230801 10:58:24.839"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:58:24.841" level="INFO">${text} = Nghỉ phép không lương</msg>
<status status="PASS" starttime="20230801 10:58:24.840" endtime="20230801 10:58:24.841"/>
</kw>
<status status="PASS" starttime="20230801 10:58:24.840" endtime="20230801 10:58:24.841"/>
</branch>
<status status="PASS" starttime="20230801 10:58:24.840" endtime="20230801 10:58:24.841"/>
</if>
<msg timestamp="20230801 10:58:24.842" level="INFO">${text} = Nghỉ phép không lương</msg>
<status status="PASS" starttime="20230801 10:58:24.792" endtime="20230801 10:58:24.842"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 10:58:24.843" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 10:58:24.842" endtime="20230801 10:58:24.843"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:58:24.857" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 10:58:24.845" endtime="20230801 10:58:24.859"/>
</kw>
<status status="PASS" starttime="20230801 10:58:24.843" endtime="20230801 10:58:24.859"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:24.859" endtime="20230801 10:58:25.274"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 10:58:25.276" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 10:58:25.274" endtime="20230801 10:58:25.276"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:58:25.278" level="INFO">Fills the text 'Nghỉ phép không lương' in the given field.</msg>
<status status="PASS" starttime="20230801 10:58:25.277" endtime="20230801 10:58:25.417"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:25.418" endtime="20230801 10:58:25.591"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:25.592" level="INFO">Length is 21</msg>
<msg timestamp="20230801 10:58:25.592" level="INFO">${cnt} = 21</msg>
<status status="PASS" starttime="20230801 10:58:25.592" endtime="20230801 10:58:25.592"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:58:25.594" level="INFO">${STATE["Loại phép"]} = Nghỉ phép không lương</msg>
<status status="PASS" starttime="20230801 10:58:25.593" endtime="20230801 10:58:25.594"/>
</kw>
<status status="PASS" starttime="20230801 10:58:25.592" endtime="20230801 10:58:25.594"/>
</branch>
<status status="PASS" starttime="20230801 10:58:25.592" endtime="20230801 10:58:25.595"/>
</if>
<status status="PASS" starttime="20230801 10:58:24.792" endtime="20230801 10:58:25.595"/>
</kw>
<kw name="And Click select &quot;Thời gian&quot; with &quot;Chiều&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:25.601" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:58:25.600" endtime="20230801 10:58:25.601"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:25.602" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:58:25.601" endtime="20230801 10:58:25.602"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:25.604" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:58:25.603" endtime="20230801 10:58:25.604"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:25.605" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:25.605" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:58:25.604" endtime="20230801 10:58:25.605"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:25.607" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:58:25.606" endtime="20230801 10:58:25.607"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:25.608" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:25.609" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:58:25.608" endtime="20230801 10:58:25.609"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.610" endtime="20230801 10:58:25.611"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.611" endtime="20230801 10:58:25.612"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:25.609" endtime="20230801 10:58:25.612"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.613" endtime="20230801 10:58:25.614"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.614" endtime="20230801 10:58:25.615"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.615" endtime="20230801 10:58:25.615"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:25.612" endtime="20230801 10:58:25.616"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.617" endtime="20230801 10:58:25.617"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.617" endtime="20230801 10:58:25.617"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:25.616" endtime="20230801 10:58:25.617"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.619" endtime="20230801 10:58:25.620"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.620" endtime="20230801 10:58:25.621"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:25.619" endtime="20230801 10:58:25.621"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.622" endtime="20230801 10:58:25.622"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.623" endtime="20230801 10:58:25.623"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:25.621" endtime="20230801 10:58:25.623"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.624" endtime="20230801 10:58:25.625"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.625" endtime="20230801 10:58:25.626"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:25.623" endtime="20230801 10:58:25.626"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.633" endtime="20230801 10:58:25.634"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.635" endtime="20230801 10:58:25.636"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:25.626" endtime="20230801 10:58:25.636"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.639" endtime="20230801 10:58:25.640"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:25.637" endtime="20230801 10:58:25.641"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:58:25.642" endtime="20230801 10:58:25.643"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:25.641" endtime="20230801 10:58:25.643"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.645" endtime="20230801 10:58:25.647"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.650" endtime="20230801 10:58:25.650"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:25.643" endtime="20230801 10:58:25.651"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.652" endtime="20230801 10:58:25.652"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:25.651" endtime="20230801 10:58:25.652"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.653" endtime="20230801 10:58:25.653"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:25.653" endtime="20230801 10:58:25.654"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.655" endtime="20230801 10:58:25.655"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:25.654" endtime="20230801 10:58:25.655"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:25.656" endtime="20230801 10:58:25.656"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:25.655" endtime="20230801 10:58:25.657"/>
</branch>
<status status="PASS" starttime="20230801 10:58:25.609" endtime="20230801 10:58:25.657"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:25.658" level="INFO">Length is 5</msg>
<msg timestamp="20230801 10:58:25.659" level="INFO">${cnt} = 5</msg>
<status status="PASS" starttime="20230801 10:58:25.658" endtime="20230801 10:58:25.659"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:58:25.665" level="INFO">${text} = Chiều</msg>
<status status="PASS" starttime="20230801 10:58:25.663" endtime="20230801 10:58:25.665"/>
</kw>
<status status="PASS" starttime="20230801 10:58:25.660" endtime="20230801 10:58:25.665"/>
</branch>
<status status="PASS" starttime="20230801 10:58:25.660" endtime="20230801 10:58:25.665"/>
</if>
<msg timestamp="20230801 10:58:25.666" level="INFO">${text} = Chiều</msg>
<status status="PASS" starttime="20230801 10:58:25.597" endtime="20230801 10:58:25.666"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 10:58:25.670" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 10:58:25.668" endtime="20230801 10:58:25.670"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:58:25.694" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 10:58:25.674" endtime="20230801 10:58:25.694"/>
</kw>
<status status="PASS" starttime="20230801 10:58:25.670" endtime="20230801 10:58:25.695"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:25.695" endtime="20230801 10:58:25.828"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 10:58:25.830" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 10:58:25.829" endtime="20230801 10:58:25.830"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:58:25.831" level="INFO">Fills the text 'Chiều' in the given field.</msg>
<status status="PASS" starttime="20230801 10:58:25.831" endtime="20230801 10:58:25.899"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:25.900" endtime="20230801 10:58:26.200"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:26.201" level="INFO">Length is 5</msg>
<msg timestamp="20230801 10:58:26.201" level="INFO">${cnt} = 5</msg>
<status status="PASS" starttime="20230801 10:58:26.200" endtime="20230801 10:58:26.201"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:58:26.203" level="INFO">${STATE["Thời gian"]} = Chiều</msg>
<status status="PASS" starttime="20230801 10:58:26.202" endtime="20230801 10:58:26.203"/>
</kw>
<status status="PASS" starttime="20230801 10:58:26.202" endtime="20230801 10:58:26.203"/>
</branch>
<status status="PASS" starttime="20230801 10:58:26.202" endtime="20230801 10:58:26.203"/>
</if>
<status status="PASS" starttime="20230801 10:58:25.597" endtime="20230801 10:58:26.204"/>
</kw>
<kw name="And Enter leave date in &quot;Ngày bắt đầu&quot; with &quot;31-07-2023&quot;" library="common" sourcename="Enter leave date in &quot;${field}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>date</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:26.207" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:58:26.206" endtime="20230801 10:58:26.207"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:26.207" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:58:26.207" endtime="20230801 10:58:26.207"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:26.209" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:58:26.207" endtime="20230801 10:58:26.209"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:26.209" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:26.210" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:58:26.209" endtime="20230801 10:58:26.210"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:26.211" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:58:26.210" endtime="20230801 10:58:26.211"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:26.212" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:26.212" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:58:26.211" endtime="20230801 10:58:26.212"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.214" endtime="20230801 10:58:26.215"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.215" endtime="20230801 10:58:26.216"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:26.213" endtime="20230801 10:58:26.216"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.217" endtime="20230801 10:58:26.217"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.218" endtime="20230801 10:58:26.218"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.219" endtime="20230801 10:58:26.219"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:26.216" endtime="20230801 10:58:26.219"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.220" endtime="20230801 10:58:26.220"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.220" endtime="20230801 10:58:26.220"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:26.219" endtime="20230801 10:58:26.220"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.222" endtime="20230801 10:58:26.222"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.222" endtime="20230801 10:58:26.223"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:26.221" endtime="20230801 10:58:26.223"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.224" endtime="20230801 10:58:26.224"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.225" endtime="20230801 10:58:26.225"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:26.223" endtime="20230801 10:58:26.225"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.226" endtime="20230801 10:58:26.227"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.227" endtime="20230801 10:58:26.227"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:26.226" endtime="20230801 10:58:26.227"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.230" endtime="20230801 10:58:26.230"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.231" endtime="20230801 10:58:26.231"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:26.229" endtime="20230801 10:58:26.231"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.232" endtime="20230801 10:58:26.232"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:26.231" endtime="20230801 10:58:26.233"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:58:26.234" endtime="20230801 10:58:26.234"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:26.233" endtime="20230801 10:58:26.234"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.236" endtime="20230801 10:58:26.237"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.237" endtime="20230801 10:58:26.238"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:26.235" endtime="20230801 10:58:26.239"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.240" endtime="20230801 10:58:26.240"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:26.239" endtime="20230801 10:58:26.241"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.242" endtime="20230801 10:58:26.242"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:26.241" endtime="20230801 10:58:26.242"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.244" endtime="20230801 10:58:26.244"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:26.243" endtime="20230801 10:58:26.244"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:26.246" endtime="20230801 10:58:26.247"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:26.245" endtime="20230801 10:58:26.247"/>
</branch>
<status status="PASS" starttime="20230801 10:58:26.213" endtime="20230801 10:58:26.247"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:26.250" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:58:26.250" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:58:26.249" endtime="20230801 10:58:26.250"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:58:26.252" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 10:58:26.251" endtime="20230801 10:58:26.252"/>
</kw>
<status status="PASS" starttime="20230801 10:58:26.251" endtime="20230801 10:58:26.252"/>
</branch>
<status status="PASS" starttime="20230801 10:58:26.250" endtime="20230801 10:58:26.252"/>
</if>
<msg timestamp="20230801 10:58:26.252" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 10:58:26.206" endtime="20230801 10:58:26.252"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//input[@placeholder="${field}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:26.254" level="INFO">${element} = xpath=//input[@placeholder="Ngày bắt đầu"]</msg>
<status status="PASS" starttime="20230801 10:58:26.253" endtime="20230801 10:58:26.254"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:26.254" endtime="20230801 10:58:26.820"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:26.821" endtime="20230801 10:58:27.022"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:58:27.024" level="INFO">Fills the text '31-07-2023' in the given field.</msg>
<status status="PASS" starttime="20230801 10:58:27.023" endtime="20230801 10:58:27.281"/>
</kw>
<status status="PASS" starttime="20230801 10:58:26.205" endtime="20230801 10:58:27.282"/>
</kw>
<kw name="And Enter leave date in &quot;Ngày kết thúc&quot; with &quot;31-07-2023&quot;" library="common" sourcename="Enter leave date in &quot;${field}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>date</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:27.284" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:58:27.284" endtime="20230801 10:58:27.284"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:27.285" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:58:27.285" endtime="20230801 10:58:27.285"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:27.286" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:58:27.285" endtime="20230801 10:58:27.286"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:27.288" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:27.288" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:58:27.287" endtime="20230801 10:58:27.288"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:27.289" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:58:27.288" endtime="20230801 10:58:27.289"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:27.289" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:27.289" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:58:27.289" endtime="20230801 10:58:27.289"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.290" endtime="20230801 10:58:27.290"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.291" endtime="20230801 10:58:27.291"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:27.290" endtime="20230801 10:58:27.291"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.292" endtime="20230801 10:58:27.292"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.292" endtime="20230801 10:58:27.292"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.292" endtime="20230801 10:58:27.293"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:27.291" endtime="20230801 10:58:27.293"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.294" endtime="20230801 10:58:27.295"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.295" endtime="20230801 10:58:27.296"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:27.293" endtime="20230801 10:58:27.296"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.297" endtime="20230801 10:58:27.297"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.299" endtime="20230801 10:58:27.299"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:27.296" endtime="20230801 10:58:27.299"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.300" endtime="20230801 10:58:27.300"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.301" endtime="20230801 10:58:27.301"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:27.299" endtime="20230801 10:58:27.302"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.303" endtime="20230801 10:58:27.303"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.304" endtime="20230801 10:58:27.304"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:27.302" endtime="20230801 10:58:27.304"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.305" endtime="20230801 10:58:27.306"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.306" endtime="20230801 10:58:27.307"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:27.305" endtime="20230801 10:58:27.307"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.308" endtime="20230801 10:58:27.309"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:27.307" endtime="20230801 10:58:27.309"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:58:27.312" endtime="20230801 10:58:27.312"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:27.309" endtime="20230801 10:58:27.313"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.314" endtime="20230801 10:58:27.315"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.315" endtime="20230801 10:58:27.316"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:27.313" endtime="20230801 10:58:27.316"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.317" endtime="20230801 10:58:27.317"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:27.317" endtime="20230801 10:58:27.319"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.319" endtime="20230801 10:58:27.319"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:27.319" endtime="20230801 10:58:27.320"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.321" endtime="20230801 10:58:27.321"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:27.320" endtime="20230801 10:58:27.322"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.322" endtime="20230801 10:58:27.323"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:27.322" endtime="20230801 10:58:27.323"/>
</branch>
<status status="PASS" starttime="20230801 10:58:27.290" endtime="20230801 10:58:27.323"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:27.324" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:58:27.324" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:58:27.323" endtime="20230801 10:58:27.324"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:58:27.325" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 10:58:27.324" endtime="20230801 10:58:27.325"/>
</kw>
<status status="PASS" starttime="20230801 10:58:27.324" endtime="20230801 10:58:27.325"/>
</branch>
<status status="PASS" starttime="20230801 10:58:27.324" endtime="20230801 10:58:27.325"/>
</if>
<msg timestamp="20230801 10:58:27.325" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 10:58:27.283" endtime="20230801 10:58:27.325"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//input[@placeholder="${field}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:27.326" level="INFO">${element} = xpath=//input[@placeholder="Ngày kết thúc"]</msg>
<status status="PASS" starttime="20230801 10:58:27.326" endtime="20230801 10:58:27.326"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:27.327" endtime="20230801 10:58:27.647"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:27.648" endtime="20230801 10:58:27.774"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:58:27.774" level="INFO">Fills the text '31-07-2023' in the given field.</msg>
<status status="PASS" starttime="20230801 10:58:27.774" endtime="20230801 10:58:27.985"/>
</kw>
<status status="PASS" starttime="20230801 10:58:27.283" endtime="20230801 10:58:27.986"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Lý do&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:27.989" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:58:27.989" endtime="20230801 10:58:27.989"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:27.990" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:58:27.989" endtime="20230801 10:58:27.990"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:27.991" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:58:27.991" endtime="20230801 10:58:27.991"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:27.992" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:27.992" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:58:27.992" endtime="20230801 10:58:27.992"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:27.993" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 10:58:27.993" endtime="20230801 10:58:27.993"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:27.995" level="INFO">Length is 1</msg>
<msg timestamp="20230801 10:58:27.995" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 10:58:27.994" endtime="20230801 10:58:27.995"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.997" endtime="20230801 10:58:27.997"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.997" endtime="20230801 10:58:27.997"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:27.996" endtime="20230801 10:58:27.997"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.998" endtime="20230801 10:58:27.998"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.998" endtime="20230801 10:58:27.999"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.999" endtime="20230801 10:58:27.999"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:27.998" endtime="20230801 10:58:27.999"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:27.999" endtime="20230801 10:58:28.000"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:28.000" endtime="20230801 10:58:28.001"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:27.999" endtime="20230801 10:58:28.001"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:28.002" endtime="20230801 10:58:28.003"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:28.003" endtime="20230801 10:58:28.004"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:28.002" endtime="20230801 10:58:28.004"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:28.005" endtime="20230801 10:58:28.005"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:28.006" endtime="20230801 10:58:28.006"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:28.004" endtime="20230801 10:58:28.006"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:28.007" endtime="20230801 10:58:28.007"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:28.009" endtime="20230801 10:58:28.009"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:28.006" endtime="20230801 10:58:28.009"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:28.010" endtime="20230801 10:58:28.011"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:28.012" endtime="20230801 10:58:28.012"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:28.009" endtime="20230801 10:58:28.012"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:58:28.014" endtime="20230801 10:58:28.014"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:28.013" endtime="20230801 10:58:28.014"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:58:28.016" endtime="20230801 10:58:28.016"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:28.015" endtime="20230801 10:58:28.016"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:28.018" endtime="20230801 10:58:28.018"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:28.019" endtime="20230801 10:58:28.019"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:28.017" endtime="20230801 10:58:28.019"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:58:28.020" endtime="20230801 10:58:28.021"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:28.019" endtime="20230801 10:58:28.021"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:58:28.022" endtime="20230801 10:58:28.023"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:28.022" endtime="20230801 10:58:28.023"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:28.024" endtime="20230801 10:58:28.024"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:28.023" endtime="20230801 10:58:28.024"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230801 10:58:28.026" level="INFO">${new_text} = Eveniet aliquid perspiciatis cupiditate quibusdam.</msg>
<status status="PASS" starttime="20230801 10:58:28.025" endtime="20230801 10:58:28.027"/>
</kw>
<status status="PASS" starttime="20230801 10:58:28.025" endtime="20230801 10:58:28.027"/>
</branch>
<status status="PASS" starttime="20230801 10:58:27.995" endtime="20230801 10:58:28.027"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:28.033" level="INFO">Length is 8</msg>
<msg timestamp="20230801 10:58:28.033" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 10:58:28.031" endtime="20230801 10:58:28.033"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:58:28.036" level="INFO">${text} = Eveniet aliquid perspiciatis cupiditate quibusdam.</msg>
<status status="PASS" starttime="20230801 10:58:28.035" endtime="20230801 10:58:28.036"/>
</kw>
<status status="PASS" starttime="20230801 10:58:28.034" endtime="20230801 10:58:28.037"/>
</branch>
<status status="PASS" starttime="20230801 10:58:28.033" endtime="20230801 10:58:28.037"/>
</if>
<msg timestamp="20230801 10:58:28.038" level="INFO">${text} = Eveniet aliquid perspiciatis cupiditate quibusdam.</msg>
<status status="PASS" starttime="20230801 10:58:27.987" endtime="20230801 10:58:28.038"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230801 10:58:28.039" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Lý do"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230801 10:58:28.038" endtime="20230801 10:58:28.039"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:28.040" endtime="20230801 10:58:28.707"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:58:28.708" level="INFO">Fills the text 'Eveniet aliquid perspiciatis cupiditate quibusdam.' in the given field.</msg>
<status status="PASS" starttime="20230801 10:58:28.707" endtime="20230801 10:58:28.863"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:28.864" level="INFO">Length is 50</msg>
<msg timestamp="20230801 10:58:28.865" level="INFO">${cnt} = 50</msg>
<status status="PASS" starttime="20230801 10:58:28.864" endtime="20230801 10:58:28.865"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:58:28.867" level="INFO">${STATE["Lý do"]} = Eveniet aliquid perspiciatis cupiditate quibusdam.</msg>
<status status="PASS" starttime="20230801 10:58:28.866" endtime="20230801 10:58:28.867"/>
</kw>
<status status="PASS" starttime="20230801 10:58:28.865" endtime="20230801 10:58:28.869"/>
</branch>
<status status="PASS" starttime="20230801 10:58:28.865" endtime="20230801 10:58:28.869"/>
</if>
<status status="PASS" starttime="20230801 10:58:27.987" endtime="20230801 10:58:28.869"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:28.875" endtime="20230801 10:58:29.272"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:29.274" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:58:29.273" endtime="20230801 10:58:29.274"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:58:29.303" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:58:29.274" endtime="20230801 10:58:29.303"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:58:29.304" endtime="20230801 10:58:29.304"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:58:29.305" endtime="20230801 10:58:29.305"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:29.303" endtime="20230801 10:58:29.305"/>
</branch>
<status status="PASS" starttime="20230801 10:58:29.303" endtime="20230801 10:58:29.306"/>
</if>
<status status="PASS" starttime="20230801 10:58:29.272" endtime="20230801 10:58:29.306"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:58:29.306" endtime="20230801 10:58:29.348"/>
</kw>
<status status="PASS" starttime="20230801 10:58:28.874" endtime="20230801 10:58:29.349"/>
</kw>
<kw name="Then User look message &quot;Tạo thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:29.353" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:58:29.352" endtime="20230801 10:58:29.353"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:29.353" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:29.354" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:58:29.353" endtime="20230801 10:58:29.354"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 10:58:29.355" endtime="20230801 10:58:29.355"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:29.354" endtime="20230801 10:58:29.355"/>
</branch>
<status status="PASS" starttime="20230801 10:58:29.354" endtime="20230801 10:58:29.355"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:58:33.253" level="INFO">Text: 'Tạo thành công'</msg>
<status status="PASS" starttime="20230801 10:58:29.357" endtime="20230801 10:58:33.254"/>
</kw>
<status status="PASS" starttime="20230801 10:58:29.355" endtime="20230801 10:58:33.254"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:33.256" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 10:58:33.255" endtime="20230801 10:58:33.256"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:58:33.895" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-12.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-12.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 10:58:33.895" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 10:58:33.896" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 10:58:33.261" endtime="20230801 10:58:33.898"/>
</kw>
<status status="FAIL" starttime="20230801 10:58:33.258" endtime="20230801 10:58:33.899"/>
</kw>
<msg timestamp="20230801 10:58:33.899" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 10:58:33.256" endtime="20230801 10:58:33.899"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:58:33.901" endtime="20230801 10:58:33.901"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:33.900" endtime="20230801 10:58:33.901"/>
</branch>
<status status="PASS" starttime="20230801 10:58:33.899" endtime="20230801 10:58:33.901"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:58:36.110" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 10:58:33.904" endtime="20230801 10:58:36.110"/>
</kw>
<status status="PASS" starttime="20230801 10:58:33.902" endtime="20230801 10:58:36.110"/>
</kw>
<status status="PASS" starttime="20230801 10:58:29.351" endtime="20230801 10:58:36.110"/>
</kw>
<kw name="And User look title &quot;Danh sách nghỉ phép&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:36.119" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:58:36.119" endtime="20230801 10:58:36.119"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:58:36.129" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:58:36.119" endtime="20230801 10:58:36.129"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:58:36.129" endtime="20230801 10:58:36.129"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:36.129" endtime="20230801 10:58:36.129"/>
</branch>
<status status="PASS" starttime="20230801 10:58:36.129" endtime="20230801 10:58:36.129"/>
</if>
<status status="PASS" starttime="20230801 10:58:36.119" endtime="20230801 10:58:36.129"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:36.129" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:58:36.129" endtime="20230801 10:58:36.129"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:58:36.145" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:58:36.129" endtime="20230801 10:58:36.145"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:58:36.146" endtime="20230801 10:58:36.147"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:36.146" endtime="20230801 10:58:36.147"/>
</branch>
<status status="PASS" starttime="20230801 10:58:36.146" endtime="20230801 10:58:36.147"/>
</if>
<status status="PASS" starttime="20230801 10:58:36.129" endtime="20230801 10:58:36.148"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230801 10:58:36.156" level="INFO">Title: 'Danh sách nghỉ phép'</msg>
<msg timestamp="20230801 10:58:36.157" level="INFO">${actualTitle} = Danh sách nghỉ phép</msg>
<status status="PASS" starttime="20230801 10:58:36.148" endtime="20230801 10:58:36.157"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230801 10:58:36.158" endtime="20230801 10:58:36.160"/>
</kw>
<status status="PASS" starttime="20230801 10:58:36.129" endtime="20230801 10:58:36.161"/>
</kw>
<status status="PASS" starttime="20230801 10:58:36.110" endtime="20230801 10:58:36.161"/>
</kw>
<kw name="And Click on the &quot;Xóa&quot; button in the &quot;Họ và tên&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:36.168" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:58:36.167" endtime="20230801 10:58:36.168"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:58:36.182" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:58:36.168" endtime="20230801 10:58:36.183"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:58:36.184" endtime="20230801 10:58:36.184"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:36.183" endtime="20230801 10:58:36.184"/>
</branch>
<status status="PASS" starttime="20230801 10:58:36.183" endtime="20230801 10:58:36.185"/>
</if>
<status status="PASS" starttime="20230801 10:58:36.165" endtime="20230801 10:58:36.185"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 10:58:36.206" level="INFO">Found 3 Locators successfully.</msg>
<msg timestamp="20230801 10:58:36.207" level="INFO">${element} = ['element=01d154f0-b762-4f2a-a1e2-69c6d1fb7e2f', 'element=2b8d0ee9-a372-4c8a-b66e-650d566ab3bc', 'element=78e6ffb2-596e-4f0e-969f-17606356ef8c']</msg>
<status status="PASS" starttime="20230801 10:58:36.186" endtime="20230801 10:58:36.207"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:36.208" endtime="20230801 10:58:36.453"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:36.455" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:58:36.454" endtime="20230801 10:58:36.455"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:58:36.474" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 10:58:36.456" endtime="20230801 10:58:36.475"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:36.476" endtime="20230801 10:58:36.907"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 10:58:37.008" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 10:58:36.908" endtime="20230801 10:58:37.008"/>
</kw>
<status status="PASS" starttime="20230801 10:58:36.475" endtime="20230801 10:58:37.009"/>
</branch>
<status status="PASS" starttime="20230801 10:58:36.475" endtime="20230801 10:58:37.009"/>
</if>
<status status="PASS" starttime="20230801 10:58:36.453" endtime="20230801 10:58:37.009"/>
</kw>
<status status="PASS" starttime="20230801 10:58:36.164" endtime="20230801 10:58:37.010"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 10:58:37.143" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 10:58:37.022" endtime="20230801 10:58:37.143"/>
</kw>
<status status="PASS" starttime="20230801 10:58:37.021" endtime="20230801 10:58:37.143"/>
</kw>
<status status="PASS" starttime="20230801 10:58:12.853" endtime="20230801 10:58:37.143"/>
</test>
<test id="s1-t10" name="STA-10 Verify that Create leave management successfully with &quot;Nghỉ phép không lương&quot; &amp; &quot;Lưu và tạo mới&quot; button" line="100">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 10:58:37.165" endtime="20230801 10:58:37.166"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 10:58:37.169" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\095887c1-89ab-4343-b7fa-47a2e6f971e3"}</msg>
<msg timestamp="20230801 10:58:38.449" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\095887c1-89ab-4343-b7fa-47a2e6f971e3"}</msg>
<status status="PASS" starttime="20230801 10:58:37.167" endtime="20230801 10:58:38.449"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 10:58:39.391" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 10:58:39.391" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 10:58:38.449" endtime="20230801 10:58:39.391"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 10:58:39.393" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 10:58:39.392" endtime="20230801 10:58:39.393"/>
</kw>
<status status="PASS" starttime="20230801 10:58:37.164" endtime="20230801 10:58:39.393"/>
</kw>
<kw name="Go to create leave date page" library="common">
<kw name="Login to Staff" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;staff@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:39.397" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:58:39.397" endtime="20230801 10:58:39.397"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:39.397" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:58:39.397" endtime="20230801 10:58:39.397"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:39.399" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:58:39.397" endtime="20230801 10:58:39.399"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:39.400" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:39.400" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:58:39.399" endtime="20230801 10:58:39.400"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:39.401" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:58:39.400" endtime="20230801 10:58:39.401"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:39.401" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:39.401" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:58:39.401" endtime="20230801 10:58:39.401"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.402" endtime="20230801 10:58:39.402"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.403" endtime="20230801 10:58:39.403"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:39.402" endtime="20230801 10:58:39.403"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.403" endtime="20230801 10:58:39.403"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.404" endtime="20230801 10:58:39.404"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.404" endtime="20230801 10:58:39.404"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:39.403" endtime="20230801 10:58:39.404"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.405" endtime="20230801 10:58:39.406"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.406" endtime="20230801 10:58:39.406"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:39.405" endtime="20230801 10:58:39.407"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.408" endtime="20230801 10:58:39.408"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.408" endtime="20230801 10:58:39.409"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:39.407" endtime="20230801 10:58:39.409"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.410" endtime="20230801 10:58:39.410"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.411" endtime="20230801 10:58:39.411"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:39.409" endtime="20230801 10:58:39.412"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.413" endtime="20230801 10:58:39.413"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.414" endtime="20230801 10:58:39.414"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:39.412" endtime="20230801 10:58:39.414"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.415" endtime="20230801 10:58:39.416"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.416" endtime="20230801 10:58:39.416"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:39.415" endtime="20230801 10:58:39.417"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.417" endtime="20230801 10:58:39.419"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:39.417" endtime="20230801 10:58:39.419"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:58:39.420" endtime="20230801 10:58:39.421"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:39.419" endtime="20230801 10:58:39.421"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.424" endtime="20230801 10:58:39.424"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.425" endtime="20230801 10:58:39.425"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:39.422" endtime="20230801 10:58:39.426"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.429" endtime="20230801 10:58:39.429"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:39.426" endtime="20230801 10:58:39.429"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.430" endtime="20230801 10:58:39.431"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:39.429" endtime="20230801 10:58:39.431"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.432" endtime="20230801 10:58:39.433"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:39.431" endtime="20230801 10:58:39.433"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:39.434" endtime="20230801 10:58:39.434"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:39.433" endtime="20230801 10:58:39.434"/>
</branch>
<status status="PASS" starttime="20230801 10:58:39.402" endtime="20230801 10:58:39.435"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:39.436" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:58:39.437" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:58:39.435" endtime="20230801 10:58:39.437"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:58:39.440" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:58:39.439" endtime="20230801 10:58:39.440"/>
</kw>
<status status="PASS" starttime="20230801 10:58:39.437" endtime="20230801 10:58:39.441"/>
</branch>
<status status="PASS" starttime="20230801 10:58:39.437" endtime="20230801 10:58:39.441"/>
</if>
<msg timestamp="20230801 10:58:39.442" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:58:39.396" endtime="20230801 10:58:39.442"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:58:39.445" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:58:39.442" endtime="20230801 10:58:39.445"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:39.446" endtime="20230801 10:58:41.756"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:58:41.757" level="INFO">Fills the text 'staff@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230801 10:58:41.756" endtime="20230801 10:58:41.890"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:41.892" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:58:41.892" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:58:41.891" endtime="20230801 10:58:41.893"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:58:41.894" level="INFO">${STATE["Tên đăng nhập"]} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:58:41.894" endtime="20230801 10:58:41.895"/>
</kw>
<status status="PASS" starttime="20230801 10:58:41.893" endtime="20230801 10:58:41.895"/>
</branch>
<status status="PASS" starttime="20230801 10:58:41.893" endtime="20230801 10:58:41.895"/>
</if>
<status status="PASS" starttime="20230801 10:58:39.395" endtime="20230801 10:58:41.895"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Tester@123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:41.898" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:58:41.898" endtime="20230801 10:58:41.898"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:41.899" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:58:41.899" endtime="20230801 10:58:41.899"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:41.900" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:58:41.899" endtime="20230801 10:58:41.900"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:41.902" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:41.902" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:58:41.901" endtime="20230801 10:58:41.902"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:41.903" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:58:41.902" endtime="20230801 10:58:41.903"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:41.905" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:41.905" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:58:41.904" endtime="20230801 10:58:41.905"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.906" endtime="20230801 10:58:41.906"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.907" endtime="20230801 10:58:41.907"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:41.905" endtime="20230801 10:58:41.907"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.909" endtime="20230801 10:58:41.910"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.910" endtime="20230801 10:58:41.911"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.913" endtime="20230801 10:58:41.913"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:41.907" endtime="20230801 10:58:41.913"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.914" endtime="20230801 10:58:41.915"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.915" endtime="20230801 10:58:41.916"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:41.914" endtime="20230801 10:58:41.916"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.917" endtime="20230801 10:58:41.918"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.918" endtime="20230801 10:58:41.918"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:41.916" endtime="20230801 10:58:41.919"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.920" endtime="20230801 10:58:41.921"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.921" endtime="20230801 10:58:41.922"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:41.920" endtime="20230801 10:58:41.922"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.923" endtime="20230801 10:58:41.923"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.924" endtime="20230801 10:58:41.924"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:41.922" endtime="20230801 10:58:41.924"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.925" endtime="20230801 10:58:41.925"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.926" endtime="20230801 10:58:41.926"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:41.924" endtime="20230801 10:58:41.926"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.928" endtime="20230801 10:58:41.928"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:41.927" endtime="20230801 10:58:41.928"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:58:41.930" endtime="20230801 10:58:41.930"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:41.928" endtime="20230801 10:58:41.931"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.932" endtime="20230801 10:58:41.932"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.933" endtime="20230801 10:58:41.934"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:41.931" endtime="20230801 10:58:41.934"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.935" endtime="20230801 10:58:41.936"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:41.934" endtime="20230801 10:58:41.936"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.938" endtime="20230801 10:58:41.939"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:41.937" endtime="20230801 10:58:41.939"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.941" endtime="20230801 10:58:41.941"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:41.940" endtime="20230801 10:58:41.942"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:41.944" endtime="20230801 10:58:41.947"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:41.942" endtime="20230801 10:58:41.947"/>
</branch>
<status status="PASS" starttime="20230801 10:58:41.905" endtime="20230801 10:58:41.948"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:41.949" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:58:41.949" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:58:41.948" endtime="20230801 10:58:41.949"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:58:41.952" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:58:41.951" endtime="20230801 10:58:41.952"/>
</kw>
<status status="PASS" starttime="20230801 10:58:41.950" endtime="20230801 10:58:41.952"/>
</branch>
<status status="PASS" starttime="20230801 10:58:41.949" endtime="20230801 10:58:41.952"/>
</if>
<msg timestamp="20230801 10:58:41.953" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:58:41.897" endtime="20230801 10:58:41.953"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:58:41.955" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:58:41.953" endtime="20230801 10:58:41.955"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:41.955" endtime="20230801 10:58:42.130"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:58:42.131" level="INFO">Fills the text 'Tester@123' in the given field.</msg>
<status status="PASS" starttime="20230801 10:58:42.130" endtime="20230801 10:58:42.185"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:42.186" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:58:42.186" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:58:42.186" endtime="20230801 10:58:42.186"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:58:42.189" level="INFO">${STATE["Mật khẩu"]} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:58:42.187" endtime="20230801 10:58:42.189"/>
</kw>
<status status="PASS" starttime="20230801 10:58:42.187" endtime="20230801 10:58:42.190"/>
</branch>
<status status="PASS" starttime="20230801 10:58:42.187" endtime="20230801 10:58:42.190"/>
</if>
<status status="PASS" starttime="20230801 10:58:41.896" endtime="20230801 10:58:42.190"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:42.192" endtime="20230801 10:58:42.517"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:42.520" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:58:42.519" endtime="20230801 10:58:42.520"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:58:42.545" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:58:42.521" endtime="20230801 10:58:42.546"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:58:42.548" endtime="20230801 10:58:42.549"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:58:42.549" endtime="20230801 10:58:42.550"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:42.547" endtime="20230801 10:58:42.550"/>
</branch>
<status status="PASS" starttime="20230801 10:58:42.546" endtime="20230801 10:58:42.550"/>
</if>
<status status="PASS" starttime="20230801 10:58:42.517" endtime="20230801 10:58:42.551"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:58:42.551" endtime="20230801 10:58:42.642"/>
</kw>
<status status="PASS" starttime="20230801 10:58:42.191" endtime="20230801 10:58:42.643"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:42.647" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:58:42.646" endtime="20230801 10:58:42.647"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:42.648" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:42.648" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:58:42.647" endtime="20230801 10:58:42.648"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 10:58:42.649" endtime="20230801 10:58:42.649"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:42.648" endtime="20230801 10:58:42.649"/>
</branch>
<status status="PASS" starttime="20230801 10:58:42.648" endtime="20230801 10:58:42.650"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:58:44.561" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 10:58:42.654" endtime="20230801 10:58:44.561"/>
</kw>
<status status="PASS" starttime="20230801 10:58:42.650" endtime="20230801 10:58:44.561"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:44.562" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 10:58:44.561" endtime="20230801 10:58:44.562"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:58:45.080" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-13.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-13.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 10:58:45.081" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 10:58:45.081" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 10:58:44.565" endtime="20230801 10:58:45.084"/>
</kw>
<status status="FAIL" starttime="20230801 10:58:44.563" endtime="20230801 10:58:45.085"/>
</kw>
<msg timestamp="20230801 10:58:45.085" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 10:58:44.562" endtime="20230801 10:58:45.085"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:58:45.086" endtime="20230801 10:58:45.087"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:45.086" endtime="20230801 10:58:45.087"/>
</branch>
<status status="PASS" starttime="20230801 10:58:45.085" endtime="20230801 10:58:45.087"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:58:47.063" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 10:58:45.089" endtime="20230801 10:58:47.063"/>
</kw>
<status status="PASS" starttime="20230801 10:58:45.088" endtime="20230801 10:58:47.063"/>
</kw>
<status status="PASS" starttime="20230801 10:58:42.643" endtime="20230801 10:58:47.064"/>
</kw>
<status status="PASS" starttime="20230801 10:58:39.395" endtime="20230801 10:58:47.064"/>
</kw>
<kw name="When Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:47.066" endtime="20230801 10:58:47.303"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:47.305" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:58:47.305" endtime="20230801 10:58:47.305"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:58:47.327" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:58:47.306" endtime="20230801 10:58:47.327"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:58:47.328" endtime="20230801 10:58:47.329"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:58:47.329" endtime="20230801 10:58:47.330"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:47.328" endtime="20230801 10:58:47.330"/>
</branch>
<status status="PASS" starttime="20230801 10:58:47.328" endtime="20230801 10:58:47.330"/>
</if>
<status status="PASS" starttime="20230801 10:58:47.304" endtime="20230801 10:58:47.331"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:58:47.331" endtime="20230801 10:58:47.774"/>
</kw>
<status status="PASS" starttime="20230801 10:58:47.065" endtime="20230801 10:58:47.775"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:47.777" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:58:47.776" endtime="20230801 10:58:47.778"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:58:47.789" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:58:47.778" endtime="20230801 10:58:47.790"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:58:47.790" endtime="20230801 10:58:47.791"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:47.790" endtime="20230801 10:58:47.791"/>
</branch>
<status status="PASS" starttime="20230801 10:58:47.790" endtime="20230801 10:58:47.791"/>
</if>
<status status="PASS" starttime="20230801 10:58:47.775" endtime="20230801 10:58:47.791"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 10:58:47.893" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 10:58:47.791" endtime="20230801 10:58:47.894"/>
</kw>
<status status="PASS" starttime="20230801 10:58:39.394" endtime="20230801 10:58:47.895"/>
</kw>
<kw name="Get_Leave_date with &quot;Ngày phép còn lại&quot;" library="common" sourcename="Get_Leave_date with &quot;${date}&quot;">
<var>${leave_date_before}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//div[contains(text(), '${date}')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:47.901" level="INFO">${element} = //div[contains(text(), 'Ngày phép còn lại')]</msg>
<status status="PASS" starttime="20230801 10:58:47.900" endtime="20230801 10:58:47.901"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:58:48.139" level="INFO">Waited for Element with selector //div[contains(text(), 'Ngày phép còn lại')] at state visible</msg>
<status status="PASS" starttime="20230801 10:58:47.904" endtime="20230801 10:58:48.140"/>
</kw>
<status status="PASS" starttime="20230801 10:58:47.902" endtime="20230801 10:58:48.140"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${text}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:58:48.242" level="INFO">Text: 'Ngày phép còn lại ( 8 Ngày phép)'</msg>
<msg timestamp="20230801 10:58:48.242" level="INFO">${text} = Ngày phép còn lại ( 8 Ngày phép)</msg>
<status status="PASS" starttime="20230801 10:58:48.142" endtime="20230801 10:58:48.243"/>
</kw>
<msg timestamp="20230801 10:58:48.243" level="INFO">${leave_date_before} = Ngày phép còn lại ( 8 Ngày phép)</msg>
<status status="PASS" starttime="20230801 10:58:47.899" endtime="20230801 10:58:48.243"/>
</kw>
<kw name="And Click select &quot;Loại phép&quot; with &quot;Nghỉ phép không lương&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:48.254" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:58:48.254" endtime="20230801 10:58:48.254"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:48.255" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:58:48.255" endtime="20230801 10:58:48.255"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:48.257" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:58:48.256" endtime="20230801 10:58:48.257"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:48.259" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:48.259" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:58:48.257" endtime="20230801 10:58:48.259"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:48.262" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:58:48.260" endtime="20230801 10:58:48.262"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:48.263" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:48.263" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:58:48.262" endtime="20230801 10:58:48.263"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.264" endtime="20230801 10:58:48.265"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.265" endtime="20230801 10:58:48.265"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:48.263" endtime="20230801 10:58:48.266"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.267" endtime="20230801 10:58:48.267"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.267" endtime="20230801 10:58:48.267"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.267" endtime="20230801 10:58:48.269"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:48.266" endtime="20230801 10:58:48.269"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.270" endtime="20230801 10:58:48.270"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.271" endtime="20230801 10:58:48.271"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:48.269" endtime="20230801 10:58:48.271"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.272" endtime="20230801 10:58:48.272"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.273" endtime="20230801 10:58:48.273"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:48.271" endtime="20230801 10:58:48.273"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.274" endtime="20230801 10:58:48.275"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.275" endtime="20230801 10:58:48.276"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:48.274" endtime="20230801 10:58:48.276"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.277" endtime="20230801 10:58:48.278"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.279" endtime="20230801 10:58:48.280"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:48.276" endtime="20230801 10:58:48.280"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.285" endtime="20230801 10:58:48.285"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.286" endtime="20230801 10:58:48.286"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:48.281" endtime="20230801 10:58:48.286"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.287" endtime="20230801 10:58:48.287"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:48.287" endtime="20230801 10:58:48.287"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:58:48.289" endtime="20230801 10:58:48.290"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:48.289" endtime="20230801 10:58:48.290"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.290" endtime="20230801 10:58:48.291"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.291" endtime="20230801 10:58:48.291"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:48.290" endtime="20230801 10:58:48.292"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.294" endtime="20230801 10:58:48.294"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:48.293" endtime="20230801 10:58:48.295"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.296" endtime="20230801 10:58:48.296"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:48.295" endtime="20230801 10:58:48.296"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.297" endtime="20230801 10:58:48.297"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:48.297" endtime="20230801 10:58:48.297"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:48.299" endtime="20230801 10:58:48.299"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:48.299" endtime="20230801 10:58:48.300"/>
</branch>
<status status="PASS" starttime="20230801 10:58:48.263" endtime="20230801 10:58:48.300"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:48.300" level="INFO">Length is 21</msg>
<msg timestamp="20230801 10:58:48.301" level="INFO">${cnt} = 21</msg>
<status status="PASS" starttime="20230801 10:58:48.300" endtime="20230801 10:58:48.301"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:58:48.302" level="INFO">${text} = Nghỉ phép không lương</msg>
<status status="PASS" starttime="20230801 10:58:48.302" endtime="20230801 10:58:48.302"/>
</kw>
<status status="PASS" starttime="20230801 10:58:48.301" endtime="20230801 10:58:48.303"/>
</branch>
<status status="PASS" starttime="20230801 10:58:48.301" endtime="20230801 10:58:48.303"/>
</if>
<msg timestamp="20230801 10:58:48.303" level="INFO">${text} = Nghỉ phép không lương</msg>
<status status="PASS" starttime="20230801 10:58:48.252" endtime="20230801 10:58:48.303"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 10:58:48.305" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 10:58:48.304" endtime="20230801 10:58:48.305"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:58:48.322" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 10:58:48.307" endtime="20230801 10:58:48.323"/>
</kw>
<status status="PASS" starttime="20230801 10:58:48.305" endtime="20230801 10:58:48.323"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:48.324" endtime="20230801 10:58:48.556"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 10:58:48.557" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 10:58:48.557" endtime="20230801 10:58:48.557"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:58:48.560" level="INFO">Fills the text 'Nghỉ phép không lương' in the given field.</msg>
<status status="PASS" starttime="20230801 10:58:48.559" endtime="20230801 10:58:48.788"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:48.788" endtime="20230801 10:58:48.987"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:48.989" level="INFO">Length is 21</msg>
<msg timestamp="20230801 10:58:48.989" level="INFO">${cnt} = 21</msg>
<status status="PASS" starttime="20230801 10:58:48.989" endtime="20230801 10:58:48.989"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:58:48.993" level="INFO">${STATE["Loại phép"]} = Nghỉ phép không lương</msg>
<status status="PASS" starttime="20230801 10:58:48.991" endtime="20230801 10:58:48.993"/>
</kw>
<status status="PASS" starttime="20230801 10:58:48.990" endtime="20230801 10:58:48.993"/>
</branch>
<status status="PASS" starttime="20230801 10:58:48.990" endtime="20230801 10:58:48.994"/>
</if>
<status status="PASS" starttime="20230801 10:58:48.251" endtime="20230801 10:58:48.994"/>
</kw>
<kw name="And Click select &quot;Thời gian&quot; with &quot;Chiều&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:49.005" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:58:49.005" endtime="20230801 10:58:49.005"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:49.007" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:58:49.006" endtime="20230801 10:58:49.007"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:49.008" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:58:49.007" endtime="20230801 10:58:49.008"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:49.010" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:49.011" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:58:49.010" endtime="20230801 10:58:49.011"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:49.012" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:58:49.011" endtime="20230801 10:58:49.012"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:49.014" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:49.014" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:58:49.013" endtime="20230801 10:58:49.014"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.015" endtime="20230801 10:58:49.016"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.016" endtime="20230801 10:58:49.017"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:49.015" endtime="20230801 10:58:49.017"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.018" endtime="20230801 10:58:49.018"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.019" endtime="20230801 10:58:49.020"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.020" endtime="20230801 10:58:49.021"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:49.017" endtime="20230801 10:58:49.021"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.022" endtime="20230801 10:58:49.023"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.023" endtime="20230801 10:58:49.023"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:49.021" endtime="20230801 10:58:49.024"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.025" endtime="20230801 10:58:49.025"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.026" endtime="20230801 10:58:49.026"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:49.024" endtime="20230801 10:58:49.027"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.028" endtime="20230801 10:58:49.028"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.029" endtime="20230801 10:58:49.030"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:49.027" endtime="20230801 10:58:49.030"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.031" endtime="20230801 10:58:49.031"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.032" endtime="20230801 10:58:49.033"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:49.030" endtime="20230801 10:58:49.033"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.034" endtime="20230801 10:58:49.034"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.035" endtime="20230801 10:58:49.035"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:49.033" endtime="20230801 10:58:49.036"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.037" endtime="20230801 10:58:49.037"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:49.036" endtime="20230801 10:58:49.037"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:58:49.038" endtime="20230801 10:58:49.038"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:49.037" endtime="20230801 10:58:49.039"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.040" endtime="20230801 10:58:49.040"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.041" endtime="20230801 10:58:49.041"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:49.039" endtime="20230801 10:58:49.042"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.043" endtime="20230801 10:58:49.043"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:49.042" endtime="20230801 10:58:49.044"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.045" endtime="20230801 10:58:49.045"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:49.044" endtime="20230801 10:58:49.045"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.047" endtime="20230801 10:58:49.047"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:49.046" endtime="20230801 10:58:49.047"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.048" endtime="20230801 10:58:49.048"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:49.048" endtime="20230801 10:58:49.048"/>
</branch>
<status status="PASS" starttime="20230801 10:58:49.014" endtime="20230801 10:58:49.049"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:49.050" level="INFO">Length is 5</msg>
<msg timestamp="20230801 10:58:49.051" level="INFO">${cnt} = 5</msg>
<status status="PASS" starttime="20230801 10:58:49.050" endtime="20230801 10:58:49.051"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:58:49.053" level="INFO">${text} = Chiều</msg>
<status status="PASS" starttime="20230801 10:58:49.052" endtime="20230801 10:58:49.053"/>
</kw>
<status status="PASS" starttime="20230801 10:58:49.051" endtime="20230801 10:58:49.053"/>
</branch>
<status status="PASS" starttime="20230801 10:58:49.051" endtime="20230801 10:58:49.053"/>
</if>
<msg timestamp="20230801 10:58:49.054" level="INFO">${text} = Chiều</msg>
<status status="PASS" starttime="20230801 10:58:49.004" endtime="20230801 10:58:49.054"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 10:58:49.056" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 10:58:49.054" endtime="20230801 10:58:49.056"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:58:49.142" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 10:58:49.063" endtime="20230801 10:58:49.143"/>
</kw>
<status status="PASS" starttime="20230801 10:58:49.057" endtime="20230801 10:58:49.143"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:49.144" endtime="20230801 10:58:49.567"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 10:58:49.568" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 10:58:49.567" endtime="20230801 10:58:49.568"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:58:49.570" level="INFO">Fills the text 'Chiều' in the given field.</msg>
<status status="PASS" starttime="20230801 10:58:49.569" endtime="20230801 10:58:49.656"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:49.657" endtime="20230801 10:58:49.943"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:49.944" level="INFO">Length is 5</msg>
<msg timestamp="20230801 10:58:49.944" level="INFO">${cnt} = 5</msg>
<status status="PASS" starttime="20230801 10:58:49.943" endtime="20230801 10:58:49.945"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:58:49.947" level="INFO">${STATE["Thời gian"]} = Chiều</msg>
<status status="PASS" starttime="20230801 10:58:49.946" endtime="20230801 10:58:49.947"/>
</kw>
<status status="PASS" starttime="20230801 10:58:49.945" endtime="20230801 10:58:49.947"/>
</branch>
<status status="PASS" starttime="20230801 10:58:49.945" endtime="20230801 10:58:49.949"/>
</if>
<status status="PASS" starttime="20230801 10:58:49.003" endtime="20230801 10:58:49.949"/>
</kw>
<kw name="And Enter leave date in &quot;Ngày bắt đầu&quot; with &quot;31-07-2023&quot;" library="common" sourcename="Enter leave date in &quot;${field}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>date</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:49.973" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:58:49.972" endtime="20230801 10:58:49.973"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:49.974" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:58:49.974" endtime="20230801 10:58:49.975"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:49.980" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:58:49.976" endtime="20230801 10:58:49.980"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:49.982" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:49.982" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:58:49.981" endtime="20230801 10:58:49.982"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:49.984" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:58:49.983" endtime="20230801 10:58:49.984"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:49.985" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:49.985" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:58:49.984" endtime="20230801 10:58:49.985"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.986" endtime="20230801 10:58:49.987"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.988" endtime="20230801 10:58:49.988"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:49.986" endtime="20230801 10:58:49.988"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.990" endtime="20230801 10:58:49.990"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.991" endtime="20230801 10:58:49.991"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.993" endtime="20230801 10:58:49.993"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:49.989" endtime="20230801 10:58:49.993"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.996" endtime="20230801 10:58:49.996"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.997" endtime="20230801 10:58:49.997"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:49.994" endtime="20230801 10:58:49.998"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.998" endtime="20230801 10:58:49.999"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:49.999" endtime="20230801 10:58:50.000"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:49.998" endtime="20230801 10:58:50.000"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:50.004" endtime="20230801 10:58:50.005"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:50.005" endtime="20230801 10:58:50.006"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:50.003" endtime="20230801 10:58:50.006"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:50.007" endtime="20230801 10:58:50.008"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:50.010" endtime="20230801 10:58:50.014"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:50.006" endtime="20230801 10:58:50.014"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:50.016" endtime="20230801 10:58:50.016"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:50.017" endtime="20230801 10:58:50.017"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:50.015" endtime="20230801 10:58:50.017"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:58:50.018" endtime="20230801 10:58:50.018"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:50.018" endtime="20230801 10:58:50.021"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:58:50.022" endtime="20230801 10:58:50.022"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:50.021" endtime="20230801 10:58:50.023"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:50.027" endtime="20230801 10:58:50.027"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:50.029" endtime="20230801 10:58:50.029"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:50.024" endtime="20230801 10:58:50.029"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:58:50.031" endtime="20230801 10:58:50.032"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:50.029" endtime="20230801 10:58:50.032"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:58:50.033" endtime="20230801 10:58:50.034"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:50.032" endtime="20230801 10:58:50.034"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:50.038" endtime="20230801 10:58:50.039"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:50.037" endtime="20230801 10:58:50.039"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:50.042" endtime="20230801 10:58:50.042"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:50.039" endtime="20230801 10:58:50.043"/>
</branch>
<status status="PASS" starttime="20230801 10:58:49.985" endtime="20230801 10:58:50.043"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:50.044" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:58:50.045" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:58:50.044" endtime="20230801 10:58:50.045"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:58:50.047" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 10:58:50.046" endtime="20230801 10:58:50.047"/>
</kw>
<status status="PASS" starttime="20230801 10:58:50.045" endtime="20230801 10:58:50.047"/>
</branch>
<status status="PASS" starttime="20230801 10:58:50.045" endtime="20230801 10:58:50.047"/>
</if>
<msg timestamp="20230801 10:58:50.049" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 10:58:49.971" endtime="20230801 10:58:50.049"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//input[@placeholder="${field}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:50.054" level="INFO">${element} = xpath=//input[@placeholder="Ngày bắt đầu"]</msg>
<status status="PASS" starttime="20230801 10:58:50.050" endtime="20230801 10:58:50.054"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:50.055" endtime="20230801 10:58:51.231"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:51.232" endtime="20230801 10:58:51.486"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:58:51.487" level="INFO">Fills the text '31-07-2023' in the given field.</msg>
<status status="PASS" starttime="20230801 10:58:51.487" endtime="20230801 10:58:51.836"/>
</kw>
<status status="PASS" starttime="20230801 10:58:49.969" endtime="20230801 10:58:51.836"/>
</kw>
<kw name="And Enter leave date in &quot;Ngày kết thúc&quot; with &quot;31-07-2023&quot;" library="common" sourcename="Enter leave date in &quot;${field}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>date</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:51.868" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:58:51.868" endtime="20230801 10:58:51.868"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:51.869" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:58:51.869" endtime="20230801 10:58:51.869"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:51.871" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:58:51.870" endtime="20230801 10:58:51.871"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:51.873" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:51.873" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:58:51.872" endtime="20230801 10:58:51.873"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:51.881" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:58:51.875" endtime="20230801 10:58:51.881"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:51.883" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:51.884" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:58:51.882" endtime="20230801 10:58:51.884"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.885" endtime="20230801 10:58:51.886"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.887" endtime="20230801 10:58:51.888"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:51.885" endtime="20230801 10:58:51.888"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.889" endtime="20230801 10:58:51.889"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.890" endtime="20230801 10:58:51.890"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.891" endtime="20230801 10:58:51.891"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:51.888" endtime="20230801 10:58:51.892"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.894" endtime="20230801 10:58:51.895"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.895" endtime="20230801 10:58:51.896"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:51.892" endtime="20230801 10:58:51.896"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.897" endtime="20230801 10:58:51.897"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.899" endtime="20230801 10:58:51.899"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:51.896" endtime="20230801 10:58:51.900"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.902" endtime="20230801 10:58:51.902"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.902" endtime="20230801 10:58:51.903"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:51.900" endtime="20230801 10:58:51.903"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.904" endtime="20230801 10:58:51.904"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.905" endtime="20230801 10:58:51.905"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:51.903" endtime="20230801 10:58:51.961"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.964" endtime="20230801 10:58:51.964"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.965" endtime="20230801 10:58:51.965"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:51.963" endtime="20230801 10:58:51.966"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.967" endtime="20230801 10:58:51.968"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:51.966" endtime="20230801 10:58:51.968"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:58:51.970" endtime="20230801 10:58:51.971"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:51.968" endtime="20230801 10:58:51.972"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.981" endtime="20230801 10:58:51.982"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.982" endtime="20230801 10:58:51.983"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:51.974" endtime="20230801 10:58:51.983"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.986" endtime="20230801 10:58:51.987"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:51.985" endtime="20230801 10:58:51.987"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.988" endtime="20230801 10:58:51.989"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:51.987" endtime="20230801 10:58:51.989"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:51.991" endtime="20230801 10:58:51.996"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:51.990" endtime="20230801 10:58:51.997"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:52.001" endtime="20230801 10:58:52.002"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:51.999" endtime="20230801 10:58:52.002"/>
</branch>
<status status="PASS" starttime="20230801 10:58:51.884" endtime="20230801 10:58:52.003"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:52.005" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:58:52.005" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:58:52.004" endtime="20230801 10:58:52.005"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:58:52.008" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 10:58:52.007" endtime="20230801 10:58:52.008"/>
</kw>
<status status="PASS" starttime="20230801 10:58:52.006" endtime="20230801 10:58:52.008"/>
</branch>
<status status="PASS" starttime="20230801 10:58:52.005" endtime="20230801 10:58:52.012"/>
</if>
<msg timestamp="20230801 10:58:52.013" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 10:58:51.867" endtime="20230801 10:58:52.013"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//input[@placeholder="${field}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:52.015" level="INFO">${element} = xpath=//input[@placeholder="Ngày kết thúc"]</msg>
<status status="PASS" starttime="20230801 10:58:52.014" endtime="20230801 10:58:52.015"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:52.016" endtime="20230801 10:58:52.796"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:52.797" endtime="20230801 10:58:52.999"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:58:53.001" level="INFO">Fills the text '31-07-2023' in the given field.</msg>
<status status="PASS" starttime="20230801 10:58:53.000" endtime="20230801 10:58:53.472"/>
</kw>
<status status="PASS" starttime="20230801 10:58:51.866" endtime="20230801 10:58:53.472"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Lý do&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:53.479" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:58:53.478" endtime="20230801 10:58:53.480"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:53.481" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:58:53.480" endtime="20230801 10:58:53.481"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:53.483" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:58:53.482" endtime="20230801 10:58:53.483"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:53.484" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:53.484" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:58:53.483" endtime="20230801 10:58:53.484"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:53.486" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 10:58:53.485" endtime="20230801 10:58:53.486"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:53.487" level="INFO">Length is 1</msg>
<msg timestamp="20230801 10:58:53.487" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 10:58:53.486" endtime="20230801 10:58:53.487"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.489" endtime="20230801 10:58:53.489"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.490" endtime="20230801 10:58:53.490"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:53.487" endtime="20230801 10:58:53.490"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.491" endtime="20230801 10:58:53.491"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.492" endtime="20230801 10:58:53.492"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.493" endtime="20230801 10:58:53.494"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:53.490" endtime="20230801 10:58:53.496"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.497" endtime="20230801 10:58:53.497"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.499" endtime="20230801 10:58:53.499"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:53.496" endtime="20230801 10:58:53.499"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.500" endtime="20230801 10:58:53.501"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.501" endtime="20230801 10:58:53.502"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:53.499" endtime="20230801 10:58:53.502"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.503" endtime="20230801 10:58:53.503"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.504" endtime="20230801 10:58:53.504"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:53.502" endtime="20230801 10:58:53.504"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.505" endtime="20230801 10:58:53.506"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.506" endtime="20230801 10:58:53.506"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:53.505" endtime="20230801 10:58:53.507"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.507" endtime="20230801 10:58:53.507"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.508" endtime="20230801 10:58:53.509"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:53.507" endtime="20230801 10:58:53.510"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.513" endtime="20230801 10:58:53.513"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:53.511" endtime="20230801 10:58:53.514"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:58:53.515" endtime="20230801 10:58:53.515"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:53.514" endtime="20230801 10:58:53.515"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.517" endtime="20230801 10:58:53.517"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.517" endtime="20230801 10:58:53.519"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:53.516" endtime="20230801 10:58:53.519"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.521" endtime="20230801 10:58:53.521"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:53.519" endtime="20230801 10:58:53.522"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.527" endtime="20230801 10:58:53.528"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:53.522" endtime="20230801 10:58:53.528"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:58:53.530" endtime="20230801 10:58:53.530"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:53.529" endtime="20230801 10:58:53.530"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230801 10:58:53.532" level="INFO">${new_text} = Cumque est aspernatur adipisci.</msg>
<status status="PASS" starttime="20230801 10:58:53.531" endtime="20230801 10:58:53.532"/>
</kw>
<status status="PASS" starttime="20230801 10:58:53.531" endtime="20230801 10:58:53.533"/>
</branch>
<status status="PASS" starttime="20230801 10:58:53.487" endtime="20230801 10:58:53.533"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:53.536" level="INFO">Length is 8</msg>
<msg timestamp="20230801 10:58:53.536" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 10:58:53.534" endtime="20230801 10:58:53.536"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:58:53.541" level="INFO">${text} = Cumque est aspernatur adipisci.</msg>
<status status="PASS" starttime="20230801 10:58:53.539" endtime="20230801 10:58:53.541"/>
</kw>
<status status="PASS" starttime="20230801 10:58:53.537" endtime="20230801 10:58:53.541"/>
</branch>
<status status="PASS" starttime="20230801 10:58:53.537" endtime="20230801 10:58:53.543"/>
</if>
<msg timestamp="20230801 10:58:53.546" level="INFO">${text} = Cumque est aspernatur adipisci.</msg>
<status status="PASS" starttime="20230801 10:58:53.476" endtime="20230801 10:58:53.546"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230801 10:58:53.548" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Lý do"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230801 10:58:53.547" endtime="20230801 10:58:53.548"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:53.551" endtime="20230801 10:58:54.172"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:58:54.173" level="INFO">Fills the text 'Cumque est aspernatur adipisci.' in the given field.</msg>
<status status="PASS" starttime="20230801 10:58:54.172" endtime="20230801 10:58:54.247"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:54.248" level="INFO">Length is 31</msg>
<msg timestamp="20230801 10:58:54.249" level="INFO">${cnt} = 31</msg>
<status status="PASS" starttime="20230801 10:58:54.248" endtime="20230801 10:58:54.249"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:58:54.252" level="INFO">${STATE["Lý do"]} = Cumque est aspernatur adipisci.</msg>
<status status="PASS" starttime="20230801 10:58:54.251" endtime="20230801 10:58:54.252"/>
</kw>
<status status="PASS" starttime="20230801 10:58:54.250" endtime="20230801 10:58:54.252"/>
</branch>
<status status="PASS" starttime="20230801 10:58:54.249" endtime="20230801 10:58:54.253"/>
</if>
<status status="PASS" starttime="20230801 10:58:53.474" endtime="20230801 10:58:54.253"/>
</kw>
<kw name="And Click &quot;Lưu và tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:58:54.256" endtime="20230801 10:58:55.195"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:55.197" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:58:55.197" endtime="20230801 10:58:55.197"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:58:55.407" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:58:55.197" endtime="20230801 10:58:55.407"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:58:55.410" endtime="20230801 10:58:55.412"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:58:55.413" endtime="20230801 10:58:55.414"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:55.409" endtime="20230801 10:58:55.414"/>
</branch>
<status status="PASS" starttime="20230801 10:58:55.407" endtime="20230801 10:58:55.414"/>
</if>
<status status="PASS" starttime="20230801 10:58:55.196" endtime="20230801 10:58:55.415"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:58:55.415" endtime="20230801 10:58:55.571"/>
</kw>
<status status="PASS" starttime="20230801 10:58:54.254" endtime="20230801 10:58:55.571"/>
</kw>
<kw name="Then User look message &quot;Tạo thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:58:55.586" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:58:55.585" endtime="20230801 10:58:55.586"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:58:55.587" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:58:55.587" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:58:55.586" endtime="20230801 10:58:55.587"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 10:58:55.589" endtime="20230801 10:58:55.590"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:55.588" endtime="20230801 10:58:55.590"/>
</branch>
<status status="PASS" starttime="20230801 10:58:55.588" endtime="20230801 10:58:55.591"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:58:57.773" level="INFO">Text: 'Tạo thành công'</msg>
<status status="PASS" starttime="20230801 10:58:55.596" endtime="20230801 10:58:57.774"/>
</kw>
<status status="PASS" starttime="20230801 10:58:55.591" endtime="20230801 10:58:57.775"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:58:57.777" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 10:58:57.776" endtime="20230801 10:58:57.777"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:58:58.530" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-14.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-14.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 10:58:58.531" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 10:58:58.531" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 10:58:57.782" endtime="20230801 10:58:58.534"/>
</kw>
<status status="FAIL" starttime="20230801 10:58:57.779" endtime="20230801 10:58:58.535"/>
</kw>
<msg timestamp="20230801 10:58:58.535" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 10:58:57.777" endtime="20230801 10:58:58.535"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:58:58.537" endtime="20230801 10:58:58.537"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:58:58.536" endtime="20230801 10:58:58.537"/>
</branch>
<status status="PASS" starttime="20230801 10:58:58.536" endtime="20230801 10:58:58.538"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:59:01.195" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 10:58:58.540" endtime="20230801 10:59:01.195"/>
</kw>
<status status="PASS" starttime="20230801 10:58:58.538" endtime="20230801 10:59:01.196"/>
</kw>
<status status="PASS" starttime="20230801 10:58:55.583" endtime="20230801 10:59:01.196"/>
</kw>
<kw name="And User look title &quot;Tạo mới ngày nghỉ&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:01.204" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:59:01.203" endtime="20230801 10:59:01.204"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:59:01.245" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:59:01.205" endtime="20230801 10:59:01.245"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:59:01.246" endtime="20230801 10:59:01.247"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:01.246" endtime="20230801 10:59:01.247"/>
</branch>
<status status="PASS" starttime="20230801 10:59:01.245" endtime="20230801 10:59:01.247"/>
</if>
<status status="PASS" starttime="20230801 10:59:01.200" endtime="20230801 10:59:01.247"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:01.254" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:59:01.253" endtime="20230801 10:59:01.254"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:59:01.279" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:59:01.255" endtime="20230801 10:59:01.280"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:59:01.283" endtime="20230801 10:59:01.283"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:01.282" endtime="20230801 10:59:01.283"/>
</branch>
<status status="PASS" starttime="20230801 10:59:01.281" endtime="20230801 10:59:01.284"/>
</if>
<status status="PASS" starttime="20230801 10:59:01.250" endtime="20230801 10:59:01.284"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230801 10:59:01.300" level="INFO">Title: 'Tạo mới ngày nghỉ'</msg>
<msg timestamp="20230801 10:59:01.300" level="INFO">${actualTitle} = Tạo mới ngày nghỉ</msg>
<status status="PASS" starttime="20230801 10:59:01.285" endtime="20230801 10:59:01.300"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230801 10:59:01.301" endtime="20230801 10:59:01.302"/>
</kw>
<status status="PASS" starttime="20230801 10:59:01.248" endtime="20230801 10:59:01.302"/>
</kw>
<status status="PASS" starttime="20230801 10:59:01.199" endtime="20230801 10:59:01.303"/>
</kw>
<kw name="Get_Leave_date with &quot;Ngày phép còn lại&quot;" library="common" sourcename="Get_Leave_date with &quot;${date}&quot;">
<var>${leave_date_after}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//div[contains(text(), '${date}')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:01.306" level="INFO">${element} = //div[contains(text(), 'Ngày phép còn lại')]</msg>
<status status="PASS" starttime="20230801 10:59:01.305" endtime="20230801 10:59:01.306"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:59:01.329" level="INFO">Waited for Element with selector //div[contains(text(), 'Ngày phép còn lại')] at state visible</msg>
<status status="PASS" starttime="20230801 10:59:01.312" endtime="20230801 10:59:01.330"/>
</kw>
<status status="PASS" starttime="20230801 10:59:01.307" endtime="20230801 10:59:01.331"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${text}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:59:01.398" level="INFO">Text: 'Ngày phép còn lại ( 8 Ngày phép)'</msg>
<msg timestamp="20230801 10:59:01.399" level="INFO">${text} = Ngày phép còn lại ( 8 Ngày phép)</msg>
<status status="PASS" starttime="20230801 10:59:01.332" endtime="20230801 10:59:01.399"/>
</kw>
<msg timestamp="20230801 10:59:01.399" level="INFO">${leave_date_after} = Ngày phép còn lại ( 8 Ngày phép)</msg>
<status status="PASS" starttime="20230801 10:59:01.304" endtime="20230801 10:59:01.400"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${leave_date_before}</arg>
<arg>${leave_date_after}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230801 10:59:01.401" endtime="20230801 10:59:01.402"/>
</kw>
<kw name="When Click &quot;Huỷ bỏ&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:01.406" endtime="20230801 10:59:02.175"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:02.177" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:59:02.176" endtime="20230801 10:59:02.177"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:59:02.297" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:59:02.178" endtime="20230801 10:59:02.297"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:59:02.299" endtime="20230801 10:59:02.299"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:59:02.300" endtime="20230801 10:59:02.301"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:02.298" endtime="20230801 10:59:02.301"/>
</branch>
<status status="PASS" starttime="20230801 10:59:02.298" endtime="20230801 10:59:02.301"/>
</if>
<status status="PASS" starttime="20230801 10:59:02.175" endtime="20230801 10:59:02.302"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:59:02.302" endtime="20230801 10:59:02.361"/>
</kw>
<status status="PASS" starttime="20230801 10:59:01.403" endtime="20230801 10:59:02.361"/>
</kw>
<kw name="And Click on the &quot;Xóa&quot; button in the &quot;Họ và tên&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:02.365" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:59:02.365" endtime="20230801 10:59:02.365"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:59:02.380" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 10:59:02.366" endtime="20230801 10:59:02.380"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:59:04.265" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 10:59:02.384" endtime="20230801 10:59:04.265"/>
</kw>
<status status="PASS" starttime="20230801 10:59:02.382" endtime="20230801 10:59:04.266"/>
</kw>
<status status="PASS" starttime="20230801 10:59:02.381" endtime="20230801 10:59:04.266"/>
</branch>
<status status="PASS" starttime="20230801 10:59:02.381" endtime="20230801 10:59:04.266"/>
</if>
<status status="PASS" starttime="20230801 10:59:02.364" endtime="20230801 10:59:04.266"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 10:59:04.284" level="INFO">Found 3 Locators successfully.</msg>
<msg timestamp="20230801 10:59:04.284" level="INFO">${element} = ['element=d4f54fe1-be2e-473c-a1ac-7f2aaa8a737c', 'element=0c1d9ae9-48f1-49d9-9eb1-c8dca3d5d1fe', 'element=a995637c-bcd9-4eb0-b22f-7307e9cf7742']</msg>
<status status="PASS" starttime="20230801 10:59:04.267" endtime="20230801 10:59:04.284"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:04.285" endtime="20230801 10:59:04.667"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:04.669" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:59:04.668" endtime="20230801 10:59:04.669"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:59:04.698" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 10:59:04.670" endtime="20230801 10:59:04.698"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:04.700" endtime="20230801 10:59:05.219"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 10:59:05.321" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 10:59:05.220" endtime="20230801 10:59:05.321"/>
</kw>
<status status="PASS" starttime="20230801 10:59:04.699" endtime="20230801 10:59:05.321"/>
</branch>
<status status="PASS" starttime="20230801 10:59:04.699" endtime="20230801 10:59:05.322"/>
</if>
<status status="PASS" starttime="20230801 10:59:04.667" endtime="20230801 10:59:05.322"/>
</kw>
<status status="PASS" starttime="20230801 10:59:02.363" endtime="20230801 10:59:05.322"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 10:59:05.486" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 10:59:05.344" endtime="20230801 10:59:05.487"/>
</kw>
<status status="PASS" starttime="20230801 10:59:05.343" endtime="20230801 10:59:05.487"/>
</kw>
<status status="PASS" starttime="20230801 10:58:37.149" endtime="20230801 10:59:05.488"/>
</test>
<test id="s1-t11" name="STA-11 Verify that Create leave management successfully with &quot;Nghỉ phép có lương&quot; &amp; &quot;Lưu lại&quot; button" line="119">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 10:59:05.509" endtime="20230801 10:59:05.510"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 10:59:05.513" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\7716c4a3-2d07-47ec-b9ad-c48087c12445"}</msg>
<msg timestamp="20230801 10:59:06.951" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\7716c4a3-2d07-47ec-b9ad-c48087c12445"}</msg>
<status status="PASS" starttime="20230801 10:59:05.511" endtime="20230801 10:59:06.951"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 10:59:07.806" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 10:59:07.806" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 10:59:06.952" endtime="20230801 10:59:07.807"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 10:59:07.809" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 10:59:07.807" endtime="20230801 10:59:07.809"/>
</kw>
<status status="PASS" starttime="20230801 10:59:05.508" endtime="20230801 10:59:07.809"/>
</kw>
<kw name="Go to create leave date page" library="common">
<kw name="Login to Staff" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;staff@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:07.816" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:59:07.815" endtime="20230801 10:59:07.816"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:07.817" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:59:07.817" endtime="20230801 10:59:07.817"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:07.819" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:59:07.818" endtime="20230801 10:59:07.819"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:07.820" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:07.820" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:59:07.820" endtime="20230801 10:59:07.820"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:07.821" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:59:07.821" endtime="20230801 10:59:07.821"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:07.822" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:07.822" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:59:07.822" endtime="20230801 10:59:07.822"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.823" endtime="20230801 10:59:07.824"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.825" endtime="20230801 10:59:07.825"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:07.823" endtime="20230801 10:59:07.825"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.827" endtime="20230801 10:59:07.828"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.829" endtime="20230801 10:59:07.829"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.830" endtime="20230801 10:59:07.830"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:07.826" endtime="20230801 10:59:07.830"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.832" endtime="20230801 10:59:07.832"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.833" endtime="20230801 10:59:07.833"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:07.831" endtime="20230801 10:59:07.833"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.834" endtime="20230801 10:59:07.835"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.835" endtime="20230801 10:59:07.836"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:07.834" endtime="20230801 10:59:07.836"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.837" endtime="20230801 10:59:07.838"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.838" endtime="20230801 10:59:07.839"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:07.836" endtime="20230801 10:59:07.839"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.840" endtime="20230801 10:59:07.840"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.842" endtime="20230801 10:59:07.842"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:07.839" endtime="20230801 10:59:07.842"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.844" endtime="20230801 10:59:07.845"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.845" endtime="20230801 10:59:07.846"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:07.843" endtime="20230801 10:59:07.846"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.849" endtime="20230801 10:59:07.850"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:07.847" endtime="20230801 10:59:07.850"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:59:07.851" endtime="20230801 10:59:07.851"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:07.850" endtime="20230801 10:59:07.851"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.853" endtime="20230801 10:59:07.853"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.854" endtime="20230801 10:59:07.854"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:07.852" endtime="20230801 10:59:07.854"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.855" endtime="20230801 10:59:07.856"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:07.855" endtime="20230801 10:59:07.856"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.856" endtime="20230801 10:59:07.856"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:07.856" endtime="20230801 10:59:07.857"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.857" endtime="20230801 10:59:07.857"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:07.857" endtime="20230801 10:59:07.858"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:07.860" endtime="20230801 10:59:07.861"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:07.859" endtime="20230801 10:59:07.861"/>
</branch>
<status status="PASS" starttime="20230801 10:59:07.823" endtime="20230801 10:59:07.862"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:07.864" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:59:07.864" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:59:07.863" endtime="20230801 10:59:07.864"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:59:07.866" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:59:07.865" endtime="20230801 10:59:07.866"/>
</kw>
<status status="PASS" starttime="20230801 10:59:07.865" endtime="20230801 10:59:07.866"/>
</branch>
<status status="PASS" starttime="20230801 10:59:07.864" endtime="20230801 10:59:07.867"/>
</if>
<msg timestamp="20230801 10:59:07.867" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:59:07.814" endtime="20230801 10:59:07.867"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:59:07.869" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:59:07.868" endtime="20230801 10:59:07.869"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:07.870" endtime="20230801 10:59:09.272"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:59:09.274" level="INFO">Fills the text 'staff@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230801 10:59:09.273" endtime="20230801 10:59:09.338"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:09.339" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:59:09.339" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:59:09.339" endtime="20230801 10:59:09.339"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:59:09.343" level="INFO">${STATE["Tên đăng nhập"]} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:59:09.342" endtime="20230801 10:59:09.344"/>
</kw>
<status status="PASS" starttime="20230801 10:59:09.340" endtime="20230801 10:59:09.344"/>
</branch>
<status status="PASS" starttime="20230801 10:59:09.340" endtime="20230801 10:59:09.344"/>
</if>
<status status="PASS" starttime="20230801 10:59:07.813" endtime="20230801 10:59:09.345"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Tester@123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:09.348" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:59:09.348" endtime="20230801 10:59:09.349"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:09.350" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:59:09.349" endtime="20230801 10:59:09.350"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:09.351" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:59:09.350" endtime="20230801 10:59:09.351"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:09.352" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:09.352" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:59:09.352" endtime="20230801 10:59:09.352"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:09.354" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:59:09.353" endtime="20230801 10:59:09.354"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:09.356" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:09.356" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:59:09.355" endtime="20230801 10:59:09.356"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.358" endtime="20230801 10:59:09.359"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.359" endtime="20230801 10:59:09.360"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:09.357" endtime="20230801 10:59:09.360"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.362" endtime="20230801 10:59:09.362"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.363" endtime="20230801 10:59:09.363"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.363" endtime="20230801 10:59:09.364"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:09.361" endtime="20230801 10:59:09.364"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.365" endtime="20230801 10:59:09.365"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.366" endtime="20230801 10:59:09.366"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:09.364" endtime="20230801 10:59:09.366"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.368" endtime="20230801 10:59:09.368"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.368" endtime="20230801 10:59:09.368"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:09.367" endtime="20230801 10:59:09.368"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.369" endtime="20230801 10:59:09.369"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.370" endtime="20230801 10:59:09.370"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:09.369" endtime="20230801 10:59:09.371"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.372" endtime="20230801 10:59:09.372"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.373" endtime="20230801 10:59:09.373"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:09.371" endtime="20230801 10:59:09.374"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.377" endtime="20230801 10:59:09.378"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.378" endtime="20230801 10:59:09.378"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:09.375" endtime="20230801 10:59:09.378"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.379" endtime="20230801 10:59:09.379"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:09.379" endtime="20230801 10:59:09.379"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:59:09.380" endtime="20230801 10:59:09.380"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:09.380" endtime="20230801 10:59:09.380"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.381" endtime="20230801 10:59:09.381"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.382" endtime="20230801 10:59:09.382"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:09.381" endtime="20230801 10:59:09.382"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.383" endtime="20230801 10:59:09.383"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:09.382" endtime="20230801 10:59:09.383"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.384" endtime="20230801 10:59:09.384"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:09.383" endtime="20230801 10:59:09.384"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.385" endtime="20230801 10:59:09.385"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:09.384" endtime="20230801 10:59:09.385"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.386" endtime="20230801 10:59:09.386"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:09.385" endtime="20230801 10:59:09.386"/>
</branch>
<status status="PASS" starttime="20230801 10:59:09.356" endtime="20230801 10:59:09.386"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:09.388" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:59:09.388" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:59:09.387" endtime="20230801 10:59:09.388"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:59:09.392" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:59:09.389" endtime="20230801 10:59:09.392"/>
</kw>
<status status="PASS" starttime="20230801 10:59:09.389" endtime="20230801 10:59:09.392"/>
</branch>
<status status="PASS" starttime="20230801 10:59:09.388" endtime="20230801 10:59:09.393"/>
</if>
<msg timestamp="20230801 10:59:09.393" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:59:09.347" endtime="20230801 10:59:09.394"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:59:09.395" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:59:09.394" endtime="20230801 10:59:09.395"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:09.396" endtime="20230801 10:59:09.475"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:59:09.477" level="INFO">Fills the text 'Tester@123' in the given field.</msg>
<status status="PASS" starttime="20230801 10:59:09.476" endtime="20230801 10:59:09.527"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:09.529" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:59:09.529" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:59:09.528" endtime="20230801 10:59:09.530"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:59:09.533" level="INFO">${STATE["Mật khẩu"]} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:59:09.532" endtime="20230801 10:59:09.533"/>
</kw>
<status status="PASS" starttime="20230801 10:59:09.531" endtime="20230801 10:59:09.533"/>
</branch>
<status status="PASS" starttime="20230801 10:59:09.530" endtime="20230801 10:59:09.534"/>
</if>
<status status="PASS" starttime="20230801 10:59:09.346" endtime="20230801 10:59:09.534"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:09.536" endtime="20230801 10:59:09.845"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:09.848" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:59:09.847" endtime="20230801 10:59:09.848"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:59:09.857" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:59:09.849" endtime="20230801 10:59:09.857"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.858" endtime="20230801 10:59:09.859"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.859" endtime="20230801 10:59:09.860"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:09.858" endtime="20230801 10:59:09.860"/>
</branch>
<status status="PASS" starttime="20230801 10:59:09.857" endtime="20230801 10:59:09.860"/>
</if>
<status status="PASS" starttime="20230801 10:59:09.846" endtime="20230801 10:59:09.860"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:59:09.861" endtime="20230801 10:59:09.910"/>
</kw>
<status status="PASS" starttime="20230801 10:59:09.534" endtime="20230801 10:59:09.911"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:09.914" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:59:09.913" endtime="20230801 10:59:09.914"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:09.915" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:09.916" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:59:09.915" endtime="20230801 10:59:09.916"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 10:59:09.917" endtime="20230801 10:59:09.917"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:09.916" endtime="20230801 10:59:09.918"/>
</branch>
<status status="PASS" starttime="20230801 10:59:09.916" endtime="20230801 10:59:09.918"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:59:11.941" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 10:59:09.922" endtime="20230801 10:59:11.942"/>
</kw>
<status status="PASS" starttime="20230801 10:59:09.918" endtime="20230801 10:59:11.943"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:11.945" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 10:59:11.944" endtime="20230801 10:59:11.945"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:59:12.411" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-15.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-15.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 10:59:12.411" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 10:59:12.411" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 10:59:11.951" endtime="20230801 10:59:12.414"/>
</kw>
<status status="FAIL" starttime="20230801 10:59:11.946" endtime="20230801 10:59:12.415"/>
</kw>
<msg timestamp="20230801 10:59:12.415" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 10:59:11.945" endtime="20230801 10:59:12.415"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:59:12.417" endtime="20230801 10:59:12.417"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:12.416" endtime="20230801 10:59:12.417"/>
</branch>
<status status="PASS" starttime="20230801 10:59:12.416" endtime="20230801 10:59:12.417"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:59:14.497" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 10:59:12.420" endtime="20230801 10:59:14.497"/>
</kw>
<status status="PASS" starttime="20230801 10:59:12.418" endtime="20230801 10:59:14.498"/>
</kw>
<status status="PASS" starttime="20230801 10:59:09.912" endtime="20230801 10:59:14.498"/>
</kw>
<status status="PASS" starttime="20230801 10:59:07.811" endtime="20230801 10:59:14.498"/>
</kw>
<kw name="When Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:14.500" endtime="20230801 10:59:15.083"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:15.085" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:59:15.085" endtime="20230801 10:59:15.085"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:59:15.396" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:59:15.086" endtime="20230801 10:59:15.396"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.398" endtime="20230801 10:59:15.398"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.398" endtime="20230801 10:59:15.398"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:15.397" endtime="20230801 10:59:15.399"/>
</branch>
<status status="PASS" starttime="20230801 10:59:15.397" endtime="20230801 10:59:15.399"/>
</if>
<status status="PASS" starttime="20230801 10:59:15.084" endtime="20230801 10:59:15.399"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:59:15.400" endtime="20230801 10:59:15.516"/>
</kw>
<status status="PASS" starttime="20230801 10:59:14.499" endtime="20230801 10:59:15.516"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:15.518" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:59:15.518" endtime="20230801 10:59:15.519"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:59:15.562" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:59:15.519" endtime="20230801 10:59:15.562"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:59:15.563" endtime="20230801 10:59:15.563"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:15.563" endtime="20230801 10:59:15.564"/>
</branch>
<status status="PASS" starttime="20230801 10:59:15.562" endtime="20230801 10:59:15.564"/>
</if>
<status status="PASS" starttime="20230801 10:59:15.517" endtime="20230801 10:59:15.564"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 10:59:15.667" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 10:59:15.565" endtime="20230801 10:59:15.667"/>
</kw>
<status status="PASS" starttime="20230801 10:59:07.810" endtime="20230801 10:59:15.667"/>
</kw>
<kw name="And Click select &quot;Loại phép&quot; with &quot;Nghỉ phép có lương&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:15.677" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:59:15.676" endtime="20230801 10:59:15.677"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:15.679" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:59:15.678" endtime="20230801 10:59:15.679"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:15.681" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:59:15.680" endtime="20230801 10:59:15.681"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:15.682" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:15.683" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:59:15.682" endtime="20230801 10:59:15.683"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:15.684" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:59:15.683" endtime="20230801 10:59:15.684"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:15.685" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:15.686" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:59:15.685" endtime="20230801 10:59:15.686"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.687" endtime="20230801 10:59:15.687"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.688" endtime="20230801 10:59:15.688"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:15.686" endtime="20230801 10:59:15.689"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.691" endtime="20230801 10:59:15.692"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.692" endtime="20230801 10:59:15.693"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.693" endtime="20230801 10:59:15.694"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:15.689" endtime="20230801 10:59:15.694"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.696" endtime="20230801 10:59:15.697"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.697" endtime="20230801 10:59:15.698"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:15.694" endtime="20230801 10:59:15.698"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.700" endtime="20230801 10:59:15.700"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.701" endtime="20230801 10:59:15.701"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:15.699" endtime="20230801 10:59:15.701"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.702" endtime="20230801 10:59:15.703"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.703" endtime="20230801 10:59:15.703"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:15.702" endtime="20230801 10:59:15.704"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.705" endtime="20230801 10:59:15.706"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.708" endtime="20230801 10:59:15.709"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:15.704" endtime="20230801 10:59:15.710"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.711" endtime="20230801 10:59:15.711"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.712" endtime="20230801 10:59:15.712"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:15.710" endtime="20230801 10:59:15.713"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.714" endtime="20230801 10:59:15.715"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:15.713" endtime="20230801 10:59:15.715"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:59:15.716" endtime="20230801 10:59:15.716"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:15.715" endtime="20230801 10:59:15.717"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.718" endtime="20230801 10:59:15.718"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.719" endtime="20230801 10:59:15.719"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:15.717" endtime="20230801 10:59:15.719"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.720" endtime="20230801 10:59:15.721"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:15.720" endtime="20230801 10:59:15.721"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.722" endtime="20230801 10:59:15.722"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:15.721" endtime="20230801 10:59:15.722"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.725" endtime="20230801 10:59:15.725"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:15.723" endtime="20230801 10:59:15.726"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:15.727" endtime="20230801 10:59:15.727"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:15.726" endtime="20230801 10:59:15.728"/>
</branch>
<status status="PASS" starttime="20230801 10:59:15.686" endtime="20230801 10:59:15.728"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:15.730" level="INFO">Length is 18</msg>
<msg timestamp="20230801 10:59:15.730" level="INFO">${cnt} = 18</msg>
<status status="PASS" starttime="20230801 10:59:15.729" endtime="20230801 10:59:15.730"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:59:15.772" level="INFO">${text} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 10:59:15.732" endtime="20230801 10:59:15.772"/>
</kw>
<status status="PASS" starttime="20230801 10:59:15.731" endtime="20230801 10:59:15.772"/>
</branch>
<status status="PASS" starttime="20230801 10:59:15.731" endtime="20230801 10:59:15.774"/>
</if>
<msg timestamp="20230801 10:59:15.774" level="INFO">${text} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 10:59:15.673" endtime="20230801 10:59:15.775"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 10:59:15.776" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 10:59:15.775" endtime="20230801 10:59:15.777"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:59:15.886" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 10:59:15.781" endtime="20230801 10:59:15.886"/>
</kw>
<status status="PASS" starttime="20230801 10:59:15.777" endtime="20230801 10:59:15.887"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:15.887" endtime="20230801 10:59:16.102"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 10:59:16.104" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 10:59:16.103" endtime="20230801 10:59:16.104"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:59:16.105" level="INFO">Fills the text 'Nghỉ phép có lương' in the given field.</msg>
<status status="PASS" starttime="20230801 10:59:16.104" endtime="20230801 10:59:16.195"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:16.195" endtime="20230801 10:59:16.546"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:16.547" level="INFO">Length is 18</msg>
<msg timestamp="20230801 10:59:16.548" level="INFO">${cnt} = 18</msg>
<status status="PASS" starttime="20230801 10:59:16.547" endtime="20230801 10:59:16.548"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:59:16.551" level="INFO">${STATE["Loại phép"]} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 10:59:16.549" endtime="20230801 10:59:16.551"/>
</kw>
<status status="PASS" starttime="20230801 10:59:16.548" endtime="20230801 10:59:16.551"/>
</branch>
<status status="PASS" starttime="20230801 10:59:16.548" endtime="20230801 10:59:16.551"/>
</if>
<status status="PASS" starttime="20230801 10:59:15.672" endtime="20230801 10:59:16.552"/>
</kw>
<kw name="And Click select &quot;Thời gian&quot; with &quot;Sáng&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:16.557" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:59:16.556" endtime="20230801 10:59:16.557"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:16.558" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:59:16.558" endtime="20230801 10:59:16.559"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:16.561" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:59:16.559" endtime="20230801 10:59:16.561"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:16.561" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:16.562" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:59:16.561" endtime="20230801 10:59:16.562"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:16.563" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:59:16.562" endtime="20230801 10:59:16.563"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:16.564" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:16.565" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:59:16.564" endtime="20230801 10:59:16.565"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.566" endtime="20230801 10:59:16.566"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.567" endtime="20230801 10:59:16.567"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:16.565" endtime="20230801 10:59:16.568"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.570" endtime="20230801 10:59:16.570"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.571" endtime="20230801 10:59:16.571"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.572" endtime="20230801 10:59:16.572"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:16.568" endtime="20230801 10:59:16.573"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.575" endtime="20230801 10:59:16.576"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.577" endtime="20230801 10:59:16.577"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:16.573" endtime="20230801 10:59:16.577"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.579" endtime="20230801 10:59:16.579"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.580" endtime="20230801 10:59:16.580"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:16.578" endtime="20230801 10:59:16.580"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.581" endtime="20230801 10:59:16.582"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.582" endtime="20230801 10:59:16.583"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:16.580" endtime="20230801 10:59:16.583"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.584" endtime="20230801 10:59:16.584"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.585" endtime="20230801 10:59:16.585"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:16.583" endtime="20230801 10:59:16.585"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.586" endtime="20230801 10:59:16.586"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.587" endtime="20230801 10:59:16.587"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:16.585" endtime="20230801 10:59:16.587"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.589" endtime="20230801 10:59:16.589"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:16.588" endtime="20230801 10:59:16.589"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:59:16.592" endtime="20230801 10:59:16.593"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:16.591" endtime="20230801 10:59:16.593"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.596" endtime="20230801 10:59:16.596"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.597" endtime="20230801 10:59:16.597"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:16.594" endtime="20230801 10:59:16.597"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.599" endtime="20230801 10:59:16.599"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:16.598" endtime="20230801 10:59:16.599"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.600" endtime="20230801 10:59:16.601"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:16.599" endtime="20230801 10:59:16.601"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.602" endtime="20230801 10:59:16.602"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:16.601" endtime="20230801 10:59:16.602"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:16.603" endtime="20230801 10:59:16.604"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:16.603" endtime="20230801 10:59:16.604"/>
</branch>
<status status="PASS" starttime="20230801 10:59:16.565" endtime="20230801 10:59:16.604"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:16.606" level="INFO">Length is 4</msg>
<msg timestamp="20230801 10:59:16.606" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20230801 10:59:16.605" endtime="20230801 10:59:16.606"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:59:16.612" level="INFO">${text} = Sáng</msg>
<status status="PASS" starttime="20230801 10:59:16.611" endtime="20230801 10:59:16.612"/>
</kw>
<status status="PASS" starttime="20230801 10:59:16.609" endtime="20230801 10:59:16.613"/>
</branch>
<status status="PASS" starttime="20230801 10:59:16.608" endtime="20230801 10:59:16.613"/>
</if>
<msg timestamp="20230801 10:59:16.613" level="INFO">${text} = Sáng</msg>
<status status="PASS" starttime="20230801 10:59:16.555" endtime="20230801 10:59:16.613"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 10:59:16.616" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 10:59:16.614" endtime="20230801 10:59:16.616"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:59:16.646" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 10:59:16.621" endtime="20230801 10:59:16.647"/>
</kw>
<status status="PASS" starttime="20230801 10:59:16.617" endtime="20230801 10:59:16.647"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:16.648" endtime="20230801 10:59:16.820"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 10:59:16.822" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 10:59:16.821" endtime="20230801 10:59:16.822"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:59:16.824" level="INFO">Fills the text 'Sáng' in the given field.</msg>
<status status="PASS" starttime="20230801 10:59:16.822" endtime="20230801 10:59:16.933"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:16.933" endtime="20230801 10:59:17.328"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:17.329" level="INFO">Length is 4</msg>
<msg timestamp="20230801 10:59:17.329" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20230801 10:59:17.329" endtime="20230801 10:59:17.330"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:59:17.332" level="INFO">${STATE["Thời gian"]} = Sáng</msg>
<status status="PASS" starttime="20230801 10:59:17.331" endtime="20230801 10:59:17.332"/>
</kw>
<status status="PASS" starttime="20230801 10:59:17.330" endtime="20230801 10:59:17.333"/>
</branch>
<status status="PASS" starttime="20230801 10:59:17.330" endtime="20230801 10:59:17.333"/>
</if>
<status status="PASS" starttime="20230801 10:59:16.554" endtime="20230801 10:59:17.333"/>
</kw>
<kw name="And Enter leave date in &quot;Ngày bắt đầu&quot; with &quot;31-07-2023&quot;" library="common" sourcename="Enter leave date in &quot;${field}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>date</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:17.338" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:59:17.337" endtime="20230801 10:59:17.338"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:17.341" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:59:17.339" endtime="20230801 10:59:17.341"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:17.343" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:59:17.342" endtime="20230801 10:59:17.344"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:17.345" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:17.345" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:59:17.344" endtime="20230801 10:59:17.345"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:17.348" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:59:17.346" endtime="20230801 10:59:17.348"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:17.350" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:17.350" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:59:17.349" endtime="20230801 10:59:17.350"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.352" endtime="20230801 10:59:17.352"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.353" endtime="20230801 10:59:17.353"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:17.351" endtime="20230801 10:59:17.353"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.355" endtime="20230801 10:59:17.355"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.356" endtime="20230801 10:59:17.356"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.357" endtime="20230801 10:59:17.357"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:17.354" endtime="20230801 10:59:17.358"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.359" endtime="20230801 10:59:17.359"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.360" endtime="20230801 10:59:17.360"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:17.358" endtime="20230801 10:59:17.361"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.365" endtime="20230801 10:59:17.366"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.366" endtime="20230801 10:59:17.367"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:17.364" endtime="20230801 10:59:17.367"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.368" endtime="20230801 10:59:17.369"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.369" endtime="20230801 10:59:17.369"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:17.367" endtime="20230801 10:59:17.370"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.371" endtime="20230801 10:59:17.371"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.372" endtime="20230801 10:59:17.372"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:17.370" endtime="20230801 10:59:17.372"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.374" endtime="20230801 10:59:17.375"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.375" endtime="20230801 10:59:17.376"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:17.373" endtime="20230801 10:59:17.376"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.377" endtime="20230801 10:59:17.377"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:17.376" endtime="20230801 10:59:17.377"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:59:17.378" endtime="20230801 10:59:17.378"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:17.377" endtime="20230801 10:59:17.379"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.380" endtime="20230801 10:59:17.380"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.381" endtime="20230801 10:59:17.381"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:17.379" endtime="20230801 10:59:17.381"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.382" endtime="20230801 10:59:17.383"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:17.382" endtime="20230801 10:59:17.383"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.384" endtime="20230801 10:59:17.385"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:17.383" endtime="20230801 10:59:17.385"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.388" endtime="20230801 10:59:17.388"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:17.385" endtime="20230801 10:59:17.388"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:17.389" endtime="20230801 10:59:17.391"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:17.389" endtime="20230801 10:59:17.392"/>
</branch>
<status status="PASS" starttime="20230801 10:59:17.350" endtime="20230801 10:59:17.394"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:17.395" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:59:17.395" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:59:17.394" endtime="20230801 10:59:17.395"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:59:17.398" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 10:59:17.397" endtime="20230801 10:59:17.398"/>
</kw>
<status status="PASS" starttime="20230801 10:59:17.396" endtime="20230801 10:59:17.398"/>
</branch>
<status status="PASS" starttime="20230801 10:59:17.396" endtime="20230801 10:59:17.399"/>
</if>
<msg timestamp="20230801 10:59:17.400" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 10:59:17.336" endtime="20230801 10:59:17.400"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//input[@placeholder="${field}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:17.401" level="INFO">${element} = xpath=//input[@placeholder="Ngày bắt đầu"]</msg>
<status status="PASS" starttime="20230801 10:59:17.400" endtime="20230801 10:59:17.402"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:17.402" endtime="20230801 10:59:18.219"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:18.220" endtime="20230801 10:59:18.351"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:59:18.353" level="INFO">Fills the text '31-07-2023' in the given field.</msg>
<status status="PASS" starttime="20230801 10:59:18.352" endtime="20230801 10:59:18.662"/>
</kw>
<status status="PASS" starttime="20230801 10:59:17.335" endtime="20230801 10:59:18.662"/>
</kw>
<kw name="And Enter leave date in &quot;Ngày kết thúc&quot; with &quot;31-07-2023&quot;" library="common" sourcename="Enter leave date in &quot;${field}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>date</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:18.666" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:59:18.666" endtime="20230801 10:59:18.667"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:18.668" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:59:18.667" endtime="20230801 10:59:18.668"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:18.669" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:59:18.668" endtime="20230801 10:59:18.669"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:18.670" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:18.670" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:59:18.670" endtime="20230801 10:59:18.670"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:18.672" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:59:18.671" endtime="20230801 10:59:18.672"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:18.674" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:18.674" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:59:18.673" endtime="20230801 10:59:18.674"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.676" endtime="20230801 10:59:18.677"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.678" endtime="20230801 10:59:18.678"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:18.675" endtime="20230801 10:59:18.678"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.679" endtime="20230801 10:59:18.680"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.680" endtime="20230801 10:59:18.681"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.682" endtime="20230801 10:59:18.682"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:18.678" endtime="20230801 10:59:18.682"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.684" endtime="20230801 10:59:18.685"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.685" endtime="20230801 10:59:18.686"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:18.683" endtime="20230801 10:59:18.686"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.687" endtime="20230801 10:59:18.687"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.688" endtime="20230801 10:59:18.688"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:18.686" endtime="20230801 10:59:18.689"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.691" endtime="20230801 10:59:18.691"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.692" endtime="20230801 10:59:18.692"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:18.689" endtime="20230801 10:59:18.693"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.694" endtime="20230801 10:59:18.694"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.695" endtime="20230801 10:59:18.695"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:18.693" endtime="20230801 10:59:18.696"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.698" endtime="20230801 10:59:18.699"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.699" endtime="20230801 10:59:18.699"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:18.697" endtime="20230801 10:59:18.699"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.700" endtime="20230801 10:59:18.700"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:18.700" endtime="20230801 10:59:18.700"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:59:18.701" endtime="20230801 10:59:18.701"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:18.701" endtime="20230801 10:59:18.701"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.702" endtime="20230801 10:59:18.702"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.702" endtime="20230801 10:59:18.702"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:18.701" endtime="20230801 10:59:18.702"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.704" endtime="20230801 10:59:18.704"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:18.703" endtime="20230801 10:59:18.704"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.705" endtime="20230801 10:59:18.705"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:18.704" endtime="20230801 10:59:18.705"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.706" endtime="20230801 10:59:18.707"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:18.705" endtime="20230801 10:59:18.707"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:18.709" endtime="20230801 10:59:18.709"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:18.708" endtime="20230801 10:59:18.709"/>
</branch>
<status status="PASS" starttime="20230801 10:59:18.675" endtime="20230801 10:59:18.710"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:18.712" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:59:18.712" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:59:18.711" endtime="20230801 10:59:18.712"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:59:18.714" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 10:59:18.714" endtime="20230801 10:59:18.714"/>
</kw>
<status status="PASS" starttime="20230801 10:59:18.713" endtime="20230801 10:59:18.715"/>
</branch>
<status status="PASS" starttime="20230801 10:59:18.712" endtime="20230801 10:59:18.715"/>
</if>
<msg timestamp="20230801 10:59:18.715" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 10:59:18.664" endtime="20230801 10:59:18.715"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//input[@placeholder="${field}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:18.716" level="INFO">${element} = xpath=//input[@placeholder="Ngày kết thúc"]</msg>
<status status="PASS" starttime="20230801 10:59:18.716" endtime="20230801 10:59:18.716"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:18.717" endtime="20230801 10:59:19.017"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:19.018" endtime="20230801 10:59:19.145"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:59:19.147" level="INFO">Fills the text '31-07-2023' in the given field.</msg>
<status status="PASS" starttime="20230801 10:59:19.146" endtime="20230801 10:59:19.365"/>
</kw>
<status status="PASS" starttime="20230801 10:59:18.663" endtime="20230801 10:59:19.365"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Lý do&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:19.369" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:59:19.369" endtime="20230801 10:59:19.369"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:19.370" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:59:19.370" endtime="20230801 10:59:19.370"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:19.372" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:59:19.371" endtime="20230801 10:59:19.372"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:19.373" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:19.374" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:59:19.373" endtime="20230801 10:59:19.374"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:19.376" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 10:59:19.375" endtime="20230801 10:59:19.376"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:19.377" level="INFO">Length is 1</msg>
<msg timestamp="20230801 10:59:19.377" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 10:59:19.377" endtime="20230801 10:59:19.378"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.379" endtime="20230801 10:59:19.379"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.380" endtime="20230801 10:59:19.380"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:19.378" endtime="20230801 10:59:19.381"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.382" endtime="20230801 10:59:19.382"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.383" endtime="20230801 10:59:19.383"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.384" endtime="20230801 10:59:19.384"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:19.381" endtime="20230801 10:59:19.384"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.385" endtime="20230801 10:59:19.386"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.386" endtime="20230801 10:59:19.386"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:19.384" endtime="20230801 10:59:19.387"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.388" endtime="20230801 10:59:19.388"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.389" endtime="20230801 10:59:19.390"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:19.387" endtime="20230801 10:59:19.392"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.393" endtime="20230801 10:59:19.393"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.394" endtime="20230801 10:59:19.394"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:19.392" endtime="20230801 10:59:19.395"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.396" endtime="20230801 10:59:19.396"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.397" endtime="20230801 10:59:19.397"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:19.395" endtime="20230801 10:59:19.398"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.399" endtime="20230801 10:59:19.399"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.400" endtime="20230801 10:59:19.400"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:19.398" endtime="20230801 10:59:19.400"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.402" endtime="20230801 10:59:19.402"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:19.401" endtime="20230801 10:59:19.402"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:59:19.403" endtime="20230801 10:59:19.404"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:19.402" endtime="20230801 10:59:19.404"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.405" endtime="20230801 10:59:19.405"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.407" endtime="20230801 10:59:19.407"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:19.404" endtime="20230801 10:59:19.408"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.409" endtime="20230801 10:59:19.409"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:19.408" endtime="20230801 10:59:19.409"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.410" endtime="20230801 10:59:19.411"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:19.410" endtime="20230801 10:59:19.411"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:19.412" endtime="20230801 10:59:19.413"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:19.412" endtime="20230801 10:59:19.413"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230801 10:59:19.415" level="INFO">${new_text} = Hic repellat laboriosam perferendis nobis sapiente facere.</msg>
<status status="PASS" starttime="20230801 10:59:19.414" endtime="20230801 10:59:19.415"/>
</kw>
<status status="PASS" starttime="20230801 10:59:19.413" endtime="20230801 10:59:19.415"/>
</branch>
<status status="PASS" starttime="20230801 10:59:19.378" endtime="20230801 10:59:19.415"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:19.416" level="INFO">Length is 8</msg>
<msg timestamp="20230801 10:59:19.417" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 10:59:19.416" endtime="20230801 10:59:19.417"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:59:19.419" level="INFO">${text} = Hic repellat laboriosam perferendis nobis sapiente facere.</msg>
<status status="PASS" starttime="20230801 10:59:19.418" endtime="20230801 10:59:19.419"/>
</kw>
<status status="PASS" starttime="20230801 10:59:19.417" endtime="20230801 10:59:19.419"/>
</branch>
<status status="PASS" starttime="20230801 10:59:19.417" endtime="20230801 10:59:19.419"/>
</if>
<msg timestamp="20230801 10:59:19.420" level="INFO">${text} = Hic repellat laboriosam perferendis nobis sapiente facere.</msg>
<status status="PASS" starttime="20230801 10:59:19.367" endtime="20230801 10:59:19.420"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230801 10:59:19.421" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Lý do"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230801 10:59:19.420" endtime="20230801 10:59:19.421"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:19.422" endtime="20230801 10:59:19.939"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:59:19.940" level="INFO">Fills the text 'Hic repellat laboriosam perferendis nobis sapiente facere.' in the given field.</msg>
<status status="PASS" starttime="20230801 10:59:19.939" endtime="20230801 10:59:20.023"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:20.025" level="INFO">Length is 58</msg>
<msg timestamp="20230801 10:59:20.025" level="INFO">${cnt} = 58</msg>
<status status="PASS" starttime="20230801 10:59:20.024" endtime="20230801 10:59:20.025"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:59:20.027" level="INFO">${STATE["Lý do"]} = Hic repellat laboriosam perferendis nobis sapiente facere.</msg>
<status status="PASS" starttime="20230801 10:59:20.026" endtime="20230801 10:59:20.027"/>
</kw>
<status status="PASS" starttime="20230801 10:59:20.025" endtime="20230801 10:59:20.028"/>
</branch>
<status status="PASS" starttime="20230801 10:59:20.025" endtime="20230801 10:59:20.028"/>
</if>
<status status="PASS" starttime="20230801 10:59:19.367" endtime="20230801 10:59:20.028"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:20.035" endtime="20230801 10:59:20.558"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:20.560" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:59:20.560" endtime="20230801 10:59:20.561"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:59:20.603" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:59:20.561" endtime="20230801 10:59:20.603"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:59:20.604" endtime="20230801 10:59:20.605"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:59:20.605" endtime="20230801 10:59:20.606"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:20.604" endtime="20230801 10:59:20.606"/>
</branch>
<status status="PASS" starttime="20230801 10:59:20.604" endtime="20230801 10:59:20.607"/>
</if>
<status status="PASS" starttime="20230801 10:59:20.558" endtime="20230801 10:59:20.607"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:59:20.608" endtime="20230801 10:59:20.656"/>
</kw>
<status status="PASS" starttime="20230801 10:59:20.034" endtime="20230801 10:59:20.656"/>
</kw>
<kw name="Then User look message &quot;Tạo thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:20.661" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:59:20.660" endtime="20230801 10:59:20.661"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:20.661" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:20.661" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:59:20.661" endtime="20230801 10:59:20.663"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 10:59:20.663" endtime="20230801 10:59:20.663"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:20.663" endtime="20230801 10:59:20.664"/>
</branch>
<status status="PASS" starttime="20230801 10:59:20.663" endtime="20230801 10:59:20.664"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:59:25.705" level="INFO">Text: 'Tạo thành công'</msg>
<status status="PASS" starttime="20230801 10:59:20.665" endtime="20230801 10:59:25.705"/>
</kw>
<status status="PASS" starttime="20230801 10:59:20.664" endtime="20230801 10:59:25.705"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:25.706" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 10:59:25.706" endtime="20230801 10:59:25.706"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:59:26.227" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-16.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-16.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 10:59:26.227" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 10:59:26.228" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 10:59:25.711" endtime="20230801 10:59:26.231"/>
</kw>
<status status="FAIL" starttime="20230801 10:59:25.708" endtime="20230801 10:59:26.231"/>
</kw>
<msg timestamp="20230801 10:59:26.232" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 10:59:25.707" endtime="20230801 10:59:26.232"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:59:26.233" endtime="20230801 10:59:26.234"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:26.232" endtime="20230801 10:59:26.234"/>
</branch>
<status status="PASS" starttime="20230801 10:59:26.232" endtime="20230801 10:59:26.234"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:59:28.876" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 10:59:26.235" endtime="20230801 10:59:28.876"/>
</kw>
<status status="PASS" starttime="20230801 10:59:26.234" endtime="20230801 10:59:28.877"/>
</kw>
<status status="PASS" starttime="20230801 10:59:20.660" endtime="20230801 10:59:28.878"/>
</kw>
<kw name="And User look title &quot;Danh sách nghỉ phép&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:28.884" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:59:28.883" endtime="20230801 10:59:28.884"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:59:28.907" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:59:28.885" endtime="20230801 10:59:28.907"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:59:28.910" endtime="20230801 10:59:28.910"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:28.909" endtime="20230801 10:59:28.910"/>
</branch>
<status status="PASS" starttime="20230801 10:59:28.909" endtime="20230801 10:59:28.911"/>
</if>
<status status="PASS" starttime="20230801 10:59:28.882" endtime="20230801 10:59:28.912"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:28.916" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:59:28.915" endtime="20230801 10:59:28.916"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:59:28.945" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:59:28.917" endtime="20230801 10:59:28.946"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:59:28.947" endtime="20230801 10:59:28.948"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:28.947" endtime="20230801 10:59:28.948"/>
</branch>
<status status="PASS" starttime="20230801 10:59:28.946" endtime="20230801 10:59:28.949"/>
</if>
<status status="PASS" starttime="20230801 10:59:28.914" endtime="20230801 10:59:28.949"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230801 10:59:28.961" level="INFO">Title: 'Danh sách nghỉ phép'</msg>
<msg timestamp="20230801 10:59:28.961" level="INFO">${actualTitle} = Danh sách nghỉ phép</msg>
<status status="PASS" starttime="20230801 10:59:28.950" endtime="20230801 10:59:28.961"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230801 10:59:28.962" endtime="20230801 10:59:28.963"/>
</kw>
<status status="PASS" starttime="20230801 10:59:28.913" endtime="20230801 10:59:28.964"/>
</kw>
<status status="PASS" starttime="20230801 10:59:28.881" endtime="20230801 10:59:28.964"/>
</kw>
<kw name="And Click on the &quot;Xóa&quot; button in the &quot;Họ và tên&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:28.968" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:59:28.968" endtime="20230801 10:59:28.968"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:59:28.984" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:59:28.969" endtime="20230801 10:59:28.984"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:59:28.985" endtime="20230801 10:59:28.985"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:28.984" endtime="20230801 10:59:28.986"/>
</branch>
<status status="PASS" starttime="20230801 10:59:28.984" endtime="20230801 10:59:28.986"/>
</if>
<status status="PASS" starttime="20230801 10:59:28.966" endtime="20230801 10:59:28.986"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 10:59:29.019" level="INFO">Found 3 Locators successfully.</msg>
<msg timestamp="20230801 10:59:29.019" level="INFO">${element} = ['element=e314fb5a-ae9d-460a-8fea-02dcfea01238', 'element=d4a19ee0-9262-439e-9699-b0e192e0bbd9', 'element=87564566-42d0-4013-a0de-5efb0d4c8874']</msg>
<status status="PASS" starttime="20230801 10:59:28.987" endtime="20230801 10:59:29.019"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:29.020" endtime="20230801 10:59:29.449"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:29.451" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:59:29.450" endtime="20230801 10:59:29.451"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:59:29.478" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 10:59:29.452" endtime="20230801 10:59:29.478"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:29.480" endtime="20230801 10:59:30.024"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 10:59:30.126" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 10:59:30.025" endtime="20230801 10:59:30.126"/>
</kw>
<status status="PASS" starttime="20230801 10:59:29.479" endtime="20230801 10:59:30.126"/>
</branch>
<status status="PASS" starttime="20230801 10:59:29.478" endtime="20230801 10:59:30.127"/>
</if>
<status status="PASS" starttime="20230801 10:59:29.449" endtime="20230801 10:59:30.127"/>
</kw>
<status status="PASS" starttime="20230801 10:59:28.965" endtime="20230801 10:59:30.127"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 10:59:30.275" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 10:59:30.130" endtime="20230801 10:59:30.275"/>
</kw>
<status status="PASS" starttime="20230801 10:59:30.129" endtime="20230801 10:59:30.275"/>
</kw>
<status status="PASS" starttime="20230801 10:59:05.501" endtime="20230801 10:59:30.276"/>
</test>
<test id="s1-t12" name="STA-12 Verify that Create leave management successfully with &quot;Nghỉ phép có lương&quot; &amp; &quot;Lưu và tạo mới&quot; button" line="131">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 10:59:30.299" endtime="20230801 10:59:30.301"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 10:59:30.307" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\4f691cff-7e58-4692-a407-8c086eea6779"}</msg>
<msg timestamp="20230801 10:59:31.784" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\4f691cff-7e58-4692-a407-8c086eea6779"}</msg>
<status status="PASS" starttime="20230801 10:59:30.301" endtime="20230801 10:59:31.785"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 10:59:32.861" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 10:59:32.861" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 10:59:31.785" endtime="20230801 10:59:32.862"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 10:59:32.863" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 10:59:32.863" endtime="20230801 10:59:32.864"/>
</kw>
<status status="PASS" starttime="20230801 10:59:30.298" endtime="20230801 10:59:32.864"/>
</kw>
<kw name="Go to create leave date page" library="common">
<kw name="Login to Staff" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;staff@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:32.867" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:59:32.867" endtime="20230801 10:59:32.867"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:32.868" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:59:32.868" endtime="20230801 10:59:32.868"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:32.869" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:59:32.868" endtime="20230801 10:59:32.869"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:32.869" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:32.869" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:59:32.869" endtime="20230801 10:59:32.869"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:32.870" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:59:32.870" endtime="20230801 10:59:32.870"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:32.871" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:32.871" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:59:32.870" endtime="20230801 10:59:32.871"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.871" endtime="20230801 10:59:32.872"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.873" endtime="20230801 10:59:32.873"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:32.871" endtime="20230801 10:59:32.873"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.874" endtime="20230801 10:59:32.874"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.875" endtime="20230801 10:59:32.875"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.876" endtime="20230801 10:59:32.876"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:32.873" endtime="20230801 10:59:32.876"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.878" endtime="20230801 10:59:32.878"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.879" endtime="20230801 10:59:32.879"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:32.877" endtime="20230801 10:59:32.879"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.880" endtime="20230801 10:59:32.881"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.881" endtime="20230801 10:59:32.881"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:32.879" endtime="20230801 10:59:32.882"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.883" endtime="20230801 10:59:32.883"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.884" endtime="20230801 10:59:32.884"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:32.882" endtime="20230801 10:59:32.884"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.885" endtime="20230801 10:59:32.886"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.886" endtime="20230801 10:59:32.887"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:32.884" endtime="20230801 10:59:32.887"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.890" endtime="20230801 10:59:32.891"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.892" endtime="20230801 10:59:32.892"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:32.888" endtime="20230801 10:59:32.892"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.894" endtime="20230801 10:59:32.895"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:32.893" endtime="20230801 10:59:32.895"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:59:32.896" endtime="20230801 10:59:32.896"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:32.895" endtime="20230801 10:59:32.897"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.898" endtime="20230801 10:59:32.898"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.898" endtime="20230801 10:59:32.899"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:32.897" endtime="20230801 10:59:32.899"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.900" endtime="20230801 10:59:32.900"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:32.899" endtime="20230801 10:59:32.900"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.901" endtime="20230801 10:59:32.902"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:32.901" endtime="20230801 10:59:32.902"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.903" endtime="20230801 10:59:32.903"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:32.902" endtime="20230801 10:59:32.903"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:32.904" endtime="20230801 10:59:32.905"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:32.904" endtime="20230801 10:59:32.906"/>
</branch>
<status status="PASS" starttime="20230801 10:59:32.871" endtime="20230801 10:59:32.907"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:32.908" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:59:32.909" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:59:32.907" endtime="20230801 10:59:32.909"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:59:32.912" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:59:32.911" endtime="20230801 10:59:32.912"/>
</kw>
<status status="PASS" starttime="20230801 10:59:32.910" endtime="20230801 10:59:32.912"/>
</branch>
<status status="PASS" starttime="20230801 10:59:32.909" endtime="20230801 10:59:32.912"/>
</if>
<msg timestamp="20230801 10:59:32.913" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:59:32.866" endtime="20230801 10:59:32.913"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:59:32.915" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:59:32.913" endtime="20230801 10:59:32.915"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:32.915" endtime="20230801 10:59:36.087"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:59:36.091" level="INFO">Fills the text 'staff@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230801 10:59:36.089" endtime="20230801 10:59:36.243"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:36.245" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:59:36.246" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:59:36.245" endtime="20230801 10:59:36.246"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:59:36.249" level="INFO">${STATE["Tên đăng nhập"]} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:59:36.248" endtime="20230801 10:59:36.249"/>
</kw>
<status status="PASS" starttime="20230801 10:59:36.246" endtime="20230801 10:59:36.250"/>
</branch>
<status status="PASS" starttime="20230801 10:59:36.246" endtime="20230801 10:59:36.250"/>
</if>
<status status="PASS" starttime="20230801 10:59:32.866" endtime="20230801 10:59:36.250"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Tester@123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:36.255" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:59:36.254" endtime="20230801 10:59:36.255"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:36.257" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:59:36.257" endtime="20230801 10:59:36.258"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:36.260" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:59:36.259" endtime="20230801 10:59:36.260"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:36.262" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:36.263" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:59:36.262" endtime="20230801 10:59:36.263"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:36.265" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:59:36.264" endtime="20230801 10:59:36.265"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:36.266" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:36.266" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:59:36.265" endtime="20230801 10:59:36.267"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.268" endtime="20230801 10:59:36.268"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.269" endtime="20230801 10:59:36.269"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:36.267" endtime="20230801 10:59:36.269"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.271" endtime="20230801 10:59:36.271"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.273" endtime="20230801 10:59:36.273"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.275" endtime="20230801 10:59:36.275"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:36.270" endtime="20230801 10:59:36.276"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.277" endtime="20230801 10:59:36.277"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.278" endtime="20230801 10:59:36.278"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:36.276" endtime="20230801 10:59:36.279"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.280" endtime="20230801 10:59:36.280"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.281" endtime="20230801 10:59:36.281"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:36.279" endtime="20230801 10:59:36.281"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.283" endtime="20230801 10:59:36.283"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.284" endtime="20230801 10:59:36.284"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:36.282" endtime="20230801 10:59:36.284"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.286" endtime="20230801 10:59:36.287"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.287" endtime="20230801 10:59:36.287"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:36.285" endtime="20230801 10:59:36.288"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.290" endtime="20230801 10:59:36.291"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.291" endtime="20230801 10:59:36.292"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:36.288" endtime="20230801 10:59:36.292"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.294" endtime="20230801 10:59:36.294"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:36.292" endtime="20230801 10:59:36.294"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:59:36.295" endtime="20230801 10:59:36.296"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:36.294" endtime="20230801 10:59:36.296"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.297" endtime="20230801 10:59:36.298"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.298" endtime="20230801 10:59:36.299"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:36.296" endtime="20230801 10:59:36.299"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.300" endtime="20230801 10:59:36.301"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:36.299" endtime="20230801 10:59:36.301"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.302" endtime="20230801 10:59:36.302"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:36.301" endtime="20230801 10:59:36.303"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.303" endtime="20230801 10:59:36.303"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:36.303" endtime="20230801 10:59:36.305"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:36.308" endtime="20230801 10:59:36.308"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:36.307" endtime="20230801 10:59:36.309"/>
</branch>
<status status="PASS" starttime="20230801 10:59:36.267" endtime="20230801 10:59:36.309"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:36.311" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:59:36.311" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:59:36.310" endtime="20230801 10:59:36.311"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:59:36.315" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:59:36.314" endtime="20230801 10:59:36.315"/>
</kw>
<status status="PASS" starttime="20230801 10:59:36.312" endtime="20230801 10:59:36.316"/>
</branch>
<status status="PASS" starttime="20230801 10:59:36.312" endtime="20230801 10:59:36.316"/>
</if>
<msg timestamp="20230801 10:59:36.317" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:59:36.252" endtime="20230801 10:59:36.317"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:59:36.319" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:59:36.317" endtime="20230801 10:59:36.319"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:36.320" endtime="20230801 10:59:36.617"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:59:36.619" level="INFO">Fills the text 'Tester@123' in the given field.</msg>
<status status="PASS" starttime="20230801 10:59:36.618" endtime="20230801 10:59:36.734"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:36.736" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:59:36.736" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:59:36.734" endtime="20230801 10:59:36.736"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:59:36.741" level="INFO">${STATE["Mật khẩu"]} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:59:36.739" endtime="20230801 10:59:36.741"/>
</kw>
<status status="PASS" starttime="20230801 10:59:36.737" endtime="20230801 10:59:36.742"/>
</branch>
<status status="PASS" starttime="20230801 10:59:36.737" endtime="20230801 10:59:36.742"/>
</if>
<status status="PASS" starttime="20230801 10:59:36.251" endtime="20230801 10:59:36.742"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:36.745" endtime="20230801 10:59:36.958"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:36.960" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:59:36.960" endtime="20230801 10:59:36.960"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:59:37.008" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:59:36.961" endtime="20230801 10:59:37.008"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:59:37.010" endtime="20230801 10:59:37.010"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:59:37.011" endtime="20230801 10:59:37.012"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:37.009" endtime="20230801 10:59:37.012"/>
</branch>
<status status="PASS" starttime="20230801 10:59:37.009" endtime="20230801 10:59:37.012"/>
</if>
<status status="PASS" starttime="20230801 10:59:36.959" endtime="20230801 10:59:37.013"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:59:37.013" endtime="20230801 10:59:37.124"/>
</kw>
<status status="PASS" starttime="20230801 10:59:36.743" endtime="20230801 10:59:37.125"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:37.128" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:59:37.127" endtime="20230801 10:59:37.128"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:37.130" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:37.130" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:59:37.129" endtime="20230801 10:59:37.130"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 10:59:37.131" endtime="20230801 10:59:37.131"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:37.130" endtime="20230801 10:59:37.131"/>
</branch>
<status status="PASS" starttime="20230801 10:59:37.130" endtime="20230801 10:59:37.132"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:59:38.324" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 10:59:37.137" endtime="20230801 10:59:38.324"/>
</kw>
<status status="PASS" starttime="20230801 10:59:37.132" endtime="20230801 10:59:38.325"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:38.326" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 10:59:38.326" endtime="20230801 10:59:38.326"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:59:38.865" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-17.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-17.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 10:59:38.865" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 10:59:38.865" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 10:59:38.330" endtime="20230801 10:59:38.869"/>
</kw>
<status status="FAIL" starttime="20230801 10:59:38.328" endtime="20230801 10:59:38.870"/>
</kw>
<msg timestamp="20230801 10:59:38.870" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 10:59:38.327" endtime="20230801 10:59:38.870"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:59:38.873" endtime="20230801 10:59:38.873"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:38.872" endtime="20230801 10:59:38.873"/>
</branch>
<status status="PASS" starttime="20230801 10:59:38.871" endtime="20230801 10:59:38.877"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:59:42.215" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 10:59:38.881" endtime="20230801 10:59:42.215"/>
</kw>
<status status="PASS" starttime="20230801 10:59:38.877" endtime="20230801 10:59:42.216"/>
</kw>
<status status="PASS" starttime="20230801 10:59:37.126" endtime="20230801 10:59:42.216"/>
</kw>
<status status="PASS" starttime="20230801 10:59:32.865" endtime="20230801 10:59:42.217"/>
</kw>
<kw name="When Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:42.219" endtime="20230801 10:59:42.387"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:42.389" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:59:42.389" endtime="20230801 10:59:42.389"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:59:42.563" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:59:42.390" endtime="20230801 10:59:42.564"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:59:42.565" endtime="20230801 10:59:42.566"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:59:42.566" endtime="20230801 10:59:42.566"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:42.564" endtime="20230801 10:59:42.567"/>
</branch>
<status status="PASS" starttime="20230801 10:59:42.564" endtime="20230801 10:59:42.567"/>
</if>
<status status="PASS" starttime="20230801 10:59:42.387" endtime="20230801 10:59:42.567"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:59:42.568" endtime="20230801 10:59:42.986"/>
</kw>
<status status="PASS" starttime="20230801 10:59:42.218" endtime="20230801 10:59:42.987"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:42.989" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:59:42.989" endtime="20230801 10:59:42.989"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:59:42.998" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:59:42.990" endtime="20230801 10:59:42.998"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:59:43.000" endtime="20230801 10:59:43.000"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:42.999" endtime="20230801 10:59:43.000"/>
</branch>
<status status="PASS" starttime="20230801 10:59:42.999" endtime="20230801 10:59:43.000"/>
</if>
<status status="PASS" starttime="20230801 10:59:42.987" endtime="20230801 10:59:43.001"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 10:59:43.103" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 10:59:43.001" endtime="20230801 10:59:43.103"/>
</kw>
<status status="PASS" starttime="20230801 10:59:32.865" endtime="20230801 10:59:43.103"/>
</kw>
<kw name="Get_Leave_date with &quot;Ngày phép còn lại&quot;" library="common" sourcename="Get_Leave_date with &quot;${date}&quot;">
<var>${leave_date_before}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//div[contains(text(), '${date}')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:43.112" level="INFO">${element} = //div[contains(text(), 'Ngày phép còn lại')]</msg>
<status status="PASS" starttime="20230801 10:59:43.111" endtime="20230801 10:59:43.112"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:59:43.531" level="INFO">Waited for Element with selector //div[contains(text(), 'Ngày phép còn lại')] at state visible</msg>
<status status="PASS" starttime="20230801 10:59:43.116" endtime="20230801 10:59:43.531"/>
</kw>
<status status="PASS" starttime="20230801 10:59:43.112" endtime="20230801 10:59:43.532"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${text}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:59:43.578" level="INFO">Text: 'Ngày phép còn lại ( 8 Ngày phép)'</msg>
<msg timestamp="20230801 10:59:43.578" level="INFO">${text} = Ngày phép còn lại ( 8 Ngày phép)</msg>
<status status="PASS" starttime="20230801 10:59:43.532" endtime="20230801 10:59:43.578"/>
</kw>
<msg timestamp="20230801 10:59:43.579" level="INFO">${leave_date_before} = Ngày phép còn lại ( 8 Ngày phép)</msg>
<status status="PASS" starttime="20230801 10:59:43.110" endtime="20230801 10:59:43.579"/>
</kw>
<kw name="And Click select &quot;Loại phép&quot; with &quot;Nghỉ phép có lương&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:43.582" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:59:43.582" endtime="20230801 10:59:43.582"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:43.583" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:59:43.582" endtime="20230801 10:59:43.583"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:43.584" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:59:43.583" endtime="20230801 10:59:43.584"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:43.584" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:43.584" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:59:43.584" endtime="20230801 10:59:43.584"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:43.586" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:59:43.585" endtime="20230801 10:59:43.586"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:43.587" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:43.587" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:59:43.587" endtime="20230801 10:59:43.588"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.590" endtime="20230801 10:59:43.590"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.592" endtime="20230801 10:59:43.593"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:43.589" endtime="20230801 10:59:43.593"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.595" endtime="20230801 10:59:43.596"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.597" endtime="20230801 10:59:43.597"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.598" endtime="20230801 10:59:43.598"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:43.593" endtime="20230801 10:59:43.598"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.599" endtime="20230801 10:59:43.600"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.600" endtime="20230801 10:59:43.601"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:43.599" endtime="20230801 10:59:43.601"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.602" endtime="20230801 10:59:43.602"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.603" endtime="20230801 10:59:43.603"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:43.601" endtime="20230801 10:59:43.603"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.604" endtime="20230801 10:59:43.605"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.606" endtime="20230801 10:59:43.606"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:43.604" endtime="20230801 10:59:43.606"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.608" endtime="20230801 10:59:43.608"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.609" endtime="20230801 10:59:43.610"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:43.607" endtime="20230801 10:59:43.610"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.611" endtime="20230801 10:59:43.612"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.612" endtime="20230801 10:59:43.613"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:43.610" endtime="20230801 10:59:43.613"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.615" endtime="20230801 10:59:43.615"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:43.613" endtime="20230801 10:59:43.618"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:59:43.619" endtime="20230801 10:59:43.620"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:43.618" endtime="20230801 10:59:43.620"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.622" endtime="20230801 10:59:43.623"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.624" endtime="20230801 10:59:43.624"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:43.620" endtime="20230801 10:59:43.625"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.626" endtime="20230801 10:59:43.626"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:43.625" endtime="20230801 10:59:43.626"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.628" endtime="20230801 10:59:43.628"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:43.627" endtime="20230801 10:59:43.629"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.630" endtime="20230801 10:59:43.630"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:43.629" endtime="20230801 10:59:43.630"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:43.632" endtime="20230801 10:59:43.632"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:43.631" endtime="20230801 10:59:43.632"/>
</branch>
<status status="PASS" starttime="20230801 10:59:43.588" endtime="20230801 10:59:43.632"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:43.633" level="INFO">Length is 18</msg>
<msg timestamp="20230801 10:59:43.633" level="INFO">${cnt} = 18</msg>
<status status="PASS" starttime="20230801 10:59:43.633" endtime="20230801 10:59:43.635"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:59:43.637" level="INFO">${text} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 10:59:43.636" endtime="20230801 10:59:43.637"/>
</kw>
<status status="PASS" starttime="20230801 10:59:43.635" endtime="20230801 10:59:43.638"/>
</branch>
<status status="PASS" starttime="20230801 10:59:43.635" endtime="20230801 10:59:43.638"/>
</if>
<msg timestamp="20230801 10:59:43.640" level="INFO">${text} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 10:59:43.581" endtime="20230801 10:59:43.640"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 10:59:43.641" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 10:59:43.640" endtime="20230801 10:59:43.641"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:59:43.661" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 10:59:43.645" endtime="20230801 10:59:43.661"/>
</kw>
<status status="PASS" starttime="20230801 10:59:43.642" endtime="20230801 10:59:43.662"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:43.662" endtime="20230801 10:59:43.812"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 10:59:43.813" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 10:59:43.812" endtime="20230801 10:59:43.813"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:59:43.815" level="INFO">Fills the text 'Nghỉ phép có lương' in the given field.</msg>
<status status="PASS" starttime="20230801 10:59:43.814" endtime="20230801 10:59:43.897"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:43.898" endtime="20230801 10:59:44.187"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:44.188" level="INFO">Length is 18</msg>
<msg timestamp="20230801 10:59:44.189" level="INFO">${cnt} = 18</msg>
<status status="PASS" starttime="20230801 10:59:44.187" endtime="20230801 10:59:44.189"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:59:44.192" level="INFO">${STATE["Loại phép"]} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 10:59:44.191" endtime="20230801 10:59:44.192"/>
</kw>
<status status="PASS" starttime="20230801 10:59:44.189" endtime="20230801 10:59:44.192"/>
</branch>
<status status="PASS" starttime="20230801 10:59:44.189" endtime="20230801 10:59:44.193"/>
</if>
<status status="PASS" starttime="20230801 10:59:43.580" endtime="20230801 10:59:44.193"/>
</kw>
<kw name="And Click select &quot;Thời gian&quot; with &quot;Sáng&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:44.224" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:59:44.224" endtime="20230801 10:59:44.224"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:44.226" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:59:44.225" endtime="20230801 10:59:44.226"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:44.227" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:59:44.227" endtime="20230801 10:59:44.227"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:44.228" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:44.229" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:59:44.228" endtime="20230801 10:59:44.229"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:44.230" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:59:44.229" endtime="20230801 10:59:44.230"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:44.231" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:44.231" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:59:44.231" endtime="20230801 10:59:44.231"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.233" endtime="20230801 10:59:44.233"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.234" endtime="20230801 10:59:44.234"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:44.232" endtime="20230801 10:59:44.234"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.236" endtime="20230801 10:59:44.236"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.237" endtime="20230801 10:59:44.237"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.238" endtime="20230801 10:59:44.238"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:44.235" endtime="20230801 10:59:44.239"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.240" endtime="20230801 10:59:44.240"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.241" endtime="20230801 10:59:44.241"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:44.239" endtime="20230801 10:59:44.241"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.242" endtime="20230801 10:59:44.243"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.243" endtime="20230801 10:59:44.243"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:44.242" endtime="20230801 10:59:44.244"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.244" endtime="20230801 10:59:44.245"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.245" endtime="20230801 10:59:44.245"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:44.244" endtime="20230801 10:59:44.246"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.247" endtime="20230801 10:59:44.247"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.248" endtime="20230801 10:59:44.248"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:44.246" endtime="20230801 10:59:44.249"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.251" endtime="20230801 10:59:44.251"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.252" endtime="20230801 10:59:44.252"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:44.249" endtime="20230801 10:59:44.252"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.253" endtime="20230801 10:59:44.254"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:44.252" endtime="20230801 10:59:44.255"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:59:44.257" endtime="20230801 10:59:44.257"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:44.256" endtime="20230801 10:59:44.258"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.259" endtime="20230801 10:59:44.260"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.261" endtime="20230801 10:59:44.261"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:44.258" endtime="20230801 10:59:44.262"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.263" endtime="20230801 10:59:44.263"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:44.262" endtime="20230801 10:59:44.264"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.264" endtime="20230801 10:59:44.265"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:44.264" endtime="20230801 10:59:44.265"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.266" endtime="20230801 10:59:44.266"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:44.265" endtime="20230801 10:59:44.267"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:44.268" endtime="20230801 10:59:44.268"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:44.267" endtime="20230801 10:59:44.268"/>
</branch>
<status status="PASS" starttime="20230801 10:59:44.232" endtime="20230801 10:59:44.268"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:44.270" level="INFO">Length is 4</msg>
<msg timestamp="20230801 10:59:44.270" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20230801 10:59:44.269" endtime="20230801 10:59:44.270"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:59:44.273" level="INFO">${text} = Sáng</msg>
<status status="PASS" starttime="20230801 10:59:44.272" endtime="20230801 10:59:44.273"/>
</kw>
<status status="PASS" starttime="20230801 10:59:44.270" endtime="20230801 10:59:44.273"/>
</branch>
<status status="PASS" starttime="20230801 10:59:44.270" endtime="20230801 10:59:44.273"/>
</if>
<msg timestamp="20230801 10:59:44.275" level="INFO">${text} = Sáng</msg>
<status status="PASS" starttime="20230801 10:59:44.222" endtime="20230801 10:59:44.275"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 10:59:44.277" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 10:59:44.275" endtime="20230801 10:59:44.277"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:59:44.306" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 10:59:44.281" endtime="20230801 10:59:44.306"/>
</kw>
<status status="PASS" starttime="20230801 10:59:44.277" endtime="20230801 10:59:44.306"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:44.307" endtime="20230801 10:59:44.542"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 10:59:44.543" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 10:59:44.542" endtime="20230801 10:59:44.543"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:59:44.545" level="INFO">Fills the text 'Sáng' in the given field.</msg>
<status status="PASS" starttime="20230801 10:59:44.544" endtime="20230801 10:59:44.625"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:44.626" endtime="20230801 10:59:45.032"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:45.034" level="INFO">Length is 4</msg>
<msg timestamp="20230801 10:59:45.034" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20230801 10:59:45.033" endtime="20230801 10:59:45.034"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:59:45.036" level="INFO">${STATE["Thời gian"]} = Sáng</msg>
<status status="PASS" starttime="20230801 10:59:45.035" endtime="20230801 10:59:45.037"/>
</kw>
<status status="PASS" starttime="20230801 10:59:45.035" endtime="20230801 10:59:45.037"/>
</branch>
<status status="PASS" starttime="20230801 10:59:45.035" endtime="20230801 10:59:45.038"/>
</if>
<status status="PASS" starttime="20230801 10:59:44.221" endtime="20230801 10:59:45.039"/>
</kw>
<kw name="And Enter leave date in &quot;Ngày bắt đầu&quot; with &quot;31-07-2023&quot;" library="common" sourcename="Enter leave date in &quot;${field}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>date</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:45.054" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:59:45.053" endtime="20230801 10:59:45.054"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:45.056" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:59:45.055" endtime="20230801 10:59:45.056"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:45.058" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:59:45.057" endtime="20230801 10:59:45.058"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:45.060" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:45.060" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:59:45.059" endtime="20230801 10:59:45.060"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:45.062" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:59:45.061" endtime="20230801 10:59:45.062"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:45.063" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:45.065" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:59:45.063" endtime="20230801 10:59:45.065"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.066" endtime="20230801 10:59:45.067"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.068" endtime="20230801 10:59:45.068"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:45.065" endtime="20230801 10:59:45.068"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.070" endtime="20230801 10:59:45.071"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.072" endtime="20230801 10:59:45.072"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.073" endtime="20230801 10:59:45.073"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:45.069" endtime="20230801 10:59:45.074"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.075" endtime="20230801 10:59:45.075"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.076" endtime="20230801 10:59:45.076"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:45.074" endtime="20230801 10:59:45.076"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.077" endtime="20230801 10:59:45.078"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.078" endtime="20230801 10:59:45.079"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:45.077" endtime="20230801 10:59:45.080"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.084" endtime="20230801 10:59:45.084"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.086" endtime="20230801 10:59:45.087"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:45.082" endtime="20230801 10:59:45.089"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.090" endtime="20230801 10:59:45.091"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.091" endtime="20230801 10:59:45.092"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:45.090" endtime="20230801 10:59:45.092"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.093" endtime="20230801 10:59:45.093"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.094" endtime="20230801 10:59:45.094"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:45.092" endtime="20230801 10:59:45.094"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.095" endtime="20230801 10:59:45.096"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:45.094" endtime="20230801 10:59:45.096"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:59:45.097" endtime="20230801 10:59:45.097"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:45.096" endtime="20230801 10:59:45.097"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.098" endtime="20230801 10:59:45.099"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.099" endtime="20230801 10:59:45.100"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:45.098" endtime="20230801 10:59:45.100"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.101" endtime="20230801 10:59:45.101"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:45.100" endtime="20230801 10:59:45.105"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.107" endtime="20230801 10:59:45.108"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:45.106" endtime="20230801 10:59:45.108"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.111" endtime="20230801 10:59:45.111"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:45.109" endtime="20230801 10:59:45.112"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:45.113" endtime="20230801 10:59:45.114"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:45.112" endtime="20230801 10:59:45.114"/>
</branch>
<status status="PASS" starttime="20230801 10:59:45.065" endtime="20230801 10:59:45.114"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:45.115" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:59:45.115" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:59:45.115" endtime="20230801 10:59:45.116"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:59:45.120" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 10:59:45.119" endtime="20230801 10:59:45.120"/>
</kw>
<status status="PASS" starttime="20230801 10:59:45.116" endtime="20230801 10:59:45.122"/>
</branch>
<status status="PASS" starttime="20230801 10:59:45.116" endtime="20230801 10:59:45.122"/>
</if>
<msg timestamp="20230801 10:59:45.123" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 10:59:45.052" endtime="20230801 10:59:45.127"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//input[@placeholder="${field}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:45.132" level="INFO">${element} = xpath=//input[@placeholder="Ngày bắt đầu"]</msg>
<status status="PASS" starttime="20230801 10:59:45.129" endtime="20230801 10:59:45.132"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:45.132" endtime="20230801 10:59:45.837"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:45.837" endtime="20230801 10:59:46.052"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:59:46.054" level="INFO">Fills the text '31-07-2023' in the given field.</msg>
<status status="PASS" starttime="20230801 10:59:46.053" endtime="20230801 10:59:46.372"/>
</kw>
<status status="PASS" starttime="20230801 10:59:45.050" endtime="20230801 10:59:46.372"/>
</kw>
<kw name="And Enter leave date in &quot;Ngày kết thúc&quot; with &quot;31-07-2023&quot;" library="common" sourcename="Enter leave date in &quot;${field}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>date</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:46.375" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:59:46.374" endtime="20230801 10:59:46.375"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:46.377" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:59:46.376" endtime="20230801 10:59:46.377"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:46.378" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:59:46.378" endtime="20230801 10:59:46.378"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:46.378" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:46.378" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:59:46.378" endtime="20230801 10:59:46.378"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:46.378" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:59:46.378" endtime="20230801 10:59:46.378"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:46.378" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:46.378" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:59:46.378" endtime="20230801 10:59:46.378"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.378" endtime="20230801 10:59:46.378"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.378" endtime="20230801 10:59:46.378"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.378" endtime="20230801 10:59:46.378"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.378" endtime="20230801 10:59:46.378"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.378" endtime="20230801 10:59:46.378"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.378" endtime="20230801 10:59:46.385"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.378" endtime="20230801 10:59:46.385"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.385" endtime="20230801 10:59:46.385"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.385" endtime="20230801 10:59:46.385"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.385" endtime="20230801 10:59:46.385"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.385" endtime="20230801 10:59:46.385"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.385" endtime="20230801 10:59:46.385"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.385" endtime="20230801 10:59:46.385"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.385" endtime="20230801 10:59:46.385"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.385" endtime="20230801 10:59:46.385"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.385" endtime="20230801 10:59:46.385"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.385" endtime="20230801 10:59:46.385"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.385" endtime="20230801 10:59:46.385"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.385" endtime="20230801 10:59:46.385"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.385" endtime="20230801 10:59:46.385"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.385" endtime="20230801 10:59:46.385"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.385" endtime="20230801 10:59:46.385"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.392" endtime="20230801 10:59:46.392"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.385" endtime="20230801 10:59:46.392"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:59:46.392" endtime="20230801 10:59:46.395"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.392" endtime="20230801 10:59:46.395"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.395" endtime="20230801 10:59:46.395"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.395" endtime="20230801 10:59:46.395"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.395" endtime="20230801 10:59:46.395"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.395" endtime="20230801 10:59:46.395"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.395" endtime="20230801 10:59:46.395"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.395" endtime="20230801 10:59:46.395"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.395" endtime="20230801 10:59:46.395"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.395" endtime="20230801 10:59:46.395"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.395" endtime="20230801 10:59:46.395"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.395" endtime="20230801 10:59:46.395"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.395" endtime="20230801 10:59:46.395"/>
</branch>
<status status="PASS" starttime="20230801 10:59:46.378" endtime="20230801 10:59:46.395"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:46.405" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:59:46.405" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:59:46.405" endtime="20230801 10:59:46.405"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:59:46.408" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 10:59:46.408" endtime="20230801 10:59:46.408"/>
</kw>
<status status="PASS" starttime="20230801 10:59:46.405" endtime="20230801 10:59:46.408"/>
</branch>
<status status="PASS" starttime="20230801 10:59:46.405" endtime="20230801 10:59:46.408"/>
</if>
<msg timestamp="20230801 10:59:46.408" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 10:59:46.374" endtime="20230801 10:59:46.408"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//input[@placeholder="${field}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:46.408" level="INFO">${element} = xpath=//input[@placeholder="Ngày kết thúc"]</msg>
<status status="PASS" starttime="20230801 10:59:46.408" endtime="20230801 10:59:46.408"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:46.415" endtime="20230801 10:59:46.676"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:46.676" endtime="20230801 10:59:46.754"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:59:46.755" level="INFO">Fills the text '31-07-2023' in the given field.</msg>
<status status="PASS" starttime="20230801 10:59:46.755" endtime="20230801 10:59:46.903"/>
</kw>
<status status="PASS" starttime="20230801 10:59:46.373" endtime="20230801 10:59:46.904"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Lý do&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:46.907" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:59:46.907" endtime="20230801 10:59:46.907"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:46.908" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:59:46.908" endtime="20230801 10:59:46.908"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:46.909" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:59:46.908" endtime="20230801 10:59:46.909"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:46.909" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:46.909" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:59:46.909" endtime="20230801 10:59:46.910"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:46.910" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 10:59:46.910" endtime="20230801 10:59:46.911"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:46.912" level="INFO">Length is 1</msg>
<msg timestamp="20230801 10:59:46.912" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 10:59:46.911" endtime="20230801 10:59:46.912"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.913" endtime="20230801 10:59:46.913"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.915" endtime="20230801 10:59:46.915"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.913" endtime="20230801 10:59:46.916"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.917" endtime="20230801 10:59:46.917"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.918" endtime="20230801 10:59:46.918"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.919" endtime="20230801 10:59:46.919"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.916" endtime="20230801 10:59:46.919"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.921" endtime="20230801 10:59:46.921"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.922" endtime="20230801 10:59:46.922"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.920" endtime="20230801 10:59:46.922"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.923" endtime="20230801 10:59:46.924"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.924" endtime="20230801 10:59:46.924"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.922" endtime="20230801 10:59:46.925"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.925" endtime="20230801 10:59:46.926"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.926" endtime="20230801 10:59:46.927"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.925" endtime="20230801 10:59:46.927"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.929" endtime="20230801 10:59:46.930"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.931" endtime="20230801 10:59:46.931"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.927" endtime="20230801 10:59:46.932"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.933" endtime="20230801 10:59:46.935"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.936" endtime="20230801 10:59:46.936"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.932" endtime="20230801 10:59:46.937"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.945" endtime="20230801 10:59:46.945"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.937" endtime="20230801 10:59:46.945"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:59:46.947" endtime="20230801 10:59:46.947"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.946" endtime="20230801 10:59:46.947"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.948" endtime="20230801 10:59:46.948"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.949" endtime="20230801 10:59:46.949"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.947" endtime="20230801 10:59:46.950"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.951" endtime="20230801 10:59:46.952"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.950" endtime="20230801 10:59:46.952"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.953" endtime="20230801 10:59:46.953"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.952" endtime="20230801 10:59:46.953"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:46.956" endtime="20230801 10:59:46.956"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:46.955" endtime="20230801 10:59:46.956"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230801 10:59:46.958" level="INFO">${new_text} = Eveniet expedita excepturi aperiam.</msg>
<status status="PASS" starttime="20230801 10:59:46.957" endtime="20230801 10:59:46.958"/>
</kw>
<status status="PASS" starttime="20230801 10:59:46.956" endtime="20230801 10:59:46.958"/>
</branch>
<status status="PASS" starttime="20230801 10:59:46.912" endtime="20230801 10:59:46.958"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:46.960" level="INFO">Length is 8</msg>
<msg timestamp="20230801 10:59:46.960" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 10:59:46.959" endtime="20230801 10:59:46.960"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:59:46.963" level="INFO">${text} = Eveniet expedita excepturi aperiam.</msg>
<status status="PASS" starttime="20230801 10:59:46.961" endtime="20230801 10:59:46.963"/>
</kw>
<status status="PASS" starttime="20230801 10:59:46.960" endtime="20230801 10:59:46.963"/>
</branch>
<status status="PASS" starttime="20230801 10:59:46.960" endtime="20230801 10:59:46.964"/>
</if>
<msg timestamp="20230801 10:59:46.964" level="INFO">${text} = Eveniet expedita excepturi aperiam.</msg>
<status status="PASS" starttime="20230801 10:59:46.905" endtime="20230801 10:59:46.964"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230801 10:59:46.967" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Lý do"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230801 10:59:46.964" endtime="20230801 10:59:46.967"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:46.967" endtime="20230801 10:59:47.446"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:59:47.447" level="INFO">Fills the text 'Eveniet expedita excepturi aperiam.' in the given field.</msg>
<status status="PASS" starttime="20230801 10:59:47.446" endtime="20230801 10:59:47.583"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:47.584" level="INFO">Length is 35</msg>
<msg timestamp="20230801 10:59:47.584" level="INFO">${cnt} = 35</msg>
<status status="PASS" starttime="20230801 10:59:47.584" endtime="20230801 10:59:47.584"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:59:47.586" level="INFO">${STATE["Lý do"]} = Eveniet expedita excepturi aperiam.</msg>
<status status="PASS" starttime="20230801 10:59:47.585" endtime="20230801 10:59:47.586"/>
</kw>
<status status="PASS" starttime="20230801 10:59:47.585" endtime="20230801 10:59:47.586"/>
</branch>
<status status="PASS" starttime="20230801 10:59:47.585" endtime="20230801 10:59:47.586"/>
</if>
<status status="PASS" starttime="20230801 10:59:46.905" endtime="20230801 10:59:47.586"/>
</kw>
<kw name="And Click &quot;Lưu và tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:47.589" endtime="20230801 10:59:48.025"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:48.027" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:59:48.026" endtime="20230801 10:59:48.027"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:59:48.058" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:59:48.027" endtime="20230801 10:59:48.059"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:59:48.060" endtime="20230801 10:59:48.060"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:59:48.060" endtime="20230801 10:59:48.061"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:48.059" endtime="20230801 10:59:48.061"/>
</branch>
<status status="PASS" starttime="20230801 10:59:48.059" endtime="20230801 10:59:48.061"/>
</if>
<status status="PASS" starttime="20230801 10:59:48.025" endtime="20230801 10:59:48.061"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:59:48.062" endtime="20230801 10:59:48.091"/>
</kw>
<status status="PASS" starttime="20230801 10:59:47.588" endtime="20230801 10:59:48.091"/>
</kw>
<kw name="Then User look message &quot;Tạo thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:48.093" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:59:48.092" endtime="20230801 10:59:48.093"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:48.093" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:48.093" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:59:48.093" endtime="20230801 10:59:48.093"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 10:59:48.095" endtime="20230801 10:59:48.095"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:48.093" endtime="20230801 10:59:48.095"/>
</branch>
<status status="PASS" starttime="20230801 10:59:48.093" endtime="20230801 10:59:48.095"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:59:52.545" level="INFO">Text: 'Tạo thành công'</msg>
<status status="PASS" starttime="20230801 10:59:48.098" endtime="20230801 10:59:52.546"/>
</kw>
<status status="PASS" starttime="20230801 10:59:48.095" endtime="20230801 10:59:52.546"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:52.546" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 10:59:52.546" endtime="20230801 10:59:52.546"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:59:52.856" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-18.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-18.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 10:59:52.857" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 10:59:52.857" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 10:59:52.548" endtime="20230801 10:59:52.861"/>
</kw>
<status status="FAIL" starttime="20230801 10:59:52.547" endtime="20230801 10:59:52.862"/>
</kw>
<msg timestamp="20230801 10:59:52.862" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 10:59:52.546" endtime="20230801 10:59:52.862"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:59:52.864" endtime="20230801 10:59:52.864"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:52.863" endtime="20230801 10:59:52.864"/>
</branch>
<status status="PASS" starttime="20230801 10:59:52.863" endtime="20230801 10:59:52.864"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:59:55.296" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 10:59:52.866" endtime="20230801 10:59:55.296"/>
</kw>
<status status="PASS" starttime="20230801 10:59:52.865" endtime="20230801 10:59:55.296"/>
</kw>
<status status="PASS" starttime="20230801 10:59:48.092" endtime="20230801 10:59:55.296"/>
</kw>
<kw name="And User look title &quot;Tạo mới ngày nghỉ&quot;" library="common" sourcename="User look title &quot;${title}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:55.299" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:59:55.299" endtime="20230801 10:59:55.300"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:59:55.306" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:59:55.300" endtime="20230801 10:59:55.306"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:59:55.306" endtime="20230801 10:59:55.307"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:55.306" endtime="20230801 10:59:55.307"/>
</branch>
<status status="PASS" starttime="20230801 10:59:55.306" endtime="20230801 10:59:55.307"/>
</if>
<status status="PASS" starttime="20230801 10:59:55.299" endtime="20230801 10:59:55.307"/>
</kw>
<kw name="Title Should Be" library="common">
<arg>${title}</arg>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:55.308" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 10:59:55.308" endtime="20230801 10:59:55.309"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:59:55.315" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:59:55.309" endtime="20230801 10:59:55.315"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 10:59:55.315" endtime="20230801 10:59:55.315"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:55.315" endtime="20230801 10:59:55.316"/>
</branch>
<status status="PASS" starttime="20230801 10:59:55.315" endtime="20230801 10:59:55.316"/>
</if>
<status status="PASS" starttime="20230801 10:59:55.308" endtime="20230801 10:59:55.316"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${actualTitle}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230801 10:59:55.322" level="INFO">Title: 'Tạo mới ngày nghỉ'</msg>
<msg timestamp="20230801 10:59:55.322" level="INFO">${actualTitle} = Tạo mới ngày nghỉ</msg>
<status status="PASS" starttime="20230801 10:59:55.316" endtime="20230801 10:59:55.322"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actualTitle}</arg>
<arg>${expectedTitle}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230801 10:59:55.323" endtime="20230801 10:59:55.324"/>
</kw>
<status status="PASS" starttime="20230801 10:59:55.307" endtime="20230801 10:59:55.324"/>
</kw>
<status status="PASS" starttime="20230801 10:59:55.298" endtime="20230801 10:59:55.324"/>
</kw>
<kw name="Get_Leave_date with &quot;Ngày phép còn lại&quot;" library="common" sourcename="Get_Leave_date with &quot;${date}&quot;">
<var>${leave_date_after}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//div[contains(text(), '${date}')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:55.325" level="INFO">${element} = //div[contains(text(), 'Ngày phép còn lại')]</msg>
<status status="PASS" starttime="20230801 10:59:55.325" endtime="20230801 10:59:55.325"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 10:59:55.343" level="INFO">Waited for Element with selector //div[contains(text(), 'Ngày phép còn lại')] at state visible</msg>
<status status="PASS" starttime="20230801 10:59:55.328" endtime="20230801 10:59:55.344"/>
</kw>
<status status="PASS" starttime="20230801 10:59:55.326" endtime="20230801 10:59:55.344"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${text}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 10:59:55.374" level="INFO">Text: 'Ngày phép còn lại ( 7.5 Ngày phép)'</msg>
<msg timestamp="20230801 10:59:55.374" level="INFO">${text} = Ngày phép còn lại ( 7.5 Ngày phép)</msg>
<status status="PASS" starttime="20230801 10:59:55.344" endtime="20230801 10:59:55.374"/>
</kw>
<msg timestamp="20230801 10:59:55.375" level="INFO">${leave_date_after} = Ngày phép còn lại ( 7.5 Ngày phép)</msg>
<status status="PASS" starttime="20230801 10:59:55.325" endtime="20230801 10:59:55.375"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${leave_date_before}</arg>
<arg>${leave_date_after}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230801 10:59:55.376" endtime="20230801 10:59:55.377"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 10:59:55.468" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 10:59:55.379" endtime="20230801 10:59:55.468"/>
</kw>
<status status="PASS" starttime="20230801 10:59:55.378" endtime="20230801 10:59:55.469"/>
</kw>
<status status="PASS" starttime="20230801 10:59:30.288" endtime="20230801 10:59:55.469"/>
</test>
<test id="s1-t13" name="STA-13 Verify that error message display when create new leave management with the leave date has been registered &amp; &quot;Lưu lại&quot; button" line="149">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 10:59:55.488" endtime="20230801 10:59:55.489"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 10:59:55.492" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\0169eede-7e2b-4432-bb3f-6468fbdddcba"}</msg>
<msg timestamp="20230801 10:59:56.616" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\0169eede-7e2b-4432-bb3f-6468fbdddcba"}</msg>
<status status="PASS" starttime="20230801 10:59:55.490" endtime="20230801 10:59:56.617"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 10:59:57.794" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 10:59:57.794" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 10:59:56.618" endtime="20230801 10:59:57.794"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 10:59:57.795" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 10:59:57.794" endtime="20230801 10:59:57.795"/>
</kw>
<status status="PASS" starttime="20230801 10:59:55.486" endtime="20230801 10:59:57.796"/>
</kw>
<kw name="Go to create leave date page" library="common">
<kw name="Login to Staff" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;staff@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:57.801" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:59:57.800" endtime="20230801 10:59:57.801"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:57.802" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:59:57.802" endtime="20230801 10:59:57.802"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:57.804" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:59:57.803" endtime="20230801 10:59:57.804"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:57.805" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:57.805" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:59:57.804" endtime="20230801 10:59:57.805"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:57.807" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:59:57.806" endtime="20230801 10:59:57.807"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:57.809" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:57.809" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:59:57.808" endtime="20230801 10:59:57.809"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.811" endtime="20230801 10:59:57.811"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.812" endtime="20230801 10:59:57.812"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:57.810" endtime="20230801 10:59:57.813"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.813" endtime="20230801 10:59:57.813"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.815" endtime="20230801 10:59:57.815"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.816" endtime="20230801 10:59:57.816"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:57.813" endtime="20230801 10:59:57.817"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.818" endtime="20230801 10:59:57.819"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.819" endtime="20230801 10:59:57.820"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:57.817" endtime="20230801 10:59:57.820"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.823" endtime="20230801 10:59:57.824"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.825" endtime="20230801 10:59:57.825"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:57.821" endtime="20230801 10:59:57.825"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.826" endtime="20230801 10:59:57.826"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.827" endtime="20230801 10:59:57.827"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:57.825" endtime="20230801 10:59:57.829"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.831" endtime="20230801 10:59:57.831"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.832" endtime="20230801 10:59:57.832"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:57.830" endtime="20230801 10:59:57.832"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.833" endtime="20230801 10:59:57.833"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.833" endtime="20230801 10:59:57.833"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:57.833" endtime="20230801 10:59:57.833"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.835" endtime="20230801 10:59:57.835"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:57.835" endtime="20230801 10:59:57.835"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:59:57.836" endtime="20230801 10:59:57.838"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:57.835" endtime="20230801 10:59:57.838"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.840" endtime="20230801 10:59:57.840"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.841" endtime="20230801 10:59:57.842"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:57.839" endtime="20230801 10:59:57.842"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.843" endtime="20230801 10:59:57.843"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:57.842" endtime="20230801 10:59:57.843"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.844" endtime="20230801 10:59:57.844"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:57.843" endtime="20230801 10:59:57.844"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.845" endtime="20230801 10:59:57.845"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:57.844" endtime="20230801 10:59:57.845"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:57.846" endtime="20230801 10:59:57.846"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:57.846" endtime="20230801 10:59:57.846"/>
</branch>
<status status="PASS" starttime="20230801 10:59:57.810" endtime="20230801 10:59:57.847"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:57.848" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:59:57.848" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:59:57.847" endtime="20230801 10:59:57.848"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:59:57.851" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:59:57.850" endtime="20230801 10:59:57.851"/>
</kw>
<status status="PASS" starttime="20230801 10:59:57.848" endtime="20230801 10:59:57.851"/>
</branch>
<status status="PASS" starttime="20230801 10:59:57.848" endtime="20230801 10:59:57.851"/>
</if>
<msg timestamp="20230801 10:59:57.852" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:59:57.799" endtime="20230801 10:59:57.852"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:59:57.853" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:59:57.852" endtime="20230801 10:59:57.853"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:57.854" endtime="20230801 10:59:58.898"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:59:58.900" level="INFO">Fills the text 'staff@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230801 10:59:58.899" endtime="20230801 10:59:58.939"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:58.940" level="INFO">Length is 15</msg>
<msg timestamp="20230801 10:59:58.940" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 10:59:58.940" endtime="20230801 10:59:58.940"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:59:58.942" level="INFO">${STATE["Tên đăng nhập"]} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 10:59:58.941" endtime="20230801 10:59:58.942"/>
</kw>
<status status="PASS" starttime="20230801 10:59:58.941" endtime="20230801 10:59:58.943"/>
</branch>
<status status="PASS" starttime="20230801 10:59:58.940" endtime="20230801 10:59:58.943"/>
</if>
<status status="PASS" starttime="20230801 10:59:57.798" endtime="20230801 10:59:58.943"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Tester@123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:58.947" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 10:59:58.945" endtime="20230801 10:59:58.947"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:58.948" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 10:59:58.947" endtime="20230801 10:59:58.948"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:58.950" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 10:59:58.949" endtime="20230801 10:59:58.950"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:58.951" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:58.951" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 10:59:58.950" endtime="20230801 10:59:58.951"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:58.952" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:59:58.952" endtime="20230801 10:59:58.952"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:58.953" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:58.953" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:59:58.953" endtime="20230801 10:59:58.953"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.955" endtime="20230801 10:59:58.955"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.955" endtime="20230801 10:59:58.956"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:58.954" endtime="20230801 10:59:58.956"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.957" endtime="20230801 10:59:58.957"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.958" endtime="20230801 10:59:58.958"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.958" endtime="20230801 10:59:58.959"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:58.956" endtime="20230801 10:59:58.959"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.960" endtime="20230801 10:59:58.960"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.960" endtime="20230801 10:59:58.961"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:58.959" endtime="20230801 10:59:58.961"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.962" endtime="20230801 10:59:58.962"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.962" endtime="20230801 10:59:58.962"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:58.961" endtime="20230801 10:59:58.963"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.963" endtime="20230801 10:59:58.963"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.963" endtime="20230801 10:59:58.963"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:58.963" endtime="20230801 10:59:58.963"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.965" endtime="20230801 10:59:58.965"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.965" endtime="20230801 10:59:58.966"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:58.963" endtime="20230801 10:59:58.966"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.966" endtime="20230801 10:59:58.966"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.967" endtime="20230801 10:59:58.967"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:58.966" endtime="20230801 10:59:58.967"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.967" endtime="20230801 10:59:58.968"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:58.967" endtime="20230801 10:59:58.968"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 10:59:58.968" endtime="20230801 10:59:58.968"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:58.968" endtime="20230801 10:59:58.968"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.969" endtime="20230801 10:59:58.969"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.969" endtime="20230801 10:59:58.970"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:58.969" endtime="20230801 10:59:58.970"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.970" endtime="20230801 10:59:58.970"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:58.970" endtime="20230801 10:59:58.971"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.971" endtime="20230801 10:59:58.971"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:58.971" endtime="20230801 10:59:58.971"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.972" endtime="20230801 10:59:58.972"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:58.971" endtime="20230801 10:59:58.972"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 10:59:58.972" endtime="20230801 10:59:58.973"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:58.972" endtime="20230801 10:59:58.973"/>
</branch>
<status status="PASS" starttime="20230801 10:59:58.954" endtime="20230801 10:59:58.973"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:58.973" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:59:58.973" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:59:58.973" endtime="20230801 10:59:58.973"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 10:59:58.976" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:59:58.975" endtime="20230801 10:59:58.976"/>
</kw>
<status status="PASS" starttime="20230801 10:59:58.973" endtime="20230801 10:59:58.976"/>
</branch>
<status status="PASS" starttime="20230801 10:59:58.973" endtime="20230801 10:59:58.976"/>
</if>
<msg timestamp="20230801 10:59:58.977" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:59:58.945" endtime="20230801 10:59:58.977"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 10:59:58.978" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 10:59:58.977" endtime="20230801 10:59:58.979"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:58.979" endtime="20230801 10:59:59.033"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 10:59:59.033" level="INFO">Fills the text 'Tester@123' in the given field.</msg>
<status status="PASS" starttime="20230801 10:59:59.033" endtime="20230801 10:59:59.072"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:59.073" level="INFO">Length is 10</msg>
<msg timestamp="20230801 10:59:59.073" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 10:59:59.073" endtime="20230801 10:59:59.073"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 10:59:59.075" level="INFO">${STATE["Mật khẩu"]} = Tester@123</msg>
<status status="PASS" starttime="20230801 10:59:59.073" endtime="20230801 10:59:59.075"/>
</kw>
<status status="PASS" starttime="20230801 10:59:59.073" endtime="20230801 10:59:59.075"/>
</branch>
<status status="PASS" starttime="20230801 10:59:59.073" endtime="20230801 10:59:59.076"/>
</if>
<status status="PASS" starttime="20230801 10:59:58.944" endtime="20230801 10:59:59.076"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 10:59:59.078" endtime="20230801 10:59:59.453"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 10:59:59.456" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 10:59:59.455" endtime="20230801 10:59:59.456"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 10:59:59.468" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 10:59:59.457" endtime="20230801 10:59:59.468"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 10:59:59.472" endtime="20230801 10:59:59.473"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 10:59:59.473" endtime="20230801 10:59:59.475"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:59.469" endtime="20230801 10:59:59.475"/>
</branch>
<status status="PASS" starttime="20230801 10:59:59.469" endtime="20230801 10:59:59.476"/>
</if>
<status status="PASS" starttime="20230801 10:59:59.453" endtime="20230801 10:59:59.477"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 10:59:59.477" endtime="20230801 10:59:59.521"/>
</kw>
<status status="PASS" starttime="20230801 10:59:59.077" endtime="20230801 10:59:59.521"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 10:59:59.522" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 10:59:59.522" endtime="20230801 10:59:59.522"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 10:59:59.523" level="INFO">Length is 0</msg>
<msg timestamp="20230801 10:59:59.523" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 10:59:59.523" endtime="20230801 10:59:59.524"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 10:59:59.524" endtime="20230801 10:59:59.524"/>
</kw>
<status status="NOT RUN" starttime="20230801 10:59:59.524" endtime="20230801 10:59:59.524"/>
</branch>
<status status="PASS" starttime="20230801 10:59:59.524" endtime="20230801 10:59:59.524"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:01.218" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 10:59:59.527" endtime="20230801 11:00:01.218"/>
</kw>
<status status="PASS" starttime="20230801 10:59:59.524" endtime="20230801 11:00:01.218"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:01.219" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 11:00:01.218" endtime="20230801 11:00:01.219"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:00:01.567" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-19.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-19.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 11:00:01.568" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 11:00:01.568" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 11:00:01.221" endtime="20230801 11:00:01.570"/>
</kw>
<status status="FAIL" starttime="20230801 11:00:01.219" endtime="20230801 11:00:01.571"/>
</kw>
<msg timestamp="20230801 11:00:01.571" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 11:00:01.219" endtime="20230801 11:00:01.571"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:00:01.572" endtime="20230801 11:00:01.572"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:01.571" endtime="20230801 11:00:01.572"/>
</branch>
<status status="PASS" starttime="20230801 11:00:01.571" endtime="20230801 11:00:01.572"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:00:04.031" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 11:00:01.575" endtime="20230801 11:00:04.032"/>
</kw>
<status status="PASS" starttime="20230801 11:00:01.573" endtime="20230801 11:00:04.032"/>
</kw>
<status status="PASS" starttime="20230801 10:59:59.521" endtime="20230801 11:00:04.032"/>
</kw>
<status status="PASS" starttime="20230801 10:59:57.797" endtime="20230801 11:00:04.033"/>
</kw>
<kw name="When Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:04.033" endtime="20230801 11:00:04.168"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:04.171" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 11:00:04.170" endtime="20230801 11:00:04.171"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:00:04.188" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 11:00:04.172" endtime="20230801 11:00:04.188"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.189" endtime="20230801 11:00:04.189"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.190" endtime="20230801 11:00:04.190"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:04.188" endtime="20230801 11:00:04.190"/>
</branch>
<status status="PASS" starttime="20230801 11:00:04.188" endtime="20230801 11:00:04.190"/>
</if>
<status status="PASS" starttime="20230801 11:00:04.168" endtime="20230801 11:00:04.190"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 11:00:04.190" endtime="20230801 11:00:04.466"/>
</kw>
<status status="PASS" starttime="20230801 11:00:04.033" endtime="20230801 11:00:04.466"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:04.467" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 11:00:04.467" endtime="20230801 11:00:04.467"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:00:04.473" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 11:00:04.468" endtime="20230801 11:00:04.473"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 11:00:04.474" endtime="20230801 11:00:04.474"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:04.473" endtime="20230801 11:00:04.474"/>
</branch>
<status status="PASS" starttime="20230801 11:00:04.473" endtime="20230801 11:00:04.474"/>
</if>
<status status="PASS" starttime="20230801 11:00:04.467" endtime="20230801 11:00:04.474"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 11:00:04.576" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 11:00:04.475" endtime="20230801 11:00:04.576"/>
</kw>
<status status="PASS" starttime="20230801 10:59:57.797" endtime="20230801 11:00:04.576"/>
</kw>
<kw name="And Click select &quot;Loại phép&quot; with &quot;Nghỉ phép có lương&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:04.579" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 11:00:04.579" endtime="20230801 11:00:04.579"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:04.580" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 11:00:04.579" endtime="20230801 11:00:04.580"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:04.581" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 11:00:04.580" endtime="20230801 11:00:04.581"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:04.581" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:04.581" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 11:00:04.581" endtime="20230801 11:00:04.581"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:04.582" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:00:04.582" endtime="20230801 11:00:04.582"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:04.582" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:04.582" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:00:04.582" endtime="20230801 11:00:04.582"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.584" endtime="20230801 11:00:04.584"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.584" endtime="20230801 11:00:04.584"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:04.584" endtime="20230801 11:00:04.584"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.585" endtime="20230801 11:00:04.585"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.585" endtime="20230801 11:00:04.586"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.586" endtime="20230801 11:00:04.586"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:04.585" endtime="20230801 11:00:04.586"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.587" endtime="20230801 11:00:04.587"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.587" endtime="20230801 11:00:04.587"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:04.586" endtime="20230801 11:00:04.587"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.588" endtime="20230801 11:00:04.589"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.589" endtime="20230801 11:00:04.589"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:04.588" endtime="20230801 11:00:04.589"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.590" endtime="20230801 11:00:04.590"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.590" endtime="20230801 11:00:04.591"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:04.590" endtime="20230801 11:00:04.591"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.591" endtime="20230801 11:00:04.591"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.592" endtime="20230801 11:00:04.592"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:04.591" endtime="20230801 11:00:04.592"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.593" endtime="20230801 11:00:04.594"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.594" endtime="20230801 11:00:04.595"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:04.593" endtime="20230801 11:00:04.595"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.597" endtime="20230801 11:00:04.597"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:04.596" endtime="20230801 11:00:04.597"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 11:00:04.599" endtime="20230801 11:00:04.599"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:04.598" endtime="20230801 11:00:04.600"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.602" endtime="20230801 11:00:04.602"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.603" endtime="20230801 11:00:04.603"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:04.600" endtime="20230801 11:00:04.603"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.604" endtime="20230801 11:00:04.604"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:04.603" endtime="20230801 11:00:04.604"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.605" endtime="20230801 11:00:04.606"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:04.604" endtime="20230801 11:00:04.606"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.608" endtime="20230801 11:00:04.608"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:04.607" endtime="20230801 11:00:04.608"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:04.610" endtime="20230801 11:00:04.610"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:04.609" endtime="20230801 11:00:04.610"/>
</branch>
<status status="PASS" starttime="20230801 11:00:04.584" endtime="20230801 11:00:04.611"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:04.612" level="INFO">Length is 18</msg>
<msg timestamp="20230801 11:00:04.612" level="INFO">${cnt} = 18</msg>
<status status="PASS" starttime="20230801 11:00:04.611" endtime="20230801 11:00:04.612"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 11:00:04.616" level="INFO">${text} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 11:00:04.614" endtime="20230801 11:00:04.616"/>
</kw>
<status status="PASS" starttime="20230801 11:00:04.613" endtime="20230801 11:00:04.616"/>
</branch>
<status status="PASS" starttime="20230801 11:00:04.613" endtime="20230801 11:00:04.616"/>
</if>
<msg timestamp="20230801 11:00:04.617" level="INFO">${text} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 11:00:04.578" endtime="20230801 11:00:04.617"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 11:00:04.618" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 11:00:04.617" endtime="20230801 11:00:04.618"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:00:04.687" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 11:00:04.620" endtime="20230801 11:00:04.687"/>
</kw>
<status status="PASS" starttime="20230801 11:00:04.618" endtime="20230801 11:00:04.688"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:04.688" endtime="20230801 11:00:05.057"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 11:00:05.058" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 11:00:05.057" endtime="20230801 11:00:05.058"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 11:00:05.060" level="INFO">Fills the text 'Nghỉ phép có lương' in the given field.</msg>
<status status="PASS" starttime="20230801 11:00:05.059" endtime="20230801 11:00:05.137"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:05.138" endtime="20230801 11:00:05.395"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:05.396" level="INFO">Length is 18</msg>
<msg timestamp="20230801 11:00:05.396" level="INFO">${cnt} = 18</msg>
<status status="PASS" starttime="20230801 11:00:05.395" endtime="20230801 11:00:05.396"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 11:00:05.397" level="INFO">${STATE["Loại phép"]} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 11:00:05.397" endtime="20230801 11:00:05.397"/>
</kw>
<status status="PASS" starttime="20230801 11:00:05.396" endtime="20230801 11:00:05.397"/>
</branch>
<status status="PASS" starttime="20230801 11:00:05.396" endtime="20230801 11:00:05.397"/>
</if>
<status status="PASS" starttime="20230801 11:00:04.577" endtime="20230801 11:00:05.398"/>
</kw>
<kw name="And Click select &quot;Thời gian&quot; with &quot;Sáng&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:05.400" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 11:00:05.399" endtime="20230801 11:00:05.400"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:05.400" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 11:00:05.400" endtime="20230801 11:00:05.400"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:05.401" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 11:00:05.401" endtime="20230801 11:00:05.401"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:05.401" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:05.402" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 11:00:05.401" endtime="20230801 11:00:05.402"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:05.402" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:00:05.402" endtime="20230801 11:00:05.402"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:05.403" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:05.403" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:00:05.402" endtime="20230801 11:00:05.403"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.404" endtime="20230801 11:00:05.404"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.405" endtime="20230801 11:00:05.405"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.403" endtime="20230801 11:00:05.405"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.407" endtime="20230801 11:00:05.407"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.408" endtime="20230801 11:00:05.408"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.409" endtime="20230801 11:00:05.409"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.406" endtime="20230801 11:00:05.409"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.410" endtime="20230801 11:00:05.410"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.411" endtime="20230801 11:00:05.411"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.409" endtime="20230801 11:00:05.411"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.412" endtime="20230801 11:00:05.413"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.413" endtime="20230801 11:00:05.413"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.412" endtime="20230801 11:00:05.413"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.413" endtime="20230801 11:00:05.415"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.415" endtime="20230801 11:00:05.415"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.413" endtime="20230801 11:00:05.415"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.416" endtime="20230801 11:00:05.416"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.416" endtime="20230801 11:00:05.416"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.415" endtime="20230801 11:00:05.416"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.417" endtime="20230801 11:00:05.417"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.417" endtime="20230801 11:00:05.417"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.417" endtime="20230801 11:00:05.418"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.418" endtime="20230801 11:00:05.418"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.418" endtime="20230801 11:00:05.418"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 11:00:05.419" endtime="20230801 11:00:05.419"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.418" endtime="20230801 11:00:05.419"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.419" endtime="20230801 11:00:05.420"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.420" endtime="20230801 11:00:05.421"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.419" endtime="20230801 11:00:05.421"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.422" endtime="20230801 11:00:05.423"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.421" endtime="20230801 11:00:05.423"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.425" endtime="20230801 11:00:05.426"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.424" endtime="20230801 11:00:05.426"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.431" endtime="20230801 11:00:05.431"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.427" endtime="20230801 11:00:05.432"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.433" endtime="20230801 11:00:05.433"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.432" endtime="20230801 11:00:05.433"/>
</branch>
<status status="PASS" starttime="20230801 11:00:05.403" endtime="20230801 11:00:05.434"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:05.437" level="INFO">Length is 4</msg>
<msg timestamp="20230801 11:00:05.438" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20230801 11:00:05.434" endtime="20230801 11:00:05.438"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 11:00:05.448" level="INFO">${text} = Sáng</msg>
<status status="PASS" starttime="20230801 11:00:05.445" endtime="20230801 11:00:05.448"/>
</kw>
<status status="PASS" starttime="20230801 11:00:05.439" endtime="20230801 11:00:05.448"/>
</branch>
<status status="PASS" starttime="20230801 11:00:05.438" endtime="20230801 11:00:05.449"/>
</if>
<msg timestamp="20230801 11:00:05.450" level="INFO">${text} = Sáng</msg>
<status status="PASS" starttime="20230801 11:00:05.399" endtime="20230801 11:00:05.450"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 11:00:05.452" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 11:00:05.450" endtime="20230801 11:00:05.452"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:00:05.477" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 11:00:05.457" endtime="20230801 11:00:05.477"/>
</kw>
<status status="PASS" starttime="20230801 11:00:05.453" endtime="20230801 11:00:05.478"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:05.478" endtime="20230801 11:00:05.588"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 11:00:05.589" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 11:00:05.589" endtime="20230801 11:00:05.589"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 11:00:05.590" level="INFO">Fills the text 'Sáng' in the given field.</msg>
<status status="PASS" starttime="20230801 11:00:05.590" endtime="20230801 11:00:05.639"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:05.640" endtime="20230801 11:00:05.961"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:05.961" level="INFO">Length is 4</msg>
<msg timestamp="20230801 11:00:05.962" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20230801 11:00:05.961" endtime="20230801 11:00:05.962"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 11:00:05.963" level="INFO">${STATE["Thời gian"]} = Sáng</msg>
<status status="PASS" starttime="20230801 11:00:05.962" endtime="20230801 11:00:05.963"/>
</kw>
<status status="PASS" starttime="20230801 11:00:05.962" endtime="20230801 11:00:05.963"/>
</branch>
<status status="PASS" starttime="20230801 11:00:05.962" endtime="20230801 11:00:05.963"/>
</if>
<status status="PASS" starttime="20230801 11:00:05.398" endtime="20230801 11:00:05.964"/>
</kw>
<kw name="And Enter leave date in &quot;Ngày bắt đầu&quot; with &quot;31-07-2023&quot;" library="common" sourcename="Enter leave date in &quot;${field}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>date</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:05.968" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 11:00:05.968" endtime="20230801 11:00:05.968"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:05.969" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 11:00:05.969" endtime="20230801 11:00:05.970"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:05.971" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 11:00:05.970" endtime="20230801 11:00:05.971"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:05.971" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:05.971" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 11:00:05.971" endtime="20230801 11:00:05.971"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:05.972" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:00:05.972" endtime="20230801 11:00:05.972"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:05.973" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:05.973" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:00:05.972" endtime="20230801 11:00:05.973"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.973" endtime="20230801 11:00:05.974"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.974" endtime="20230801 11:00:05.974"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.973" endtime="20230801 11:00:05.974"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.974" endtime="20230801 11:00:05.974"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.975" endtime="20230801 11:00:05.975"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.975" endtime="20230801 11:00:05.975"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.974" endtime="20230801 11:00:05.975"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.977" endtime="20230801 11:00:05.977"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.977" endtime="20230801 11:00:05.977"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.975" endtime="20230801 11:00:05.977"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.978" endtime="20230801 11:00:05.978"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.978" endtime="20230801 11:00:05.978"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.977" endtime="20230801 11:00:05.978"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.979" endtime="20230801 11:00:05.979"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.979" endtime="20230801 11:00:05.979"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.979" endtime="20230801 11:00:05.980"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.981" endtime="20230801 11:00:05.981"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.982" endtime="20230801 11:00:05.982"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.980" endtime="20230801 11:00:05.983"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.984" endtime="20230801 11:00:05.984"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.984" endtime="20230801 11:00:05.984"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.983" endtime="20230801 11:00:05.984"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.985" endtime="20230801 11:00:05.986"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.985" endtime="20230801 11:00:05.986"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 11:00:05.987" endtime="20230801 11:00:05.988"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.986" endtime="20230801 11:00:05.988"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.989" endtime="20230801 11:00:05.989"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.990" endtime="20230801 11:00:05.991"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.988" endtime="20230801 11:00:05.991"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.994" endtime="20230801 11:00:05.994"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.992" endtime="20230801 11:00:05.994"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.996" endtime="20230801 11:00:05.997"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.995" endtime="20230801 11:00:05.997"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.998" endtime="20230801 11:00:05.998"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.997" endtime="20230801 11:00:05.998"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:05.999" endtime="20230801 11:00:05.999"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:05.998" endtime="20230801 11:00:05.999"/>
</branch>
<status status="PASS" starttime="20230801 11:00:05.973" endtime="20230801 11:00:05.999"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:06.000" level="INFO">Length is 10</msg>
<msg timestamp="20230801 11:00:06.000" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 11:00:06.000" endtime="20230801 11:00:06.001"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 11:00:06.002" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 11:00:06.001" endtime="20230801 11:00:06.002"/>
</kw>
<status status="PASS" starttime="20230801 11:00:06.001" endtime="20230801 11:00:06.002"/>
</branch>
<status status="PASS" starttime="20230801 11:00:06.001" endtime="20230801 11:00:06.003"/>
</if>
<msg timestamp="20230801 11:00:06.003" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 11:00:05.967" endtime="20230801 11:00:06.004"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//input[@placeholder="${field}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:06.005" level="INFO">${element} = xpath=//input[@placeholder="Ngày bắt đầu"]</msg>
<status status="PASS" starttime="20230801 11:00:06.004" endtime="20230801 11:00:06.005"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:06.006" endtime="20230801 11:00:06.427"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:06.428" endtime="20230801 11:00:06.574"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 11:00:06.575" level="INFO">Fills the text '31-07-2023' in the given field.</msg>
<status status="PASS" starttime="20230801 11:00:06.574" endtime="20230801 11:00:06.722"/>
</kw>
<status status="PASS" starttime="20230801 11:00:05.966" endtime="20230801 11:00:06.722"/>
</kw>
<kw name="And Enter leave date in &quot;Ngày kết thúc&quot; with &quot;31-07-2023&quot;" library="common" sourcename="Enter leave date in &quot;${field}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>date</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:06.725" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 11:00:06.725" endtime="20230801 11:00:06.725"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:06.726" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 11:00:06.726" endtime="20230801 11:00:06.726"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:06.727" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 11:00:06.727" endtime="20230801 11:00:06.727"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:06.728" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:06.729" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 11:00:06.728" endtime="20230801 11:00:06.729"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:06.730" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:00:06.729" endtime="20230801 11:00:06.730"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:06.731" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:06.731" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:00:06.731" endtime="20230801 11:00:06.732"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.733" endtime="20230801 11:00:06.733"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.733" endtime="20230801 11:00:06.735"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:06.732" endtime="20230801 11:00:06.735"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.736" endtime="20230801 11:00:06.736"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.736" endtime="20230801 11:00:06.737"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.737" endtime="20230801 11:00:06.738"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:06.735" endtime="20230801 11:00:06.738"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.739" endtime="20230801 11:00:06.739"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.739" endtime="20230801 11:00:06.739"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:06.738" endtime="20230801 11:00:06.739"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.740" endtime="20230801 11:00:06.740"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.741" endtime="20230801 11:00:06.741"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:06.740" endtime="20230801 11:00:06.741"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.742" endtime="20230801 11:00:06.742"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.743" endtime="20230801 11:00:06.743"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:06.741" endtime="20230801 11:00:06.743"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.747" endtime="20230801 11:00:06.747"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.748" endtime="20230801 11:00:06.748"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:06.745" endtime="20230801 11:00:06.748"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.749" endtime="20230801 11:00:06.750"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.750" endtime="20230801 11:00:06.750"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:06.748" endtime="20230801 11:00:06.751"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.751" endtime="20230801 11:00:06.752"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:06.751" endtime="20230801 11:00:06.752"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 11:00:06.753" endtime="20230801 11:00:06.753"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:06.752" endtime="20230801 11:00:06.753"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.755" endtime="20230801 11:00:06.755"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.756" endtime="20230801 11:00:06.756"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:06.754" endtime="20230801 11:00:06.756"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.757" endtime="20230801 11:00:06.757"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:06.756" endtime="20230801 11:00:06.757"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.758" endtime="20230801 11:00:06.758"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:06.757" endtime="20230801 11:00:06.758"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.759" endtime="20230801 11:00:06.759"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:06.758" endtime="20230801 11:00:06.759"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:06.759" endtime="20230801 11:00:06.760"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:06.759" endtime="20230801 11:00:06.760"/>
</branch>
<status status="PASS" starttime="20230801 11:00:06.732" endtime="20230801 11:00:06.760"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:06.761" level="INFO">Length is 10</msg>
<msg timestamp="20230801 11:00:06.761" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 11:00:06.760" endtime="20230801 11:00:06.761"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 11:00:06.762" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 11:00:06.762" endtime="20230801 11:00:06.762"/>
</kw>
<status status="PASS" starttime="20230801 11:00:06.761" endtime="20230801 11:00:06.762"/>
</branch>
<status status="PASS" starttime="20230801 11:00:06.761" endtime="20230801 11:00:06.762"/>
</if>
<msg timestamp="20230801 11:00:06.763" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 11:00:06.723" endtime="20230801 11:00:06.763"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//input[@placeholder="${field}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:06.763" level="INFO">${element} = xpath=//input[@placeholder="Ngày kết thúc"]</msg>
<status status="PASS" starttime="20230801 11:00:06.763" endtime="20230801 11:00:06.763"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:06.765" endtime="20230801 11:00:07.091"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:07.092" endtime="20230801 11:00:07.146"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 11:00:07.147" level="INFO">Fills the text '31-07-2023' in the given field.</msg>
<status status="PASS" starttime="20230801 11:00:07.146" endtime="20230801 11:00:07.270"/>
</kw>
<status status="PASS" starttime="20230801 11:00:06.723" endtime="20230801 11:00:07.271"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Lý do&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:07.276" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 11:00:07.274" endtime="20230801 11:00:07.276"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:07.277" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 11:00:07.277" endtime="20230801 11:00:07.278"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:07.279" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 11:00:07.278" endtime="20230801 11:00:07.279"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:07.281" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:07.281" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 11:00:07.280" endtime="20230801 11:00:07.282"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:07.283" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 11:00:07.282" endtime="20230801 11:00:07.283"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:07.284" level="INFO">Length is 1</msg>
<msg timestamp="20230801 11:00:07.285" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 11:00:07.284" endtime="20230801 11:00:07.285"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.289" endtime="20230801 11:00:07.290"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.290" endtime="20230801 11:00:07.291"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:07.286" endtime="20230801 11:00:07.291"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.292" endtime="20230801 11:00:07.292"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.293" endtime="20230801 11:00:07.293"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.294" endtime="20230801 11:00:07.294"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:07.291" endtime="20230801 11:00:07.294"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.295" endtime="20230801 11:00:07.296"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.297" endtime="20230801 11:00:07.299"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:07.295" endtime="20230801 11:00:07.299"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.301" endtime="20230801 11:00:07.301"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.301" endtime="20230801 11:00:07.302"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:07.300" endtime="20230801 11:00:07.302"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.303" endtime="20230801 11:00:07.303"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.305" endtime="20230801 11:00:07.305"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:07.303" endtime="20230801 11:00:07.306"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.307" endtime="20230801 11:00:07.307"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.308" endtime="20230801 11:00:07.308"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:07.306" endtime="20230801 11:00:07.308"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.309" endtime="20230801 11:00:07.310"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.310" endtime="20230801 11:00:07.311"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:07.309" endtime="20230801 11:00:07.311"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.312" endtime="20230801 11:00:07.312"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:07.311" endtime="20230801 11:00:07.312"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 11:00:07.320" endtime="20230801 11:00:07.320"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:07.313" endtime="20230801 11:00:07.321"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.326" endtime="20230801 11:00:07.326"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.327" endtime="20230801 11:00:07.327"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:07.323" endtime="20230801 11:00:07.327"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.330" endtime="20230801 11:00:07.331"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:07.328" endtime="20230801 11:00:07.332"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.334" endtime="20230801 11:00:07.334"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:07.333" endtime="20230801 11:00:07.335"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:07.339" endtime="20230801 11:00:07.340"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:07.338" endtime="20230801 11:00:07.340"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230801 11:00:07.343" level="INFO">${new_text} = Dolorum doloremque necessitatibus error laboriosam.</msg>
<status status="PASS" starttime="20230801 11:00:07.341" endtime="20230801 11:00:07.343"/>
</kw>
<status status="PASS" starttime="20230801 11:00:07.340" endtime="20230801 11:00:07.343"/>
</branch>
<status status="PASS" starttime="20230801 11:00:07.285" endtime="20230801 11:00:07.343"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:07.347" level="INFO">Length is 8</msg>
<msg timestamp="20230801 11:00:07.347" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 11:00:07.346" endtime="20230801 11:00:07.347"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 11:00:07.350" level="INFO">${text} = Dolorum doloremque necessitatibus error laboriosam.</msg>
<status status="PASS" starttime="20230801 11:00:07.349" endtime="20230801 11:00:07.350"/>
</kw>
<status status="PASS" starttime="20230801 11:00:07.348" endtime="20230801 11:00:07.350"/>
</branch>
<status status="PASS" starttime="20230801 11:00:07.348" endtime="20230801 11:00:07.351"/>
</if>
<msg timestamp="20230801 11:00:07.351" level="INFO">${text} = Dolorum doloremque necessitatibus error laboriosam.</msg>
<status status="PASS" starttime="20230801 11:00:07.273" endtime="20230801 11:00:07.352"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230801 11:00:07.357" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Lý do"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230801 11:00:07.354" endtime="20230801 11:00:07.357"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:07.358" endtime="20230801 11:00:07.995"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 11:00:07.996" level="INFO">Fills the text 'Dolorum doloremque necessitatibus error laboriosam.' in the given field.</msg>
<status status="PASS" starttime="20230801 11:00:07.996" endtime="20230801 11:00:08.060"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:08.061" level="INFO">Length is 51</msg>
<msg timestamp="20230801 11:00:08.061" level="INFO">${cnt} = 51</msg>
<status status="PASS" starttime="20230801 11:00:08.060" endtime="20230801 11:00:08.061"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 11:00:08.063" level="INFO">${STATE["Lý do"]} = Dolorum doloremque necessitatibus error laboriosam.</msg>
<status status="PASS" starttime="20230801 11:00:08.062" endtime="20230801 11:00:08.063"/>
</kw>
<status status="PASS" starttime="20230801 11:00:08.062" endtime="20230801 11:00:08.064"/>
</branch>
<status status="PASS" starttime="20230801 11:00:08.061" endtime="20230801 11:00:08.064"/>
</if>
<status status="PASS" starttime="20230801 11:00:07.272" endtime="20230801 11:00:08.064"/>
</kw>
<kw name="And Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:08.066" endtime="20230801 11:00:08.563"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:08.564" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 11:00:08.564" endtime="20230801 11:00:08.564"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:00:08.587" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 11:00:08.564" endtime="20230801 11:00:08.587"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:00:08.589" endtime="20230801 11:00:08.589"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 11:00:08.590" endtime="20230801 11:00:08.590"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:08.588" endtime="20230801 11:00:08.590"/>
</branch>
<status status="PASS" starttime="20230801 11:00:08.587" endtime="20230801 11:00:08.590"/>
</if>
<status status="PASS" starttime="20230801 11:00:08.563" endtime="20230801 11:00:08.591"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 11:00:08.591" endtime="20230801 11:00:08.623"/>
</kw>
<status status="PASS" starttime="20230801 11:00:08.065" endtime="20230801 11:00:08.623"/>
</kw>
<kw name="Then User look message &quot;Ngày nghỉ đã được đăng ký&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:08.626" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:00:08.625" endtime="20230801 11:00:08.626"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:08.627" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:08.627" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:00:08.626" endtime="20230801 11:00:08.627"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 11:00:08.628" endtime="20230801 11:00:08.629"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:08.628" endtime="20230801 11:00:08.629"/>
</branch>
<status status="PASS" starttime="20230801 11:00:08.628" endtime="20230801 11:00:08.629"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:09.559" level="INFO">Text: 'Ngày nghỉ đã được đăng ký'</msg>
<status status="PASS" starttime="20230801 11:00:08.632" endtime="20230801 11:00:09.559"/>
</kw>
<status status="PASS" starttime="20230801 11:00:08.629" endtime="20230801 11:00:09.560"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:09.561" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 11:00:09.561" endtime="20230801 11:00:09.561"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:00:09.942" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-20.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-20.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 11:00:09.942" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 11:00:09.942" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 11:00:09.565" endtime="20230801 11:00:09.944"/>
</kw>
<status status="FAIL" starttime="20230801 11:00:09.563" endtime="20230801 11:00:09.944"/>
</kw>
<msg timestamp="20230801 11:00:09.945" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 11:00:09.562" endtime="20230801 11:00:09.945"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:00:09.946" endtime="20230801 11:00:09.946"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:09.945" endtime="20230801 11:00:09.946"/>
</branch>
<status status="PASS" starttime="20230801 11:00:09.945" endtime="20230801 11:00:09.946"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:00:16.011" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 11:00:09.948" endtime="20230801 11:00:16.011"/>
</kw>
<status status="PASS" starttime="20230801 11:00:09.946" endtime="20230801 11:00:16.012"/>
</kw>
<status status="PASS" starttime="20230801 11:00:08.624" endtime="20230801 11:00:16.012"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 11:00:16.141" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 11:00:16.017" endtime="20230801 11:00:16.142"/>
</kw>
<status status="PASS" starttime="20230801 11:00:16.015" endtime="20230801 11:00:16.142"/>
</kw>
<status status="PASS" starttime="20230801 10:59:55.480" endtime="20230801 11:00:16.143"/>
</test>
<test id="s1-t14" name="STA-14 Verify that error message display when create new leave management with the leave date has been registered &amp; &quot;Lưu và tạo mới&quot; button" line="159">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 11:00:16.162" endtime="20230801 11:00:16.163"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 11:00:16.165" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\08ff3e7c-a6f6-4912-aeda-85c189d1e68f"}</msg>
<msg timestamp="20230801 11:00:17.319" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\08ff3e7c-a6f6-4912-aeda-85c189d1e68f"}</msg>
<status status="PASS" starttime="20230801 11:00:16.163" endtime="20230801 11:00:17.320"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 11:00:18.189" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 11:00:18.189" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 11:00:17.321" endtime="20230801 11:00:18.189"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:00:18.190" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 11:00:18.190" endtime="20230801 11:00:18.190"/>
</kw>
<status status="PASS" starttime="20230801 11:00:16.161" endtime="20230801 11:00:18.191"/>
</kw>
<kw name="Go to create leave date page" library="common">
<kw name="Login to Staff" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;staff@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:18.194" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 11:00:18.193" endtime="20230801 11:00:18.194"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:18.195" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 11:00:18.194" endtime="20230801 11:00:18.195"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:18.196" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 11:00:18.196" endtime="20230801 11:00:18.196"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:18.197" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:18.197" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 11:00:18.197" endtime="20230801 11:00:18.197"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:18.198" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:00:18.197" endtime="20230801 11:00:18.198"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:18.198" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:18.198" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:00:18.198" endtime="20230801 11:00:18.199"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.199" endtime="20230801 11:00:18.200"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.200" endtime="20230801 11:00:18.200"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:18.199" endtime="20230801 11:00:18.201"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.201" endtime="20230801 11:00:18.202"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.202" endtime="20230801 11:00:18.203"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.203" endtime="20230801 11:00:18.204"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:18.201" endtime="20230801 11:00:18.204"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.204" endtime="20230801 11:00:18.205"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.205" endtime="20230801 11:00:18.206"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:18.204" endtime="20230801 11:00:18.206"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.207" endtime="20230801 11:00:18.207"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.208" endtime="20230801 11:00:18.208"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:18.206" endtime="20230801 11:00:18.208"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.208" endtime="20230801 11:00:18.209"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.209" endtime="20230801 11:00:18.209"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:18.208" endtime="20230801 11:00:18.209"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.210" endtime="20230801 11:00:18.210"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.210" endtime="20230801 11:00:18.210"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:18.209" endtime="20230801 11:00:18.211"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.212" endtime="20230801 11:00:18.212"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.212" endtime="20230801 11:00:18.213"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:18.211" endtime="20230801 11:00:18.213"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.213" endtime="20230801 11:00:18.213"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:18.213" endtime="20230801 11:00:18.213"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 11:00:18.215" endtime="20230801 11:00:18.215"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:18.215" endtime="20230801 11:00:18.215"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.216" endtime="20230801 11:00:18.217"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.217" endtime="20230801 11:00:18.217"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:18.215" endtime="20230801 11:00:18.218"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.219" endtime="20230801 11:00:18.219"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:18.218" endtime="20230801 11:00:18.219"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.220" endtime="20230801 11:00:18.221"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:18.220" endtime="20230801 11:00:18.221"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.222" endtime="20230801 11:00:18.223"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:18.221" endtime="20230801 11:00:18.224"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:18.227" endtime="20230801 11:00:18.227"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:18.225" endtime="20230801 11:00:18.228"/>
</branch>
<status status="PASS" starttime="20230801 11:00:18.199" endtime="20230801 11:00:18.228"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:18.229" level="INFO">Length is 15</msg>
<msg timestamp="20230801 11:00:18.229" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 11:00:18.229" endtime="20230801 11:00:18.230"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 11:00:18.231" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 11:00:18.231" endtime="20230801 11:00:18.231"/>
</kw>
<status status="PASS" starttime="20230801 11:00:18.230" endtime="20230801 11:00:18.231"/>
</branch>
<status status="PASS" starttime="20230801 11:00:18.230" endtime="20230801 11:00:18.232"/>
</if>
<msg timestamp="20230801 11:00:18.232" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 11:00:18.193" endtime="20230801 11:00:18.232"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 11:00:18.233" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 11:00:18.232" endtime="20230801 11:00:18.233"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:18.233" endtime="20230801 11:00:22.217"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 11:00:22.220" level="INFO">Fills the text 'staff@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230801 11:00:22.218" endtime="20230801 11:00:22.429"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:22.430" level="INFO">Length is 15</msg>
<msg timestamp="20230801 11:00:22.430" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 11:00:22.430" endtime="20230801 11:00:22.431"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 11:00:22.433" level="INFO">${STATE["Tên đăng nhập"]} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 11:00:22.432" endtime="20230801 11:00:22.433"/>
</kw>
<status status="PASS" starttime="20230801 11:00:22.431" endtime="20230801 11:00:22.433"/>
</branch>
<status status="PASS" starttime="20230801 11:00:22.431" endtime="20230801 11:00:22.433"/>
</if>
<status status="PASS" starttime="20230801 11:00:18.192" endtime="20230801 11:00:22.435"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Tester@123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:22.443" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 11:00:22.442" endtime="20230801 11:00:22.443"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:22.445" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 11:00:22.444" endtime="20230801 11:00:22.445"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:22.446" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 11:00:22.445" endtime="20230801 11:00:22.446"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:22.449" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:22.449" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 11:00:22.448" endtime="20230801 11:00:22.449"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:22.451" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:00:22.450" endtime="20230801 11:00:22.451"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:22.452" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:22.452" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:00:22.451" endtime="20230801 11:00:22.452"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.453" endtime="20230801 11:00:22.454"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.454" endtime="20230801 11:00:22.455"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:22.453" endtime="20230801 11:00:22.456"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.458" endtime="20230801 11:00:22.459"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.460" endtime="20230801 11:00:22.460"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.466" endtime="20230801 11:00:22.466"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:22.456" endtime="20230801 11:00:22.467"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.468" endtime="20230801 11:00:22.468"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.477" endtime="20230801 11:00:22.478"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:22.467" endtime="20230801 11:00:22.478"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.479" endtime="20230801 11:00:22.479"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.482" endtime="20230801 11:00:22.482"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:22.478" endtime="20230801 11:00:22.482"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.483" endtime="20230801 11:00:22.483"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.485" endtime="20230801 11:00:22.486"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:22.483" endtime="20230801 11:00:22.486"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.487" endtime="20230801 11:00:22.488"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.489" endtime="20230801 11:00:22.489"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:22.487" endtime="20230801 11:00:22.490"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.491" endtime="20230801 11:00:22.491"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.492" endtime="20230801 11:00:22.492"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:22.490" endtime="20230801 11:00:22.493"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.493" endtime="20230801 11:00:22.495"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:22.493" endtime="20230801 11:00:22.495"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 11:00:22.497" endtime="20230801 11:00:22.498"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:22.495" endtime="20230801 11:00:22.498"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.499" endtime="20230801 11:00:22.500"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.500" endtime="20230801 11:00:22.501"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:22.498" endtime="20230801 11:00:22.501"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.503" endtime="20230801 11:00:22.503"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:22.501" endtime="20230801 11:00:22.503"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.505" endtime="20230801 11:00:22.505"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:22.504" endtime="20230801 11:00:22.505"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.506" endtime="20230801 11:00:22.507"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:22.505" endtime="20230801 11:00:22.507"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:22.509" endtime="20230801 11:00:22.509"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:22.508" endtime="20230801 11:00:22.509"/>
</branch>
<status status="PASS" starttime="20230801 11:00:22.452" endtime="20230801 11:00:22.510"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:22.511" level="INFO">Length is 10</msg>
<msg timestamp="20230801 11:00:22.511" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 11:00:22.510" endtime="20230801 11:00:22.511"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 11:00:22.548" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 11:00:22.547" endtime="20230801 11:00:22.548"/>
</kw>
<status status="PASS" starttime="20230801 11:00:22.544" endtime="20230801 11:00:22.548"/>
</branch>
<status status="PASS" starttime="20230801 11:00:22.543" endtime="20230801 11:00:22.549"/>
</if>
<msg timestamp="20230801 11:00:22.549" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 11:00:22.438" endtime="20230801 11:00:22.549"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 11:00:22.551" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 11:00:22.550" endtime="20230801 11:00:22.551"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:22.552" endtime="20230801 11:00:22.705"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 11:00:22.706" level="INFO">Fills the text 'Tester@123' in the given field.</msg>
<status status="PASS" starttime="20230801 11:00:22.705" endtime="20230801 11:00:22.774"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:22.776" level="INFO">Length is 10</msg>
<msg timestamp="20230801 11:00:22.776" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 11:00:22.774" endtime="20230801 11:00:22.776"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 11:00:22.778" level="INFO">${STATE["Mật khẩu"]} = Tester@123</msg>
<status status="PASS" starttime="20230801 11:00:22.777" endtime="20230801 11:00:22.778"/>
</kw>
<status status="PASS" starttime="20230801 11:00:22.776" endtime="20230801 11:00:22.779"/>
</branch>
<status status="PASS" starttime="20230801 11:00:22.776" endtime="20230801 11:00:22.779"/>
</if>
<status status="PASS" starttime="20230801 11:00:22.436" endtime="20230801 11:00:22.779"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:22.781" endtime="20230801 11:00:23.242"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:23.244" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 11:00:23.243" endtime="20230801 11:00:23.244"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:00:23.256" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 11:00:23.245" endtime="20230801 11:00:23.257"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:00:23.258" endtime="20230801 11:00:23.259"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 11:00:23.259" endtime="20230801 11:00:23.259"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:23.257" endtime="20230801 11:00:23.260"/>
</branch>
<status status="PASS" starttime="20230801 11:00:23.257" endtime="20230801 11:00:23.260"/>
</if>
<status status="PASS" starttime="20230801 11:00:23.243" endtime="20230801 11:00:23.260"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 11:00:23.261" endtime="20230801 11:00:23.339"/>
</kw>
<status status="PASS" starttime="20230801 11:00:22.780" endtime="20230801 11:00:23.339"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:23.342" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:00:23.341" endtime="20230801 11:00:23.342"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:23.344" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:23.344" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:00:23.343" endtime="20230801 11:00:23.344"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 11:00:23.345" endtime="20230801 11:00:23.345"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:23.344" endtime="20230801 11:00:23.346"/>
</branch>
<status status="PASS" starttime="20230801 11:00:23.344" endtime="20230801 11:00:23.346"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:26.415" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 11:00:23.351" endtime="20230801 11:00:26.416"/>
</kw>
<status status="PASS" starttime="20230801 11:00:23.347" endtime="20230801 11:00:26.417"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:26.419" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 11:00:26.418" endtime="20230801 11:00:26.419"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:00:27.214" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-21.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-21.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 11:00:27.214" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 11:00:27.215" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 11:00:26.423" endtime="20230801 11:00:27.218"/>
</kw>
<status status="FAIL" starttime="20230801 11:00:26.421" endtime="20230801 11:00:27.219"/>
</kw>
<msg timestamp="20230801 11:00:27.220" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 11:00:26.420" endtime="20230801 11:00:27.220"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:00:27.223" endtime="20230801 11:00:27.224"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:27.221" endtime="20230801 11:00:27.224"/>
</branch>
<status status="PASS" starttime="20230801 11:00:27.221" endtime="20230801 11:00:27.224"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:00:28.686" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 11:00:27.227" endtime="20230801 11:00:28.687"/>
</kw>
<status status="PASS" starttime="20230801 11:00:27.224" endtime="20230801 11:00:28.688"/>
</kw>
<status status="PASS" starttime="20230801 11:00:23.340" endtime="20230801 11:00:28.688"/>
</kw>
<status status="PASS" starttime="20230801 11:00:18.192" endtime="20230801 11:00:28.689"/>
</kw>
<kw name="When Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:28.691" endtime="20230801 11:00:28.962"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:28.965" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 11:00:28.964" endtime="20230801 11:00:28.965"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:00:28.991" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 11:00:28.965" endtime="20230801 11:00:28.991"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:00:28.993" endtime="20230801 11:00:28.993"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 11:00:28.994" endtime="20230801 11:00:28.995"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:28.992" endtime="20230801 11:00:28.995"/>
</branch>
<status status="PASS" starttime="20230801 11:00:28.992" endtime="20230801 11:00:28.995"/>
</if>
<status status="PASS" starttime="20230801 11:00:28.963" endtime="20230801 11:00:28.995"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 11:00:28.997" endtime="20230801 11:00:29.496"/>
</kw>
<status status="PASS" starttime="20230801 11:00:28.689" endtime="20230801 11:00:29.496"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:29.499" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 11:00:29.498" endtime="20230801 11:00:29.499"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:00:29.509" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 11:00:29.499" endtime="20230801 11:00:29.510"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 11:00:29.511" endtime="20230801 11:00:29.511"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:29.510" endtime="20230801 11:00:29.511"/>
</branch>
<status status="PASS" starttime="20230801 11:00:29.510" endtime="20230801 11:00:29.511"/>
</if>
<status status="PASS" starttime="20230801 11:00:29.497" endtime="20230801 11:00:29.512"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 11:00:29.614" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 11:00:29.513" endtime="20230801 11:00:29.614"/>
</kw>
<status status="PASS" starttime="20230801 11:00:18.191" endtime="20230801 11:00:29.615"/>
</kw>
<kw name="And Click select &quot;Loại phép&quot; with &quot;Nghỉ phép có lương&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:29.630" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 11:00:29.629" endtime="20230801 11:00:29.630"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:29.631" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 11:00:29.631" endtime="20230801 11:00:29.631"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:29.633" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 11:00:29.632" endtime="20230801 11:00:29.633"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:29.635" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:29.635" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 11:00:29.633" endtime="20230801 11:00:29.635"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:29.639" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:00:29.636" endtime="20230801 11:00:29.639"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:29.641" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:29.641" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:00:29.640" endtime="20230801 11:00:29.641"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.643" endtime="20230801 11:00:29.643"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.644" endtime="20230801 11:00:29.645"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:29.642" endtime="20230801 11:00:29.645"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.645" endtime="20230801 11:00:29.646"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.646" endtime="20230801 11:00:29.647"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.647" endtime="20230801 11:00:29.648"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:29.645" endtime="20230801 11:00:29.648"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.653" endtime="20230801 11:00:29.653"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.655" endtime="20230801 11:00:29.655"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:29.650" endtime="20230801 11:00:29.656"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.657" endtime="20230801 11:00:29.657"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.658" endtime="20230801 11:00:29.658"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:29.656" endtime="20230801 11:00:29.658"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.660" endtime="20230801 11:00:29.660"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.661" endtime="20230801 11:00:29.661"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:29.659" endtime="20230801 11:00:29.661"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.663" endtime="20230801 11:00:29.663"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.664" endtime="20230801 11:00:29.664"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:29.662" endtime="20230801 11:00:29.664"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.665" endtime="20230801 11:00:29.665"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.666" endtime="20230801 11:00:29.666"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:29.665" endtime="20230801 11:00:29.666"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.668" endtime="20230801 11:00:29.669"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:29.667" endtime="20230801 11:00:29.669"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 11:00:29.670" endtime="20230801 11:00:29.670"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:29.669" endtime="20230801 11:00:29.671"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.672" endtime="20230801 11:00:29.672"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.673" endtime="20230801 11:00:29.673"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:29.671" endtime="20230801 11:00:29.673"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.679" endtime="20230801 11:00:29.679"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:29.678" endtime="20230801 11:00:29.679"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.680" endtime="20230801 11:00:29.680"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:29.680" endtime="20230801 11:00:29.680"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.681" endtime="20230801 11:00:29.681"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:29.680" endtime="20230801 11:00:29.681"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:29.682" endtime="20230801 11:00:29.682"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:29.681" endtime="20230801 11:00:29.682"/>
</branch>
<status status="PASS" starttime="20230801 11:00:29.642" endtime="20230801 11:00:29.682"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:29.683" level="INFO">Length is 18</msg>
<msg timestamp="20230801 11:00:29.683" level="INFO">${cnt} = 18</msg>
<status status="PASS" starttime="20230801 11:00:29.682" endtime="20230801 11:00:29.683"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 11:00:29.687" level="INFO">${text} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 11:00:29.686" endtime="20230801 11:00:29.687"/>
</kw>
<status status="PASS" starttime="20230801 11:00:29.684" endtime="20230801 11:00:29.687"/>
</branch>
<status status="PASS" starttime="20230801 11:00:29.684" endtime="20230801 11:00:29.687"/>
</if>
<msg timestamp="20230801 11:00:29.687" level="INFO">${text} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 11:00:29.628" endtime="20230801 11:00:29.687"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 11:00:29.688" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 11:00:29.688" endtime="20230801 11:00:29.688"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:00:29.786" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 11:00:29.691" endtime="20230801 11:00:29.787"/>
</kw>
<status status="PASS" starttime="20230801 11:00:29.689" endtime="20230801 11:00:29.787"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:29.787" endtime="20230801 11:00:29.912"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 11:00:29.913" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại phép"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 11:00:29.913" endtime="20230801 11:00:29.913"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 11:00:29.915" level="INFO">Fills the text 'Nghỉ phép có lương' in the given field.</msg>
<status status="PASS" starttime="20230801 11:00:29.913" endtime="20230801 11:00:29.978"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:29.978" endtime="20230801 11:00:30.257"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:30.258" level="INFO">Length is 18</msg>
<msg timestamp="20230801 11:00:30.258" level="INFO">${cnt} = 18</msg>
<status status="PASS" starttime="20230801 11:00:30.257" endtime="20230801 11:00:30.258"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 11:00:30.261" level="INFO">${STATE["Loại phép"]} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 11:00:30.259" endtime="20230801 11:00:30.261"/>
</kw>
<status status="PASS" starttime="20230801 11:00:30.259" endtime="20230801 11:00:30.261"/>
</branch>
<status status="PASS" starttime="20230801 11:00:30.258" endtime="20230801 11:00:30.261"/>
</if>
<status status="PASS" starttime="20230801 11:00:29.627" endtime="20230801 11:00:30.262"/>
</kw>
<kw name="And Click select &quot;Thời gian&quot; with &quot;Sáng&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:30.301" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 11:00:30.300" endtime="20230801 11:00:30.301"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:30.302" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 11:00:30.302" endtime="20230801 11:00:30.302"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:30.304" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 11:00:30.303" endtime="20230801 11:00:30.304"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:30.306" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:30.306" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 11:00:30.304" endtime="20230801 11:00:30.306"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:30.307" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:00:30.307" endtime="20230801 11:00:30.308"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:30.309" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:30.309" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:00:30.308" endtime="20230801 11:00:30.309"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.311" endtime="20230801 11:00:30.311"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.312" endtime="20230801 11:00:30.313"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:30.310" endtime="20230801 11:00:30.313"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.314" endtime="20230801 11:00:30.314"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.315" endtime="20230801 11:00:30.316"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.316" endtime="20230801 11:00:30.317"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:30.314" endtime="20230801 11:00:30.317"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.319" endtime="20230801 11:00:30.319"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.320" endtime="20230801 11:00:30.321"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:30.317" endtime="20230801 11:00:30.322"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.324" endtime="20230801 11:00:30.325"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.326" endtime="20230801 11:00:30.327"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:30.323" endtime="20230801 11:00:30.327"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.328" endtime="20230801 11:00:30.328"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.329" endtime="20230801 11:00:30.329"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:30.327" endtime="20230801 11:00:30.330"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.331" endtime="20230801 11:00:30.331"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.377" endtime="20230801 11:00:30.378"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:30.330" endtime="20230801 11:00:30.380"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.381" endtime="20230801 11:00:30.381"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.382" endtime="20230801 11:00:30.382"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:30.380" endtime="20230801 11:00:30.382"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.383" endtime="20230801 11:00:30.383"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:30.383" endtime="20230801 11:00:30.383"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 11:00:30.388" endtime="20230801 11:00:30.388"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:30.387" endtime="20230801 11:00:30.388"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.389" endtime="20230801 11:00:30.389"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.390" endtime="20230801 11:00:30.390"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:30.388" endtime="20230801 11:00:30.390"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.391" endtime="20230801 11:00:30.391"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:30.391" endtime="20230801 11:00:30.391"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.393" endtime="20230801 11:00:30.393"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:30.392" endtime="20230801 11:00:30.393"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.395" endtime="20230801 11:00:30.395"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:30.393" endtime="20230801 11:00:30.396"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:30.397" endtime="20230801 11:00:30.397"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:30.396" endtime="20230801 11:00:30.397"/>
</branch>
<status status="PASS" starttime="20230801 11:00:30.309" endtime="20230801 11:00:30.397"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:30.398" level="INFO">Length is 4</msg>
<msg timestamp="20230801 11:00:30.399" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20230801 11:00:30.398" endtime="20230801 11:00:30.399"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 11:00:30.402" level="INFO">${text} = Sáng</msg>
<status status="PASS" starttime="20230801 11:00:30.400" endtime="20230801 11:00:30.402"/>
</kw>
<status status="PASS" starttime="20230801 11:00:30.399" endtime="20230801 11:00:30.425"/>
</branch>
<status status="PASS" starttime="20230801 11:00:30.399" endtime="20230801 11:00:30.426"/>
</if>
<msg timestamp="20230801 11:00:30.426" level="INFO">${text} = Sáng</msg>
<status status="PASS" starttime="20230801 11:00:30.299" endtime="20230801 11:00:30.427"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20230801 11:00:30.428" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20230801 11:00:30.427" endtime="20230801 11:00:30.428"/>
</kw>
<kw name="Wait Until Element Is Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:00:30.541" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state visible</msg>
<status status="PASS" starttime="20230801 11:00:30.431" endtime="20230801 11:00:30.541"/>
</kw>
<status status="PASS" starttime="20230801 11:00:30.428" endtime="20230801 11:00:30.542"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:30.543" endtime="20230801 11:00:30.767"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20230801 11:00:30.770" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thời gian"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20230801 11:00:30.767" endtime="20230801 11:00:30.770"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 11:00:30.773" level="INFO">Fills the text 'Sáng' in the given field.</msg>
<status status="PASS" starttime="20230801 11:00:30.772" endtime="20230801 11:00:30.879"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:30.880" endtime="20230801 11:00:31.167"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:31.168" level="INFO">Length is 4</msg>
<msg timestamp="20230801 11:00:31.169" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20230801 11:00:31.168" endtime="20230801 11:00:31.169"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 11:00:31.171" level="INFO">${STATE["Thời gian"]} = Sáng</msg>
<status status="PASS" starttime="20230801 11:00:31.170" endtime="20230801 11:00:31.171"/>
</kw>
<status status="PASS" starttime="20230801 11:00:31.169" endtime="20230801 11:00:31.171"/>
</branch>
<status status="PASS" starttime="20230801 11:00:31.169" endtime="20230801 11:00:31.171"/>
</if>
<status status="PASS" starttime="20230801 11:00:30.298" endtime="20230801 11:00:31.171"/>
</kw>
<kw name="And Enter leave date in &quot;Ngày bắt đầu&quot; with &quot;31-07-2023&quot;" library="common" sourcename="Enter leave date in &quot;${field}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>date</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:31.176" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 11:00:31.174" endtime="20230801 11:00:31.176"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:31.178" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 11:00:31.177" endtime="20230801 11:00:31.178"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:31.180" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 11:00:31.179" endtime="20230801 11:00:31.180"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:31.182" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:31.182" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 11:00:31.181" endtime="20230801 11:00:31.182"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:31.184" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:00:31.182" endtime="20230801 11:00:31.184"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:31.185" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:31.185" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:00:31.184" endtime="20230801 11:00:31.185"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.187" endtime="20230801 11:00:31.187"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.187" endtime="20230801 11:00:31.187"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:31.186" endtime="20230801 11:00:31.187"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.188" endtime="20230801 11:00:31.188"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.189" endtime="20230801 11:00:31.189"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.189" endtime="20230801 11:00:31.189"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:31.188" endtime="20230801 11:00:31.189"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.191" endtime="20230801 11:00:31.191"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.192" endtime="20230801 11:00:31.192"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:31.191" endtime="20230801 11:00:31.192"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.193" endtime="20230801 11:00:31.193"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.194" endtime="20230801 11:00:31.194"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:31.192" endtime="20230801 11:00:31.194"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.195" endtime="20230801 11:00:31.195"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.195" endtime="20230801 11:00:31.196"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:31.194" endtime="20230801 11:00:31.196"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.197" endtime="20230801 11:00:31.197"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.198" endtime="20230801 11:00:31.199"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:31.196" endtime="20230801 11:00:31.200"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.201" endtime="20230801 11:00:31.202"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.202" endtime="20230801 11:00:31.203"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:31.200" endtime="20230801 11:00:31.203"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.204" endtime="20230801 11:00:31.205"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:31.203" endtime="20230801 11:00:31.205"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 11:00:31.206" endtime="20230801 11:00:31.207"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:31.206" endtime="20230801 11:00:31.207"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.208" endtime="20230801 11:00:31.208"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.209" endtime="20230801 11:00:31.209"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:31.207" endtime="20230801 11:00:31.209"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.210" endtime="20230801 11:00:31.210"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:31.210" endtime="20230801 11:00:31.211"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.211" endtime="20230801 11:00:31.211"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:31.211" endtime="20230801 11:00:31.212"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.213" endtime="20230801 11:00:31.213"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:31.212" endtime="20230801 11:00:31.213"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:31.215" endtime="20230801 11:00:31.215"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:31.213" endtime="20230801 11:00:31.215"/>
</branch>
<status status="PASS" starttime="20230801 11:00:31.186" endtime="20230801 11:00:31.215"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:31.217" level="INFO">Length is 10</msg>
<msg timestamp="20230801 11:00:31.217" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 11:00:31.216" endtime="20230801 11:00:31.217"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 11:00:31.220" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 11:00:31.219" endtime="20230801 11:00:31.220"/>
</kw>
<status status="PASS" starttime="20230801 11:00:31.219" endtime="20230801 11:00:31.221"/>
</branch>
<status status="PASS" starttime="20230801 11:00:31.218" endtime="20230801 11:00:31.221"/>
</if>
<msg timestamp="20230801 11:00:31.222" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 11:00:31.173" endtime="20230801 11:00:31.222"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//input[@placeholder="${field}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:31.223" level="INFO">${element} = xpath=//input[@placeholder="Ngày bắt đầu"]</msg>
<status status="PASS" starttime="20230801 11:00:31.222" endtime="20230801 11:00:31.223"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:31.223" endtime="20230801 11:00:32.012"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:32.012" endtime="20230801 11:00:32.193"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 11:00:32.195" level="INFO">Fills the text '31-07-2023' in the given field.</msg>
<status status="PASS" starttime="20230801 11:00:32.193" endtime="20230801 11:00:32.545"/>
</kw>
<status status="PASS" starttime="20230801 11:00:31.172" endtime="20230801 11:00:32.545"/>
</kw>
<kw name="And Enter leave date in &quot;Ngày kết thúc&quot; with &quot;31-07-2023&quot;" library="common" sourcename="Enter leave date in &quot;${field}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>date</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:32.548" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 11:00:32.548" endtime="20230801 11:00:32.548"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:32.549" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 11:00:32.549" endtime="20230801 11:00:32.550"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:32.552" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 11:00:32.550" endtime="20230801 11:00:32.552"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:32.553" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:32.553" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 11:00:32.552" endtime="20230801 11:00:32.555"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:32.556" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:00:32.555" endtime="20230801 11:00:32.556"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:32.557" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:32.557" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:00:32.557" endtime="20230801 11:00:32.557"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.558" endtime="20230801 11:00:32.558"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.559" endtime="20230801 11:00:32.559"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:32.558" endtime="20230801 11:00:32.559"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.560" endtime="20230801 11:00:32.560"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.560" endtime="20230801 11:00:32.560"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.560" endtime="20230801 11:00:32.561"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:32.559" endtime="20230801 11:00:32.561"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.561" endtime="20230801 11:00:32.562"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.562" endtime="20230801 11:00:32.562"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:32.561" endtime="20230801 11:00:32.562"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.563" endtime="20230801 11:00:32.563"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.563" endtime="20230801 11:00:32.563"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:32.562" endtime="20230801 11:00:32.563"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.563" endtime="20230801 11:00:32.563"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.565" endtime="20230801 11:00:32.565"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:32.563" endtime="20230801 11:00:32.565"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.565" endtime="20230801 11:00:32.565"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.566" endtime="20230801 11:00:32.566"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:32.565" endtime="20230801 11:00:32.566"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.566" endtime="20230801 11:00:32.566"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.567" endtime="20230801 11:00:32.567"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:32.566" endtime="20230801 11:00:32.568"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.569" endtime="20230801 11:00:32.570"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:32.568" endtime="20230801 11:00:32.570"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 11:00:32.572" endtime="20230801 11:00:32.572"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:32.571" endtime="20230801 11:00:32.572"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.573" endtime="20230801 11:00:32.573"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.575" endtime="20230801 11:00:32.575"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:32.573" endtime="20230801 11:00:32.576"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.577" endtime="20230801 11:00:32.577"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:32.576" endtime="20230801 11:00:32.577"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.580" endtime="20230801 11:00:32.580"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:32.578" endtime="20230801 11:00:32.581"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.582" endtime="20230801 11:00:32.583"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:32.581" endtime="20230801 11:00:32.583"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:32.584" endtime="20230801 11:00:32.586"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:32.583" endtime="20230801 11:00:32.586"/>
</branch>
<status status="PASS" starttime="20230801 11:00:32.557" endtime="20230801 11:00:32.587"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:32.592" level="INFO">Length is 10</msg>
<msg timestamp="20230801 11:00:32.593" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 11:00:32.588" endtime="20230801 11:00:32.593"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 11:00:32.597" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 11:00:32.596" endtime="20230801 11:00:32.597"/>
</kw>
<status status="PASS" starttime="20230801 11:00:32.595" endtime="20230801 11:00:32.597"/>
</branch>
<status status="PASS" starttime="20230801 11:00:32.594" endtime="20230801 11:00:32.598"/>
</if>
<msg timestamp="20230801 11:00:32.599" level="INFO">${text} = 31-07-2023</msg>
<status status="PASS" starttime="20230801 11:00:32.547" endtime="20230801 11:00:32.599"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//input[@placeholder="${field}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:32.603" level="INFO">${element} = xpath=//input[@placeholder="Ngày kết thúc"]</msg>
<status status="PASS" starttime="20230801 11:00:32.600" endtime="20230801 11:00:32.603"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:32.603" endtime="20230801 11:00:33.075"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:33.076" endtime="20230801 11:00:33.147"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 11:00:33.148" level="INFO">Fills the text '31-07-2023' in the given field.</msg>
<status status="PASS" starttime="20230801 11:00:33.147" endtime="20230801 11:00:33.337"/>
</kw>
<status status="PASS" starttime="20230801 11:00:32.546" endtime="20230801 11:00:33.337"/>
</kw>
<kw name="And Enter &quot;text&quot; in textarea &quot;Lý do&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:33.342" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 11:00:33.342" endtime="20230801 11:00:33.343"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:33.345" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 11:00:33.343" endtime="20230801 11:00:33.345"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:33.346" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 11:00:33.345" endtime="20230801 11:00:33.346"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:33.348" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:33.348" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 11:00:33.347" endtime="20230801 11:00:33.348"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:33.349" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20230801 11:00:33.348" endtime="20230801 11:00:33.349"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:33.350" level="INFO">Length is 1</msg>
<msg timestamp="20230801 11:00:33.351" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20230801 11:00:33.350" endtime="20230801 11:00:33.351"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.353" endtime="20230801 11:00:33.353"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.354" endtime="20230801 11:00:33.354"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:33.351" endtime="20230801 11:00:33.354"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.356" endtime="20230801 11:00:33.357"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.358" endtime="20230801 11:00:33.358"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.359" endtime="20230801 11:00:33.359"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:33.355" endtime="20230801 11:00:33.359"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.361" endtime="20230801 11:00:33.361"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.362" endtime="20230801 11:00:33.362"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:33.360" endtime="20230801 11:00:33.363"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.364" endtime="20230801 11:00:33.364"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.364" endtime="20230801 11:00:33.364"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:33.363" endtime="20230801 11:00:33.364"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.366" endtime="20230801 11:00:33.366"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.366" endtime="20230801 11:00:33.367"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:33.365" endtime="20230801 11:00:33.367"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.369" endtime="20230801 11:00:33.369"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.378" endtime="20230801 11:00:33.378"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:33.368" endtime="20230801 11:00:33.379"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.382" endtime="20230801 11:00:33.382"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.383" endtime="20230801 11:00:33.384"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:33.380" endtime="20230801 11:00:33.384"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.386" endtime="20230801 11:00:33.386"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:33.384" endtime="20230801 11:00:33.387"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 11:00:33.389" endtime="20230801 11:00:33.389"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:33.387" endtime="20230801 11:00:33.389"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.392" endtime="20230801 11:00:33.394"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.394" endtime="20230801 11:00:33.394"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:33.391" endtime="20230801 11:00:33.394"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.395" endtime="20230801 11:00:33.396"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:33.395" endtime="20230801 11:00:33.396"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.397" endtime="20230801 11:00:33.397"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:33.396" endtime="20230801 11:00:33.398"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:33.399" endtime="20230801 11:00:33.399"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:33.398" endtime="20230801 11:00:33.399"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20230801 11:00:33.403" level="INFO">${new_text} = Laudantium ipsam cum qui tempore.</msg>
<status status="PASS" starttime="20230801 11:00:33.402" endtime="20230801 11:00:33.403"/>
</kw>
<status status="PASS" starttime="20230801 11:00:33.400" endtime="20230801 11:00:33.403"/>
</branch>
<status status="PASS" starttime="20230801 11:00:33.351" endtime="20230801 11:00:33.403"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:33.408" level="INFO">Length is 8</msg>
<msg timestamp="20230801 11:00:33.408" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20230801 11:00:33.407" endtime="20230801 11:00:33.408"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 11:00:33.413" level="INFO">${text} = Laudantium ipsam cum qui tempore.</msg>
<status status="PASS" starttime="20230801 11:00:33.410" endtime="20230801 11:00:33.413"/>
</kw>
<status status="PASS" starttime="20230801 11:00:33.409" endtime="20230801 11:00:33.413"/>
</branch>
<status status="PASS" starttime="20230801 11:00:33.409" endtime="20230801 11:00:33.414"/>
</if>
<msg timestamp="20230801 11:00:33.414" level="INFO">${text} = Laudantium ipsam cum qui tempore.</msg>
<status status="PASS" starttime="20230801 11:00:33.340" endtime="20230801 11:00:33.414"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20230801 11:00:33.418" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Lý do"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20230801 11:00:33.415" endtime="20230801 11:00:33.418"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:33.432" endtime="20230801 11:00:33.815"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 11:00:33.816" level="INFO">Fills the text 'Laudantium ipsam cum qui tempore.' in the given field.</msg>
<status status="PASS" starttime="20230801 11:00:33.815" endtime="20230801 11:00:34.006"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:34.008" level="INFO">Length is 33</msg>
<msg timestamp="20230801 11:00:34.008" level="INFO">${cnt} = 33</msg>
<status status="PASS" starttime="20230801 11:00:34.007" endtime="20230801 11:00:34.009"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 11:00:34.012" level="INFO">${STATE["Lý do"]} = Laudantium ipsam cum qui tempore.</msg>
<status status="PASS" starttime="20230801 11:00:34.010" endtime="20230801 11:00:34.012"/>
</kw>
<status status="PASS" starttime="20230801 11:00:34.009" endtime="20230801 11:00:34.012"/>
</branch>
<status status="PASS" starttime="20230801 11:00:34.009" endtime="20230801 11:00:34.013"/>
</if>
<status status="PASS" starttime="20230801 11:00:33.339" endtime="20230801 11:00:34.013"/>
</kw>
<kw name="And Click &quot;Lưu và tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:34.034" endtime="20230801 11:00:34.696"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:34.698" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 11:00:34.697" endtime="20230801 11:00:34.698"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:00:34.710" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 11:00:34.698" endtime="20230801 11:00:34.710"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:00:34.711" endtime="20230801 11:00:34.711"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 11:00:34.711" endtime="20230801 11:00:34.711"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:34.710" endtime="20230801 11:00:34.711"/>
</branch>
<status status="PASS" starttime="20230801 11:00:34.710" endtime="20230801 11:00:34.711"/>
</if>
<status status="PASS" starttime="20230801 11:00:34.696" endtime="20230801 11:00:34.712"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 11:00:34.712" endtime="20230801 11:00:34.762"/>
</kw>
<status status="PASS" starttime="20230801 11:00:34.031" endtime="20230801 11:00:34.762"/>
</kw>
<kw name="Then User look message &quot;Ngày nghỉ đã được đăng ký&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:34.766" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:00:34.765" endtime="20230801 11:00:34.766"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:34.767" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:34.767" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:00:34.767" endtime="20230801 11:00:34.767"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 11:00:34.769" endtime="20230801 11:00:34.770"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:34.768" endtime="20230801 11:00:34.770"/>
</branch>
<status status="PASS" starttime="20230801 11:00:34.768" endtime="20230801 11:00:34.770"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:35.678" level="INFO">Text: 'Ngày nghỉ đã được đăng ký'</msg>
<status status="PASS" starttime="20230801 11:00:34.775" endtime="20230801 11:00:35.678"/>
</kw>
<status status="PASS" starttime="20230801 11:00:34.771" endtime="20230801 11:00:35.678"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:35.679" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 11:00:35.679" endtime="20230801 11:00:35.679"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:00:36.086" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-22.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-22.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 11:00:36.087" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 11:00:36.088" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 11:00:35.681" endtime="20230801 11:00:36.093"/>
</kw>
<status status="FAIL" starttime="20230801 11:00:35.680" endtime="20230801 11:00:36.094"/>
</kw>
<msg timestamp="20230801 11:00:36.094" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 11:00:35.679" endtime="20230801 11:00:36.094"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:00:36.096" endtime="20230801 11:00:36.096"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:36.095" endtime="20230801 11:00:36.097"/>
</branch>
<status status="PASS" starttime="20230801 11:00:36.094" endtime="20230801 11:00:36.097"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:00:41.756" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 11:00:36.101" endtime="20230801 11:00:41.757"/>
</kw>
<status status="PASS" starttime="20230801 11:00:36.098" endtime="20230801 11:00:41.757"/>
</kw>
<status status="PASS" starttime="20230801 11:00:34.763" endtime="20230801 11:00:41.757"/>
</kw>
<kw name="When Click &quot;Huỷ bỏ&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:41.759" endtime="20230801 11:00:43.073"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:43.075" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 11:00:43.074" endtime="20230801 11:00:43.075"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:00:43.235" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 11:00:43.076" endtime="20230801 11:00:43.236"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:00:43.238" endtime="20230801 11:00:43.238"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 11:00:43.239" endtime="20230801 11:00:43.239"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:43.237" endtime="20230801 11:00:43.239"/>
</branch>
<status status="PASS" starttime="20230801 11:00:43.236" endtime="20230801 11:00:43.240"/>
</if>
<status status="PASS" starttime="20230801 11:00:43.073" endtime="20230801 11:00:43.240"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 11:00:43.241" endtime="20230801 11:00:43.301"/>
</kw>
<status status="PASS" starttime="20230801 11:00:41.758" endtime="20230801 11:00:43.302"/>
</kw>
<kw name="And Click on the &quot;Xóa&quot; button in the &quot;Họ và tên&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:43.304" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 11:00:43.304" endtime="20230801 11:00:43.304"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:00:43.321" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 11:00:43.305" endtime="20230801 11:00:43.321"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:00:44.228" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 11:00:43.327" endtime="20230801 11:00:44.228"/>
</kw>
<status status="PASS" starttime="20230801 11:00:43.323" endtime="20230801 11:00:44.228"/>
</kw>
<status status="PASS" starttime="20230801 11:00:43.322" endtime="20230801 11:00:44.228"/>
</branch>
<status status="PASS" starttime="20230801 11:00:43.322" endtime="20230801 11:00:44.228"/>
</if>
<status status="PASS" starttime="20230801 11:00:43.304" endtime="20230801 11:00:44.229"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:44.246" level="INFO">Found 3 Locators successfully.</msg>
<msg timestamp="20230801 11:00:44.246" level="INFO">${element} = ['element=9fe6dad9-5732-4e38-9d33-8d25461e97ec', 'element=8f274421-3517-45ec-b266-4996e94398e0', 'element=0b17ee46-2fc5-4d5a-a499-72506b1b9e66']</msg>
<status status="PASS" starttime="20230801 11:00:44.229" endtime="20230801 11:00:44.246"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:44.247" endtime="20230801 11:00:44.498"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:44.500" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 11:00:44.499" endtime="20230801 11:00:44.500"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:00:44.516" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 11:00:44.501" endtime="20230801 11:00:44.516"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:44.518" endtime="20230801 11:00:44.972"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230801 11:00:45.073" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230801 11:00:44.972" endtime="20230801 11:00:45.073"/>
</kw>
<status status="PASS" starttime="20230801 11:00:44.517" endtime="20230801 11:00:45.073"/>
</branch>
<status status="PASS" starttime="20230801 11:00:44.516" endtime="20230801 11:00:45.073"/>
</if>
<status status="PASS" starttime="20230801 11:00:44.498" endtime="20230801 11:00:45.073"/>
</kw>
<status status="PASS" starttime="20230801 11:00:43.303" endtime="20230801 11:00:45.073"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 11:00:45.367" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 11:00:45.076" endtime="20230801 11:00:45.367"/>
</kw>
<status status="PASS" starttime="20230801 11:00:45.074" endtime="20230801 11:00:45.367"/>
</kw>
<status status="PASS" starttime="20230801 11:00:16.153" endtime="20230801 11:00:45.368"/>
</test>
<test id="s1-t15" name="STA-15 Verify that staff can view the list of created leave date successfully" line="172">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 11:00:45.383" endtime="20230801 11:00:45.383"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 11:00:45.384" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\510af375-19bb-42b8-81ca-c121a3045f9a"}</msg>
<msg timestamp="20230801 11:00:47.215" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\510af375-19bb-42b8-81ca-c121a3045f9a"}</msg>
<status status="PASS" starttime="20230801 11:00:45.383" endtime="20230801 11:00:47.215"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 11:00:48.309" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 11:00:48.309" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 11:00:47.215" endtime="20230801 11:00:48.310"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:00:48.311" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 11:00:48.310" endtime="20230801 11:00:48.311"/>
</kw>
<status status="PASS" starttime="20230801 11:00:45.382" endtime="20230801 11:00:48.312"/>
</kw>
<kw name="Login to Staff" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;staff@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:48.318" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 11:00:48.318" endtime="20230801 11:00:48.318"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:48.320" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 11:00:48.319" endtime="20230801 11:00:48.320"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:48.321" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 11:00:48.320" endtime="20230801 11:00:48.321"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:48.323" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:48.323" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 11:00:48.322" endtime="20230801 11:00:48.323"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:48.325" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:00:48.324" endtime="20230801 11:00:48.325"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:48.327" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:48.327" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:00:48.326" endtime="20230801 11:00:48.327"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.328" endtime="20230801 11:00:48.329"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.330" endtime="20230801 11:00:48.330"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:48.327" endtime="20230801 11:00:48.330"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.331" endtime="20230801 11:00:48.332"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.332" endtime="20230801 11:00:48.333"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.333" endtime="20230801 11:00:48.334"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:48.330" endtime="20230801 11:00:48.334"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.335" endtime="20230801 11:00:48.335"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.336" endtime="20230801 11:00:48.336"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:48.334" endtime="20230801 11:00:48.337"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.338" endtime="20230801 11:00:48.338"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.339" endtime="20230801 11:00:48.340"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:48.337" endtime="20230801 11:00:48.341"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.342" endtime="20230801 11:00:48.343"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.344" endtime="20230801 11:00:48.344"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:48.341" endtime="20230801 11:00:48.344"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.346" endtime="20230801 11:00:48.346"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.347" endtime="20230801 11:00:48.347"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:48.345" endtime="20230801 11:00:48.348"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.349" endtime="20230801 11:00:48.349"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.350" endtime="20230801 11:00:48.350"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:48.348" endtime="20230801 11:00:48.351"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.352" endtime="20230801 11:00:48.352"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:48.351" endtime="20230801 11:00:48.353"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 11:00:48.354" endtime="20230801 11:00:48.354"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:48.353" endtime="20230801 11:00:48.354"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.355" endtime="20230801 11:00:48.355"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.356" endtime="20230801 11:00:48.357"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:48.354" endtime="20230801 11:00:48.357"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.359" endtime="20230801 11:00:48.359"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:48.358" endtime="20230801 11:00:48.359"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.360" endtime="20230801 11:00:48.360"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:48.359" endtime="20230801 11:00:48.360"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.361" endtime="20230801 11:00:48.362"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:48.361" endtime="20230801 11:00:48.362"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:48.363" endtime="20230801 11:00:48.363"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:48.362" endtime="20230801 11:00:48.363"/>
</branch>
<status status="PASS" starttime="20230801 11:00:48.327" endtime="20230801 11:00:48.363"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:48.365" level="INFO">Length is 15</msg>
<msg timestamp="20230801 11:00:48.365" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 11:00:48.364" endtime="20230801 11:00:48.365"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 11:00:48.368" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 11:00:48.367" endtime="20230801 11:00:48.368"/>
</kw>
<status status="PASS" starttime="20230801 11:00:48.366" endtime="20230801 11:00:48.369"/>
</branch>
<status status="PASS" starttime="20230801 11:00:48.366" endtime="20230801 11:00:48.369"/>
</if>
<msg timestamp="20230801 11:00:48.370" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 11:00:48.316" endtime="20230801 11:00:48.370"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 11:00:48.371" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 11:00:48.370" endtime="20230801 11:00:48.372"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:48.372" endtime="20230801 11:00:50.491"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 11:00:50.493" level="INFO">Fills the text 'staff@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230801 11:00:50.491" endtime="20230801 11:00:50.554"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:50.555" level="INFO">Length is 15</msg>
<msg timestamp="20230801 11:00:50.555" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 11:00:50.555" endtime="20230801 11:00:50.556"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 11:00:50.558" level="INFO">${STATE["Tên đăng nhập"]} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 11:00:50.557" endtime="20230801 11:00:50.558"/>
</kw>
<status status="PASS" starttime="20230801 11:00:50.556" endtime="20230801 11:00:50.558"/>
</branch>
<status status="PASS" starttime="20230801 11:00:50.556" endtime="20230801 11:00:50.558"/>
</if>
<status status="PASS" starttime="20230801 11:00:48.315" endtime="20230801 11:00:50.559"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Tester@123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:50.561" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 11:00:50.560" endtime="20230801 11:00:50.561"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:50.561" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 11:00:50.561" endtime="20230801 11:00:50.561"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:50.562" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 11:00:50.562" endtime="20230801 11:00:50.562"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:50.563" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:50.563" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 11:00:50.562" endtime="20230801 11:00:50.563"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:50.564" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:00:50.563" endtime="20230801 11:00:50.564"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:50.564" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:50.564" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:00:50.564" endtime="20230801 11:00:50.564"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.566" endtime="20230801 11:00:50.566"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.566" endtime="20230801 11:00:50.566"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:50.565" endtime="20230801 11:00:50.567"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.567" endtime="20230801 11:00:50.568"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.568" endtime="20230801 11:00:50.568"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.568" endtime="20230801 11:00:50.569"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:50.567" endtime="20230801 11:00:50.569"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.569" endtime="20230801 11:00:50.570"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.570" endtime="20230801 11:00:50.570"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:50.569" endtime="20230801 11:00:50.570"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.571" endtime="20230801 11:00:50.571"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.571" endtime="20230801 11:00:50.572"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:50.570" endtime="20230801 11:00:50.572"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.572" endtime="20230801 11:00:50.572"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.573" endtime="20230801 11:00:50.573"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:50.572" endtime="20230801 11:00:50.573"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.574" endtime="20230801 11:00:50.575"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.577" endtime="20230801 11:00:50.577"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:50.573" endtime="20230801 11:00:50.577"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.578" endtime="20230801 11:00:50.578"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.578" endtime="20230801 11:00:50.578"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:50.577" endtime="20230801 11:00:50.578"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.579" endtime="20230801 11:00:50.579"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:50.579" endtime="20230801 11:00:50.580"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 11:00:50.580" endtime="20230801 11:00:50.580"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:50.580" endtime="20230801 11:00:50.581"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.581" endtime="20230801 11:00:50.581"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.582" endtime="20230801 11:00:50.582"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:50.581" endtime="20230801 11:00:50.582"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.583" endtime="20230801 11:00:50.584"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:50.582" endtime="20230801 11:00:50.585"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.587" endtime="20230801 11:00:50.587"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:50.586" endtime="20230801 11:00:50.587"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.588" endtime="20230801 11:00:50.589"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:50.588" endtime="20230801 11:00:50.589"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.590" endtime="20230801 11:00:50.590"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:50.589" endtime="20230801 11:00:50.590"/>
</branch>
<status status="PASS" starttime="20230801 11:00:50.564" endtime="20230801 11:00:50.591"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:50.592" level="INFO">Length is 10</msg>
<msg timestamp="20230801 11:00:50.592" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 11:00:50.591" endtime="20230801 11:00:50.592"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 11:00:50.594" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 11:00:50.593" endtime="20230801 11:00:50.594"/>
</kw>
<status status="PASS" starttime="20230801 11:00:50.593" endtime="20230801 11:00:50.594"/>
</branch>
<status status="PASS" starttime="20230801 11:00:50.592" endtime="20230801 11:00:50.595"/>
</if>
<msg timestamp="20230801 11:00:50.596" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 11:00:50.560" endtime="20230801 11:00:50.596"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 11:00:50.597" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 11:00:50.596" endtime="20230801 11:00:50.597"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:50.598" endtime="20230801 11:00:50.660"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 11:00:50.661" level="INFO">Fills the text 'Tester@123' in the given field.</msg>
<status status="PASS" starttime="20230801 11:00:50.660" endtime="20230801 11:00:50.698"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:50.699" level="INFO">Length is 10</msg>
<msg timestamp="20230801 11:00:50.699" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 11:00:50.698" endtime="20230801 11:00:50.699"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 11:00:50.701" level="INFO">${STATE["Mật khẩu"]} = Tester@123</msg>
<status status="PASS" starttime="20230801 11:00:50.701" endtime="20230801 11:00:50.702"/>
</kw>
<status status="PASS" starttime="20230801 11:00:50.700" endtime="20230801 11:00:50.702"/>
</branch>
<status status="PASS" starttime="20230801 11:00:50.699" endtime="20230801 11:00:50.702"/>
</if>
<status status="PASS" starttime="20230801 11:00:50.559" endtime="20230801 11:00:50.702"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:00:50.703" endtime="20230801 11:00:50.971"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:50.973" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 11:00:50.972" endtime="20230801 11:00:50.973"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:00:50.997" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 11:00:50.973" endtime="20230801 11:00:50.997"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.998" endtime="20230801 11:00:50.998"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 11:00:50.999" endtime="20230801 11:00:50.999"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:50.997" endtime="20230801 11:00:50.999"/>
</branch>
<status status="PASS" starttime="20230801 11:00:50.997" endtime="20230801 11:00:50.999"/>
</if>
<status status="PASS" starttime="20230801 11:00:50.971" endtime="20230801 11:00:51.000"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 11:00:51.001" endtime="20230801 11:00:51.063"/>
</kw>
<status status="PASS" starttime="20230801 11:00:50.702" endtime="20230801 11:00:51.063"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:00:51.067" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:00:51.066" endtime="20230801 11:00:51.067"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:00:51.068" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:00:51.068" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:00:51.068" endtime="20230801 11:00:51.068"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 11:00:51.069" endtime="20230801 11:00:51.070"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:51.069" endtime="20230801 11:00:51.070"/>
</branch>
<status status="PASS" starttime="20230801 11:00:51.068" endtime="20230801 11:00:51.070"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:52.261" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 11:00:51.074" endtime="20230801 11:00:52.261"/>
</kw>
<status status="PASS" starttime="20230801 11:00:51.070" endtime="20230801 11:00:52.262"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:52.262" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 11:00:52.262" endtime="20230801 11:00:52.262"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:00:52.686" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-23.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-23.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 11:00:52.686" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 11:00:52.686" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 11:00:52.264" endtime="20230801 11:00:52.690"/>
</kw>
<status status="FAIL" starttime="20230801 11:00:52.263" endtime="20230801 11:00:52.691"/>
</kw>
<msg timestamp="20230801 11:00:52.691" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 11:00:52.263" endtime="20230801 11:00:52.691"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:00:52.693" endtime="20230801 11:00:52.693"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:52.692" endtime="20230801 11:00:52.693"/>
</branch>
<status status="PASS" starttime="20230801 11:00:52.692" endtime="20230801 11:00:52.693"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:00:55.320" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 11:00:52.696" endtime="20230801 11:00:55.320"/>
</kw>
<status status="PASS" starttime="20230801 11:00:52.694" endtime="20230801 11:00:55.320"/>
</kw>
<status status="PASS" starttime="20230801 11:00:51.065" endtime="20230801 11:00:55.321"/>
</kw>
<status status="PASS" starttime="20230801 11:00:48.313" endtime="20230801 11:00:55.321"/>
</kw>
<kw name="Then Show list of &quot;created&quot; leave date" library="common" sourcename="Show list of &quot;${name}&quot; leave date">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:55.323" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 11:00:55.323" endtime="20230801 11:00:55.323"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:00:55.331" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 11:00:55.324" endtime="20230801 11:00:55.332"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230801 11:00:55.332" endtime="20230801 11:00:55.333"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:55.332" endtime="20230801 11:00:55.333"/>
</branch>
<status status="PASS" starttime="20230801 11:00:55.332" endtime="20230801 11:00:55.333"/>
</if>
<status status="PASS" starttime="20230801 11:00:55.322" endtime="20230801 11:00:55.333"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//*[contains(@class, "ant-table-row")]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.355" level="INFO">Found 6 Locators successfully.</msg>
<msg timestamp="20230801 11:00:55.356" level="INFO">${elements} = ['element=ce570f26-0594-47ec-9910-43bd4cc0aa17', 'element=296f279e-66ea-4e68-914f-765ed9f70fec', 'element=b06937d2-2240-4252-9283-ed4c928864be', 'element=6d9b40f7-be54-4371-bb48-1ce62c252384', 'elemen...</msg>
<status status="PASS" starttime="20230801 11:00:55.333" endtime="20230801 11:00:55.356"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_count}</var>
<arg>2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:55.357" level="INFO">${user_count} = 2</msg>
<status status="PASS" starttime="20230801 11:00:55.356" endtime="20230801 11:00:55.357"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${stt}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:55.358" level="INFO">${stt} = 1</msg>
<status status="PASS" starttime="20230801 11:00:55.358" endtime="20230801 11:00:55.358"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{elements}</value>
<iter>
<var name="${item}">element=ce570f26-0594-47ec-9910-43bd4cc0aa17</var>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>//tbody/tr[${user_count}]/td[2]/div[1]/span[1]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.386" level="INFO">Text: 'Hoàng Diệu'</msg>
<msg timestamp="20230801 11:00:55.386" level="INFO">${username} = Hoàng Diệu</msg>
<status status="PASS" starttime="20230801 11:00:55.360" endtime="20230801 11:00:55.387"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_manager}</var>
<arg>//tbody/tr[${user_count}]/td[3]/div[1]/span[1]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.400" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:55.401" level="INFO">${element_manager} = ['element=50ad9994-0262-4a33-8277-222b47ad77bb']</msg>
<status status="PASS" starttime="20230801 11:00:55.387" endtime="20230801 11:00:55.401"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${manager}</var>
<arg>${element_manager}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.423" level="INFO">Text: 'Illo recusandae accusantium perspiciatis fugit.'</msg>
<msg timestamp="20230801 11:00:55.424" level="INFO">${manager} = Illo recusandae accusantium perspiciatis fugit.</msg>
<status status="PASS" starttime="20230801 11:00:55.401" endtime="20230801 11:00:55.424"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_type}</var>
<arg>//tbody/tr[${user_count}]/td[4]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.458" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:55.458" level="INFO">${element_type} = ['element=79fa5617-e9a0-44d0-aab9-bc2dfcf28d64']</msg>
<status status="PASS" starttime="20230801 11:00:55.424" endtime="20230801 11:00:55.458"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${type}</var>
<arg>${element_type}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.504" level="INFO">Text: 'Làm remote'</msg>
<msg timestamp="20230801 11:00:55.504" level="INFO">${type} = Làm remote</msg>
<status status="PASS" starttime="20230801 11:00:55.459" endtime="20230801 11:00:55.504"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_time}</var>
<arg>//tbody/tr[${user_count}]/td[5]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.513" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:55.513" level="INFO">${element_time} = ['element=e745fc0d-e330-425c-9d3d-0656161d6189']</msg>
<status status="PASS" starttime="20230801 11:00:55.505" endtime="20230801 11:00:55.513"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${time}</var>
<arg>${element_time}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.540" level="INFO">Text: 'Cả ngày'</msg>
<msg timestamp="20230801 11:00:55.540" level="INFO">${time} = Cả ngày</msg>
<status status="PASS" starttime="20230801 11:00:55.515" endtime="20230801 11:00:55.540"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_leave_date}</var>
<arg>//tbody/tr[${user_count}]/td[6]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.555" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:55.555" level="INFO">${element_leave_date} = ['element=f05f6fe8-6a86-4ca5-abf4-d2aec87d7afc']</msg>
<status status="PASS" starttime="20230801 11:00:55.541" endtime="20230801 11:00:55.555"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${leave_date}</var>
<arg>${element_leave_date}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.577" level="INFO">Text: '13-07-2023 =&gt; 14-07-2023'</msg>
<msg timestamp="20230801 11:00:55.577" level="INFO">${leave_date} = 13-07-2023 =&gt; 14-07-2023</msg>
<status status="PASS" starttime="20230801 11:00:55.556" endtime="20230801 11:00:55.577"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_date}</var>
<arg>//tbody/tr[${user_count}]/td[8]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.598" level="INFO">Text: ''</msg>
<msg timestamp="20230801 11:00:55.599" level="INFO">${approvated_date} = </msg>
<status status="PASS" starttime="20230801 11:00:55.578" endtime="20230801 11:00:55.599"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_by}</var>
<arg>//tbody/tr[${user_count}]/td[9]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.619" level="INFO">Text: ''</msg>
<msg timestamp="20230801 11:00:55.619" level="INFO">${approvated_by} = </msg>
<status status="PASS" starttime="20230801 11:00:55.599" endtime="20230801 11:00:55.619"/>
</kw>
<if>
<branch type="IF" condition="'${approvated_date}' == ''">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:55.620" level="INFO">${status} = Đang chờ phê duyệt</msg>
<status status="PASS" starttime="20230801 11:00:55.620" endtime="20230801 11:00:55.621"/>
</kw>
<status status="PASS" starttime="20230801 11:00:55.620" endtime="20230801 11:00:55.621"/>
</branch>
<status status="PASS" starttime="20230801 11:00:55.620" endtime="20230801 11:00:55.621"/>
</if>
<if>
<branch type="IF" condition="'${name}'=='approved'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đã phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:55.621" endtime="20230801 11:00:55.622"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:55.621" endtime="20230801 11:00:55.622"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='rejected'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Từ chối phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:55.622" endtime="20230801 11:00:55.622"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:55.622" endtime="20230801 11:00:55.622"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='pending'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:55.623" endtime="20230801 11:00:55.623"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:55.623" endtime="20230801 11:00:55.623"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='created'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:55.625" level="INFO">${status} = </msg>
<status status="PASS" starttime="20230801 11:00:55.624" endtime="20230801 11:00:55.625"/>
</kw>
<status status="PASS" starttime="20230801 11:00:55.623" endtime="20230801 11:00:55.625"/>
</branch>
<status status="PASS" starttime="20230801 11:00:55.621" endtime="20230801 11:00:55.626"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${stt}. Họ và tên: ${username} | Quản lý: ${manager} | Loại phép: ${type} | Thời gian: ${time} | Ngày nghỉ: ${leave_date} | Trạng thái: ${status} | Ngày phê duyệt: ${approvated_date} | Người phê duyệt: ${approvated_by}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:00:55.626" endtime="20230801 11:00:55.627"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>================================================================================================================================================================================================================================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:00:55.628" endtime="20230801 11:00:55.630"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${user_count}</var>
<arg>${user_count} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:00:55.631" level="INFO">${user_count} = 3</msg>
<status status="PASS" starttime="20230801 11:00:55.630" endtime="20230801 11:00:55.631"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${stt}</var>
<arg>${stt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:00:55.633" level="INFO">${stt} = 2</msg>
<status status="PASS" starttime="20230801 11:00:55.632" endtime="20230801 11:00:55.633"/>
</kw>
<status status="PASS" starttime="20230801 11:00:55.359" endtime="20230801 11:00:55.634"/>
</iter>
<iter>
<var name="${item}">element=296f279e-66ea-4e68-914f-765ed9f70fec</var>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>//tbody/tr[${user_count}]/td[2]/div[1]/span[1]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.782" level="INFO">Text: 'Hoàng Diệu'</msg>
<msg timestamp="20230801 11:00:55.782" level="INFO">${username} = Hoàng Diệu</msg>
<status status="PASS" starttime="20230801 11:00:55.634" endtime="20230801 11:00:55.782"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_manager}</var>
<arg>//tbody/tr[${user_count}]/td[3]/div[1]/span[1]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.797" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:55.798" level="INFO">${element_manager} = ['element=6c16f5ae-bb80-4496-a9d6-ada61235cd5e']</msg>
<status status="PASS" starttime="20230801 11:00:55.783" endtime="20230801 11:00:55.798"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${manager}</var>
<arg>${element_manager}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.837" level="INFO">Text: 'Illo recusandae accusantium perspiciatis fugit.'</msg>
<msg timestamp="20230801 11:00:55.837" level="INFO">${manager} = Illo recusandae accusantium perspiciatis fugit.</msg>
<status status="PASS" starttime="20230801 11:00:55.798" endtime="20230801 11:00:55.837"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_type}</var>
<arg>//tbody/tr[${user_count}]/td[4]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.855" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:55.855" level="INFO">${element_type} = ['element=635f9436-10a0-4fe4-9442-6fafe3c4c709']</msg>
<status status="PASS" starttime="20230801 11:00:55.838" endtime="20230801 11:00:55.856"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${type}</var>
<arg>${element_type}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.888" level="INFO">Text: 'Làm remote'</msg>
<msg timestamp="20230801 11:00:55.888" level="INFO">${type} = Làm remote</msg>
<status status="PASS" starttime="20230801 11:00:55.856" endtime="20230801 11:00:55.888"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_time}</var>
<arg>//tbody/tr[${user_count}]/td[5]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.898" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:55.898" level="INFO">${element_time} = ['element=24feb694-6b43-411b-96a8-b0de4af6ee2e']</msg>
<status status="PASS" starttime="20230801 11:00:55.888" endtime="20230801 11:00:55.898"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${time}</var>
<arg>${element_time}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.918" level="INFO">Text: 'Cả ngày'</msg>
<msg timestamp="20230801 11:00:55.919" level="INFO">${time} = Cả ngày</msg>
<status status="PASS" starttime="20230801 11:00:55.898" endtime="20230801 11:00:55.919"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_leave_date}</var>
<arg>//tbody/tr[${user_count}]/td[6]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.930" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:55.931" level="INFO">${element_leave_date} = ['element=43e0fcaf-57c2-4fb2-a2dd-f5b2195cf36d']</msg>
<status status="PASS" starttime="20230801 11:00:55.919" endtime="20230801 11:00:55.931"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${leave_date}</var>
<arg>${element_leave_date}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:55.981" level="INFO">Text: '05-07-2023 =&gt; 06-07-2023'</msg>
<msg timestamp="20230801 11:00:55.981" level="INFO">${leave_date} = 05-07-2023 =&gt; 06-07-2023</msg>
<status status="PASS" starttime="20230801 11:00:55.931" endtime="20230801 11:00:55.981"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_date}</var>
<arg>//tbody/tr[${user_count}]/td[8]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.024" level="INFO">Text: '01-08-2023'</msg>
<msg timestamp="20230801 11:00:56.024" level="INFO">${approvated_date} = 01-08-2023</msg>
<status status="PASS" starttime="20230801 11:00:55.984" endtime="20230801 11:00:56.025"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_by}</var>
<arg>//tbody/tr[${user_count}]/td[9]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.053" level="INFO">Text: 'I\nIllo recusandae accusantium perspiciatis fugit.'</msg>
<msg timestamp="20230801 11:00:56.053" level="INFO">${approvated_by} = I
Illo recusandae accusantium perspiciatis fugit.</msg>
<status status="PASS" starttime="20230801 11:00:56.025" endtime="20230801 11:00:56.053"/>
</kw>
<if>
<branch type="IF" condition="'${approvated_date}' == ''">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:56.054" endtime="20230801 11:00:56.054"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:56.053" endtime="20230801 11:00:56.054"/>
</branch>
<status status="PASS" starttime="20230801 11:00:56.053" endtime="20230801 11:00:56.054"/>
</if>
<if>
<branch type="IF" condition="'${name}'=='approved'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đã phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:56.055" endtime="20230801 11:00:56.055"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:56.055" endtime="20230801 11:00:56.055"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='rejected'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Từ chối phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:56.056" endtime="20230801 11:00:56.056"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:56.055" endtime="20230801 11:00:56.056"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='pending'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:56.057" endtime="20230801 11:00:56.057"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:56.056" endtime="20230801 11:00:56.058"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='created'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:56.061" level="INFO">${status} = </msg>
<status status="PASS" starttime="20230801 11:00:56.059" endtime="20230801 11:00:56.061"/>
</kw>
<status status="PASS" starttime="20230801 11:00:56.058" endtime="20230801 11:00:56.062"/>
</branch>
<status status="PASS" starttime="20230801 11:00:56.054" endtime="20230801 11:00:56.062"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${stt}. Họ và tên: ${username} | Quản lý: ${manager} | Loại phép: ${type} | Thời gian: ${time} | Ngày nghỉ: ${leave_date} | Trạng thái: ${status} | Ngày phê duyệt: ${approvated_date} | Người phê duyệt: ${approvated_by}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:00:56.062" endtime="20230801 11:00:56.065"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>================================================================================================================================================================================================================================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:00:56.066" endtime="20230801 11:00:56.068"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${user_count}</var>
<arg>${user_count} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:00:56.070" level="INFO">${user_count} = 4</msg>
<status status="PASS" starttime="20230801 11:00:56.068" endtime="20230801 11:00:56.070"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${stt}</var>
<arg>${stt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:00:56.071" level="INFO">${stt} = 3</msg>
<status status="PASS" starttime="20230801 11:00:56.070" endtime="20230801 11:00:56.071"/>
</kw>
<status status="PASS" starttime="20230801 11:00:55.634" endtime="20230801 11:00:56.072"/>
</iter>
<iter>
<var name="${item}">element=b06937d2-2240-4252-9283-ed4c928864be</var>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>//tbody/tr[${user_count}]/td[2]/div[1]/span[1]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.111" level="INFO">Text: 'Hoàng Diệu'</msg>
<msg timestamp="20230801 11:00:56.111" level="INFO">${username} = Hoàng Diệu</msg>
<status status="PASS" starttime="20230801 11:00:56.073" endtime="20230801 11:00:56.111"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_manager}</var>
<arg>//tbody/tr[${user_count}]/td[3]/div[1]/span[1]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.127" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:56.128" level="INFO">${element_manager} = ['element=5055ae77-4f31-4830-a4e4-df3398e84924']</msg>
<status status="PASS" starttime="20230801 11:00:56.112" endtime="20230801 11:00:56.128"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${manager}</var>
<arg>${element_manager}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.155" level="INFO">Text: 'Illo recusandae accusantium perspiciatis fugit.'</msg>
<msg timestamp="20230801 11:00:56.155" level="INFO">${manager} = Illo recusandae accusantium perspiciatis fugit.</msg>
<status status="PASS" starttime="20230801 11:00:56.128" endtime="20230801 11:00:56.155"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_type}</var>
<arg>//tbody/tr[${user_count}]/td[4]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.166" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:56.166" level="INFO">${element_type} = ['element=7be42ac5-6fe1-418f-958f-9fb059d99612']</msg>
<status status="PASS" starttime="20230801 11:00:56.155" endtime="20230801 11:00:56.167"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${type}</var>
<arg>${element_type}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.187" level="INFO">Text: 'Nghỉ phép không lương'</msg>
<msg timestamp="20230801 11:00:56.187" level="INFO">${type} = Nghỉ phép không lương</msg>
<status status="PASS" starttime="20230801 11:00:56.167" endtime="20230801 11:00:56.187"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_time}</var>
<arg>//tbody/tr[${user_count}]/td[5]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.206" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:56.206" level="INFO">${element_time} = ['element=a13ff042-463d-4033-903e-2bdcca27d7b9']</msg>
<status status="PASS" starttime="20230801 11:00:56.188" endtime="20230801 11:00:56.206"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${time}</var>
<arg>${element_time}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.238" level="INFO">Text: 'Cả ngày'</msg>
<msg timestamp="20230801 11:00:56.238" level="INFO">${time} = Cả ngày</msg>
<status status="PASS" starttime="20230801 11:00:56.207" endtime="20230801 11:00:56.238"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_leave_date}</var>
<arg>//tbody/tr[${user_count}]/td[6]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.247" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:56.248" level="INFO">${element_leave_date} = ['element=1de2cce5-3570-4360-81eb-2204a667bc8e']</msg>
<status status="PASS" starttime="20230801 11:00:56.238" endtime="20230801 11:00:56.248"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${leave_date}</var>
<arg>${element_leave_date}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.268" level="INFO">Text: '03-07-2023 =&gt; 04-07-2023'</msg>
<msg timestamp="20230801 11:00:56.268" level="INFO">${leave_date} = 03-07-2023 =&gt; 04-07-2023</msg>
<status status="PASS" starttime="20230801 11:00:56.248" endtime="20230801 11:00:56.268"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_date}</var>
<arg>//tbody/tr[${user_count}]/td[8]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.296" level="INFO">Text: '01-08-2023'</msg>
<msg timestamp="20230801 11:00:56.296" level="INFO">${approvated_date} = 01-08-2023</msg>
<status status="PASS" starttime="20230801 11:00:56.269" endtime="20230801 11:00:56.296"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_by}</var>
<arg>//tbody/tr[${user_count}]/td[9]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.320" level="INFO">Text: 'I\nIllo recusandae accusantium perspiciatis fugit.'</msg>
<msg timestamp="20230801 11:00:56.320" level="INFO">${approvated_by} = I
Illo recusandae accusantium perspiciatis fugit.</msg>
<status status="PASS" starttime="20230801 11:00:56.296" endtime="20230801 11:00:56.321"/>
</kw>
<if>
<branch type="IF" condition="'${approvated_date}' == ''">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:56.321" endtime="20230801 11:00:56.322"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:56.321" endtime="20230801 11:00:56.322"/>
</branch>
<status status="PASS" starttime="20230801 11:00:56.321" endtime="20230801 11:00:56.322"/>
</if>
<if>
<branch type="IF" condition="'${name}'=='approved'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đã phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:56.323" endtime="20230801 11:00:56.323"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:56.322" endtime="20230801 11:00:56.323"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='rejected'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Từ chối phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:56.323" endtime="20230801 11:00:56.323"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:56.323" endtime="20230801 11:00:56.323"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='pending'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:56.325" endtime="20230801 11:00:56.325"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:56.323" endtime="20230801 11:00:56.325"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='created'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:56.327" level="INFO">${status} = </msg>
<status status="PASS" starttime="20230801 11:00:56.325" endtime="20230801 11:00:56.327"/>
</kw>
<status status="PASS" starttime="20230801 11:00:56.325" endtime="20230801 11:00:56.328"/>
</branch>
<status status="PASS" starttime="20230801 11:00:56.322" endtime="20230801 11:00:56.328"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${stt}. Họ và tên: ${username} | Quản lý: ${manager} | Loại phép: ${type} | Thời gian: ${time} | Ngày nghỉ: ${leave_date} | Trạng thái: ${status} | Ngày phê duyệt: ${approvated_date} | Người phê duyệt: ${approvated_by}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:00:56.328" endtime="20230801 11:00:56.330"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>================================================================================================================================================================================================================================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:00:56.331" endtime="20230801 11:00:56.332"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${user_count}</var>
<arg>${user_count} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:00:56.334" level="INFO">${user_count} = 5</msg>
<status status="PASS" starttime="20230801 11:00:56.333" endtime="20230801 11:00:56.334"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${stt}</var>
<arg>${stt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:00:56.336" level="INFO">${stt} = 4</msg>
<status status="PASS" starttime="20230801 11:00:56.335" endtime="20230801 11:00:56.336"/>
</kw>
<status status="PASS" starttime="20230801 11:00:56.072" endtime="20230801 11:00:56.336"/>
</iter>
<iter>
<var name="${item}">element=6d9b40f7-be54-4371-bb48-1ce62c252384</var>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>//tbody/tr[${user_count}]/td[2]/div[1]/span[1]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.389" level="INFO">Text: 'Hoàng Diệu'</msg>
<msg timestamp="20230801 11:00:56.390" level="INFO">${username} = Hoàng Diệu</msg>
<status status="PASS" starttime="20230801 11:00:56.337" endtime="20230801 11:00:56.390"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_manager}</var>
<arg>//tbody/tr[${user_count}]/td[3]/div[1]/span[1]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.405" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:56.406" level="INFO">${element_manager} = ['element=c6d43e0a-bf53-4f3a-9d01-a961d8671373']</msg>
<status status="PASS" starttime="20230801 11:00:56.391" endtime="20230801 11:00:56.406"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${manager}</var>
<arg>${element_manager}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.431" level="INFO">Text: 'Illo recusandae accusantium perspiciatis fugit.'</msg>
<msg timestamp="20230801 11:00:56.431" level="INFO">${manager} = Illo recusandae accusantium perspiciatis fugit.</msg>
<status status="PASS" starttime="20230801 11:00:56.406" endtime="20230801 11:00:56.431"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_type}</var>
<arg>//tbody/tr[${user_count}]/td[4]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.443" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:56.443" level="INFO">${element_type} = ['element=64168b73-b43e-48e9-ba8d-699f4f0a614c']</msg>
<status status="PASS" starttime="20230801 11:00:56.431" endtime="20230801 11:00:56.443"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${type}</var>
<arg>${element_type}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.603" level="INFO">Text: 'Nghỉ phép có lương'</msg>
<msg timestamp="20230801 11:00:56.603" level="INFO">${type} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 11:00:56.444" endtime="20230801 11:00:56.603"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_time}</var>
<arg>//tbody/tr[${user_count}]/td[5]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.644" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:56.645" level="INFO">${element_time} = ['element=8ba1e1ea-59db-4b7f-88f1-2edfccb5d3fa']</msg>
<status status="PASS" starttime="20230801 11:00:56.603" endtime="20230801 11:00:56.645"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${time}</var>
<arg>${element_time}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.678" level="INFO">Text: 'Cả ngày'</msg>
<msg timestamp="20230801 11:00:56.679" level="INFO">${time} = Cả ngày</msg>
<status status="PASS" starttime="20230801 11:00:56.646" endtime="20230801 11:00:56.679"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_leave_date}</var>
<arg>//tbody/tr[${user_count}]/td[6]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.696" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:56.696" level="INFO">${element_leave_date} = ['element=5c380b78-e7bb-46e5-8c99-e6feb16f2cf9']</msg>
<status status="PASS" starttime="20230801 11:00:56.679" endtime="20230801 11:00:56.696"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${leave_date}</var>
<arg>${element_leave_date}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.780" level="INFO">Text: '28-07-2023'</msg>
<msg timestamp="20230801 11:00:56.780" level="INFO">${leave_date} = 28-07-2023</msg>
<status status="PASS" starttime="20230801 11:00:56.697" endtime="20230801 11:00:56.780"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_date}</var>
<arg>//tbody/tr[${user_count}]/td[8]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.810" level="INFO">Text: ''</msg>
<msg timestamp="20230801 11:00:56.810" level="INFO">${approvated_date} = </msg>
<status status="PASS" starttime="20230801 11:00:56.781" endtime="20230801 11:00:56.810"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_by}</var>
<arg>//tbody/tr[${user_count}]/td[9]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.832" level="INFO">Text: ''</msg>
<msg timestamp="20230801 11:00:56.832" level="INFO">${approvated_by} = </msg>
<status status="PASS" starttime="20230801 11:00:56.811" endtime="20230801 11:00:56.832"/>
</kw>
<if>
<branch type="IF" condition="'${approvated_date}' == ''">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:56.834" level="INFO">${status} = Đang chờ phê duyệt</msg>
<status status="PASS" starttime="20230801 11:00:56.834" endtime="20230801 11:00:56.834"/>
</kw>
<status status="PASS" starttime="20230801 11:00:56.833" endtime="20230801 11:00:56.834"/>
</branch>
<status status="PASS" starttime="20230801 11:00:56.833" endtime="20230801 11:00:56.834"/>
</if>
<if>
<branch type="IF" condition="'${name}'=='approved'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đã phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:56.835" endtime="20230801 11:00:56.836"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:56.835" endtime="20230801 11:00:56.836"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='rejected'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Từ chối phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:56.837" endtime="20230801 11:00:56.837"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:56.836" endtime="20230801 11:00:56.837"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='pending'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:56.838" endtime="20230801 11:00:56.838"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:56.837" endtime="20230801 11:00:56.838"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='created'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:56.841" level="INFO">${status} = </msg>
<status status="PASS" starttime="20230801 11:00:56.839" endtime="20230801 11:00:56.841"/>
</kw>
<status status="PASS" starttime="20230801 11:00:56.839" endtime="20230801 11:00:56.841"/>
</branch>
<status status="PASS" starttime="20230801 11:00:56.835" endtime="20230801 11:00:56.841"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${stt}. Họ và tên: ${username} | Quản lý: ${manager} | Loại phép: ${type} | Thời gian: ${time} | Ngày nghỉ: ${leave_date} | Trạng thái: ${status} | Ngày phê duyệt: ${approvated_date} | Người phê duyệt: ${approvated_by}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:00:56.842" endtime="20230801 11:00:56.843"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>================================================================================================================================================================================================================================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:00:56.844" endtime="20230801 11:00:56.845"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${user_count}</var>
<arg>${user_count} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:00:56.847" level="INFO">${user_count} = 6</msg>
<status status="PASS" starttime="20230801 11:00:56.846" endtime="20230801 11:00:56.847"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${stt}</var>
<arg>${stt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:00:56.849" level="INFO">${stt} = 5</msg>
<status status="PASS" starttime="20230801 11:00:56.848" endtime="20230801 11:00:56.849"/>
</kw>
<status status="PASS" starttime="20230801 11:00:56.336" endtime="20230801 11:00:56.849"/>
</iter>
<iter>
<var name="${item}">element=f60b2dea-467c-48cb-914a-84bee8f6696f</var>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>//tbody/tr[${user_count}]/td[2]/div[1]/span[1]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.892" level="INFO">Text: 'Hoàng Diệu'</msg>
<msg timestamp="20230801 11:00:56.892" level="INFO">${username} = Hoàng Diệu</msg>
<status status="PASS" starttime="20230801 11:00:56.850" endtime="20230801 11:00:56.892"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_manager}</var>
<arg>//tbody/tr[${user_count}]/td[3]/div[1]/span[1]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.911" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:56.912" level="INFO">${element_manager} = ['element=6eaa0878-3299-47f2-8e40-dca2e65b1d51']</msg>
<status status="PASS" starttime="20230801 11:00:56.893" endtime="20230801 11:00:56.912"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${manager}</var>
<arg>${element_manager}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.947" level="INFO">Text: 'Illo recusandae accusantium perspiciatis fugit.'</msg>
<msg timestamp="20230801 11:00:56.947" level="INFO">${manager} = Illo recusandae accusantium perspiciatis fugit.</msg>
<status status="PASS" starttime="20230801 11:00:56.913" endtime="20230801 11:00:56.947"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_type}</var>
<arg>//tbody/tr[${user_count}]/td[4]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:56.959" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:56.959" level="INFO">${element_type} = ['element=d45d69c6-a6ab-4770-94e3-67b6297478c1']</msg>
<status status="PASS" starttime="20230801 11:00:56.947" endtime="20230801 11:00:56.959"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${type}</var>
<arg>${element_type}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:57.006" level="INFO">Text: 'Nghỉ phép có lương'</msg>
<msg timestamp="20230801 11:00:57.006" level="INFO">${type} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 11:00:56.959" endtime="20230801 11:00:57.006"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_time}</var>
<arg>//tbody/tr[${user_count}]/td[5]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:57.016" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:57.016" level="INFO">${element_time} = ['element=781536c1-cb37-4594-85fa-cdb753db1f66']</msg>
<status status="PASS" starttime="20230801 11:00:57.006" endtime="20230801 11:00:57.016"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${time}</var>
<arg>${element_time}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:57.036" level="INFO">Text: 'Cả ngày'</msg>
<msg timestamp="20230801 11:00:57.036" level="INFO">${time} = Cả ngày</msg>
<status status="PASS" starttime="20230801 11:00:57.017" endtime="20230801 11:00:57.036"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_leave_date}</var>
<arg>//tbody/tr[${user_count}]/td[6]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:57.045" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:57.045" level="INFO">${element_leave_date} = ['element=d6c1f4f4-fbae-4ea8-b71d-06b59fca8fa3']</msg>
<status status="PASS" starttime="20230801 11:00:57.037" endtime="20230801 11:00:57.045"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${leave_date}</var>
<arg>${element_leave_date}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:57.064" level="INFO">Text: '06-07-2023 =&gt; 14-07-2023'</msg>
<msg timestamp="20230801 11:00:57.065" level="INFO">${leave_date} = 06-07-2023 =&gt; 14-07-2023</msg>
<status status="PASS" starttime="20230801 11:00:57.046" endtime="20230801 11:00:57.065"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_date}</var>
<arg>//tbody/tr[${user_count}]/td[8]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:57.085" level="INFO">Text: '28-07-2023'</msg>
<msg timestamp="20230801 11:00:57.085" level="INFO">${approvated_date} = 28-07-2023</msg>
<status status="PASS" starttime="20230801 11:00:57.066" endtime="20230801 11:00:57.085"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_by}</var>
<arg>//tbody/tr[${user_count}]/td[9]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:57.103" level="INFO">Text: 'I\nIllo recusandae accusantium perspiciatis fugit.'</msg>
<msg timestamp="20230801 11:00:57.103" level="INFO">${approvated_by} = I
Illo recusandae accusantium perspiciatis fugit.</msg>
<status status="PASS" starttime="20230801 11:00:57.085" endtime="20230801 11:00:57.103"/>
</kw>
<if>
<branch type="IF" condition="'${approvated_date}' == ''">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:57.105" endtime="20230801 11:00:57.105"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:57.105" endtime="20230801 11:00:57.106"/>
</branch>
<status status="PASS" starttime="20230801 11:00:57.105" endtime="20230801 11:00:57.106"/>
</if>
<if>
<branch type="IF" condition="'${name}'=='approved'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đã phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:57.106" endtime="20230801 11:00:57.107"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:57.106" endtime="20230801 11:00:57.107"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='rejected'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Từ chối phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:57.107" endtime="20230801 11:00:57.107"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:57.107" endtime="20230801 11:00:57.107"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='pending'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:57.108" endtime="20230801 11:00:57.108"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:57.108" endtime="20230801 11:00:57.108"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='created'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:57.110" level="INFO">${status} = </msg>
<status status="PASS" starttime="20230801 11:00:57.109" endtime="20230801 11:00:57.110"/>
</kw>
<status status="PASS" starttime="20230801 11:00:57.108" endtime="20230801 11:00:57.110"/>
</branch>
<status status="PASS" starttime="20230801 11:00:57.106" endtime="20230801 11:00:57.110"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${stt}. Họ và tên: ${username} | Quản lý: ${manager} | Loại phép: ${type} | Thời gian: ${time} | Ngày nghỉ: ${leave_date} | Trạng thái: ${status} | Ngày phê duyệt: ${approvated_date} | Người phê duyệt: ${approvated_by}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:00:57.110" endtime="20230801 11:00:57.112"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>================================================================================================================================================================================================================================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:00:57.113" endtime="20230801 11:00:57.114"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${user_count}</var>
<arg>${user_count} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:00:57.116" level="INFO">${user_count} = 7</msg>
<status status="PASS" starttime="20230801 11:00:57.115" endtime="20230801 11:00:57.116"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${stt}</var>
<arg>${stt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:00:57.117" level="INFO">${stt} = 6</msg>
<status status="PASS" starttime="20230801 11:00:57.117" endtime="20230801 11:00:57.117"/>
</kw>
<status status="PASS" starttime="20230801 11:00:56.849" endtime="20230801 11:00:57.117"/>
</iter>
<iter>
<var name="${item}">element=4fde9a3c-22ed-4731-8835-8d1dc9d7cbbb</var>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>//tbody/tr[${user_count}]/td[2]/div[1]/span[1]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:57.163" level="INFO">Text: 'Hoàng Diệu'</msg>
<msg timestamp="20230801 11:00:57.163" level="INFO">${username} = Hoàng Diệu</msg>
<status status="PASS" starttime="20230801 11:00:57.118" endtime="20230801 11:00:57.163"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_manager}</var>
<arg>//tbody/tr[${user_count}]/td[3]/div[1]/span[1]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:57.186" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:57.186" level="INFO">${element_manager} = ['element=05459dec-3ed4-4241-9f51-3f9e18e492ef']</msg>
<status status="PASS" starttime="20230801 11:00:57.164" endtime="20230801 11:00:57.186"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${manager}</var>
<arg>${element_manager}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:57.235" level="INFO">Text: 'Illo recusandae accusantium perspiciatis fugit.'</msg>
<msg timestamp="20230801 11:00:57.235" level="INFO">${manager} = Illo recusandae accusantium perspiciatis fugit.</msg>
<status status="PASS" starttime="20230801 11:00:57.187" endtime="20230801 11:00:57.235"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_type}</var>
<arg>//tbody/tr[${user_count}]/td[4]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:57.258" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:57.258" level="INFO">${element_type} = ['element=4ec2ea62-c20d-435f-a26a-b9c10b3f7e4b']</msg>
<status status="PASS" starttime="20230801 11:00:57.235" endtime="20230801 11:00:57.258"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${type}</var>
<arg>${element_type}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:57.289" level="INFO">Text: 'Nghỉ phép có lương'</msg>
<msg timestamp="20230801 11:00:57.290" level="INFO">${type} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 11:00:57.259" endtime="20230801 11:00:57.290"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_time}</var>
<arg>//tbody/tr[${user_count}]/td[5]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:57.302" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:57.302" level="INFO">${element_time} = ['element=e163a42e-d64b-4422-b536-ab3be66f55ed']</msg>
<status status="PASS" starttime="20230801 11:00:57.290" endtime="20230801 11:00:57.302"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${time}</var>
<arg>${element_time}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:57.324" level="INFO">Text: 'Cả ngày'</msg>
<msg timestamp="20230801 11:00:57.324" level="INFO">${time} = Cả ngày</msg>
<status status="PASS" starttime="20230801 11:00:57.302" endtime="20230801 11:00:57.324"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_leave_date}</var>
<arg>//tbody/tr[${user_count}]/td[6]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:00:57.335" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:00:57.335" level="INFO">${element_leave_date} = ['element=d7df07a9-db6f-4679-903f-597ccffe0e4e']</msg>
<status status="PASS" starttime="20230801 11:00:57.324" endtime="20230801 11:00:57.335"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${leave_date}</var>
<arg>${element_leave_date}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:57.360" level="INFO">Text: '03-07-2023'</msg>
<msg timestamp="20230801 11:00:57.361" level="INFO">${leave_date} = 03-07-2023</msg>
<status status="PASS" starttime="20230801 11:00:57.335" endtime="20230801 11:00:57.361"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_date}</var>
<arg>//tbody/tr[${user_count}]/td[8]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:57.383" level="INFO">Text: '28-07-2023'</msg>
<msg timestamp="20230801 11:00:57.385" level="INFO">${approvated_date} = 28-07-2023</msg>
<status status="PASS" starttime="20230801 11:00:57.361" endtime="20230801 11:00:57.385"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_by}</var>
<arg>//tbody/tr[${user_count}]/td[9]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:00:57.416" level="INFO">Text: 'I\nIllo recusandae accusantium perspiciatis fugit.'</msg>
<msg timestamp="20230801 11:00:57.416" level="INFO">${approvated_by} = I
Illo recusandae accusantium perspiciatis fugit.</msg>
<status status="PASS" starttime="20230801 11:00:57.386" endtime="20230801 11:00:57.416"/>
</kw>
<if>
<branch type="IF" condition="'${approvated_date}' == ''">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:57.418" endtime="20230801 11:00:57.418"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:57.417" endtime="20230801 11:00:57.418"/>
</branch>
<status status="PASS" starttime="20230801 11:00:57.417" endtime="20230801 11:00:57.418"/>
</if>
<if>
<branch type="IF" condition="'${name}'=='approved'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đã phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:57.419" endtime="20230801 11:00:57.420"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:57.419" endtime="20230801 11:00:57.420"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='rejected'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Từ chối phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:57.421" endtime="20230801 11:00:57.421"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:57.420" endtime="20230801 11:00:57.421"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='pending'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:00:57.422" endtime="20230801 11:00:57.423"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:57.422" endtime="20230801 11:00:57.423"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='created'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:00:57.426" level="INFO">${status} = </msg>
<status status="PASS" starttime="20230801 11:00:57.423" endtime="20230801 11:00:57.426"/>
</kw>
<status status="PASS" starttime="20230801 11:00:57.423" endtime="20230801 11:00:57.426"/>
</branch>
<status status="PASS" starttime="20230801 11:00:57.419" endtime="20230801 11:00:57.426"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${stt}. Họ và tên: ${username} | Quản lý: ${manager} | Loại phép: ${type} | Thời gian: ${time} | Ngày nghỉ: ${leave_date} | Trạng thái: ${status} | Ngày phê duyệt: ${approvated_date} | Người phê duyệt: ${approvated_by}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:00:57.427" endtime="20230801 11:00:57.429"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>================================================================================================================================================================================================================================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:00:57.429" endtime="20230801 11:00:57.431"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${user_count}</var>
<arg>${user_count} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:00:57.432" level="INFO">${user_count} = 8</msg>
<status status="PASS" starttime="20230801 11:00:57.431" endtime="20230801 11:00:57.432"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${stt}</var>
<arg>${stt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:00:57.433" level="INFO">${stt} = 7</msg>
<status status="PASS" starttime="20230801 11:00:57.433" endtime="20230801 11:00:57.433"/>
</kw>
<status status="PASS" starttime="20230801 11:00:57.118" endtime="20230801 11:00:57.435"/>
</iter>
<status status="PASS" starttime="20230801 11:00:55.358" endtime="20230801 11:00:57.435"/>
</for>
<kw name="Evaluate" library="BuiltIn">
<var>${total}</var>
<arg>${user_count} - 2</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:00:57.437" level="INFO">${total} = 6</msg>
<status status="PASS" starttime="20230801 11:00:57.436" endtime="20230801 11:00:57.437"/>
</kw>
<if>
<branch type="IF" condition="'${name}'=='created'">
<kw name="Log To Console" library="BuiltIn">
<arg>Total number of holidays ${name}: ${total}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:00:57.437" endtime="20230801 11:00:57.439"/>
</kw>
<status status="PASS" starttime="20230801 11:00:57.437" endtime="20230801 11:00:57.439"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='approved'">
<kw name="Log To Console" library="BuiltIn">
<arg>Total number of ${name} holidays: ${total}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230801 11:00:57.440" endtime="20230801 11:00:57.440"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:57.439" endtime="20230801 11:00:57.441"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='rejected'">
<kw name="Log To Console" library="BuiltIn">
<arg>Total number of days off ${name} approval: ${total}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230801 11:00:57.442" endtime="20230801 11:00:57.442"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:57.441" endtime="20230801 11:00:57.442"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='pending'">
<kw name="Log To Console" library="BuiltIn">
<arg>Total number of days off ${name} approval: ${total}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230801 11:00:57.446" endtime="20230801 11:00:57.446"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:00:57.445" endtime="20230801 11:00:57.446"/>
</branch>
<status status="PASS" starttime="20230801 11:00:57.437" endtime="20230801 11:00:57.447"/>
</if>
<status status="PASS" starttime="20230801 11:00:55.321" endtime="20230801 11:00:57.447"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 11:00:57.698" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 11:00:57.449" endtime="20230801 11:00:57.699"/>
</kw>
<status status="PASS" starttime="20230801 11:00:57.448" endtime="20230801 11:00:57.699"/>
</kw>
<status status="PASS" starttime="20230801 11:00:45.377" endtime="20230801 11:00:57.700"/>
</test>
<test id="s1-t16" name="STA-16 Verify that staff can view the list of pending leave date successfully" line="176">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 11:00:57.717" endtime="20230801 11:00:57.718"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 11:00:57.720" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\83491f87-398a-4c9d-a16d-c9c771630c98"}</msg>
<msg timestamp="20230801 11:00:59.397" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\83491f87-398a-4c9d-a16d-c9c771630c98"}</msg>
<status status="PASS" starttime="20230801 11:00:57.718" endtime="20230801 11:00:59.397"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 11:01:00.767" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 11:01:00.767" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 11:00:59.398" endtime="20230801 11:01:00.767"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:01:00.769" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 11:01:00.768" endtime="20230801 11:01:00.769"/>
</kw>
<status status="PASS" starttime="20230801 11:00:57.715" endtime="20230801 11:01:00.770"/>
</kw>
<kw name="Login to Staff" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;staff@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:00.777" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 11:01:00.777" endtime="20230801 11:01:00.777"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:00.778" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 11:01:00.778" endtime="20230801 11:01:00.779"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:01:00.780" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 11:01:00.779" endtime="20230801 11:01:00.780"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:00.781" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:01:00.781" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 11:01:00.780" endtime="20230801 11:01:00.781"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:01:00.785" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:01:00.782" endtime="20230801 11:01:00.785"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:00.787" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:01:00.787" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:01:00.786" endtime="20230801 11:01:00.787"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.788" endtime="20230801 11:01:00.789"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.789" endtime="20230801 11:01:00.789"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:00.787" endtime="20230801 11:01:00.790"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.791" endtime="20230801 11:01:00.792"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.792" endtime="20230801 11:01:00.793"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.793" endtime="20230801 11:01:00.793"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:00.790" endtime="20230801 11:01:00.794"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.795" endtime="20230801 11:01:00.796"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.796" endtime="20230801 11:01:00.797"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:00.794" endtime="20230801 11:01:00.797"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.798" endtime="20230801 11:01:00.798"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.798" endtime="20230801 11:01:00.798"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:00.797" endtime="20230801 11:01:00.799"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.800" endtime="20230801 11:01:00.800"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.801" endtime="20230801 11:01:00.801"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:00.799" endtime="20230801 11:01:00.801"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.802" endtime="20230801 11:01:00.803"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.803" endtime="20230801 11:01:00.810"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:00.801" endtime="20230801 11:01:00.810"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.811" endtime="20230801 11:01:00.812"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.812" endtime="20230801 11:01:00.813"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:00.810" endtime="20230801 11:01:00.813"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.814" endtime="20230801 11:01:00.814"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:00.813" endtime="20230801 11:01:00.815"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 11:01:00.817" endtime="20230801 11:01:00.820"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:00.815" endtime="20230801 11:01:00.820"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.822" endtime="20230801 11:01:00.822"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.823" endtime="20230801 11:01:00.823"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:00.821" endtime="20230801 11:01:00.823"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.825" endtime="20230801 11:01:00.825"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:00.823" endtime="20230801 11:01:00.825"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.826" endtime="20230801 11:01:00.826"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:00.825" endtime="20230801 11:01:00.826"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.828" endtime="20230801 11:01:00.828"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:00.827" endtime="20230801 11:01:00.828"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:01:00.829" endtime="20230801 11:01:00.830"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:00.828" endtime="20230801 11:01:00.830"/>
</branch>
<status status="PASS" starttime="20230801 11:01:00.787" endtime="20230801 11:01:00.830"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:00.831" level="INFO">Length is 15</msg>
<msg timestamp="20230801 11:01:00.832" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 11:01:00.831" endtime="20230801 11:01:00.832"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 11:01:00.837" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 11:01:00.834" endtime="20230801 11:01:00.837"/>
</kw>
<status status="PASS" starttime="20230801 11:01:00.832" endtime="20230801 11:01:00.837"/>
</branch>
<status status="PASS" starttime="20230801 11:01:00.832" endtime="20230801 11:01:00.838"/>
</if>
<msg timestamp="20230801 11:01:00.838" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 11:01:00.775" endtime="20230801 11:01:00.838"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 11:01:00.840" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 11:01:00.839" endtime="20230801 11:01:00.840"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:01:00.841" endtime="20230801 11:01:02.849"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 11:01:02.851" level="INFO">Fills the text 'staff@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230801 11:01:02.850" endtime="20230801 11:01:02.917"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:02.918" level="INFO">Length is 15</msg>
<msg timestamp="20230801 11:01:02.919" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 11:01:02.918" endtime="20230801 11:01:02.919"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 11:01:02.921" level="INFO">${STATE["Tên đăng nhập"]} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 11:01:02.920" endtime="20230801 11:01:02.922"/>
</kw>
<status status="PASS" starttime="20230801 11:01:02.919" endtime="20230801 11:01:02.922"/>
</branch>
<status status="PASS" starttime="20230801 11:01:02.919" endtime="20230801 11:01:02.922"/>
</if>
<status status="PASS" starttime="20230801 11:01:00.773" endtime="20230801 11:01:02.923"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Tester@123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:02.926" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 11:01:02.925" endtime="20230801 11:01:02.926"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:02.927" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 11:01:02.926" endtime="20230801 11:01:02.927"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:01:02.929" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 11:01:02.928" endtime="20230801 11:01:02.929"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:02.930" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:01:02.930" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 11:01:02.929" endtime="20230801 11:01:02.930"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:01:02.931" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:01:02.931" endtime="20230801 11:01:02.931"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:02.933" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:01:02.933" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:01:02.932" endtime="20230801 11:01:02.933"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.934" endtime="20230801 11:01:02.935"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.936" endtime="20230801 11:01:02.936"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:02.934" endtime="20230801 11:01:02.936"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.937" endtime="20230801 11:01:02.938"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.938" endtime="20230801 11:01:02.938"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.939" endtime="20230801 11:01:02.939"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:02.937" endtime="20230801 11:01:02.940"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.941" endtime="20230801 11:01:02.941"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.942" endtime="20230801 11:01:02.942"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:02.940" endtime="20230801 11:01:02.942"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.943" endtime="20230801 11:01:02.944"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.944" endtime="20230801 11:01:02.944"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:02.942" endtime="20230801 11:01:02.944"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.945" endtime="20230801 11:01:02.946"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.946" endtime="20230801 11:01:02.946"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:02.944" endtime="20230801 11:01:02.947"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.948" endtime="20230801 11:01:02.948"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.954" endtime="20230801 11:01:02.954"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:02.947" endtime="20230801 11:01:02.954"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.956" endtime="20230801 11:01:02.957"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.957" endtime="20230801 11:01:02.957"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:02.955" endtime="20230801 11:01:02.958"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.959" endtime="20230801 11:01:02.959"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:02.958" endtime="20230801 11:01:02.959"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 11:01:02.960" endtime="20230801 11:01:02.960"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:02.959" endtime="20230801 11:01:02.960"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.961" endtime="20230801 11:01:02.962"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.963" endtime="20230801 11:01:02.963"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:02.961" endtime="20230801 11:01:02.963"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.964" endtime="20230801 11:01:02.964"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:02.964" endtime="20230801 11:01:02.964"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.966" endtime="20230801 11:01:02.966"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:02.965" endtime="20230801 11:01:02.966"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.967" endtime="20230801 11:01:02.968"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:02.967" endtime="20230801 11:01:02.968"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:01:02.969" endtime="20230801 11:01:02.969"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:02.968" endtime="20230801 11:01:02.969"/>
</branch>
<status status="PASS" starttime="20230801 11:01:02.933" endtime="20230801 11:01:02.969"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:02.971" level="INFO">Length is 10</msg>
<msg timestamp="20230801 11:01:02.971" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 11:01:02.970" endtime="20230801 11:01:02.971"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 11:01:02.974" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 11:01:02.972" endtime="20230801 11:01:02.974"/>
</kw>
<status status="PASS" starttime="20230801 11:01:02.971" endtime="20230801 11:01:02.975"/>
</branch>
<status status="PASS" starttime="20230801 11:01:02.971" endtime="20230801 11:01:02.976"/>
</if>
<msg timestamp="20230801 11:01:02.976" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 11:01:02.924" endtime="20230801 11:01:02.977"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 11:01:02.979" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 11:01:02.977" endtime="20230801 11:01:02.979"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:01:02.979" endtime="20230801 11:01:03.097"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 11:01:03.099" level="INFO">Fills the text 'Tester@123' in the given field.</msg>
<status status="PASS" starttime="20230801 11:01:03.098" endtime="20230801 11:01:03.149"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:03.151" level="INFO">Length is 10</msg>
<msg timestamp="20230801 11:01:03.151" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 11:01:03.150" endtime="20230801 11:01:03.151"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 11:01:03.154" level="INFO">${STATE["Mật khẩu"]} = Tester@123</msg>
<status status="PASS" starttime="20230801 11:01:03.153" endtime="20230801 11:01:03.154"/>
</kw>
<status status="PASS" starttime="20230801 11:01:03.152" endtime="20230801 11:01:03.154"/>
</branch>
<status status="PASS" starttime="20230801 11:01:03.152" endtime="20230801 11:01:03.154"/>
</if>
<status status="PASS" starttime="20230801 11:01:02.923" endtime="20230801 11:01:03.154"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:01:03.157" endtime="20230801 11:01:03.449"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:03.452" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 11:01:03.451" endtime="20230801 11:01:03.452"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:01:03.494" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 11:01:03.452" endtime="20230801 11:01:03.494"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:01:03.495" endtime="20230801 11:01:03.495"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 11:01:03.496" endtime="20230801 11:01:03.496"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:03.494" endtime="20230801 11:01:03.497"/>
</branch>
<status status="PASS" starttime="20230801 11:01:03.494" endtime="20230801 11:01:03.497"/>
</if>
<status status="PASS" starttime="20230801 11:01:03.450" endtime="20230801 11:01:03.497"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 11:01:03.498" endtime="20230801 11:01:03.537"/>
</kw>
<status status="PASS" starttime="20230801 11:01:03.155" endtime="20230801 11:01:03.537"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:01:03.540" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:01:03.539" endtime="20230801 11:01:03.540"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:03.541" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:01:03.541" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:01:03.541" endtime="20230801 11:01:03.542"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 11:01:03.543" endtime="20230801 11:01:03.543"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:03.542" endtime="20230801 11:01:03.543"/>
</branch>
<status status="PASS" starttime="20230801 11:01:03.542" endtime="20230801 11:01:03.543"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:05.236" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 11:01:03.547" endtime="20230801 11:01:05.236"/>
</kw>
<status status="PASS" starttime="20230801 11:01:03.543" endtime="20230801 11:01:05.236"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:05.237" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 11:01:05.237" endtime="20230801 11:01:05.237"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:01:05.679" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-24.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-24.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 11:01:05.680" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 11:01:05.680" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 11:01:05.239" endtime="20230801 11:01:05.684"/>
</kw>
<status status="FAIL" starttime="20230801 11:01:05.238" endtime="20230801 11:01:05.685"/>
</kw>
<msg timestamp="20230801 11:01:05.685" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 11:01:05.237" endtime="20230801 11:01:05.686"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:01:05.687" endtime="20230801 11:01:05.687"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:05.686" endtime="20230801 11:01:05.687"/>
</branch>
<status status="PASS" starttime="20230801 11:01:05.686" endtime="20230801 11:01:05.688"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:01:08.359" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 11:01:05.691" endtime="20230801 11:01:08.360"/>
</kw>
<status status="PASS" starttime="20230801 11:01:05.688" endtime="20230801 11:01:08.360"/>
</kw>
<status status="PASS" starttime="20230801 11:01:03.538" endtime="20230801 11:01:08.360"/>
</kw>
<status status="PASS" starttime="20230801 11:01:00.772" endtime="20230801 11:01:08.360"/>
</kw>
<kw name="When Filter the list of holidays with the status of &quot;Pending&quot;" library="common" sourcename="Filter the list of holidays with the status of &quot;${status}&quot;">
<kw name="Click" library="Browser">
<arg>//thead/tr[1]/th[7]/div[1]/span[2]/*[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:01:08.362" endtime="20230801 11:01:08.697"/>
</kw>
<kw name="Click" library="Browser">
<arg>//span[contains(text(),'${status}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:01:08.698" endtime="20230801 11:01:09.039"/>
</kw>
<kw name="Click &quot;Tìm kiếm&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:01:09.040" endtime="20230801 11:01:09.681"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:09.683" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 11:01:09.682" endtime="20230801 11:01:09.683"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:01:09.694" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 11:01:09.684" endtime="20230801 11:01:09.694"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:01:09.695" endtime="20230801 11:01:09.695"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 11:01:09.696" endtime="20230801 11:01:09.696"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:09.694" endtime="20230801 11:01:09.697"/>
</branch>
<status status="PASS" starttime="20230801 11:01:09.694" endtime="20230801 11:01:09.697"/>
</if>
<status status="PASS" starttime="20230801 11:01:09.681" endtime="20230801 11:01:09.697"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 11:01:09.698" endtime="20230801 11:01:09.738"/>
</kw>
<status status="PASS" starttime="20230801 11:01:09.039" endtime="20230801 11:01:09.739"/>
</kw>
<status status="PASS" starttime="20230801 11:01:08.361" endtime="20230801 11:01:09.739"/>
</kw>
<kw name="Then Show list of &quot;pending&quot; leave date" library="common" sourcename="Show list of &quot;${name}&quot; leave date">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:09.744" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 11:01:09.743" endtime="20230801 11:01:09.744"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:01:09.760" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 11:01:09.744" endtime="20230801 11:01:09.760"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:01:11.737" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 11:01:09.764" endtime="20230801 11:01:11.738"/>
</kw>
<status status="PASS" starttime="20230801 11:01:09.761" endtime="20230801 11:01:11.738"/>
</kw>
<status status="PASS" starttime="20230801 11:01:09.761" endtime="20230801 11:01:11.739"/>
</branch>
<status status="PASS" starttime="20230801 11:01:09.760" endtime="20230801 11:01:11.739"/>
</if>
<status status="PASS" starttime="20230801 11:01:09.742" endtime="20230801 11:01:11.739"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//*[contains(@class, "ant-table-row")]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:11.758" level="INFO">Found 2 Locators successfully.</msg>
<msg timestamp="20230801 11:01:11.758" level="INFO">${elements} = ['element=cc3df088-1336-43ae-a608-ac07462f5f01', 'element=a522685e-92f3-4aa3-a4b4-8ccfb67c35ac']</msg>
<status status="PASS" starttime="20230801 11:01:11.740" endtime="20230801 11:01:11.758"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_count}</var>
<arg>2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:11.759" level="INFO">${user_count} = 2</msg>
<status status="PASS" starttime="20230801 11:01:11.759" endtime="20230801 11:01:11.759"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${stt}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:11.760" level="INFO">${stt} = 1</msg>
<status status="PASS" starttime="20230801 11:01:11.759" endtime="20230801 11:01:11.760"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{elements}</value>
<iter>
<var name="${item}">element=cc3df088-1336-43ae-a608-ac07462f5f01</var>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>//tbody/tr[${user_count}]/td[2]/div[1]/span[1]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:11.782" level="INFO">Text: 'Hoàng Diệu'</msg>
<msg timestamp="20230801 11:01:11.782" level="INFO">${username} = Hoàng Diệu</msg>
<status status="PASS" starttime="20230801 11:01:11.760" endtime="20230801 11:01:11.782"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_manager}</var>
<arg>//tbody/tr[${user_count}]/td[3]/div[1]/span[1]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:11.791" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:11.792" level="INFO">${element_manager} = ['element=23a1cadf-3ca2-4633-a48c-0d42d41fe039']</msg>
<status status="PASS" starttime="20230801 11:01:11.782" endtime="20230801 11:01:11.792"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${manager}</var>
<arg>${element_manager}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:11.811" level="INFO">Text: 'Illo recusandae accusantium perspiciatis fugit.'</msg>
<msg timestamp="20230801 11:01:11.812" level="INFO">${manager} = Illo recusandae accusantium perspiciatis fugit.</msg>
<status status="PASS" starttime="20230801 11:01:11.792" endtime="20230801 11:01:11.812"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_type}</var>
<arg>//tbody/tr[${user_count}]/td[4]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:11.822" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:11.822" level="INFO">${element_type} = ['element=d73f56cb-b814-4ff2-b200-8d58753808b7']</msg>
<status status="PASS" starttime="20230801 11:01:11.812" endtime="20230801 11:01:11.822"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${type}</var>
<arg>${element_type}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:11.841" level="INFO">Text: 'Làm remote'</msg>
<msg timestamp="20230801 11:01:11.842" level="INFO">${type} = Làm remote</msg>
<status status="PASS" starttime="20230801 11:01:11.822" endtime="20230801 11:01:11.842"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_time}</var>
<arg>//tbody/tr[${user_count}]/td[5]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:11.851" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:11.851" level="INFO">${element_time} = ['element=87c33d48-63d6-4f97-9dcb-4556ec294004']</msg>
<status status="PASS" starttime="20230801 11:01:11.842" endtime="20230801 11:01:11.851"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${time}</var>
<arg>${element_time}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:11.873" level="INFO">Text: 'Cả ngày'</msg>
<msg timestamp="20230801 11:01:11.873" level="INFO">${time} = Cả ngày</msg>
<status status="PASS" starttime="20230801 11:01:11.852" endtime="20230801 11:01:11.873"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_leave_date}</var>
<arg>//tbody/tr[${user_count}]/td[6]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:11.883" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:11.883" level="INFO">${element_leave_date} = ['element=c7ec91d4-6503-48b9-81df-853493abf64c']</msg>
<status status="PASS" starttime="20230801 11:01:11.874" endtime="20230801 11:01:11.883"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${leave_date}</var>
<arg>${element_leave_date}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:11.903" level="INFO">Text: '13-07-2023 =&gt; 14-07-2023'</msg>
<msg timestamp="20230801 11:01:11.903" level="INFO">${leave_date} = 13-07-2023 =&gt; 14-07-2023</msg>
<status status="PASS" starttime="20230801 11:01:11.883" endtime="20230801 11:01:11.903"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_date}</var>
<arg>//tbody/tr[${user_count}]/td[8]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:11.923" level="INFO">Text: ''</msg>
<msg timestamp="20230801 11:01:11.923" level="INFO">${approvated_date} = </msg>
<status status="PASS" starttime="20230801 11:01:11.903" endtime="20230801 11:01:11.923"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_by}</var>
<arg>//tbody/tr[${user_count}]/td[9]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:11.955" level="INFO">Text: ''</msg>
<msg timestamp="20230801 11:01:11.955" level="INFO">${approvated_by} = </msg>
<status status="PASS" starttime="20230801 11:01:11.923" endtime="20230801 11:01:11.955"/>
</kw>
<if>
<branch type="IF" condition="'${approvated_date}' == ''">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:11.956" level="INFO">${status} = Đang chờ phê duyệt</msg>
<status status="PASS" starttime="20230801 11:01:11.956" endtime="20230801 11:01:11.956"/>
</kw>
<status status="PASS" starttime="20230801 11:01:11.955" endtime="20230801 11:01:11.956"/>
</branch>
<status status="PASS" starttime="20230801 11:01:11.955" endtime="20230801 11:01:11.956"/>
</if>
<if>
<branch type="IF" condition="'${name}'=='approved'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đã phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:11.957" endtime="20230801 11:01:11.957"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:11.956" endtime="20230801 11:01:11.957"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='rejected'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Từ chối phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:11.958" endtime="20230801 11:01:11.958"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:11.957" endtime="20230801 11:01:11.958"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='pending'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:11.959" level="INFO">${status} = Đang chờ phê duyệt</msg>
<status status="PASS" starttime="20230801 11:01:11.958" endtime="20230801 11:01:11.959"/>
</kw>
<status status="PASS" starttime="20230801 11:01:11.958" endtime="20230801 11:01:11.959"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='created'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:11.959" endtime="20230801 11:01:11.959"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:11.959" endtime="20230801 11:01:11.959"/>
</branch>
<status status="PASS" starttime="20230801 11:01:11.956" endtime="20230801 11:01:11.959"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${stt}. Họ và tên: ${username} | Quản lý: ${manager} | Loại phép: ${type} | Thời gian: ${time} | Ngày nghỉ: ${leave_date} | Trạng thái: ${status} | Ngày phê duyệt: ${approvated_date} | Người phê duyệt: ${approvated_by}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:01:11.960" endtime="20230801 11:01:11.961"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>================================================================================================================================================================================================================================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:01:11.962" endtime="20230801 11:01:11.963"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${user_count}</var>
<arg>${user_count} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:01:11.965" level="INFO">${user_count} = 3</msg>
<status status="PASS" starttime="20230801 11:01:11.964" endtime="20230801 11:01:11.965"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${stt}</var>
<arg>${stt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:01:11.966" level="INFO">${stt} = 2</msg>
<status status="PASS" starttime="20230801 11:01:11.965" endtime="20230801 11:01:11.966"/>
</kw>
<status status="PASS" starttime="20230801 11:01:11.760" endtime="20230801 11:01:11.967"/>
</iter>
<iter>
<var name="${item}">element=a522685e-92f3-4aa3-a4b4-8ccfb67c35ac</var>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>//tbody/tr[${user_count}]/td[2]/div[1]/span[1]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:12.016" level="INFO">Text: 'Hoàng Diệu'</msg>
<msg timestamp="20230801 11:01:12.016" level="INFO">${username} = Hoàng Diệu</msg>
<status status="PASS" starttime="20230801 11:01:11.968" endtime="20230801 11:01:12.016"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_manager}</var>
<arg>//tbody/tr[${user_count}]/td[3]/div[1]/span[1]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:12.040" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:12.041" level="INFO">${element_manager} = ['element=0a340d59-ef77-4169-bb66-c81af813a0c3']</msg>
<status status="PASS" starttime="20230801 11:01:12.017" endtime="20230801 11:01:12.041"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${manager}</var>
<arg>${element_manager}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:12.074" level="INFO">Text: 'Illo recusandae accusantium perspiciatis fugit.'</msg>
<msg timestamp="20230801 11:01:12.074" level="INFO">${manager} = Illo recusandae accusantium perspiciatis fugit.</msg>
<status status="PASS" starttime="20230801 11:01:12.041" endtime="20230801 11:01:12.074"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_type}</var>
<arg>//tbody/tr[${user_count}]/td[4]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:12.086" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:12.087" level="INFO">${element_type} = ['element=87cb1a58-609e-4d3f-8a04-139c81753414']</msg>
<status status="PASS" starttime="20230801 11:01:12.074" endtime="20230801 11:01:12.087"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${type}</var>
<arg>${element_type}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:12.109" level="INFO">Text: 'Nghỉ phép có lương'</msg>
<msg timestamp="20230801 11:01:12.109" level="INFO">${type} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 11:01:12.087" endtime="20230801 11:01:12.109"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_time}</var>
<arg>//tbody/tr[${user_count}]/td[5]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:12.120" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:12.121" level="INFO">${element_time} = ['element=84a16be7-7f13-4c34-82c4-692d93239e33']</msg>
<status status="PASS" starttime="20230801 11:01:12.110" endtime="20230801 11:01:12.121"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${time}</var>
<arg>${element_time}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:12.142" level="INFO">Text: 'Cả ngày'</msg>
<msg timestamp="20230801 11:01:12.142" level="INFO">${time} = Cả ngày</msg>
<status status="PASS" starttime="20230801 11:01:12.121" endtime="20230801 11:01:12.142"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_leave_date}</var>
<arg>//tbody/tr[${user_count}]/td[6]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:12.151" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:12.152" level="INFO">${element_leave_date} = ['element=21e576c2-5beb-4b90-86e5-398602cc2def']</msg>
<status status="PASS" starttime="20230801 11:01:12.142" endtime="20230801 11:01:12.152"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${leave_date}</var>
<arg>${element_leave_date}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:12.172" level="INFO">Text: '28-07-2023'</msg>
<msg timestamp="20230801 11:01:12.172" level="INFO">${leave_date} = 28-07-2023</msg>
<status status="PASS" starttime="20230801 11:01:12.152" endtime="20230801 11:01:12.172"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_date}</var>
<arg>//tbody/tr[${user_count}]/td[8]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:12.192" level="INFO">Text: ''</msg>
<msg timestamp="20230801 11:01:12.192" level="INFO">${approvated_date} = </msg>
<status status="PASS" starttime="20230801 11:01:12.172" endtime="20230801 11:01:12.192"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_by}</var>
<arg>//tbody/tr[${user_count}]/td[9]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:12.246" level="INFO">Text: ''</msg>
<msg timestamp="20230801 11:01:12.247" level="INFO">${approvated_by} = </msg>
<status status="PASS" starttime="20230801 11:01:12.193" endtime="20230801 11:01:12.247"/>
</kw>
<if>
<branch type="IF" condition="'${approvated_date}' == ''">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:12.248" level="INFO">${status} = Đang chờ phê duyệt</msg>
<status status="PASS" starttime="20230801 11:01:12.247" endtime="20230801 11:01:12.248"/>
</kw>
<status status="PASS" starttime="20230801 11:01:12.247" endtime="20230801 11:01:12.248"/>
</branch>
<status status="PASS" starttime="20230801 11:01:12.247" endtime="20230801 11:01:12.248"/>
</if>
<if>
<branch type="IF" condition="'${name}'=='approved'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đã phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:12.249" endtime="20230801 11:01:12.249"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:12.249" endtime="20230801 11:01:12.249"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='rejected'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Từ chối phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:12.250" endtime="20230801 11:01:12.250"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:12.249" endtime="20230801 11:01:12.250"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='pending'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:12.251" level="INFO">${status} = Đang chờ phê duyệt</msg>
<status status="PASS" starttime="20230801 11:01:12.250" endtime="20230801 11:01:12.251"/>
</kw>
<status status="PASS" starttime="20230801 11:01:12.250" endtime="20230801 11:01:12.251"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='created'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:12.251" endtime="20230801 11:01:12.251"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:12.251" endtime="20230801 11:01:12.251"/>
</branch>
<status status="PASS" starttime="20230801 11:01:12.248" endtime="20230801 11:01:12.252"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${stt}. Họ và tên: ${username} | Quản lý: ${manager} | Loại phép: ${type} | Thời gian: ${time} | Ngày nghỉ: ${leave_date} | Trạng thái: ${status} | Ngày phê duyệt: ${approvated_date} | Người phê duyệt: ${approvated_by}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:01:12.252" endtime="20230801 11:01:12.253"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>================================================================================================================================================================================================================================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:01:12.254" endtime="20230801 11:01:12.255"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${user_count}</var>
<arg>${user_count} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:01:12.257" level="INFO">${user_count} = 4</msg>
<status status="PASS" starttime="20230801 11:01:12.256" endtime="20230801 11:01:12.257"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${stt}</var>
<arg>${stt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:01:12.258" level="INFO">${stt} = 3</msg>
<status status="PASS" starttime="20230801 11:01:12.257" endtime="20230801 11:01:12.258"/>
</kw>
<status status="PASS" starttime="20230801 11:01:11.967" endtime="20230801 11:01:12.258"/>
</iter>
<status status="PASS" starttime="20230801 11:01:11.760" endtime="20230801 11:01:12.258"/>
</for>
<kw name="Evaluate" library="BuiltIn">
<var>${total}</var>
<arg>${user_count} - 2</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:01:12.259" level="INFO">${total} = 2</msg>
<status status="PASS" starttime="20230801 11:01:12.259" endtime="20230801 11:01:12.259"/>
</kw>
<if>
<branch type="IF" condition="'${name}'=='created'">
<kw name="Log To Console" library="BuiltIn">
<arg>Total number of holidays ${name}: ${total}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230801 11:01:12.260" endtime="20230801 11:01:12.261"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:12.260" endtime="20230801 11:01:12.261"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='approved'">
<kw name="Log To Console" library="BuiltIn">
<arg>Total number of ${name} holidays: ${total}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230801 11:01:12.263" endtime="20230801 11:01:12.263"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:12.262" endtime="20230801 11:01:12.263"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='rejected'">
<kw name="Log To Console" library="BuiltIn">
<arg>Total number of days off ${name} approval: ${total}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230801 11:01:12.267" endtime="20230801 11:01:12.268"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:12.265" endtime="20230801 11:01:12.268"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='pending'">
<kw name="Log To Console" library="BuiltIn">
<arg>Total number of days off ${name} approval: ${total}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:01:12.269" endtime="20230801 11:01:12.270"/>
</kw>
<status status="PASS" starttime="20230801 11:01:12.268" endtime="20230801 11:01:12.270"/>
</branch>
<status status="PASS" starttime="20230801 11:01:12.260" endtime="20230801 11:01:12.271"/>
</if>
<status status="PASS" starttime="20230801 11:01:09.740" endtime="20230801 11:01:12.271"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 11:01:12.396" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 11:01:12.273" endtime="20230801 11:01:12.396"/>
</kw>
<status status="PASS" starttime="20230801 11:01:12.272" endtime="20230801 11:01:12.396"/>
</kw>
<status status="PASS" starttime="20230801 11:00:57.709" endtime="20230801 11:01:12.397"/>
</test>
<test id="s1-t17" name="STA-17 Verify that staff can view the list of approved leave date successfully" line="181">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 11:01:12.413" endtime="20230801 11:01:12.414"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 11:01:12.416" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\7f22b988-db3a-45bc-ab00-6bdae982262e"}</msg>
<msg timestamp="20230801 11:01:13.662" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\7f22b988-db3a-45bc-ab00-6bdae982262e"}</msg>
<status status="PASS" starttime="20230801 11:01:12.414" endtime="20230801 11:01:13.663"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 11:01:14.609" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 11:01:14.610" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 11:01:13.663" endtime="20230801 11:01:14.610"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:01:14.611" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 11:01:14.611" endtime="20230801 11:01:14.611"/>
</kw>
<status status="PASS" starttime="20230801 11:01:12.412" endtime="20230801 11:01:14.612"/>
</kw>
<kw name="Login to Staff" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;staff@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:14.615" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 11:01:14.614" endtime="20230801 11:01:14.615"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:14.616" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 11:01:14.616" endtime="20230801 11:01:14.616"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:01:14.617" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 11:01:14.617" endtime="20230801 11:01:14.618"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:14.619" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:01:14.619" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 11:01:14.618" endtime="20230801 11:01:14.619"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:01:14.620" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:01:14.619" endtime="20230801 11:01:14.620"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:14.621" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:01:14.621" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:01:14.621" endtime="20230801 11:01:14.621"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.623" endtime="20230801 11:01:14.623"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.624" endtime="20230801 11:01:14.624"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:14.622" endtime="20230801 11:01:14.624"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.625" endtime="20230801 11:01:14.625"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.626" endtime="20230801 11:01:14.626"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.627" endtime="20230801 11:01:14.627"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:14.624" endtime="20230801 11:01:14.627"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.628" endtime="20230801 11:01:14.629"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.629" endtime="20230801 11:01:14.629"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:14.628" endtime="20230801 11:01:14.630"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.630" endtime="20230801 11:01:14.631"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.631" endtime="20230801 11:01:14.632"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:14.630" endtime="20230801 11:01:14.632"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.633" endtime="20230801 11:01:14.633"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.634" endtime="20230801 11:01:14.634"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:14.632" endtime="20230801 11:01:14.634"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.636" endtime="20230801 11:01:14.636"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.637" endtime="20230801 11:01:14.637"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:14.635" endtime="20230801 11:01:14.637"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.638" endtime="20230801 11:01:14.638"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.639" endtime="20230801 11:01:14.639"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:14.637" endtime="20230801 11:01:14.640"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.641" endtime="20230801 11:01:14.642"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:14.640" endtime="20230801 11:01:14.643"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 11:01:14.644" endtime="20230801 11:01:14.645"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:14.643" endtime="20230801 11:01:14.645"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.646" endtime="20230801 11:01:14.647"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.647" endtime="20230801 11:01:14.647"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:14.646" endtime="20230801 11:01:14.648"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.649" endtime="20230801 11:01:14.649"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:14.648" endtime="20230801 11:01:14.649"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.651" endtime="20230801 11:01:14.651"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:14.650" endtime="20230801 11:01:14.651"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.653" endtime="20230801 11:01:14.653"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:14.652" endtime="20230801 11:01:14.653"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:01:14.654" endtime="20230801 11:01:14.654"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:14.653" endtime="20230801 11:01:14.654"/>
</branch>
<status status="PASS" starttime="20230801 11:01:14.621" endtime="20230801 11:01:14.654"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:14.656" level="INFO">Length is 15</msg>
<msg timestamp="20230801 11:01:14.656" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 11:01:14.655" endtime="20230801 11:01:14.656"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 11:01:14.658" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 11:01:14.657" endtime="20230801 11:01:14.658"/>
</kw>
<status status="PASS" starttime="20230801 11:01:14.657" endtime="20230801 11:01:14.658"/>
</branch>
<status status="PASS" starttime="20230801 11:01:14.656" endtime="20230801 11:01:14.659"/>
</if>
<msg timestamp="20230801 11:01:14.659" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 11:01:14.613" endtime="20230801 11:01:14.659"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 11:01:14.660" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 11:01:14.659" endtime="20230801 11:01:14.661"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:01:14.661" endtime="20230801 11:01:16.218"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 11:01:16.218" level="INFO">Fills the text 'staff@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230801 11:01:16.218" endtime="20230801 11:01:16.261"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:16.262" level="INFO">Length is 15</msg>
<msg timestamp="20230801 11:01:16.262" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 11:01:16.262" endtime="20230801 11:01:16.263"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 11:01:16.266" level="INFO">${STATE["Tên đăng nhập"]} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 11:01:16.263" endtime="20230801 11:01:16.266"/>
</kw>
<status status="PASS" starttime="20230801 11:01:16.263" endtime="20230801 11:01:16.266"/>
</branch>
<status status="PASS" starttime="20230801 11:01:16.263" endtime="20230801 11:01:16.266"/>
</if>
<status status="PASS" starttime="20230801 11:01:14.613" endtime="20230801 11:01:16.267"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Tester@123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:16.270" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 11:01:16.269" endtime="20230801 11:01:16.270"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:16.271" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 11:01:16.270" endtime="20230801 11:01:16.271"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:01:16.273" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 11:01:16.272" endtime="20230801 11:01:16.273"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:16.274" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:01:16.274" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 11:01:16.273" endtime="20230801 11:01:16.274"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:01:16.275" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:01:16.275" endtime="20230801 11:01:16.275"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:16.277" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:01:16.277" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:01:16.276" endtime="20230801 11:01:16.277"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.278" endtime="20230801 11:01:16.278"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.279" endtime="20230801 11:01:16.279"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:16.278" endtime="20230801 11:01:16.279"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.280" endtime="20230801 11:01:16.280"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.280" endtime="20230801 11:01:16.280"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.281" endtime="20230801 11:01:16.281"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:16.279" endtime="20230801 11:01:16.281"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.282" endtime="20230801 11:01:16.282"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.283" endtime="20230801 11:01:16.283"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:16.281" endtime="20230801 11:01:16.283"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.283" endtime="20230801 11:01:16.285"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.285" endtime="20230801 11:01:16.285"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:16.283" endtime="20230801 11:01:16.285"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.286" endtime="20230801 11:01:16.287"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.287" endtime="20230801 11:01:16.287"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:16.286" endtime="20230801 11:01:16.287"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.288" endtime="20230801 11:01:16.288"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.288" endtime="20230801 11:01:16.288"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:16.287" endtime="20230801 11:01:16.288"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.289" endtime="20230801 11:01:16.289"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.289" endtime="20230801 11:01:16.289"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:16.288" endtime="20230801 11:01:16.290"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.290" endtime="20230801 11:01:16.290"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:16.290" endtime="20230801 11:01:16.290"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 11:01:16.291" endtime="20230801 11:01:16.291"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:16.290" endtime="20230801 11:01:16.291"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.292" endtime="20230801 11:01:16.292"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.292" endtime="20230801 11:01:16.293"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:16.291" endtime="20230801 11:01:16.293"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.294" endtime="20230801 11:01:16.294"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:16.293" endtime="20230801 11:01:16.294"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.295" endtime="20230801 11:01:16.295"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:16.294" endtime="20230801 11:01:16.295"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.297" endtime="20230801 11:01:16.297"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:16.295" endtime="20230801 11:01:16.297"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.297" endtime="20230801 11:01:16.298"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:16.297" endtime="20230801 11:01:16.298"/>
</branch>
<status status="PASS" starttime="20230801 11:01:16.277" endtime="20230801 11:01:16.298"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:16.299" level="INFO">Length is 10</msg>
<msg timestamp="20230801 11:01:16.299" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 11:01:16.298" endtime="20230801 11:01:16.299"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 11:01:16.300" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 11:01:16.300" endtime="20230801 11:01:16.300"/>
</kw>
<status status="PASS" starttime="20230801 11:01:16.299" endtime="20230801 11:01:16.301"/>
</branch>
<status status="PASS" starttime="20230801 11:01:16.299" endtime="20230801 11:01:16.301"/>
</if>
<msg timestamp="20230801 11:01:16.301" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 11:01:16.268" endtime="20230801 11:01:16.301"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 11:01:16.302" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 11:01:16.301" endtime="20230801 11:01:16.302"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:01:16.302" endtime="20230801 11:01:16.362"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 11:01:16.364" level="INFO">Fills the text 'Tester@123' in the given field.</msg>
<status status="PASS" starttime="20230801 11:01:16.363" endtime="20230801 11:01:16.408"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:16.409" level="INFO">Length is 10</msg>
<msg timestamp="20230801 11:01:16.409" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 11:01:16.409" endtime="20230801 11:01:16.409"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 11:01:16.412" level="INFO">${STATE["Mật khẩu"]} = Tester@123</msg>
<status status="PASS" starttime="20230801 11:01:16.411" endtime="20230801 11:01:16.412"/>
</kw>
<status status="PASS" starttime="20230801 11:01:16.410" endtime="20230801 11:01:16.412"/>
</branch>
<status status="PASS" starttime="20230801 11:01:16.410" endtime="20230801 11:01:16.413"/>
</if>
<status status="PASS" starttime="20230801 11:01:16.267" endtime="20230801 11:01:16.413"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:01:16.415" endtime="20230801 11:01:16.641"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:16.642" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 11:01:16.642" endtime="20230801 11:01:16.642"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:01:16.652" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 11:01:16.643" endtime="20230801 11:01:16.652"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.653" endtime="20230801 11:01:16.653"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.654" endtime="20230801 11:01:16.654"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:16.653" endtime="20230801 11:01:16.654"/>
</branch>
<status status="PASS" starttime="20230801 11:01:16.653" endtime="20230801 11:01:16.654"/>
</if>
<status status="PASS" starttime="20230801 11:01:16.641" endtime="20230801 11:01:16.655"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 11:01:16.655" endtime="20230801 11:01:16.687"/>
</kw>
<status status="PASS" starttime="20230801 11:01:16.413" endtime="20230801 11:01:16.687"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:01:16.688" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:01:16.688" endtime="20230801 11:01:16.688"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:16.689" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:01:16.689" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:01:16.689" endtime="20230801 11:01:16.689"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 11:01:16.691" endtime="20230801 11:01:16.691"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:16.690" endtime="20230801 11:01:16.691"/>
</branch>
<status status="PASS" starttime="20230801 11:01:16.690" endtime="20230801 11:01:16.691"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:18.211" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 11:01:16.695" endtime="20230801 11:01:18.211"/>
</kw>
<status status="PASS" starttime="20230801 11:01:16.692" endtime="20230801 11:01:18.211"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:18.213" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 11:01:18.212" endtime="20230801 11:01:18.213"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:01:18.583" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-25.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-25.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 11:01:18.583" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 11:01:18.584" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 11:01:18.214" endtime="20230801 11:01:18.586"/>
</kw>
<status status="FAIL" starttime="20230801 11:01:18.213" endtime="20230801 11:01:18.586"/>
</kw>
<msg timestamp="20230801 11:01:18.586" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 11:01:18.213" endtime="20230801 11:01:18.586"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:01:18.587" endtime="20230801 11:01:18.587"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:18.587" endtime="20230801 11:01:18.587"/>
</branch>
<status status="PASS" starttime="20230801 11:01:18.587" endtime="20230801 11:01:18.588"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:01:21.073" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 11:01:18.589" endtime="20230801 11:01:21.074"/>
</kw>
<status status="PASS" starttime="20230801 11:01:18.588" endtime="20230801 11:01:21.074"/>
</kw>
<status status="PASS" starttime="20230801 11:01:16.687" endtime="20230801 11:01:21.074"/>
</kw>
<status status="PASS" starttime="20230801 11:01:14.612" endtime="20230801 11:01:21.074"/>
</kw>
<kw name="When Filter the list of holidays with the status of &quot;Approved&quot;" library="common" sourcename="Filter the list of holidays with the status of &quot;${status}&quot;">
<kw name="Click" library="Browser">
<arg>//thead/tr[1]/th[7]/div[1]/span[2]/*[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:01:21.077" endtime="20230801 11:01:21.397"/>
</kw>
<kw name="Click" library="Browser">
<arg>//span[contains(text(),'${status}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:01:21.398" endtime="20230801 11:01:21.724"/>
</kw>
<kw name="Click &quot;Tìm kiếm&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:01:21.725" endtime="20230801 11:01:22.013"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:22.016" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 11:01:22.015" endtime="20230801 11:01:22.016"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:01:22.028" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 11:01:22.017" endtime="20230801 11:01:22.028"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:01:22.030" endtime="20230801 11:01:22.030"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 11:01:22.031" endtime="20230801 11:01:22.031"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:22.029" endtime="20230801 11:01:22.032"/>
</branch>
<status status="PASS" starttime="20230801 11:01:22.029" endtime="20230801 11:01:22.032"/>
</if>
<status status="PASS" starttime="20230801 11:01:22.013" endtime="20230801 11:01:22.032"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 11:01:22.033" endtime="20230801 11:01:22.069"/>
</kw>
<status status="PASS" starttime="20230801 11:01:21.724" endtime="20230801 11:01:22.069"/>
</kw>
<status status="PASS" starttime="20230801 11:01:21.075" endtime="20230801 11:01:22.069"/>
</kw>
<kw name="Then Show list of &quot;approved&quot; leave date" library="common" sourcename="Show list of &quot;${name}&quot; leave date">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:22.073" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 11:01:22.073" endtime="20230801 11:01:22.073"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:01:22.082" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 11:01:22.074" endtime="20230801 11:01:22.082"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:01:24.105" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 11:01:22.087" endtime="20230801 11:01:24.105"/>
</kw>
<status status="PASS" starttime="20230801 11:01:22.083" endtime="20230801 11:01:24.106"/>
</kw>
<status status="PASS" starttime="20230801 11:01:22.083" endtime="20230801 11:01:24.107"/>
</branch>
<status status="PASS" starttime="20230801 11:01:22.083" endtime="20230801 11:01:24.107"/>
</if>
<status status="PASS" starttime="20230801 11:01:22.072" endtime="20230801 11:01:24.107"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//*[contains(@class, "ant-table-row")]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.125" level="INFO">Found 2 Locators successfully.</msg>
<msg timestamp="20230801 11:01:24.126" level="INFO">${elements} = ['element=50ab029c-4fe5-44f4-abfb-144268f34360', 'element=b3173a28-cdce-4a9d-8838-dd6b9671b5f4']</msg>
<status status="PASS" starttime="20230801 11:01:24.108" endtime="20230801 11:01:24.126"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_count}</var>
<arg>2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:24.127" level="INFO">${user_count} = 2</msg>
<status status="PASS" starttime="20230801 11:01:24.127" endtime="20230801 11:01:24.127"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${stt}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:24.128" level="INFO">${stt} = 1</msg>
<status status="PASS" starttime="20230801 11:01:24.128" endtime="20230801 11:01:24.129"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{elements}</value>
<iter>
<var name="${item}">element=50ab029c-4fe5-44f4-abfb-144268f34360</var>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>//tbody/tr[${user_count}]/td[2]/div[1]/span[1]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.165" level="INFO">Text: 'Hoàng Diệu'</msg>
<msg timestamp="20230801 11:01:24.165" level="INFO">${username} = Hoàng Diệu</msg>
<status status="PASS" starttime="20230801 11:01:24.130" endtime="20230801 11:01:24.165"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_manager}</var>
<arg>//tbody/tr[${user_count}]/td[3]/div[1]/span[1]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.186" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:24.186" level="INFO">${element_manager} = ['element=1915184c-e3ea-4608-ae00-3060bdf18454']</msg>
<status status="PASS" starttime="20230801 11:01:24.166" endtime="20230801 11:01:24.186"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${manager}</var>
<arg>${element_manager}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.224" level="INFO">Text: 'Illo recusandae accusantium perspiciatis fugit.'</msg>
<msg timestamp="20230801 11:01:24.224" level="INFO">${manager} = Illo recusandae accusantium perspiciatis fugit.</msg>
<status status="PASS" starttime="20230801 11:01:24.187" endtime="20230801 11:01:24.224"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_type}</var>
<arg>//tbody/tr[${user_count}]/td[4]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.239" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:24.240" level="INFO">${element_type} = ['element=b03eed4a-5340-4152-85e1-e238910e7c93']</msg>
<status status="PASS" starttime="20230801 11:01:24.225" endtime="20230801 11:01:24.240"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${type}</var>
<arg>${element_type}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.280" level="INFO">Text: 'Làm remote'</msg>
<msg timestamp="20230801 11:01:24.281" level="INFO">${type} = Làm remote</msg>
<status status="PASS" starttime="20230801 11:01:24.240" endtime="20230801 11:01:24.281"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_time}</var>
<arg>//tbody/tr[${user_count}]/td[5]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.292" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:24.292" level="INFO">${element_time} = ['element=bf5c3d49-4bf9-4210-9cbd-4a8ecd324c96']</msg>
<status status="PASS" starttime="20230801 11:01:24.281" endtime="20230801 11:01:24.292"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${time}</var>
<arg>${element_time}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.315" level="INFO">Text: 'Cả ngày'</msg>
<msg timestamp="20230801 11:01:24.315" level="INFO">${time} = Cả ngày</msg>
<status status="PASS" starttime="20230801 11:01:24.293" endtime="20230801 11:01:24.315"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_leave_date}</var>
<arg>//tbody/tr[${user_count}]/td[6]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.325" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:24.325" level="INFO">${element_leave_date} = ['element=d7d0e361-fe1c-4dc7-ac02-851be1dd2630']</msg>
<status status="PASS" starttime="20230801 11:01:24.315" endtime="20230801 11:01:24.325"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${leave_date}</var>
<arg>${element_leave_date}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.344" level="INFO">Text: '05-07-2023 =&gt; 06-07-2023'</msg>
<msg timestamp="20230801 11:01:24.345" level="INFO">${leave_date} = 05-07-2023 =&gt; 06-07-2023</msg>
<status status="PASS" starttime="20230801 11:01:24.326" endtime="20230801 11:01:24.345"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_date}</var>
<arg>//tbody/tr[${user_count}]/td[8]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.363" level="INFO">Text: '01-08-2023'</msg>
<msg timestamp="20230801 11:01:24.365" level="INFO">${approvated_date} = 01-08-2023</msg>
<status status="PASS" starttime="20230801 11:01:24.346" endtime="20230801 11:01:24.365"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_by}</var>
<arg>//tbody/tr[${user_count}]/td[9]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.384" level="INFO">Text: 'I\nIllo recusandae accusantium perspiciatis fugit.'</msg>
<msg timestamp="20230801 11:01:24.384" level="INFO">${approvated_by} = I
Illo recusandae accusantium perspiciatis fugit.</msg>
<status status="PASS" starttime="20230801 11:01:24.365" endtime="20230801 11:01:24.384"/>
</kw>
<if>
<branch type="IF" condition="'${approvated_date}' == ''">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:24.386" endtime="20230801 11:01:24.386"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:24.385" endtime="20230801 11:01:24.386"/>
</branch>
<status status="PASS" starttime="20230801 11:01:24.385" endtime="20230801 11:01:24.386"/>
</if>
<if>
<branch type="IF" condition="'${name}'=='approved'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đã phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:24.387" level="INFO">${status} = Đã phê duyệt</msg>
<status status="PASS" starttime="20230801 11:01:24.387" endtime="20230801 11:01:24.387"/>
</kw>
<status status="PASS" starttime="20230801 11:01:24.386" endtime="20230801 11:01:24.387"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='rejected'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Từ chối phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:24.387" endtime="20230801 11:01:24.388"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:24.387" endtime="20230801 11:01:24.388"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='pending'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:24.388" endtime="20230801 11:01:24.388"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:24.388" endtime="20230801 11:01:24.388"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='created'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:24.389" endtime="20230801 11:01:24.389"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:24.388" endtime="20230801 11:01:24.389"/>
</branch>
<status status="PASS" starttime="20230801 11:01:24.386" endtime="20230801 11:01:24.389"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${stt}. Họ và tên: ${username} | Quản lý: ${manager} | Loại phép: ${type} | Thời gian: ${time} | Ngày nghỉ: ${leave_date} | Trạng thái: ${status} | Ngày phê duyệt: ${approvated_date} | Người phê duyệt: ${approvated_by}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:01:24.389" endtime="20230801 11:01:24.391"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>================================================================================================================================================================================================================================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:01:24.391" endtime="20230801 11:01:24.393"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${user_count}</var>
<arg>${user_count} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:01:24.394" level="INFO">${user_count} = 3</msg>
<status status="PASS" starttime="20230801 11:01:24.393" endtime="20230801 11:01:24.394"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${stt}</var>
<arg>${stt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:01:24.396" level="INFO">${stt} = 2</msg>
<status status="PASS" starttime="20230801 11:01:24.395" endtime="20230801 11:01:24.396"/>
</kw>
<status status="PASS" starttime="20230801 11:01:24.129" endtime="20230801 11:01:24.396"/>
</iter>
<iter>
<var name="${item}">element=b3173a28-cdce-4a9d-8838-dd6b9671b5f4</var>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>//tbody/tr[${user_count}]/td[2]/div[1]/span[1]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.448" level="INFO">Text: 'Hoàng Diệu'</msg>
<msg timestamp="20230801 11:01:24.448" level="INFO">${username} = Hoàng Diệu</msg>
<status status="PASS" starttime="20230801 11:01:24.396" endtime="20230801 11:01:24.448"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_manager}</var>
<arg>//tbody/tr[${user_count}]/td[3]/div[1]/span[1]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.474" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:24.475" level="INFO">${element_manager} = ['element=3786d587-b9e7-44bf-9b67-d0f110eda59e']</msg>
<status status="PASS" starttime="20230801 11:01:24.449" endtime="20230801 11:01:24.475"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${manager}</var>
<arg>${element_manager}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.503" level="INFO">Text: 'Illo recusandae accusantium perspiciatis fugit.'</msg>
<msg timestamp="20230801 11:01:24.504" level="INFO">${manager} = Illo recusandae accusantium perspiciatis fugit.</msg>
<status status="PASS" starttime="20230801 11:01:24.475" endtime="20230801 11:01:24.504"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_type}</var>
<arg>//tbody/tr[${user_count}]/td[4]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.517" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:24.517" level="INFO">${element_type} = ['element=448c310b-596f-4038-8c26-4ceb965ca2ec']</msg>
<status status="PASS" starttime="20230801 11:01:24.504" endtime="20230801 11:01:24.517"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${type}</var>
<arg>${element_type}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.560" level="INFO">Text: 'Nghỉ phép có lương'</msg>
<msg timestamp="20230801 11:01:24.560" level="INFO">${type} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 11:01:24.518" endtime="20230801 11:01:24.560"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_time}</var>
<arg>//tbody/tr[${user_count}]/td[5]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.573" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:24.573" level="INFO">${element_time} = ['element=2cb0dd99-223e-47ab-a3fa-4d5c58ddf073']</msg>
<status status="PASS" starttime="20230801 11:01:24.561" endtime="20230801 11:01:24.573"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${time}</var>
<arg>${element_time}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.604" level="INFO">Text: 'Cả ngày'</msg>
<msg timestamp="20230801 11:01:24.604" level="INFO">${time} = Cả ngày</msg>
<status status="PASS" starttime="20230801 11:01:24.574" endtime="20230801 11:01:24.604"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_leave_date}</var>
<arg>//tbody/tr[${user_count}]/td[6]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.618" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:24.618" level="INFO">${element_leave_date} = ['element=22a86ca2-38c5-4075-b465-59a4f93843b7']</msg>
<status status="PASS" starttime="20230801 11:01:24.605" endtime="20230801 11:01:24.618"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${leave_date}</var>
<arg>${element_leave_date}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.645" level="INFO">Text: '06-07-2023 =&gt; 14-07-2023'</msg>
<msg timestamp="20230801 11:01:24.645" level="INFO">${leave_date} = 06-07-2023 =&gt; 14-07-2023</msg>
<status status="PASS" starttime="20230801 11:01:24.619" endtime="20230801 11:01:24.645"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_date}</var>
<arg>//tbody/tr[${user_count}]/td[8]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.665" level="INFO">Text: '28-07-2023'</msg>
<msg timestamp="20230801 11:01:24.665" level="INFO">${approvated_date} = 28-07-2023</msg>
<status status="PASS" starttime="20230801 11:01:24.645" endtime="20230801 11:01:24.665"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_by}</var>
<arg>//tbody/tr[${user_count}]/td[9]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:24.686" level="INFO">Text: 'I\nIllo recusandae accusantium perspiciatis fugit.'</msg>
<msg timestamp="20230801 11:01:24.686" level="INFO">${approvated_by} = I
Illo recusandae accusantium perspiciatis fugit.</msg>
<status status="PASS" starttime="20230801 11:01:24.666" endtime="20230801 11:01:24.686"/>
</kw>
<if>
<branch type="IF" condition="'${approvated_date}' == ''">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:24.687" endtime="20230801 11:01:24.687"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:24.686" endtime="20230801 11:01:24.687"/>
</branch>
<status status="PASS" starttime="20230801 11:01:24.686" endtime="20230801 11:01:24.687"/>
</if>
<if>
<branch type="IF" condition="'${name}'=='approved'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đã phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:24.688" level="INFO">${status} = Đã phê duyệt</msg>
<status status="PASS" starttime="20230801 11:01:24.688" endtime="20230801 11:01:24.688"/>
</kw>
<status status="PASS" starttime="20230801 11:01:24.687" endtime="20230801 11:01:24.688"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='rejected'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Từ chối phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:24.689" endtime="20230801 11:01:24.689"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:24.688" endtime="20230801 11:01:24.689"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='pending'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:24.689" endtime="20230801 11:01:24.689"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:24.689" endtime="20230801 11:01:24.689"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='created'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:24.690" endtime="20230801 11:01:24.690"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:24.690" endtime="20230801 11:01:24.690"/>
</branch>
<status status="PASS" starttime="20230801 11:01:24.687" endtime="20230801 11:01:24.690"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${stt}. Họ và tên: ${username} | Quản lý: ${manager} | Loại phép: ${type} | Thời gian: ${time} | Ngày nghỉ: ${leave_date} | Trạng thái: ${status} | Ngày phê duyệt: ${approvated_date} | Người phê duyệt: ${approvated_by}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:01:24.690" endtime="20230801 11:01:24.692"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>================================================================================================================================================================================================================================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:01:24.693" endtime="20230801 11:01:24.694"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${user_count}</var>
<arg>${user_count} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:01:24.696" level="INFO">${user_count} = 4</msg>
<status status="PASS" starttime="20230801 11:01:24.695" endtime="20230801 11:01:24.696"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${stt}</var>
<arg>${stt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:01:24.698" level="INFO">${stt} = 3</msg>
<status status="PASS" starttime="20230801 11:01:24.696" endtime="20230801 11:01:24.698"/>
</kw>
<status status="PASS" starttime="20230801 11:01:24.396" endtime="20230801 11:01:24.698"/>
</iter>
<status status="PASS" starttime="20230801 11:01:24.129" endtime="20230801 11:01:24.698"/>
</for>
<kw name="Evaluate" library="BuiltIn">
<var>${total}</var>
<arg>${user_count} - 2</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:01:24.700" level="INFO">${total} = 2</msg>
<status status="PASS" starttime="20230801 11:01:24.699" endtime="20230801 11:01:24.700"/>
</kw>
<if>
<branch type="IF" condition="'${name}'=='created'">
<kw name="Log To Console" library="BuiltIn">
<arg>Total number of holidays ${name}: ${total}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230801 11:01:24.701" endtime="20230801 11:01:24.701"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:24.700" endtime="20230801 11:01:24.701"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='approved'">
<kw name="Log To Console" library="BuiltIn">
<arg>Total number of ${name} holidays: ${total}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:01:24.703" endtime="20230801 11:01:24.707"/>
</kw>
<status status="PASS" starttime="20230801 11:01:24.702" endtime="20230801 11:01:24.708"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='rejected'">
<kw name="Log To Console" library="BuiltIn">
<arg>Total number of days off ${name} approval: ${total}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230801 11:01:24.709" endtime="20230801 11:01:24.709"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:24.708" endtime="20230801 11:01:24.709"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='pending'">
<kw name="Log To Console" library="BuiltIn">
<arg>Total number of days off ${name} approval: ${total}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230801 11:01:24.710" endtime="20230801 11:01:24.710"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:24.710" endtime="20230801 11:01:24.711"/>
</branch>
<status status="PASS" starttime="20230801 11:01:24.700" endtime="20230801 11:01:24.711"/>
</if>
<status status="PASS" starttime="20230801 11:01:22.071" endtime="20230801 11:01:24.711"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 11:01:24.877" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 11:01:24.713" endtime="20230801 11:01:24.877"/>
</kw>
<status status="PASS" starttime="20230801 11:01:24.712" endtime="20230801 11:01:24.877"/>
</kw>
<status status="PASS" starttime="20230801 11:01:12.407" endtime="20230801 11:01:24.877"/>
</test>
<test id="s1-t18" name="STA-18 Verify that staff can view the list of rejected leave date successfully" line="186">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230801 11:01:24.894" endtime="20230801 11:01:24.895"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230801 11:01:24.897" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\88300b68-1567-463f-8372-c1d79c737f95"}</msg>
<msg timestamp="20230801 11:01:26.233" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\nhats\\OneDrive\\Desktop\\ARI\\vite-react-ari\\browser\\traces\\88300b68-1567-463f-8372-c1d79c737f95"}</msg>
<status status="PASS" starttime="20230801 11:01:24.895" endtime="20230801 11:01:26.234"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230801 11:01:27.162" level="INFO">Successfully initialized new page object and opened url: http://v2.ari.com.vn/</msg>
<msg timestamp="20230801 11:01:27.162" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230801 11:01:26.234" endtime="20230801 11:01:27.163"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:01:27.165" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230801 11:01:27.163" endtime="20230801 11:01:27.165"/>
</kw>
<status status="PASS" starttime="20230801 11:01:24.894" endtime="20230801 11:01:27.165"/>
</kw>
<kw name="Login to Staff" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;staff@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:27.169" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 11:01:27.168" endtime="20230801 11:01:27.169"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:27.170" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 11:01:27.170" endtime="20230801 11:01:27.170"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:01:27.172" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 11:01:27.171" endtime="20230801 11:01:27.172"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:27.173" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:01:27.174" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 11:01:27.173" endtime="20230801 11:01:27.174"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:01:27.174" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:01:27.174" endtime="20230801 11:01:27.174"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:27.175" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:01:27.175" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:01:27.175" endtime="20230801 11:01:27.175"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.176" endtime="20230801 11:01:27.177"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.177" endtime="20230801 11:01:27.177"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:27.176" endtime="20230801 11:01:27.178"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.178" endtime="20230801 11:01:27.178"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.179" endtime="20230801 11:01:27.179"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.179" endtime="20230801 11:01:27.179"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:27.178" endtime="20230801 11:01:27.180"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.180" endtime="20230801 11:01:27.181"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.181" endtime="20230801 11:01:27.181"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:27.180" endtime="20230801 11:01:27.182"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.182" endtime="20230801 11:01:27.182"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.183" endtime="20230801 11:01:27.183"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:27.182" endtime="20230801 11:01:27.183"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.183" endtime="20230801 11:01:27.183"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.185" endtime="20230801 11:01:27.185"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:27.183" endtime="20230801 11:01:27.185"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.185" endtime="20230801 11:01:27.186"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.186" endtime="20230801 11:01:27.186"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:27.185" endtime="20230801 11:01:27.187"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.187" endtime="20230801 11:01:27.187"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.188" endtime="20230801 11:01:27.188"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:27.187" endtime="20230801 11:01:27.188"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.190" endtime="20230801 11:01:27.190"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:27.189" endtime="20230801 11:01:27.190"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 11:01:27.191" endtime="20230801 11:01:27.191"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:27.190" endtime="20230801 11:01:27.192"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.192" endtime="20230801 11:01:27.193"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.193" endtime="20230801 11:01:27.193"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:27.192" endtime="20230801 11:01:27.193"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.194" endtime="20230801 11:01:27.194"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:27.193" endtime="20230801 11:01:27.194"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.195" endtime="20230801 11:01:27.195"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:27.194" endtime="20230801 11:01:27.195"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.196" endtime="20230801 11:01:27.196"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:27.195" endtime="20230801 11:01:27.196"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:01:27.198" endtime="20230801 11:01:27.198"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:27.197" endtime="20230801 11:01:27.199"/>
</branch>
<status status="PASS" starttime="20230801 11:01:27.175" endtime="20230801 11:01:27.199"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:27.202" level="INFO">Length is 15</msg>
<msg timestamp="20230801 11:01:27.202" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 11:01:27.200" endtime="20230801 11:01:27.203"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 11:01:27.206" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 11:01:27.205" endtime="20230801 11:01:27.206"/>
</kw>
<status status="PASS" starttime="20230801 11:01:27.203" endtime="20230801 11:01:27.206"/>
</branch>
<status status="PASS" starttime="20230801 11:01:27.203" endtime="20230801 11:01:27.207"/>
</if>
<msg timestamp="20230801 11:01:27.207" level="INFO">${text} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 11:01:27.167" endtime="20230801 11:01:27.207"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 11:01:27.208" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 11:01:27.207" endtime="20230801 11:01:27.209"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:01:27.209" endtime="20230801 11:01:28.906"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 11:01:28.907" level="INFO">Fills the text 'staff@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230801 11:01:28.906" endtime="20230801 11:01:29.423"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:29.429" level="INFO">Length is 15</msg>
<msg timestamp="20230801 11:01:29.429" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230801 11:01:29.425" endtime="20230801 11:01:29.429"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 11:01:29.435" level="INFO">${STATE["Tên đăng nhập"]} = staff@gmail.com</msg>
<status status="PASS" starttime="20230801 11:01:29.432" endtime="20230801 11:01:29.435"/>
</kw>
<status status="PASS" starttime="20230801 11:01:29.430" endtime="20230801 11:01:29.436"/>
</branch>
<status status="PASS" starttime="20230801 11:01:29.430" endtime="20230801 11:01:29.436"/>
</if>
<status status="PASS" starttime="20230801 11:01:27.166" endtime="20230801 11:01:29.438"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Tester@123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:29.442" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230801 11:01:29.442" endtime="20230801 11:01:29.442"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:29.443" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230801 11:01:29.443" endtime="20230801 11:01:29.443"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:01:29.446" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230801 11:01:29.445" endtime="20230801 11:01:29.446"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:29.448" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:01:29.450" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230801 11:01:29.446" endtime="20230801 11:01:29.450"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:01:29.452" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:01:29.451" endtime="20230801 11:01:29.452"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:29.453" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:01:29.454" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:01:29.452" endtime="20230801 11:01:29.454"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.456" endtime="20230801 11:01:29.457"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.457" endtime="20230801 11:01:29.458"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:29.454" endtime="20230801 11:01:29.459"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.460" endtime="20230801 11:01:29.460"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.461" endtime="20230801 11:01:29.461"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.462" endtime="20230801 11:01:29.462"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:29.459" endtime="20230801 11:01:29.463"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=1000000000000</arg>
<arg>max=9999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.478" endtime="20230801 11:01:29.479"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.480" endtime="20230801 11:01:29.480"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:29.463" endtime="20230801 11:01:29.483"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'order number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.484" endtime="20230801 11:01:29.484"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.484" endtime="20230801 11:01:29.485"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:29.483" endtime="20230801 11:01:29.485"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date valid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=0</arg>
<arg>max=16</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.487" endtime="20230801 11:01:29.487"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.488" endtime="20230801 11:01:29.490"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:29.486" endtime="20230801 11:01:29.490"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'leave date invalid'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=17</arg>
<arg>max=99</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.491" endtime="20230801 11:01:29.491"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.492" endtime="20230801 11:01:29.492"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:29.490" endtime="20230801 11:01:29.492"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.493" endtime="20230801 11:01:29.494"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.494" endtime="20230801 11:01:29.495"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:29.493" endtime="20230801 11:01:29.497"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.499" endtime="20230801 11:01:29.500"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:29.498" endtime="20230801 11:01:29.500"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230801 11:01:29.501" endtime="20230801 11:01:29.501"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:29.500" endtime="20230801 11:01:29.501"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.502" endtime="20230801 11:01:29.503"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.503" endtime="20230801 11:01:29.504"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:29.502" endtime="20230801 11:01:29.504"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.504" endtime="20230801 11:01:29.506"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:29.504" endtime="20230801 11:01:29.506"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.507" endtime="20230801 11:01:29.508"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:29.507" endtime="20230801 11:01:29.508"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.509" endtime="20230801 11:01:29.510"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:29.508" endtime="20230801 11:01:29.510"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230801 11:01:29.512" endtime="20230801 11:01:29.512"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:29.511" endtime="20230801 11:01:29.512"/>
</branch>
<status status="PASS" starttime="20230801 11:01:29.454" endtime="20230801 11:01:29.513"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:29.515" level="INFO">Length is 10</msg>
<msg timestamp="20230801 11:01:29.515" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 11:01:29.514" endtime="20230801 11:01:29.515"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230801 11:01:29.533" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 11:01:29.517" endtime="20230801 11:01:29.533"/>
</kw>
<status status="PASS" starttime="20230801 11:01:29.516" endtime="20230801 11:01:29.534"/>
</branch>
<status status="PASS" starttime="20230801 11:01:29.515" endtime="20230801 11:01:29.534"/>
</if>
<msg timestamp="20230801 11:01:29.535" level="INFO">${text} = Tester@123</msg>
<status status="PASS" starttime="20230801 11:01:29.440" endtime="20230801 11:01:29.535"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230801 11:01:29.539" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230801 11:01:29.536" endtime="20230801 11:01:29.539"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:01:29.540" endtime="20230801 11:01:29.897"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230801 11:01:29.901" level="INFO">Fills the text 'Tester@123' in the given field.</msg>
<status status="PASS" starttime="20230801 11:01:29.898" endtime="20230801 11:01:30.124"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:30.126" level="INFO">Length is 10</msg>
<msg timestamp="20230801 11:01:30.126" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230801 11:01:30.125" endtime="20230801 11:01:30.126"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 11:01:30.129" level="INFO">${STATE["Mật khẩu"]} = Tester@123</msg>
<status status="PASS" starttime="20230801 11:01:30.128" endtime="20230801 11:01:30.129"/>
</kw>
<status status="PASS" starttime="20230801 11:01:30.127" endtime="20230801 11:01:30.129"/>
</branch>
<status status="PASS" starttime="20230801 11:01:30.126" endtime="20230801 11:01:30.130"/>
</if>
<status status="PASS" starttime="20230801 11:01:29.439" endtime="20230801 11:01:30.130"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:01:30.133" endtime="20230801 11:01:30.688"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:30.692" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 11:01:30.691" endtime="20230801 11:01:30.692"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:01:30.814" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 11:01:30.692" endtime="20230801 11:01:30.814"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:01:30.818" endtime="20230801 11:01:30.819"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 11:01:30.820" endtime="20230801 11:01:30.820"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:30.815" endtime="20230801 11:01:30.820"/>
</branch>
<status status="PASS" starttime="20230801 11:01:30.815" endtime="20230801 11:01:30.821"/>
</if>
<status status="PASS" starttime="20230801 11:01:30.689" endtime="20230801 11:01:30.821"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 11:01:30.822" endtime="20230801 11:01:30.939"/>
</kw>
<status status="PASS" starttime="20230801 11:01:30.131" endtime="20230801 11:01:30.940"/>
</kw>
<kw name="User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230801 11:01:30.942" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230801 11:01:30.941" endtime="20230801 11:01:30.942"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230801 11:01:30.943" level="INFO">Length is 0</msg>
<msg timestamp="20230801 11:01:30.943" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230801 11:01:30.943" endtime="20230801 11:01:30.943"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230801 11:01:30.945" endtime="20230801 11:01:30.945"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:30.944" endtime="20230801 11:01:30.945"/>
</branch>
<status status="PASS" starttime="20230801 11:01:30.944" endtime="20230801 11:01:30.945"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:31.981" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230801 11:01:30.951" endtime="20230801 11:01:31.981"/>
</kw>
<status status="PASS" starttime="20230801 11:01:30.945" endtime="20230801 11:01:31.981"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:31.983" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230801 11:01:31.982" endtime="20230801 11:01:31.983"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:01:32.377" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-26.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-26.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230801 11:01:32.378" level="INFO">See also file:///C:/Users/nhats/OneDrive/Desktop/ARI/vite-react-ari/playwright-log.txt for additional details.</msg>
<msg timestamp="20230801 11:01:32.378" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230801 11:01:31.988" endtime="20230801 11:01:32.381"/>
</kw>
<status status="FAIL" starttime="20230801 11:01:31.985" endtime="20230801 11:01:32.382"/>
</kw>
<msg timestamp="20230801 11:01:32.382" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230801 11:01:31.984" endtime="20230801 11:01:32.382"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:01:32.384" endtime="20230801 11:01:32.384"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:32.383" endtime="20230801 11:01:32.384"/>
</branch>
<status status="PASS" starttime="20230801 11:01:32.383" endtime="20230801 11:01:32.384"/>
</if>
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:01:35.171" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state detached</msg>
<status status="PASS" starttime="20230801 11:01:32.387" endtime="20230801 11:01:35.172"/>
</kw>
<status status="PASS" starttime="20230801 11:01:32.384" endtime="20230801 11:01:35.172"/>
</kw>
<status status="PASS" starttime="20230801 11:01:30.940" endtime="20230801 11:01:35.173"/>
</kw>
<status status="PASS" starttime="20230801 11:01:27.165" endtime="20230801 11:01:35.173"/>
</kw>
<kw name="When Filter the list of holidays with the status of &quot;Rejected&quot;" library="common" sourcename="Filter the list of holidays with the status of &quot;${status}&quot;">
<kw name="Click" library="Browser">
<arg>//thead/tr[1]/th[7]/div[1]/span[2]/*[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:01:35.192" endtime="20230801 11:01:35.829"/>
</kw>
<kw name="Click" library="Browser">
<arg>//span[contains(text(),'${status}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:01:35.829" endtime="20230801 11:01:36.192"/>
</kw>
<kw name="Click &quot;Tìm kiếm&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230801 11:01:36.194" endtime="20230801 11:01:36.591"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:36.594" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230801 11:01:36.593" endtime="20230801 11:01:36.594"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:01:36.696" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230801 11:01:36.594" endtime="20230801 11:01:36.696"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230801 11:01:36.698" endtime="20230801 11:01:36.698"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230801 11:01:36.699" endtime="20230801 11:01:36.699"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:36.697" endtime="20230801 11:01:36.700"/>
</branch>
<status status="PASS" starttime="20230801 11:01:36.696" endtime="20230801 11:01:36.701"/>
</if>
<status status="PASS" starttime="20230801 11:01:36.592" endtime="20230801 11:01:36.702"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230801 11:01:36.704" endtime="20230801 11:01:36.835"/>
</kw>
<status status="PASS" starttime="20230801 11:01:36.193" endtime="20230801 11:01:36.836"/>
</kw>
<status status="PASS" starttime="20230801 11:01:35.191" endtime="20230801 11:01:36.836"/>
</kw>
<kw name="Then Show list of &quot;rejected&quot; leave date" library="common" sourcename="Show list of &quot;${name}&quot; leave date">
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:36.873" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230801 11:01:36.872" endtime="20230801 11:01:36.873"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230801 11:01:36.888" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230801 11:01:36.874" endtime="20230801 11:01:36.888"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230801 11:01:37.822" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230801 11:01:36.893" endtime="20230801 11:01:37.822"/>
</kw>
<status status="PASS" starttime="20230801 11:01:36.890" endtime="20230801 11:01:37.823"/>
</kw>
<status status="PASS" starttime="20230801 11:01:36.889" endtime="20230801 11:01:37.823"/>
</branch>
<status status="PASS" starttime="20230801 11:01:36.889" endtime="20230801 11:01:37.825"/>
</if>
<status status="PASS" starttime="20230801 11:01:36.871" endtime="20230801 11:01:37.825"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>xpath=//*[contains(@class, "ant-table-row")]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:37.851" level="INFO">Found 2 Locators successfully.</msg>
<msg timestamp="20230801 11:01:37.851" level="INFO">${elements} = ['element=736fd70d-7d72-4a1d-91cb-48d0a294c933', 'element=7300f08a-d6e2-46ee-b588-069f26f67339']</msg>
<status status="PASS" starttime="20230801 11:01:37.827" endtime="20230801 11:01:37.852"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_count}</var>
<arg>2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:37.853" level="INFO">${user_count} = 2</msg>
<status status="PASS" starttime="20230801 11:01:37.852" endtime="20230801 11:01:37.853"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${stt}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:37.855" level="INFO">${stt} = 1</msg>
<status status="PASS" starttime="20230801 11:01:37.854" endtime="20230801 11:01:37.856"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{elements}</value>
<iter>
<var name="${item}">element=736fd70d-7d72-4a1d-91cb-48d0a294c933</var>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>//tbody/tr[${user_count}]/td[2]/div[1]/span[1]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:37.915" level="INFO">Text: 'Hoàng Diệu'</msg>
<msg timestamp="20230801 11:01:37.916" level="INFO">${username} = Hoàng Diệu</msg>
<status status="PASS" starttime="20230801 11:01:37.859" endtime="20230801 11:01:37.916"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_manager}</var>
<arg>//tbody/tr[${user_count}]/td[3]/div[1]/span[1]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:37.945" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:37.946" level="INFO">${element_manager} = ['element=5469433e-19d0-45b9-9811-c4857bad5a71']</msg>
<status status="PASS" starttime="20230801 11:01:37.917" endtime="20230801 11:01:37.946"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${manager}</var>
<arg>${element_manager}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:38.003" level="INFO">Text: 'Illo recusandae accusantium perspiciatis fugit.'</msg>
<msg timestamp="20230801 11:01:38.003" level="INFO">${manager} = Illo recusandae accusantium perspiciatis fugit.</msg>
<status status="PASS" starttime="20230801 11:01:37.947" endtime="20230801 11:01:38.004"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_type}</var>
<arg>//tbody/tr[${user_count}]/td[4]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:38.034" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:38.034" level="INFO">${element_type} = ['element=f851dd0d-bd4c-47a5-81bb-81d496813c52']</msg>
<status status="PASS" starttime="20230801 11:01:38.004" endtime="20230801 11:01:38.034"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${type}</var>
<arg>${element_type}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:38.087" level="INFO">Text: 'Nghỉ phép không lương'</msg>
<msg timestamp="20230801 11:01:38.088" level="INFO">${type} = Nghỉ phép không lương</msg>
<status status="PASS" starttime="20230801 11:01:38.035" endtime="20230801 11:01:38.088"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_time}</var>
<arg>//tbody/tr[${user_count}]/td[5]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:38.103" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:38.103" level="INFO">${element_time} = ['element=6f920594-919b-4b7f-b5ee-b3e7d97c7c5b']</msg>
<status status="PASS" starttime="20230801 11:01:38.089" endtime="20230801 11:01:38.103"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${time}</var>
<arg>${element_time}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:38.132" level="INFO">Text: 'Cả ngày'</msg>
<msg timestamp="20230801 11:01:38.132" level="INFO">${time} = Cả ngày</msg>
<status status="PASS" starttime="20230801 11:01:38.103" endtime="20230801 11:01:38.132"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_leave_date}</var>
<arg>//tbody/tr[${user_count}]/td[6]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:38.150" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:38.150" level="INFO">${element_leave_date} = ['element=d334034b-d571-42f9-aaee-92cca5ff9db7']</msg>
<status status="PASS" starttime="20230801 11:01:38.133" endtime="20230801 11:01:38.150"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${leave_date}</var>
<arg>${element_leave_date}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:38.183" level="INFO">Text: '03-07-2023 =&gt; 04-07-2023'</msg>
<msg timestamp="20230801 11:01:38.183" level="INFO">${leave_date} = 03-07-2023 =&gt; 04-07-2023</msg>
<status status="PASS" starttime="20230801 11:01:38.151" endtime="20230801 11:01:38.183"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_date}</var>
<arg>//tbody/tr[${user_count}]/td[8]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:38.219" level="INFO">Text: '01-08-2023'</msg>
<msg timestamp="20230801 11:01:38.219" level="INFO">${approvated_date} = 01-08-2023</msg>
<status status="PASS" starttime="20230801 11:01:38.185" endtime="20230801 11:01:38.219"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_by}</var>
<arg>//tbody/tr[${user_count}]/td[9]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:38.251" level="INFO">Text: 'I\nIllo recusandae accusantium perspiciatis fugit.'</msg>
<msg timestamp="20230801 11:01:38.252" level="INFO">${approvated_by} = I
Illo recusandae accusantium perspiciatis fugit.</msg>
<status status="PASS" starttime="20230801 11:01:38.220" endtime="20230801 11:01:38.252"/>
</kw>
<if>
<branch type="IF" condition="'${approvated_date}' == ''">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:38.254" endtime="20230801 11:01:38.254"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:38.253" endtime="20230801 11:01:38.254"/>
</branch>
<status status="PASS" starttime="20230801 11:01:38.253" endtime="20230801 11:01:38.254"/>
</if>
<if>
<branch type="IF" condition="'${name}'=='approved'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đã phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:38.257" endtime="20230801 11:01:38.257"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:38.255" endtime="20230801 11:01:38.257"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='rejected'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Từ chối phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:38.259" level="INFO">${status} = Từ chối phê duyệt</msg>
<status status="PASS" starttime="20230801 11:01:38.258" endtime="20230801 11:01:38.259"/>
</kw>
<status status="PASS" starttime="20230801 11:01:38.258" endtime="20230801 11:01:38.259"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='pending'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:38.259" endtime="20230801 11:01:38.260"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:38.259" endtime="20230801 11:01:38.260"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='created'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:38.260" endtime="20230801 11:01:38.260"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:38.260" endtime="20230801 11:01:38.261"/>
</branch>
<status status="PASS" starttime="20230801 11:01:38.255" endtime="20230801 11:01:38.261"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${stt}. Họ và tên: ${username} | Quản lý: ${manager} | Loại phép: ${type} | Thời gian: ${time} | Ngày nghỉ: ${leave_date} | Trạng thái: ${status} | Ngày phê duyệt: ${approvated_date} | Người phê duyệt: ${approvated_by}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:01:38.261" endtime="20230801 11:01:38.263"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>================================================================================================================================================================================================================================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:01:38.264" endtime="20230801 11:01:38.266"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${user_count}</var>
<arg>${user_count} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:01:38.268" level="INFO">${user_count} = 3</msg>
<status status="PASS" starttime="20230801 11:01:38.267" endtime="20230801 11:01:38.268"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${stt}</var>
<arg>${stt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:01:38.270" level="INFO">${stt} = 2</msg>
<status status="PASS" starttime="20230801 11:01:38.269" endtime="20230801 11:01:38.270"/>
</kw>
<status status="PASS" starttime="20230801 11:01:37.857" endtime="20230801 11:01:38.270"/>
</iter>
<iter>
<var name="${item}">element=7300f08a-d6e2-46ee-b588-069f26f67339</var>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>//tbody/tr[${user_count}]/td[2]/div[1]/span[1]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:38.357" level="INFO">Text: 'Hoàng Diệu'</msg>
<msg timestamp="20230801 11:01:38.357" level="INFO">${username} = Hoàng Diệu</msg>
<status status="PASS" starttime="20230801 11:01:38.271" endtime="20230801 11:01:38.358"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_manager}</var>
<arg>//tbody/tr[${user_count}]/td[3]/div[1]/span[1]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:38.390" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:38.390" level="INFO">${element_manager} = ['element=85132629-cfc0-4e33-8cba-b94b50e8db55']</msg>
<status status="PASS" starttime="20230801 11:01:38.359" endtime="20230801 11:01:38.391"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${manager}</var>
<arg>${element_manager}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:38.425" level="INFO">Text: 'Illo recusandae accusantium perspiciatis fugit.'</msg>
<msg timestamp="20230801 11:01:38.425" level="INFO">${manager} = Illo recusandae accusantium perspiciatis fugit.</msg>
<status status="PASS" starttime="20230801 11:01:38.391" endtime="20230801 11:01:38.425"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_type}</var>
<arg>//tbody/tr[${user_count}]/td[4]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:38.442" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:38.442" level="INFO">${element_type} = ['element=b6f69686-e69c-47a0-9790-1502449c75c6']</msg>
<status status="PASS" starttime="20230801 11:01:38.425" endtime="20230801 11:01:38.442"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${type}</var>
<arg>${element_type}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:38.480" level="INFO">Text: 'Nghỉ phép có lương'</msg>
<msg timestamp="20230801 11:01:38.480" level="INFO">${type} = Nghỉ phép có lương</msg>
<status status="PASS" starttime="20230801 11:01:38.442" endtime="20230801 11:01:38.480"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_time}</var>
<arg>//tbody/tr[${user_count}]/td[5]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:38.498" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:38.499" level="INFO">${element_time} = ['element=c766e7f5-22b0-4a98-919b-c19827e9ba3f']</msg>
<status status="PASS" starttime="20230801 11:01:38.482" endtime="20230801 11:01:38.499"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${time}</var>
<arg>${element_time}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:38.575" level="INFO">Text: 'Cả ngày'</msg>
<msg timestamp="20230801 11:01:38.576" level="INFO">${time} = Cả ngày</msg>
<status status="PASS" starttime="20230801 11:01:38.500" endtime="20230801 11:01:38.576"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${element_leave_date}</var>
<arg>//tbody/tr[${user_count}]/td[6]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230801 11:01:38.602" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230801 11:01:38.602" level="INFO">${element_leave_date} = ['element=4e8b0a10-0155-48b3-8421-8b46e21009a7']</msg>
<status status="PASS" starttime="20230801 11:01:38.577" endtime="20230801 11:01:38.602"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${leave_date}</var>
<arg>${element_leave_date}[0]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:38.655" level="INFO">Text: '03-07-2023'</msg>
<msg timestamp="20230801 11:01:38.656" level="INFO">${leave_date} = 03-07-2023</msg>
<status status="PASS" starttime="20230801 11:01:38.603" endtime="20230801 11:01:38.656"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_date}</var>
<arg>//tbody/tr[${user_count}]/td[8]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:38.688" level="INFO">Text: '28-07-2023'</msg>
<msg timestamp="20230801 11:01:38.688" level="INFO">${approvated_date} = 28-07-2023</msg>
<status status="PASS" starttime="20230801 11:01:38.657" endtime="20230801 11:01:38.689"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${approvated_by}</var>
<arg>//tbody/tr[${user_count}]/td[9]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230801 11:01:38.717" level="INFO">Text: 'I\nIllo recusandae accusantium perspiciatis fugit.'</msg>
<msg timestamp="20230801 11:01:38.718" level="INFO">${approvated_by} = I
Illo recusandae accusantium perspiciatis fugit.</msg>
<status status="PASS" starttime="20230801 11:01:38.689" endtime="20230801 11:01:38.718"/>
</kw>
<if>
<branch type="IF" condition="'${approvated_date}' == ''">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:38.719" endtime="20230801 11:01:38.719"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:38.718" endtime="20230801 11:01:38.720"/>
</branch>
<status status="PASS" starttime="20230801 11:01:38.718" endtime="20230801 11:01:38.720"/>
</if>
<if>
<branch type="IF" condition="'${name}'=='approved'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đã phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:38.721" endtime="20230801 11:01:38.721"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:38.720" endtime="20230801 11:01:38.721"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='rejected'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Từ chối phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 11:01:38.722" level="INFO">${status} = Từ chối phê duyệt</msg>
<status status="PASS" starttime="20230801 11:01:38.722" endtime="20230801 11:01:38.722"/>
</kw>
<status status="PASS" starttime="20230801 11:01:38.721" endtime="20230801 11:01:38.723"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='pending'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Đang chờ phê duyệt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:38.723" endtime="20230801 11:01:38.723"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:38.723" endtime="20230801 11:01:38.723"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='created'">
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230801 11:01:38.723" endtime="20230801 11:01:38.725"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:38.723" endtime="20230801 11:01:38.725"/>
</branch>
<status status="PASS" starttime="20230801 11:01:38.720" endtime="20230801 11:01:38.725"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${stt}. Họ và tên: ${username} | Quản lý: ${manager} | Loại phép: ${type} | Thời gian: ${time} | Ngày nghỉ: ${leave_date} | Trạng thái: ${status} | Ngày phê duyệt: ${approvated_date} | Người phê duyệt: ${approvated_by}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:01:38.725" endtime="20230801 11:01:38.727"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>================================================================================================================================================================================================================================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:01:38.728" endtime="20230801 11:01:38.730"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${user_count}</var>
<arg>${user_count} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:01:38.732" level="INFO">${user_count} = 4</msg>
<status status="PASS" starttime="20230801 11:01:38.731" endtime="20230801 11:01:38.732"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${stt}</var>
<arg>${stt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:01:38.734" level="INFO">${stt} = 3</msg>
<status status="PASS" starttime="20230801 11:01:38.733" endtime="20230801 11:01:38.734"/>
</kw>
<status status="PASS" starttime="20230801 11:01:38.271" endtime="20230801 11:01:38.734"/>
</iter>
<status status="PASS" starttime="20230801 11:01:37.856" endtime="20230801 11:01:38.734"/>
</for>
<kw name="Evaluate" library="BuiltIn">
<var>${total}</var>
<arg>${user_count} - 2</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230801 11:01:38.737" level="INFO">${total} = 2</msg>
<status status="PASS" starttime="20230801 11:01:38.736" endtime="20230801 11:01:38.737"/>
</kw>
<if>
<branch type="IF" condition="'${name}'=='created'">
<kw name="Log To Console" library="BuiltIn">
<arg>Total number of holidays ${name}: ${total}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230801 11:01:38.738" endtime="20230801 11:01:38.738"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:38.737" endtime="20230801 11:01:38.738"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='approved'">
<kw name="Log To Console" library="BuiltIn">
<arg>Total number of ${name} holidays: ${total}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230801 11:01:38.739" endtime="20230801 11:01:38.739"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:38.739" endtime="20230801 11:01:38.739"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='rejected'">
<kw name="Log To Console" library="BuiltIn">
<arg>Total number of days off ${name} approval: ${total}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230801 11:01:38.740" endtime="20230801 11:01:38.741"/>
</kw>
<status status="PASS" starttime="20230801 11:01:38.739" endtime="20230801 11:01:38.741"/>
</branch>
<branch type="ELSE IF" condition="'${name}'=='pending'">
<kw name="Log To Console" library="BuiltIn">
<arg>Total number of days off ${name} approval: ${total}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230801 11:01:38.742" endtime="20230801 11:01:38.743"/>
</kw>
<status status="NOT RUN" starttime="20230801 11:01:38.742" endtime="20230801 11:01:38.743"/>
</branch>
<status status="PASS" starttime="20230801 11:01:38.737" endtime="20230801 11:01:38.744"/>
</if>
<status status="PASS" starttime="20230801 11:01:36.870" endtime="20230801 11:01:38.744"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230801 11:01:38.942" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230801 11:01:38.750" endtime="20230801 11:01:38.942"/>
</kw>
<status status="PASS" starttime="20230801 11:01:38.749" endtime="20230801 11:01:38.942"/>
</kw>
<status status="PASS" starttime="20230801 11:01:24.889" endtime="20230801 11:01:38.944"/>
</test>
<status status="PASS" starttime="20230801 10:55:57.279" endtime="20230801 11:01:38.956"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Staff Leave Management">Staff Leave Management</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
